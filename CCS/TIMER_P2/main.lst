CCS PCM C Compiler, Version 5.015, 5967               09-Thg3-22 08:40

               Filename:   C:\PIC16F887\CCS\TIMER_P2\main.lst

               ROM used:   61 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <main.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
.................... #bit TMR1IF = 0x0c.0 
.................... #bit TMR0IF = 0x0b.2 
.................... #bit TMR2IF = 0x0c.1 
.................... int bdt = 0; 
.................... unsigned char b = 0; 
.................... void delay_210ms()  //T1 Den trong 1 chu ki 210ms 
.................... { 
....................    set_timer1(43661); 
....................    while(1) 
....................    { 
....................       if(TMR1IF == 1) 
....................       { 
....................          set_timer1(43661); bdt++; TMR1IF = 0; 
....................          if(bdt == 3) 
....................          { 
....................             b =~ b; 
....................             output_b(b); 
....................             bdt = 0; 
....................          } 
....................       } 
....................    } 
.................... } 
.................... void delay_200ms()  //T1 led sang tat dung ngat- dinh thoi voi chu ki delay 400ms (co nghia la sang 200ms, tat 200ms) 
.................... { 
....................    set_timer1(3036); 
....................    while(1) 
....................    { 
....................       if(TMR1IF == 1) 
....................       { 
....................          set_timer1(3036); bdt++; TMR1IF = 0; 
....................          if(bdt == 2) 
....................          { 
....................             b =~ b; 
....................             output_b(b); 
....................             bdt = 0; 
....................          } 
....................       } 
....................    } 
.................... } 
.................... void delay_1s()  //T1 Den sang trong 1s va tat trong 1s 
.................... { 
....................    set_timer1(3036); 
....................    while(1) 
....................    { 
....................       if(TMR1IF == 1) 
....................       { 
....................          set_timer1(3036); bdt++; TMR1IF = 0; 
....................          if(bdt == 10) 
....................          { 
....................             b =~ b; 
....................             output_b(b); 
....................             bdt = 0; 
....................          } 
....................       } 
....................    } 
.................... } 
.................... void delay_13ms()  //T0 Den  trong 1 chu ki 26 ms,sang trong 13ms va tat trong 13ms 
.................... { 
....................    setup_timer_0(T0_INTERNAL|T0_DIV_256); 
....................    set_timer0(0); 
....................    while(1) 
....................    { 
....................       if(TMR0IF == 1) 
....................       { 
....................          set_timer0(0); TMR0IF = 0; 
....................             b =~ b; 
....................             output_b(b); 
....................       } 
....................    } 
.................... } 
.................... void delay_T0_1s()  //T0 Den sang trong 1s va tat trong 1s 
.................... { 
....................    setup_timer_0(T0_INTERNAL|T0_DIV_256); 
....................    set_timer0(15);   //Value: luon lay so nguyen va lam tron len 
....................    while(1) 
....................    { 
....................       if(TMR0IF == 1) 
....................       { 
....................          set_timer0(15); bdt++; TMR0IF = 0; 
....................          if(bdt == 81) 
....................          { 
....................             b =~ b; 
....................             output_b(b); 
....................             bdt = 0; 
....................          } 
....................       } 
....................    } 
.................... } 
.................... void delay_T2_13ms() 
.................... { 
....................    setup_timer_2(T2_DIV_BY_16, 254 , 16); 
0004:  MOVLW  78
0005:  MOVWF  78
0006:  IORLW  06
0007:  MOVWF  12
0008:  MOVLW  FE
0009:  BSF    03.5
000A:  MOVWF  12
....................    //set_timer2(0);   ko co set_timer2 
....................    while(1) 
....................    { 
....................       if(TMR2IF == 1) 
000B:  BCF    03.5
000C:  BTFSS  0C.1
000D:  GOTO   015
....................       { 
....................          //set_timer2(0);  
....................          TMR2IF = 0; 
000E:  BCF    0C.1
....................             b =~ b; 
000F:  COMF   21,F
....................             output_b(b); 
0010:  BSF    03.5
0011:  CLRF   06
0012:  BCF    03.5
0013:  MOVF   21,W
0014:  MOVWF  06
....................       } 
0015:  GOTO   00C
....................    } 
0016:  BCF    0A.3
0017:  BCF    0A.4
0018:  GOTO   03B (RETURN)
.................... } 
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  CLRF   20
001D:  CLRF   21
001E:  BSF    03.5
001F:  BSF    03.6
0020:  MOVF   09,W
0021:  ANDLW  C0
0022:  MOVWF  09
0023:  BCF    03.6
0024:  BCF    1F.4
0025:  BCF    1F.5
0026:  MOVLW  00
0027:  BSF    03.6
0028:  MOVWF  08
0029:  BCF    03.5
002A:  CLRF   07
002B:  CLRF   08
002C:  CLRF   09
002D:  BCF    03.7
.................... { 
....................    set_tris_b(0); 
002E:  MOVLW  00
002F:  BSF    03.5
0030:  BCF    03.6
0031:  MOVWF  06
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
0032:  MOVLW  35
0033:  BCF    03.5
0034:  MOVWF  10
....................    output_b(b); 
0035:  BSF    03.5
0036:  CLRF   06
0037:  BCF    03.5
0038:  MOVF   21,W
0039:  MOVWF  06
....................    while(TRUE) 
....................    { 
....................       //delay_210ms(); 
....................       //delay_200ms(); 
....................       //delay_1s(); 
....................       //delay_13ms(); 
....................       //delay_T0_1s(); 
....................       delay_T2_13ms(); 
003A:  GOTO   004
003B:  GOTO   03A
....................    } 
....................  
.................... } 
003C:  SLEEP

Configuration Fuses:
   Word  1: 2CE2   HS NOWDT PUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
