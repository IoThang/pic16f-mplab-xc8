

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 29 08:20:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  001A                     _RCREG	set	26
   209  0019                     _TXREG	set	25
   210  0033                     _RB3	set	51
   211  0065                     _RCIF	set	101
   212  00C1                     _OERR	set	193
   213  0064                     _TXIF	set	100
   214  00C6                     _RX9	set	198
   215  00C4                     _CREN	set	196
   216  00C7                     _SPEN	set	199
   217  0086                     _TRISB	set	134
   218  0099                     _SPBRG	set	153
   219  04C6                     _TX9	set	1222
   220  04C5                     _TXEN	set	1221
   221  04C4                     _SYNC	set	1220
   222  04C2                     _BRGH	set	1218
   223  043F                     _TRISC7	set	1087
   224  043E                     _TRISC6	set	1086
   225                           
   226                           	psect	strings
   227  0003                     __pstrings:
   228  0003                     stringtab:
   229  0003                     __stringtab:
   230  0003                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0003                     stringdir:
   234  0003  3000               	movlw	high stringdir
   235  0004  008A               	movwf	10
   236  0005  0804               	movf	4,w
   237  0006  0A84               	incf	4,f
   238  0007  0782               	addwf	2,f
   239  0008                     __stringbase:
   240  0008  3400               	retlw	0
   241  0009                     __end_of__stringtab:
   242  0009                     STR_1:
   243  0009  3455               	retlw	85	;'U'
   244  000A  3441               	retlw	65	;'A'
   245  000B  3452               	retlw	82	;'R'
   246  000C  3454               	retlw	84	;'T'
   247  000D  3420               	retlw	32	;' '
   248  000E  344D               	retlw	77	;'M'
   249  000F  346F               	retlw	111	;'o'
   250  0010  3464               	retlw	100	;'d'
   251  0011  3475               	retlw	117	;'u'
   252  0012  346C               	retlw	108	;'l'
   253  0013  3465               	retlw	101	;'e'
   254  0014  3420               	retlw	32	;' '
   255  0015  3449               	retlw	73	;'I'
   256  0016  346E               	retlw	110	;'n'
   257  0017  3469               	retlw	105	;'i'
   258  0018  3474               	retlw	116	;'t'
   259  0019  3469               	retlw	105	;'i'
   260  001A  3461               	retlw	97	;'a'
   261  001B  346C               	retlw	108	;'l'
   262  001C  3469               	retlw	105	;'i'
   263  001D  347A               	retlw	122	;'z'
   264  001E  3465               	retlw	101	;'e'
   265  001F  3464               	retlw	100	;'d'
   266  0020  3420               	retlw	32	;' '
   267  0021  3461               	retlw	97	;'a'
   268  0022  346E               	retlw	110	;'n'
   269  0023  3464               	retlw	100	;'d'
   270  0024  3420               	retlw	32	;' '
   271  0025  3461               	retlw	97	;'a'
   272  0026  3463               	retlw	99	;'c'
   273  0027  3474               	retlw	116	;'t'
   274  0028  3469               	retlw	105	;'i'
   275  0029  3476               	retlw	118	;'v'
   276  002A  3465               	retlw	101	;'e'
   277  002B  3400               	retlw	0
   278  002C                     STR_2:
   279  002C  3452               	retlw	82	;'R'
   280  002D  3445               	retlw	69	;'E'
   281  002E  3444               	retlw	68	;'D'
   282  002F  3420               	retlw	32	;' '
   283  0030  344C               	retlw	76	;'L'
   284  0031  3445               	retlw	69	;'E'
   285  0032  3444               	retlw	68	;'D'
   286  0033  3420               	retlw	32	;' '
   287  0034  342D               	retlw	45	;'-'
   288  0035  343E               	retlw	62	;'>'
   289  0036  3420               	retlw	32	;' '
   290  0037  344F               	retlw	79	;'O'
   291  0038  344E               	retlw	78	;'N'
   292  0039  3400               	retlw	0
   293  003A                     STR_3:
   294  003A  3452               	retlw	82	;'R'
   295  003B  3445               	retlw	69	;'E'
   296  003C  3444               	retlw	68	;'D'
   297  003D  3420               	retlw	32	;' '
   298  003E  342D               	retlw	45	;'-'
   299  003F  343E               	retlw	62	;'>'
   300  0040  3420               	retlw	32	;' '
   301  0041  344F               	retlw	79	;'O'
   302  0042  3446               	retlw	70	;'F'
   303  0043  3446               	retlw	70	;'F'
   304  0044  3400               	retlw	0
   305                           
   306                           	psect	cinit
   307  07FB                     start_initialization:	
   308                           ; #config settings
   309                           
   310  07FB                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   314  07FC                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  07FC                     __end_of__initialization:
   318  07FC  0183               	clrf	3
   319  07FD  120A  118A  2FB2   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0077                     __pbssCOMMON:
   323  0077                     _get_value:
   324  0077                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_Initialize_UART:
   329  0070                     ??_Initialize_UART:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_UART_send_char:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_UART_send_char:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_UART_get_char:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_UART_get_char:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_UART_send_string:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     UART_send_char@bt:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 1 bytes @ 0x0
   355  0070                     	ds	1
   356  0071                     ??_UART_send_string:
   357                           
   358                           ; 1 bytes @ 0x1
   359  0071                     	ds	1
   360  0072                     UART_send_string@st_pt:
   361                           
   362                           ; 1 bytes @ 0x2
   363  0072                     	ds	1
   364  0073                     ??_main:
   365                           
   366                           ; 1 bytes @ 0x3
   367  0073                     	ds	2
   368  0075                     main@get_value:
   369                           
   370                           ; 2 bytes @ 0x5
   371  0075                     	ds	2
   372                           
   373                           	psect	maintext
   374  07B2                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 151 in file "newmain.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  get_value       2    5[COMMON] int 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         2       0       0       0       0
   396 ;;      Temps:          2       0       0       0       0
   397 ;;      Totals:         4       0       0       0       0
   398 ;;Total ram usage:        4 bytes
   399 ;; Hardware stack levels required when called: 2
   400 ;; This function calls:
   401 ;;		_Initialize_UART
   402 ;;		_UART_get_char
   403 ;;		_UART_send_char
   404 ;;		_UART_send_string
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410  07B2                     _main:	
   411                           ;psect for function _main
   412                           
   413  07B2                     l730:	
   414                           ;incstack = 0
   415                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   416                           
   417                           
   418                           ;newmain.c: 153:     int get_value;;newmain.c: 155:     TRISB = 0x00;
   419  07B2  1683               	bsf	3,5	;RP0=1, select bank1
   420  07B3  1303               	bcf	3,6	;RP1=0, select bank1
   421  07B4  0186               	clrf	6	;volatile
   422  07B5                     l732:
   423                           
   424                           ;newmain.c: 156:     Initialize_UART();
   425  07B5  120A  118A  277B  120A  118A  	fcall	_Initialize_UART
   426  07BA                     l734:
   427                           
   428                           ;newmain.c: 158:     UART_send_string("UART Module Initialized and active");
   429  07BA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   430  07BB  120A  118A  2793  120A  118A  	fcall	_UART_send_string
   431  07C0                     l736:
   432                           
   433                           ;newmain.c: 161:     {;newmain.c: 162:       get_value = UART_get_char();
   434  07C0  120A  118A  276D  120A  118A  	fcall	_UART_get_char
   435  07C5  00F3               	movwf	??_main
   436  07C6  01F4               	clrf	??_main+1
   437  07C7  0873               	movf	??_main,w
   438  07C8  00F5               	movwf	main@get_value
   439  07C9  0874               	movf	??_main+1,w
   440  07CA  00F6               	movwf	main@get_value+1
   441  07CB                     l738:
   442                           
   443                           ;newmain.c: 164:         if (get_value == '1')
   444  07CB  3031               	movlw	49
   445  07CC  0675               	xorwf	main@get_value,w
   446  07CD  0476               	iorwf	main@get_value+1,w
   447  07CE  1D03               	btfss	3,2
   448  07CF  2FD1               	goto	u81
   449  07D0  2FD2               	goto	u80
   450  07D1                     u81:
   451  07D1  2FE1               	goto	l746
   452  07D2                     u80:
   453  07D2                     l740:
   454                           
   455                           ;newmain.c: 165:         {;newmain.c: 166:             RB3=1;
   456  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   457  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   458  07D4  1586               	bsf	6,3	;volatile
   459  07D5                     l742:
   460                           
   461                           ;newmain.c: 167:             UART_send_string("RED LED -> ON");
   462  07D5  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   463  07D6  120A  118A  2793  120A  118A  	fcall	_UART_send_string
   464  07DB                     l744:
   465                           
   466                           ;newmain.c: 168:             UART_send_char(10);
   467  07DB  300A               	movlw	10
   468  07DC  120A  118A  2763  120A  118A  	fcall	_UART_send_char
   469  07E1                     l746:
   470                           
   471                           ;newmain.c: 171:         if (get_value == '0')
   472  07E1  3030               	movlw	48
   473  07E2  0675               	xorwf	main@get_value,w
   474  07E3  0476               	iorwf	main@get_value+1,w
   475  07E4  1D03               	btfss	3,2
   476  07E5  2FE7               	goto	u91
   477  07E6  2FE8               	goto	u90
   478  07E7                     u91:
   479  07E7  2FC0               	goto	l736
   480  07E8                     u90:
   481  07E8                     l748:
   482                           
   483                           ;newmain.c: 172:         {;newmain.c: 173:            RB3=0;
   484  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   485  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   486  07EA  1186               	bcf	6,3	;volatile
   487  07EB                     l750:
   488                           
   489                           ;newmain.c: 174:            UART_send_string("RED -> OFF");
   490  07EB  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   491  07EC  120A  118A  2793  120A  118A  	fcall	_UART_send_string
   492  07F1                     l752:
   493                           
   494                           ;newmain.c: 175:            UART_send_char(10);
   495  07F1  300A               	movlw	10
   496  07F2  120A  118A  2763  120A  118A  	fcall	_UART_send_char
   497  07F7  2FC0               	goto	l736
   498  07F8  120A  118A  2800   	ljmp	start
   499  07FB                     __end_of_main:
   500                           
   501                           	psect	text1
   502  0793                     __ptext1:	
   503 ;; *************** function _UART_send_string *****************
   504 ;; Defined at:
   505 ;;		line 143 in file "newmain.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  st_pt           1    wreg     PTR unsigned char 
   508 ;;		 -> STR_3(11), STR_2(14), STR_1(35), 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  st_pt           1    2[COMMON] PTR unsigned char 
   511 ;;		 -> STR_3(11), STR_2(14), STR_1(35), 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0
   523 ;;      Temps:          1       0       0       0       0
   524 ;;      Totals:         2       0       0       0       0
   525 ;;Total ram usage:        2 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 1
   528 ;; This function calls:
   529 ;;		_UART_send_char
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535  0793                     _UART_send_string:	
   536                           ;psect for function _UART_send_string
   537                           
   538                           
   539                           ;incstack = 0
   540                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   541                           ;UART_send_string@st_pt stored from wreg
   542  0793  00F2               	movwf	UART_send_string@st_pt
   543  0794                     l722:
   544                           
   545                           ;newmain.c: 143: void UART_send_string(char* st_pt);newmain.c: 144: {;newmain.c: 145:   
      +                            while(*st_pt)
   546  0794  2FA5               	goto	l728
   547  0795                     l724:
   548                           
   549                           ;newmain.c: 146:         UART_send_char(*st_pt++);
   550  0795  0872               	movf	UART_send_string@st_pt,w
   551  0796  0084               	movwf	4
   552  0797  120A  118A  2003  120A  118A  	fcall	stringdir
   553  079C  120A  118A  2763  120A  118A  	fcall	_UART_send_char
   554  07A1                     l726:
   555  07A1  3001               	movlw	1
   556  07A2  00F1               	movwf	??_UART_send_string
   557  07A3  0871               	movf	??_UART_send_string,w
   558  07A4  07F2               	addwf	UART_send_string@st_pt,f
   559  07A5                     l728:
   560                           
   561                           ;newmain.c: 145:     while(*st_pt)
   562  07A5  0872               	movf	UART_send_string@st_pt,w
   563  07A6  0084               	movwf	4
   564  07A7  120A  118A  2003  120A  118A  	fcall	stringdir
   565  07AC  3A00               	xorlw	0
   566  07AD  1D03               	skipz
   567  07AE  2FB0               	goto	u71
   568  07AF  2FB1               	goto	u70
   569  07B0                     u71:
   570  07B0  2F95               	goto	l724
   571  07B1                     u70:
   572  07B1                     l58:
   573  07B1  0008               	return
   574  07B2                     __end_of_UART_send_string:
   575                           
   576                           	psect	text2
   577  0763                     __ptext2:	
   578 ;; *************** function _UART_send_char *****************
   579 ;; Defined at:
   580 ;;		line 120 in file "newmain.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;  bt              1    wreg     unsigned char 
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  bt              1    0[COMMON] unsigned char 
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         1       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0
   597 ;;      Totals:         1       0       0       0       0
   598 ;;Total ram usage:        1 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_UART_send_string
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608  0763                     _UART_send_char:	
   609                           ;psect for function _UART_send_char
   610                           
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _UART_send_char: [wreg]
   614                           ;UART_send_char@bt stored from wreg
   615  0763  00F0               	movwf	UART_send_char@bt
   616  0764                     l660:
   617  0764                     l42:	
   618                           ;newmain.c: 120: void UART_send_char(char bt);newmain.c: 121: {;newmain.c: 122:     whil
      +                          e(!TXIF);
   619                           
   620  0764  1283               	bcf	3,5	;RP0=0, select bank0
   621  0765  1303               	bcf	3,6	;RP1=0, select bank0
   622  0766  1E0C               	btfss	12,4	;volatile
   623  0767  2F69               	goto	u11
   624  0768  2F6A               	goto	u10
   625  0769                     u11:
   626  0769  2F64               	goto	l42
   627  076A                     u10:
   628  076A                     l662:
   629                           
   630                           ;newmain.c: 123:     TXREG = bt;
   631  076A  0870               	movf	UART_send_char@bt,w
   632  076B  0099               	movwf	25	;volatile
   633  076C                     l45:
   634  076C  0008               	return
   635  076D                     __end_of_UART_send_char:
   636                           
   637                           	psect	text3
   638  076D                     __ptext3:	
   639 ;; *************** function _UART_get_char *****************
   640 ;; Defined at:
   641 ;;		line 128 in file "newmain.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      unsigned char 
   648 ;; Registers used:
   649 ;;		wreg
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668  076D                     _UART_get_char:	
   669                           ;psect for function _UART_get_char
   670                           
   671  076D                     l682:	
   672                           ;incstack = 0
   673                           ; Regs used in _UART_get_char: [wreg]
   674                           
   675                           
   676                           ;newmain.c: 130:     if(OERR)
   677  076D  1283               	bcf	3,5	;RP0=0, select bank0
   678  076E  1303               	bcf	3,6	;RP1=0, select bank0
   679  076F  1C98               	btfss	24,1	;volatile
   680  0770  2F72               	goto	u21
   681  0771  2F73               	goto	u20
   682  0772                     u21:
   683  0772  2F75               	goto	l49
   684  0773                     u20:
   685  0773                     l684:
   686                           
   687                           ;newmain.c: 131:     {;newmain.c: 132:         CREN = 0;
   688  0773  1218               	bcf	24,4	;volatile
   689                           
   690                           ;newmain.c: 133:         CREN = 1;
   691  0774  1618               	bsf	24,4	;volatile
   692  0775                     l49:
   693  0775  1E8C               	btfss	12,5	;volatile
   694  0776  2F78               	goto	u31
   695  0777  2F79               	goto	u30
   696  0778                     u31:
   697  0778  2F75               	goto	l49
   698  0779                     u30:
   699  0779                     l686:
   700                           
   701                           ;newmain.c: 138:     return RCREG;
   702  0779  081A               	movf	26,w	;volatile
   703  077A                     l52:
   704  077A  0008               	return
   705  077B                     __end_of_UART_get_char:
   706                           
   707                           	psect	text4
   708  077B                     __ptext4:	
   709 ;; *************** function _Initialize_UART *****************
   710 ;; Defined at:
   711 ;;		line 89 in file "newmain.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738  077B                     _Initialize_UART:	
   739                           ;psect for function _Initialize_UART
   740                           
   741  077B                     l664:	
   742                           ;incstack = 0
   743                           ; Regs used in _Initialize_UART: [wreg]
   744                           
   745                           
   746                           ;newmain.c: 92:     TRISC6 = 0;
   747  077B  1683               	bsf	3,5	;RP0=1, select bank1
   748  077C  1303               	bcf	3,6	;RP1=0, select bank1
   749  077D  1307               	bcf	7,6	;volatile
   750                           
   751                           ;newmain.c: 93:     TRISC7 = 1;
   752  077E  1787               	bsf	7,7	;volatile
   753  077F                     l666:
   754                           
   755                           ;newmain.c: 98:     SPBRG = ((8000000/16)/9600) - 1;
   756  077F  3033               	movlw	51
   757  0780  0099               	movwf	25	;volatile
   758  0781                     l668:
   759                           
   760                           ;newmain.c: 99:     BRGH = 1;
   761  0781  1518               	bsf	24,2	;volatile
   762  0782                     l670:
   763                           
   764                           ;newmain.c: 103:     SYNC = 0;
   765  0782  1218               	bcf	24,4	;volatile
   766  0783                     l672:
   767                           
   768                           ;newmain.c: 104:     SPEN = 1;
   769  0783  1283               	bcf	3,5	;RP0=0, select bank0
   770  0784  1303               	bcf	3,6	;RP1=0, select bank0
   771  0785  1798               	bsf	24,7	;volatile
   772  0786                     l674:
   773                           
   774                           ;newmain.c: 108:     TXEN = 1;
   775  0786  1683               	bsf	3,5	;RP0=1, select bank1
   776  0787  1303               	bcf	3,6	;RP1=0, select bank1
   777  0788  1698               	bsf	24,5	;volatile
   778  0789                     l676:
   779                           
   780                           ;newmain.c: 109:     CREN = 1;
   781  0789  1283               	bcf	3,5	;RP0=0, select bank0
   782  078A  1303               	bcf	3,6	;RP1=0, select bank0
   783  078B  1618               	bsf	24,4	;volatile
   784  078C                     l678:
   785                           
   786                           ;newmain.c: 113:     TX9 = 0;
   787  078C  1683               	bsf	3,5	;RP0=1, select bank1
   788  078D  1303               	bcf	3,6	;RP1=0, select bank1
   789  078E  1318               	bcf	24,6	;volatile
   790  078F                     l680:
   791                           
   792                           ;newmain.c: 114:     RX9 = 0;
   793  078F  1283               	bcf	3,5	;RP0=0, select bank0
   794  0790  1303               	bcf	3,6	;RP1=0, select bank0
   795  0791  1318               	bcf	24,6	;volatile
   796  0792                     l39:
   797  0792  0008               	return
   798  0793                     __end_of_Initialize_UART:
   799  007E                     btemp	set	126	;btemp
   800  007E                     wtemp0	set	126
   801                           
   802                           	psect	idloc
   803                           
   804                           ;Config register IDLOC0 @ 0x2000
   805                           ;	unspecified, using default values
   806  2000                     	org	8192
   807  2000  3FFF               	dw	16383
   808                           
   809                           ;Config register IDLOC1 @ 0x2001
   810                           ;	unspecified, using default values
   811  2001                     	org	8193
   812  2001  3FFF               	dw	16383
   813                           
   814                           ;Config register IDLOC2 @ 0x2002
   815                           ;	unspecified, using default values
   816  2002                     	org	8194
   817  2002  3FFF               	dw	16383
   818                           
   819                           ;Config register IDLOC3 @ 0x2003
   820                           ;	unspecified, using default values
   821  2003                     	org	8195
   822  2003  3FFF               	dw	16383
   823                           
   824                           	psect	config
   825                           
   826                           ;Config register CONFIG1 @ 0x2007
   827                           ;	Oscillator Selection bits
   828                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   829                           ;	Watchdog Timer Enable bit
   830                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   831                           ;	Power-up Timer Enable bit
   832                           ;	PWRTE = OFF, PWRT disabled
   833                           ;	RE3/MCLR pin function select bit
   834                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   835                           ;	Code Protection bit
   836                           ;	CP = OFF, Program memory code protection is disabled
   837                           ;	Data Code Protection bit
   838                           ;	CPD = OFF, Data memory code protection is disabled
   839                           ;	Brown Out Reset Selection bits
   840                           ;	BOREN = OFF, BOR disabled
   841                           ;	Internal External Switchover bit
   842                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   843                           ;	Fail-Safe Clock Monitor Enabled bit
   844                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   845                           ;	Low Voltage Programming Enable bit
   846                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   847                           ;	In-Circuit Debugger Mode bit
   848                           ;	DEBUG = 0x1, unprogrammed default
   849  2007                     	org	8199
   850  2007  20D4               	dw	8404
   851                           
   852                           ;Config register CONFIG2 @ 0x2008
   853                           ;	Brown-out Reset Selection bit
   854                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   855                           ;	Flash Program Memory Self Write Enable bits
   856                           ;	WRT = OFF, Write protection off
   857  2008                     	org	8200
   858  2008  3FFF               	dw	16383

Data Sizes:
    Strings     60
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 35
		 -> STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[35]), 


Critical Paths under _main in COMMON

    _main->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     219
                                              3 COMMON     4     4      0
                    _Initialize_UART
                      _UART_get_char
                     _UART_send_char
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     159
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_get_char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_UART
   _UART_get_char
   _UART_send_char
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 29 08:20:38 2022

                       pc 0002                        l42 0764                        l52 077A  
                      l45 076C                        l39 0792                        l49 0775  
                      l58 07B1                        u10 076A                        u11 0769  
                      u20 0773                        u21 0772                        u30 0779  
                      u31 0778                        u70 07B1                        u71 07B0  
                      u80 07D2                        u81 07D1                        u90 07E8  
                      u91 07E7                        fsr 0004                       l722 0794  
                     l730 07B2                       l660 0764                       l724 0795  
                     l740 07D2                       l732 07B5                       l670 0782  
                     l662 076A                       l726 07A1                       l750 07EB  
                     l742 07D5                       l734 07BA                       l680 078F  
                     l672 0783                       l664 077B                       l728 07A5  
                     l752 07F1                       l744 07DB                       l736 07C0  
                     l674 0786                       l666 077F                       l682 076D  
                     l746 07E1                       l738 07CB                       l676 0789  
                     l668 0781                       l684 0773                       l748 07E8  
                     l678 078C                       l686 0779                       _RB3 0033  
                     _RX9 00C6                       _TX9 04C6                       fsr0 0004  
                    STR_1 0009                      STR_2 002C                      STR_3 003A  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _OERR 00C1                      _SPEN 00C7                      _TXEN 04C5  
                    _TXIF 0064                      _SYNC 04C4                      _main 07B2  
                    btemp 007E                      start 0000                     ?_main 0070  
                   _RCREG 001A                     _SPBRG 0099                     _TRISB 0086  
                   _TXREG 0019                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07FB              __end_of_main 07FB  
                  ??_main 0073             main@get_value 0075                    _TRISC6 043E  
                  _TRISC7 043F   __end_of__initialization 07FC            __pcstackCOMMON 0070  
        _UART_send_string 0793     __end_of_UART_get_char 077B                __pmaintext 07B2  
              __stringtab 0003                   __ptext1 0793                   __ptext2 0763  
                 __ptext3 076D                   __ptext4 077B         ??_Initialize_UART 0070  
    end_of_initialization 07FC  __end_of_UART_send_string 07B2       start_initialization 07FB  
          _UART_send_char 0763    __end_of_UART_send_char 076D               __pbssCOMMON 0077  
               ___latbits 0002           _Initialize_UART 077B          UART_send_char@bt 0070  
               __pstrings 0003                 _get_value 0077           ?_UART_send_char 0070  
             __stringbase 0008     UART_send_string@st_pt 0072             _UART_get_char 076D  
       ?_UART_send_string 0070        ??_UART_send_string 0071   __end_of_Initialize_UART 0793  
      __end_of__stringtab 0009            ?_UART_get_char 0070          ?_Initialize_UART 0070  
               stringcode 0003          ??_UART_send_char 0070           ??_UART_get_char 0070  
                stringdir 0003                  stringtab 0003  
