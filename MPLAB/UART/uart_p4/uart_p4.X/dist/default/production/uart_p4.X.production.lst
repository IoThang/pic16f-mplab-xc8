

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 30 00:45:35 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x320,16
    35                           	dabs	1,0x2A0,80
    36                           	dabs	1,0x26C,4
    37                           	dabs	1,0x218C,0,_buffer
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1509 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011D                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0197                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  0498                     	;# 
   176  0498                     	;# 
   177  0499                     	;# 
   178  049A                     	;# 
   179  049B                     	;# 
   180  049B                     	;# 
   181  049C                     	;# 
   182  049D                     	;# 
   183  049E                     	;# 
   184  049F                     	;# 
   185  0611                     	;# 
   186  0612                     	;# 
   187  0613                     	;# 
   188  0613                     	;# 
   189  0614                     	;# 
   190  0615                     	;# 
   191  0616                     	;# 
   192  0616                     	;# 
   193  0617                     	;# 
   194  0618                     	;# 
   195  0619                     	;# 
   196  0619                     	;# 
   197  061A                     	;# 
   198  061B                     	;# 
   199  061C                     	;# 
   200  061C                     	;# 
   201  0691                     	;# 
   202  0692                     	;# 
   203  0693                     	;# 
   204  0694                     	;# 
   205  0695                     	;# 
   206  0F0F                     	;# 
   207  0F10                     	;# 
   208  0F11                     	;# 
   209  0F12                     	;# 
   210  0F13                     	;# 
   211  0F14                     	;# 
   212  0F15                     	;# 
   213  0F16                     	;# 
   214  0F17                     	;# 
   215  0F18                     	;# 
   216  0F19                     	;# 
   217  0F1A                     	;# 
   218  0F1B                     	;# 
   219  0F1C                     	;# 
   220  0F1D                     	;# 
   221  0F1E                     	;# 
   222  0F1F                     	;# 
   223  0F20                     	;# 
   224  0F21                     	;# 
   225  0F22                     	;# 
   226  0F23                     	;# 
   227  0F24                     	;# 
   228  0F25                     	;# 
   229  0F26                     	;# 
   230  0F27                     	;# 
   231  0F28                     	;# 
   232  0F29                     	;# 
   233  0F2A                     	;# 
   234  0F2B                     	;# 
   235  0F2C                     	;# 
   236  0F2D                     	;# 
   237  0F2E                     	;# 
   238  0F2F                     	;# 
   239  0F8C                     	;# 
   240  0F8D                     	;# 
   241  0F91                     	;# 
   242  0F95                     	;# 
   243  0F96                     	;# 
   244  0F97                     	;# 
   245  0F9C                     	;# 
   246  0F9D                     	;# 
   247  0F9E                     	;# 
   248  0FE3                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;_buffer
   260                           
   261                           	psect	nvBANK1
   262  00DD                     __pnvBANK1:
   263  00DD                     _savee2:
   264  00DD                     	ds	1
   265  00DE                     _savee1:
   266  00DE                     	ds	1
   267  0011                     _PIR1bits	set	17
   268  008D                     _RCIF	set	141
   269  008C                     _TXIF	set	140
   270  008E                     _TRISC	set	142
   271  008D                     _TRISB	set	141
   272  008C                     _TRISA	set	140
   273  0099                     _OSCCON	set	153
   274  010E                     _LATC	set	270
   275  010D                     _LATB	set	269
   276  010C                     _LATA	set	268
   277  0116                     _BORCON	set	278
   278  019A                     _TXREG	set	410
   279  0199                     _RCREG	set	409
   280  019D                     _RCSTAbits	set	413
   281  019C                     _SPBRGH	set	412
   282  019B                     _SPBRGL	set	411
   283  019E                     _TXSTA	set	414
   284  019D                     _RCSTA	set	413
   285  019F                     _BAUDCON	set	415
   286  018C                     _ANSELA	set	396
   287  018D                     _ANSELB	set	397
   288  018E                     _ANSELC	set	398
   289                           
   290                           	psect	stringtext1
   291  0800                     __pstringtext1:
   292  0800                     STR_1:
   293  0800  3425               	retlw	37	;'%'
   294  0801  3475               	retlw	117	;'u'
   295  0802  3400               	retlw	0
   296                           
   297                           	psect	stringtext2
   298  0000                     __pstringtext2:
   299                           
   300                           	psect	cinit
   301  07E5                     start_initialization:	
   302                           ; #config settings
   303                           
   304  07E5                     __initialization:	;BIGRAM
   305                           
   306                           ; Clear objects allocated to BIGRAM
   307  07E5  308C               	movlw	low (0+8588)
   308  07E6  0084               	movwf	4
   309  07E7  3021               	movlw	high (0+8588)
   310  07E8  0085               	movwf	5
   311  07E9  3064               	movlw	100
   312  07EA  00FE               	movwf	btemp
   313  07EB  3000               	movlw	0
   314  07EC  00FF               	movwf	btemp+1
   315  07ED  3180  205A  3187   	fcall	clear_ram0
   316                           
   317                           ; Clear objects allocated to BANK0
   318  07F0  0020               	movlb	0	; select bank0
   319  07F1  01EF               	clrf	__pbssBANK0& (0+127)
   320                           
   321                           ; Clear objects allocated to BANK1
   322  07F2  30A0               	movlw	low __pbssBANK1
   323  07F3  0084               	movwf	4
   324  07F4  3000               	movlw	high __pbssBANK1
   325  07F5  0085               	movwf	5
   326  07F6  302B               	movlw	43
   327  07F7  00FE               	movwf	btemp
   328  07F8  3000               	movlw	0
   329  07F9  00FF               	movwf	btemp+1
   330  07FA  3180  205A  3187   	fcall	clear_ram0
   331  07FD                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  07FD                     __end_of__initialization:
   335  07FD  0020               	movlb	0
   336  07FE  3182  2AC0         	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	bssBANK0
   339  006F                     __pbssBANK0:
   340  006F                     _savee:
   341  006F                     	ds	1
   342                           
   343                           	psect	bssBANK1
   344  00A0                     __pbssBANK1:
   345  00A0                     _nout:
   346  00A0                     	ds	2
   347  00A2                     _width:
   348  00A2                     	ds	2
   349  00A4                     _prec:
   350  00A4                     	ds	2
   351  00A6                     _flags:
   352  00A6                     	ds	2
   353  00A8                     _val:
   354  00A8                     	ds	1
   355  00A9                     _buffer2:
   356  00A9                     	ds	1
   357  00AA                     _dbuf:
   358  00AA                     	ds	32
   359  00CA                     _buffer1:
   360  00CA                     	ds	1
   361                           
   362                           	psect	clrtext
   363  005A                     clear_ram0:	
   364                           ;	Called with FSR0 containing the base address, and
   365                           ;	btemp/btemp+1 has the size to clear
   366                           
   367  005A  0064               	clrwdt	;clear the watchdog before getting into this loop
   368  005B                     clrloop0:
   369  005B  0180               	clrf	0	;clear RAM location pointed to by FSR
   370  005C  3101               	addfsr 0,1
   371  005D  3001               	movlw	1
   372  005E  02FE               	subwf	btemp,f
   373  005F  3000               	movlw	0
   374  0060  3BFF               	subwfb	btemp+1,f
   375  0061  087F               	movf	btemp+1,w
   376  0062  047E               	iorwf	btemp,w
   377  0063  1D03               	skipz
   378  0064  285B               	goto	clrloop0	;have we reached the end yet?
   379  0065  3400               	retlw	0	;all done for this memory range, return
   380                           
   381                           	psect	cstackBANK1
   382  00CB                     __pcstackBANK1:
   383  00CB                     sprintf@ap:
   384                           
   385                           ; 1 bytes @ 0x0
   386  00CB                     	ds	1
   387  00CC                     sprintf@s:
   388                           
   389                           ; 1 bytes @ 0x1
   390  00CC                     	ds	1
   391  00CD                     sprintf@f:
   392                           
   393                           ; 10 bytes @ 0x2
   394  00CD                     	ds	10
   395  00D7                     ON_OFF_BLINK@cnt:
   396                           
   397                           ; 1 bytes @ 0xC
   398  00D7                     	ds	1
   399  00D8                     ON_OFF_BLINK@cnt_141:
   400                           
   401                           ; 1 bytes @ 0xD
   402  00D8                     	ds	1
   403  00D9                     ON_OFF_BLINK@bittt:
   404                           
   405                           ; 1 bytes @ 0xE
   406  00D9                     	ds	1
   407  00DA                     ON_OFF_BLINK@bitt:
   408                           
   409                           ; 1 bytes @ 0xF
   410  00DA                     	ds	1
   411  00DB                     ON_OFF_BLINK@j:
   412                           
   413                           ; 1 bytes @ 0x10
   414  00DB                     	ds	1
   415  00DC                     ON_OFF_BLINK@k:
   416                           
   417                           ; 1 bytes @ 0x11
   418  00DC                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_OSCILLATOR_Initialize:
   423  0070                     ??_OSCILLATOR_Initialize:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_PIN_MANAGER_Initialize:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_PIN_MANAGER_Initialize:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_EUSART_Initialize:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_EUSART_Initialize:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_EUSART_Read:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_EUSART_Read:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_EUSART_Write:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_EUSART_Write:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_putch:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ??___lodiv:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ??___lomod:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_strlen:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     EUSART_Write@txData:	
   466                           ; 2 bytes @ 0x0
   467                           
   468                           
   469                           ; 1 bytes @ 0x0
   470  0070                     	ds	1
   471  0071                     ??_putch:
   472  0071                     putch@x:	
   473                           ; 1 bytes @ 0x1
   474                           
   475  0071                     ___lomod@counter:	
   476                           ; 1 bytes @ 0x1
   477                           
   478  0071                     ___lodiv@quotient:	
   479                           ; 1 bytes @ 0x1
   480                           
   481                           
   482                           ; 8 bytes @ 0x1
   483  0071                     	ds	1
   484  0072                     ??_strlen:
   485  0072                     ?_fputc:	
   486                           ; 1 bytes @ 0x2
   487                           
   488  0072                     fputc@c:	
   489                           ; 2 bytes @ 0x2
   490                           
   491                           
   492                           ; 2 bytes @ 0x2
   493  0072                     	ds	1
   494  0073                     strlen@a:
   495                           
   496                           ; 1 bytes @ 0x3
   497  0073                     	ds	1
   498  0074                     fputc@fp:
   499  0074                     strlen@s:	
   500                           ; 1 bytes @ 0x4
   501                           
   502                           
   503                           ; 1 bytes @ 0x4
   504  0074                     	ds	1
   505  0075                     ??_fputc:
   506                           
   507                           ; 1 bytes @ 0x5
   508  0075                     	ds	4
   509  0079                     ___lodiv@counter:
   510                           
   511                           ; 1 bytes @ 0x9
   512  0079                     	ds	1
   513  007A                     ?_fputs:
   514  007A                     fputs@fp:	
   515                           ; 2 bytes @ 0xA
   516                           
   517                           
   518                           ; 1 bytes @ 0xA
   519  007A                     	ds	1
   520  007B                     ??_fputs:
   521                           
   522                           ; 1 bytes @ 0xB
   523  007B                     	ds	3
   524                           
   525                           	psect	cstackBANK0
   526  0020                     __pcstackBANK0:
   527  0020                     ?___lodiv:
   528  0020                     ?___lomod:	
   529                           ; 8 bytes @ 0x0
   530                           
   531  0020                     fputs@c:	
   532                           ; 8 bytes @ 0x0
   533                           
   534  0020                     ___lodiv@divisor:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0020                     ___lomod@divisor:	
   538                           ; 8 bytes @ 0x0
   539                           
   540                           
   541                           ; 8 bytes @ 0x0
   542  0020                     	ds	1
   543  0021                     fputs@i:
   544                           
   545                           ; 2 bytes @ 0x1
   546  0021                     	ds	2
   547  0023                     fputs@s:
   548                           
   549                           ; 1 bytes @ 0x3
   550  0023                     	ds	1
   551  0024                     ?_pad:
   552  0024                     pad@buf:	
   553                           ; 2 bytes @ 0x4
   554                           
   555                           
   556                           ; 1 bytes @ 0x4
   557  0024                     	ds	1
   558  0025                     pad@p:
   559                           
   560                           ; 2 bytes @ 0x5
   561  0025                     	ds	2
   562  0027                     ??_pad:
   563                           
   564                           ; 1 bytes @ 0x7
   565  0027                     	ds	1
   566  0028                     pad@i:
   567  0028                     ___lodiv@dividend:	
   568                           ; 2 bytes @ 0x8
   569                           
   570  0028                     ___lomod@dividend:	
   571                           ; 8 bytes @ 0x8
   572                           
   573                           
   574                           ; 8 bytes @ 0x8
   575  0028                     	ds	2
   576  002A                     pad@w:
   577                           
   578                           ; 2 bytes @ 0xA
   579  002A                     	ds	2
   580  002C                     pad@fp:
   581                           
   582                           ; 1 bytes @ 0xC
   583  002C                     	ds	4
   584  0030                     ?_utoa:
   585  0030                     utoa@d:	
   586                           ; 2 bytes @ 0x10
   587                           
   588                           
   589                           ; 8 bytes @ 0x10
   590  0030                     	ds	8
   591  0038                     ??_utoa:
   592                           
   593                           ; 1 bytes @ 0x18
   594  0038                     	ds	1
   595  0039                     utoa@fp:
   596                           
   597                           ; 1 bytes @ 0x19
   598  0039                     	ds	1
   599  003A                     utoa@p:
   600                           
   601                           ; 2 bytes @ 0x1A
   602  003A                     	ds	2
   603  003C                     utoa@w:
   604                           
   605                           ; 2 bytes @ 0x1C
   606  003C                     	ds	2
   607  003E                     utoa@n:
   608                           
   609                           ; 8 bytes @ 0x1E
   610  003E                     	ds	8
   611  0046                     utoa@i:
   612                           
   613                           ; 2 bytes @ 0x26
   614  0046                     	ds	2
   615  0048                     ?_vfpfcnvrt:
   616  0048                     vfpfcnvrt@fmt:	
   617                           ; 2 bytes @ 0x28
   618                           
   619                           
   620                           ; 1 bytes @ 0x28
   621  0048                     	ds	1
   622  0049                     vfpfcnvrt@ap:
   623                           
   624                           ; 1 bytes @ 0x29
   625  0049                     	ds	1
   626  004A                     ??_vfpfcnvrt:
   627                           
   628                           ; 1 bytes @ 0x2A
   629  004A                     	ds	5
   630  004F                     vfpfcnvrt@llu:
   631                           
   632                           ; 8 bytes @ 0x2F
   633  004F                     	ds	8
   634  0057                     vfpfcnvrt@fp:
   635                           
   636                           ; 1 bytes @ 0x37
   637  0057                     	ds	1
   638  0058                     ?_vfprintf:
   639  0058                     vfprintf@fmt:	
   640                           ; 2 bytes @ 0x38
   641                           
   642                           
   643                           ; 2 bytes @ 0x38
   644  0058                     	ds	2
   645  005A                     vfprintf@ap:
   646                           
   647                           ; 1 bytes @ 0x3A
   648  005A                     	ds	1
   649  005B                     ??_vfprintf:
   650                           
   651                           ; 1 bytes @ 0x3B
   652  005B                     	ds	2
   653  005D                     vfprintf@fp:
   654                           
   655                           ; 1 bytes @ 0x3D
   656  005D                     	ds	1
   657  005E                     vfprintf@cfmt:
   658                           
   659                           ; 2 bytes @ 0x3E
   660  005E                     	ds	2
   661  0060                     ?_sprintf:
   662  0060                     sprintf@fmt:	
   663                           ; 2 bytes @ 0x40
   664                           
   665                           
   666                           ; 2 bytes @ 0x40
   667  0060                     	ds	4
   668  0064                     ??_sprintf:
   669                           
   670                           ; 1 bytes @ 0x44
   671  0064                     	ds	1
   672  0065                     ?_ON_OFF_BLINK:
   673  0065                     ON_OFF_BLINK@buffer:	
   674                           ; 1 bytes @ 0x45
   675                           
   676                           
   677                           ; 2 bytes @ 0x45
   678  0065                     	ds	2
   679  0067                     ON_OFF_BLINK@buffer1:
   680                           
   681                           ; 1 bytes @ 0x47
   682  0067                     	ds	1
   683  0068                     ON_OFF_BLINK@i:
   684                           
   685                           ; 1 bytes @ 0x48
   686  0068                     	ds	1
   687  0069                     ??_ON_OFF_BLINK:
   688                           
   689                           ; 1 bytes @ 0x49
   690  0069                     	ds	2
   691  006B                     ??_main:
   692                           
   693                           ; 1 bytes @ 0x4B
   694  006B                     	ds	3
   695  006E                     main@i:
   696                           
   697                           ; 1 bytes @ 0x4E
   698  006E                     	ds	1
   699                           
   700                           	psect	maintext
   701  02C0                     __pmaintext:	
   702 ;;
   703 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   704 ;;
   705 ;; *************** function _main *****************
   706 ;; Defined at:
   707 ;;		line 156 in file "newmain.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  i               1   78[BANK0 ] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : B1F/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   721 ;;      Params:         0       0       0       0       0       0       0       0
   722 ;;      Locals:         0       1       0       0       0       0       0       0
   723 ;;      Temps:          0       3       0       0       0       0       0       0
   724 ;;      Totals:         0       4       0       0       0       0       0       0
   725 ;;Total ram usage:        4 bytes
   726 ;; Hardware stack levels required when called: 10
   727 ;; This function calls:
   728 ;;		_EUSART_Initialize
   729 ;;		_EUSART_Read
   730 ;;		_ON_OFF_BLINK
   731 ;;		_OSCILLATOR_Initialize
   732 ;;		_PIN_MANAGER_Initialize
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738  02C0                     _main:	
   739                           ;psect for function _main
   740                           
   741  02C0                     l1611:	
   742                           ;incstack = 0
   743                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   744                           
   745                           
   746                           ;newmain.c: 158:     OSCILLATOR_Initialize();
   747  02C0  3180  2034  3182   	fcall	_OSCILLATOR_Initialize
   748                           
   749                           ;newmain.c: 159:     PIN_MANAGER_Initialize();
   750  02C3  3180  2074  3182   	fcall	_PIN_MANAGER_Initialize
   751                           
   752                           ;newmain.c: 160:     EUSART_Initialize();
   753  02C6  3180  2044  3182   	fcall	_EUSART_Initialize
   754  02C9                     l1613:
   755                           
   756                           ;newmain.c: 161:     savee1 = savee; savee2 = savee;
   757  02C9  0020               	movlb	0	; select bank0
   758  02CA  086F               	movf	_savee,w
   759  02CB  00EB               	movwf	??_main
   760  02CC  086B               	movf	??_main,w
   761  02CD  0021               	movlb	1	; select bank1
   762  02CE  00DE               	movwf	_savee1^(0+128)
   763  02CF                     l1615:
   764  02CF  0020               	movlb	0	; select bank0
   765  02D0  086F               	movf	_savee,w
   766  02D1  00EB               	movwf	??_main
   767  02D2  086B               	movf	??_main,w
   768  02D3  0021               	movlb	1	; select bank1
   769  02D4  00DD               	movwf	_savee2^(0+128)
   770  02D5                     l1617:
   771                           
   772                           ;newmain.c: 163:     {;newmain.c: 164:         for(unsigned char i = 0; i < 9; i++)
   773  02D5  0020               	movlb	0	; select bank0
   774  02D6  01EE               	clrf	main@i
   775  02D7                     l132:
   776  02D7  1E91               	btfss	17,5	;volatile
   777  02D8  2ADA               	goto	u1631
   778  02D9  2ADB               	goto	u1630
   779  02DA                     u1631:
   780  02DA  2AD7               	goto	l132
   781  02DB                     u1630:
   782  02DB                     l1623:
   783                           
   784                           ;newmain.c: 167:             buffer[i] = EUSART_Read();
   785  02DB  3180  2066  3182   	fcall	_EUSART_Read
   786  02DE  0020               	movlb	0	; select bank0
   787  02DF  00EB               	movwf	??_main
   788  02E0  086E               	movf	main@i,w
   789  02E1  3E8C               	addlw	140
   790  02E2  00EC               	movwf	??_main+1
   791  02E3  01ED               	clrf	??_main+2
   792  02E4  3021               	movlw	33
   793  02E5  3DED               	addwfc	??_main+2,f
   794  02E6  086C               	movf	??_main+1,w
   795  02E7  0086               	movwf	6
   796  02E8  086D               	movf	??_main+2,w
   797  02E9  0087               	movwf	7
   798  02EA  086B               	movf	??_main,w
   799  02EB  0081               	movwf	1
   800  02EC                     l1625:
   801                           
   802                           ;newmain.c: 168:             if(buffer[i] == '#') i = 15;
   803  02EC  086E               	movf	main@i,w
   804  02ED  3E8C               	addlw	140
   805  02EE  0086               	movwf	6
   806  02EF  0187               	clrf	7
   807  02F0  3021               	movlw	33
   808  02F1  3D87               	addwfc	7,f
   809  02F2  3023               	movlw	35
   810  02F3  0601               	xorwf	1,w
   811  02F4  1D03               	btfss	3,2
   812  02F5  2AF7               	goto	u1641
   813  02F6  2AF8               	goto	u1640
   814  02F7                     u1641:
   815  02F7  2AFC               	goto	l1629
   816  02F8                     u1640:
   817  02F8                     l1627:
   818  02F8  300F               	movlw	15
   819  02F9  00EB               	movwf	??_main
   820  02FA  086B               	movf	??_main,w
   821  02FB  00EE               	movwf	main@i
   822  02FC                     l1629:
   823                           
   824                           ;newmain.c: 169:             if(buffer[1] == 'L')
   825  02FC  308C               	movlw	140
   826  02FD  0086               	movwf	6
   827  02FE  3021               	movlw	33
   828  02FF  0087               	movwf	7
   829  0300  3141               	addfsr 1,1
   830  0301  304C               	movlw	76
   831  0302  0601               	xorwf	1,w
   832  0303  1D03               	btfss	3,2
   833  0304  2B06               	goto	u1651
   834  0305  2B07               	goto	u1650
   835  0306                     u1651:
   836  0306  2B13               	goto	l1633
   837  0307                     u1650:
   838  0307                     l1631:
   839                           
   840                           ;newmain.c: 170:                 val = buffer[6] - 48;
   841  0307  308C               	movlw	140
   842  0308  0086               	movwf	6
   843  0309  3021               	movlw	33
   844  030A  0087               	movwf	7
   845  030B  3146               	addfsr 1,6
   846  030C  0801               	movf	1,w
   847  030D  3ED0               	addlw	208
   848  030E  00EB               	movwf	??_main
   849  030F  086B               	movf	??_main,w
   850  0310  0021               	movlb	1	; select bank1
   851  0311  00A8               	movwf	_val^(0+128)
   852  0312  2B40               	goto	l1641
   853  0313                     l1633:
   854  0313  308C               	movlw	140
   855  0314  0086               	movwf	6
   856  0315  3021               	movlw	33
   857  0316  0087               	movwf	7
   858  0317  3141               	addfsr 1,1
   859  0318  304E               	movlw	78
   860  0319  0601               	xorwf	1,w
   861  031A  1D03               	btfss	3,2
   862  031B  2B1D               	goto	u1661
   863  031C  2B1E               	goto	u1660
   864  031D                     u1661:
   865  031D  2B2A               	goto	l1637
   866  031E                     u1660:
   867  031E                     l1635:
   868                           
   869                           ;newmain.c: 172:                 val = buffer[3] - 48;
   870  031E  308C               	movlw	140
   871  031F  0086               	movwf	6
   872  0320  3021               	movlw	33
   873  0321  0087               	movwf	7
   874  0322  3143               	addfsr 1,3
   875  0323  0801               	movf	1,w
   876  0324  3ED0               	addlw	208
   877  0325  00EB               	movwf	??_main
   878  0326  086B               	movf	??_main,w
   879  0327  0021               	movlb	1	; select bank1
   880  0328  00A8               	movwf	_val^(0+128)
   881  0329  2B40               	goto	l1641
   882  032A                     l1637:
   883  032A  308C               	movlw	140
   884  032B  0086               	movwf	6
   885  032C  3021               	movlw	33
   886  032D  0087               	movwf	7
   887  032E  3141               	addfsr 1,1
   888  032F  3046               	movlw	70
   889  0330  0601               	xorwf	1,w
   890  0331  1D03               	btfss	3,2
   891  0332  2B34               	goto	u1671
   892  0333  2B35               	goto	u1670
   893  0334                     u1671:
   894  0334  2B40               	goto	l1641
   895  0335                     u1670:
   896  0335                     l1639:
   897                           
   898                           ;newmain.c: 174:                 val = buffer[4] - 48;
   899  0335  308C               	movlw	140
   900  0336  0086               	movwf	6
   901  0337  3021               	movlw	33
   902  0338  0087               	movwf	7
   903  0339  3144               	addfsr 1,4
   904  033A  0801               	movf	1,w
   905  033B  3ED0               	addlw	208
   906  033C  00EB               	movwf	??_main
   907  033D  086B               	movf	??_main,w
   908  033E  0021               	movlb	1	; select bank1
   909  033F  00A8               	movwf	_val^(0+128)
   910  0340                     l1641:
   911                           
   912                           ;newmain.c: 175:         }
   913  0340  3001               	movlw	1
   914  0341  0020               	movlb	0	; select bank0
   915  0342  00EB               	movwf	??_main
   916  0343  086B               	movf	??_main,w
   917  0344  07EE               	addwf	main@i,f
   918  0345                     l1643:
   919  0345  3009               	movlw	9
   920  0346  026E               	subwf	main@i,w
   921  0347  1C03               	skipc
   922  0348  2B4A               	goto	u1681
   923  0349  2B4B               	goto	u1680
   924  034A                     u1681:
   925  034A  2AD7               	goto	l132
   926  034B                     u1680:
   927  034B                     l1645:
   928                           
   929                           ;newmain.c: 176:         ON_OFF_BLINK(buffer, buffer1, val);
   930  034B  308C               	movlw	140
   931  034C  00E5               	movwf	ON_OFF_BLINK@buffer
   932  034D  3021               	movlw	33
   933  034E  00E6               	movwf	ON_OFF_BLINK@buffer+1
   934  034F  30CA               	movlw	(low (_buffer1| 0))& (0+255)
   935  0350  00EB               	movwf	??_main
   936  0351  086B               	movf	??_main,w
   937  0352  00E7               	movwf	ON_OFF_BLINK@buffer1
   938  0353  0021               	movlb	1	; select bank1
   939  0354  0828               	movf	_val^(0+128),w
   940  0355  0020               	movlb	0	; select bank0
   941  0356  00EC               	movwf	??_main+1
   942  0357  086C               	movf	??_main+1,w
   943  0358  00E8               	movwf	ON_OFF_BLINK@i
   944  0359  3185  2510  3182   	fcall	_ON_OFF_BLINK
   945  035C  2AD5               	goto	l1617
   946  035D  3180  2802         	ljmp	start
   947  035F                     __end_of_main:
   948                           
   949                           	psect	text1
   950  0074                     __ptext1:	
   951 ;; *************** function _PIN_MANAGER_Initialize *****************
   952 ;; Defined at:
   953 ;;		line 33 in file "newmain.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   967 ;;      Params:         0       0       0       0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0       0
   970 ;;      Totals:         0       0       0       0       0       0       0       0
   971 ;;Total ram usage:        0 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980  0074                     _PIN_MANAGER_Initialize:	
   981                           ;psect for function _PIN_MANAGER_Initialize
   982                           
   983  0074                     l1411:	
   984                           ;incstack = 0
   985                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   986                           
   987                           
   988                           ;newmain.c: 35:     LATA = 0x00;
   989  0074  0022               	movlb	2	; select bank2
   990  0075  018C               	clrf	12	;volatile
   991                           
   992                           ;newmain.c: 36:     LATB = 0x00;
   993  0076  018D               	clrf	13	;volatile
   994                           
   995                           ;newmain.c: 37:     LATC = 0x00;
   996  0077  018E               	clrf	14	;volatile
   997  0078                     l1413:
   998                           
   999                           ;newmain.c: 38:     TRISA = 0x3F;
  1000  0078  303F               	movlw	63
  1001  0079  0021               	movlb	1	; select bank1
  1002  007A  008C               	movwf	12	;volatile
  1003  007B                     l1415:
  1004                           
  1005                           ;newmain.c: 39:     TRISB = 0x70;
  1006  007B  3070               	movlw	112
  1007  007C  008D               	movwf	13	;volatile
  1008                           
  1009                           ;newmain.c: 40:     TRISC = 0x00;
  1010  007D  018E               	clrf	14	;volatile
  1011                           
  1012                           ;newmain.c: 41:     ANSELC = 0x00;
  1013  007E  0023               	movlb	3	; select bank3
  1014  007F  018E               	clrf	14	;volatile
  1015  0080                     l1417:
  1016                           
  1017                           ;newmain.c: 42:     ANSELB = 0x10;
  1018  0080  3010               	movlw	16
  1019  0081  008D               	movwf	13	;volatile
  1020  0082                     l1419:
  1021                           
  1022                           ;newmain.c: 43:     ANSELA = 0x17;
  1023  0082  3017               	movlw	23
  1024  0083  008C               	movwf	12	;volatile
  1025  0084                     l68:
  1026  0084  0008               	return
  1027  0085                     __end_of_PIN_MANAGER_Initialize:
  1028                           
  1029                           	psect	text2
  1030  0034                     __ptext2:	
  1031 ;; *************** function _OSCILLATOR_Initialize *****************
  1032 ;; Defined at:
  1033 ;;		line 25 in file "newmain.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1047 ;;      Params:         0       0       0       0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0
  1050 ;;      Totals:         0       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060  0034                     _OSCILLATOR_Initialize:	
  1061                           ;psect for function _OSCILLATOR_Initialize
  1062                           
  1063  0034                     l1407:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1066                           
  1067                           
  1068                           ;newmain.c: 28:     OSCCON = 0x70;
  1069  0034  3070               	movlw	112
  1070  0035  0021               	movlb	1	; select bank1
  1071  0036  0099               	movwf	25	;volatile
  1072  0037                     l1409:
  1073                           
  1074                           ;newmain.c: 30:     BORCON = 0x00;
  1075  0037  0022               	movlb	2	; select bank2
  1076  0038  0196               	clrf	22	;volatile
  1077  0039                     l65:
  1078  0039  0008               	return
  1079  003A                     __end_of_OSCILLATOR_Initialize:
  1080                           
  1081                           	psect	text3
  1082  0510                     __ptext3:	
  1083 ;; *************** function _ON_OFF_BLINK *****************
  1084 ;; Defined at:
  1085 ;;		line 83 in file "newmain.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  buffer          2   69[BANK0 ] PTR unsigned char 
  1088 ;;		 -> buffer(100), 
  1089 ;;  buffer1         1   71[BANK0 ] PTR unsigned char 
  1090 ;;		 -> buffer1(1), 
  1091 ;;  i               1   72[BANK0 ] unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  cnt             1   13[BANK1 ] unsigned char 
  1094 ;;  cnt             1   12[BANK1 ] unsigned char 
  1095 ;;  k               1   17[BANK1 ] unsigned char 
  1096 ;;  j               1   16[BANK1 ] unsigned char 
  1097 ;;  bitt            1   15[BANK1 ] unsigned char 
  1098 ;;  bittt           1   14[BANK1 ] unsigned char 
  1099 ;;  flag            1    0        unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1109 ;;      Params:         0       4       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       6       0       0       0       0       0
  1111 ;;      Temps:          0       2       0       0       0       0       0       0
  1112 ;;      Totals:         0       6       6       0       0       0       0       0
  1113 ;;Total ram usage:       12 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 9
  1116 ;; This function calls:
  1117 ;;		_sprintf
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123  0510                     _ON_OFF_BLINK:	
  1124                           ;psect for function _ON_OFF_BLINK
  1125                           
  1126  0510                     l1433:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _ON_OFF_BLINK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1129                           
  1130                           
  1131                           ;newmain.c: 83: void ON_OFF_BLINK(char* buffer, char* buffer1, unsigned char i);newmain.
      +                          c: 84: {;newmain.c: 85:     unsigned char bitt = 0b00000001;
  1132  0510  0021               	movlb	1	; select bank1
  1133  0511  01DA               	clrf	ON_OFF_BLINK@bitt^(0+128)
  1134  0512  0ADA               	incf	ON_OFF_BLINK@bitt^(0+128),f
  1135  0513                     l1435:
  1136                           
  1137                           ;newmain.c: 86:     unsigned char bittt = 0b11111110;
  1138  0513  30FE               	movlw	254
  1139  0514  0020               	movlb	0	; select bank0
  1140  0515  00E9               	movwf	??_ON_OFF_BLINK
  1141  0516  0869               	movf	??_ON_OFF_BLINK,w
  1142  0517  0021               	movlb	1	; select bank1
  1143  0518  00D9               	movwf	ON_OFF_BLINK@bittt^(0+128)
  1144  0519                     l1437:
  1145                           
  1146                           ;newmain.c: 87:     sprintf(buffer1, "%u", i);
  1147  0519  3000               	movlw	low (STR_1| (0+32768))
  1148  051A  0020               	movlb	0	; select bank0
  1149  051B  00E0               	movwf	sprintf@fmt
  1150  051C  3088               	movlw	high (STR_1| (0+32768))
  1151  051D  00E1               	movwf	sprintf@fmt+1
  1152  051E  0868               	movf	ON_OFF_BLINK@i,w
  1153  051F  00E9               	movwf	??_ON_OFF_BLINK
  1154  0520  01EA               	clrf	??_ON_OFF_BLINK+1
  1155  0521  0869               	movf	??_ON_OFF_BLINK,w
  1156  0522  00E2               	movwf	?_sprintf+2
  1157  0523  086A               	movf	??_ON_OFF_BLINK+1,w
  1158  0524  00E3               	movwf	?_sprintf+3
  1159  0525  0867               	movf	ON_OFF_BLINK@buffer1,w
  1160  0526  3180  20C6  3185   	fcall	_sprintf
  1161  0529                     l1439:
  1162                           
  1163                           ;newmain.c: 88:     if((buffer[0] == 'O') && (buffer[1] == 'N') && (buffer[2] == '0') &&
      +                           ((buffer[3] - 48) == i) && (buffer[4] == '#'))
  1164  0529  0020               	movlb	0	; select bank0
  1165  052A  0865               	movf	ON_OFF_BLINK@buffer,w
  1166  052B  0086               	movwf	6
  1167  052C  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1168  052D  0087               	movwf	7
  1169  052E  304F               	movlw	79
  1170  052F  0601               	xorwf	1,w
  1171  0530  1D03               	btfss	3,2
  1172  0531  2D33               	goto	u1191
  1173  0532  2D34               	goto	u1190
  1174  0533                     u1191:
  1175  0533  2D8E               	goto	l1459
  1176  0534                     u1190:
  1177  0534                     l1441:
  1178  0534  0865               	movf	ON_OFF_BLINK@buffer,w
  1179  0535  0086               	movwf	6
  1180  0536  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1181  0537  0087               	movwf	7
  1182  0538  3141               	addfsr 1,1
  1183  0539  304E               	movlw	78
  1184  053A  0601               	xorwf	1,w
  1185  053B  1D03               	btfss	3,2
  1186  053C  2D3E               	goto	u1201
  1187  053D  2D3F               	goto	u1200
  1188  053E                     u1201:
  1189  053E  2D8E               	goto	l1459
  1190  053F                     u1200:
  1191  053F                     l1443:
  1192  053F  0865               	movf	ON_OFF_BLINK@buffer,w
  1193  0540  0086               	movwf	6
  1194  0541  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1195  0542  0087               	movwf	7
  1196  0543  3142               	addfsr 1,2
  1197  0544  3030               	movlw	48
  1198  0545  0601               	xorwf	1,w
  1199  0546  1D03               	btfss	3,2
  1200  0547  2D49               	goto	u1211
  1201  0548  2D4A               	goto	u1210
  1202  0549                     u1211:
  1203  0549  2D8E               	goto	l1459
  1204  054A                     u1210:
  1205  054A                     l1445:
  1206  054A  0865               	movf	ON_OFF_BLINK@buffer,w
  1207  054B  0086               	movwf	6
  1208  054C  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1209  054D  0087               	movwf	7
  1210  054E  3143               	addfsr 1,3
  1211  054F  0801               	movf	1,w
  1212  0550  3ED0               	addlw	208
  1213  0551  00E9               	movwf	??_ON_OFF_BLINK
  1214  0552  30FF               	movlw	255
  1215  0553  1803               	skipnc
  1216  0554  3000               	movlw	0
  1217  0555  00EA               	movwf	??_ON_OFF_BLINK+1
  1218  0556  0868               	movf	ON_OFF_BLINK@i,w
  1219  0557  0669               	xorwf	??_ON_OFF_BLINK,w
  1220  0558  046A               	iorwf	??_ON_OFF_BLINK+1,w
  1221  0559  1D03               	skipz
  1222  055A  2D5C               	goto	u1221
  1223  055B  2D5D               	goto	u1220
  1224  055C                     u1221:
  1225  055C  2D8E               	goto	l1459
  1226  055D                     u1220:
  1227  055D                     l1447:
  1228  055D  0865               	movf	ON_OFF_BLINK@buffer,w
  1229  055E  0086               	movwf	6
  1230  055F  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1231  0560  0087               	movwf	7
  1232  0561  3144               	addfsr 1,4
  1233  0562  3023               	movlw	35
  1234  0563  0601               	xorwf	1,w
  1235  0564  1D03               	btfss	3,2
  1236  0565  2D67               	goto	u1231
  1237  0566  2D68               	goto	u1230
  1238  0567                     u1231:
  1239  0567  2D8E               	goto	l1459
  1240  0568                     u1230:
  1241  0568                     l1449:
  1242                           
  1243                           ;newmain.c: 89:     {;newmain.c: 90:         bitt = savee | (bitt << (i - 1));
  1244  0568  0021               	movlb	1	; select bank1
  1245  0569  085A               	movf	ON_OFF_BLINK@bitt^(0+128),w
  1246  056A  0020               	movlb	0	; select bank0
  1247  056B  00E9               	movwf	??_ON_OFF_BLINK
  1248  056C  0868               	movf	ON_OFF_BLINK@i,w
  1249  056D  3EFF               	addlw	-1
  1250  056E  0A89               	incf	9,f
  1251  056F  2D71               	goto	u1244
  1252  0570                     u1245:
  1253  0570  35E9               	lslf	??_ON_OFF_BLINK,f
  1254  0571                     u1244:
  1255  0571  0B89               	decfsz	9,f
  1256  0572  2D70               	goto	u1245
  1257  0573  0869               	movf	??_ON_OFF_BLINK,w
  1258  0574  046F               	iorwf	_savee,w
  1259  0575  00EA               	movwf	??_ON_OFF_BLINK+1
  1260  0576  086A               	movf	??_ON_OFF_BLINK+1,w
  1261  0577  0021               	movlb	1	; select bank1
  1262  0578  00DA               	movwf	ON_OFF_BLINK@bitt^(0+128)
  1263  0579                     l1451:
  1264                           
  1265                           ;newmain.c: 91:         LATC = bitt;
  1266  0579  085A               	movf	ON_OFF_BLINK@bitt^(0+128),w
  1267  057A  0022               	movlb	2	; select bank2
  1268  057B  008E               	movwf	14	;volatile
  1269  057C                     l1453:
  1270                           
  1271                           ;newmain.c: 92:         savee = bitt; savee1 = savee; savee2 = savee;
  1272  057C  0021               	movlb	1	; select bank1
  1273  057D  085A               	movf	ON_OFF_BLINK@bitt^(0+128),w
  1274  057E  0020               	movlb	0	; select bank0
  1275  057F  00E9               	movwf	??_ON_OFF_BLINK
  1276  0580  0869               	movf	??_ON_OFF_BLINK,w
  1277  0581  00EF               	movwf	_savee
  1278  0582                     l1455:
  1279  0582  086F               	movf	_savee,w
  1280  0583  00E9               	movwf	??_ON_OFF_BLINK
  1281  0584  0869               	movf	??_ON_OFF_BLINK,w
  1282  0585  0021               	movlb	1	; select bank1
  1283  0586  00DE               	movwf	_savee1^(0+128)
  1284  0587                     l1457:
  1285  0587  0020               	movlb	0	; select bank0
  1286  0588  086F               	movf	_savee,w
  1287  0589  00E9               	movwf	??_ON_OFF_BLINK
  1288  058A  0869               	movf	??_ON_OFF_BLINK,w
  1289  058B  0021               	movlb	1	; select bank1
  1290  058C  00DD               	movwf	_savee2^(0+128)
  1291                           
  1292                           ;newmain.c: 93:     }
  1293  058D  2DCC               	goto	l1469
  1294  058E                     l1459:
  1295  058E  0865               	movf	ON_OFF_BLINK@buffer,w
  1296  058F  0086               	movwf	6
  1297  0590  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1298  0591  0087               	movwf	7
  1299  0592  304F               	movlw	79
  1300  0593  0601               	xorwf	1,w
  1301  0594  1D03               	btfss	3,2
  1302  0595  2D97               	goto	u1251
  1303  0596  2D98               	goto	u1250
  1304  0597                     u1251:
  1305  0597  2DCC               	goto	l1469
  1306  0598                     u1250:
  1307  0598                     l1461:
  1308  0598  0865               	movf	ON_OFF_BLINK@buffer,w
  1309  0599  0086               	movwf	6
  1310  059A  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1311  059B  0087               	movwf	7
  1312  059C  3141               	addfsr 1,1
  1313  059D  304E               	movlw	78
  1314  059E  0601               	xorwf	1,w
  1315  059F  1D03               	btfss	3,2
  1316  05A0  2DA2               	goto	u1261
  1317  05A1  2DA3               	goto	u1260
  1318  05A2                     u1261:
  1319  05A2  2DCC               	goto	l1469
  1320  05A3                     u1260:
  1321  05A3                     l1463:
  1322  05A3  0865               	movf	ON_OFF_BLINK@buffer,w
  1323  05A4  0086               	movwf	6
  1324  05A5  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1325  05A6  0087               	movwf	7
  1326  05A7  3142               	addfsr 1,2
  1327  05A8  302A               	movlw	42
  1328  05A9  0601               	xorwf	1,w
  1329  05AA  1D03               	btfss	3,2
  1330  05AB  2DAD               	goto	u1271
  1331  05AC  2DAE               	goto	u1270
  1332  05AD                     u1271:
  1333  05AD  2DCC               	goto	l1469
  1334  05AE                     u1270:
  1335  05AE                     l1465:
  1336  05AE  0865               	movf	ON_OFF_BLINK@buffer,w
  1337  05AF  0086               	movwf	6
  1338  05B0  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1339  05B1  0087               	movwf	7
  1340  05B2  3143               	addfsr 1,3
  1341  05B3  3023               	movlw	35
  1342  05B4  0601               	xorwf	1,w
  1343  05B5  1D03               	btfss	3,2
  1344  05B6  2DB8               	goto	u1281
  1345  05B7  2DB9               	goto	u1280
  1346  05B8                     u1281:
  1347  05B8  2DCC               	goto	l1469
  1348  05B9                     u1280:
  1349  05B9                     l1467:
  1350                           
  1351                           ;newmain.c: 95:     {;newmain.c: 96:         LATC = 0xFF;
  1352  05B9  30FF               	movlw	255
  1353  05BA  0022               	movlb	2	; select bank2
  1354  05BB  008E               	movwf	14	;volatile
  1355                           
  1356                           ;newmain.c: 97:         savee = 0b11111111; savee1 = savee; savee2 = savee;
  1357  05BC  30FF               	movlw	255
  1358  05BD  0020               	movlb	0	; select bank0
  1359  05BE  00E9               	movwf	??_ON_OFF_BLINK
  1360  05BF  0869               	movf	??_ON_OFF_BLINK,w
  1361  05C0  00EF               	movwf	_savee
  1362  05C1  086F               	movf	_savee,w
  1363  05C2  00E9               	movwf	??_ON_OFF_BLINK
  1364  05C3  0869               	movf	??_ON_OFF_BLINK,w
  1365  05C4  0021               	movlb	1	; select bank1
  1366  05C5  00DE               	movwf	_savee1^(0+128)
  1367  05C6  0020               	movlb	0	; select bank0
  1368  05C7  086F               	movf	_savee,w
  1369  05C8  00E9               	movwf	??_ON_OFF_BLINK
  1370  05C9  0869               	movf	??_ON_OFF_BLINK,w
  1371  05CA  0021               	movlb	1	; select bank1
  1372  05CB  00DD               	movwf	_savee2^(0+128)
  1373  05CC                     l1469:
  1374                           
  1375                           ;newmain.c: 99:     if((buffer[0] == 'O') && (buffer[1] == 'F') && (buffer[2] == 'F') &&
      +                           (buffer[3] == '0') && ((buffer[4] - 48) == i) && (buffer[5] == '#'))
  1376  05CC  0020               	movlb	0	; select bank0
  1377  05CD  0865               	movf	ON_OFF_BLINK@buffer,w
  1378  05CE  0086               	movwf	6
  1379  05CF  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1380  05D0  0087               	movwf	7
  1381  05D1  304F               	movlw	79
  1382  05D2  0601               	xorwf	1,w
  1383  05D3  1D03               	btfss	3,2
  1384  05D4  2DD6               	goto	u1291
  1385  05D5  2DD7               	goto	u1290
  1386  05D6                     u1291:
  1387  05D6  2E4B               	goto	l1499
  1388  05D7                     u1290:
  1389  05D7                     l1471:
  1390  05D7  0865               	movf	ON_OFF_BLINK@buffer,w
  1391  05D8  0086               	movwf	6
  1392  05D9  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1393  05DA  0087               	movwf	7
  1394  05DB  3141               	addfsr 1,1
  1395  05DC  3046               	movlw	70
  1396  05DD  0601               	xorwf	1,w
  1397  05DE  1D03               	btfss	3,2
  1398  05DF  2DE1               	goto	u1301
  1399  05E0  2DE2               	goto	u1300
  1400  05E1                     u1301:
  1401  05E1  2E4B               	goto	l1499
  1402  05E2                     u1300:
  1403  05E2                     l1473:
  1404  05E2  0865               	movf	ON_OFF_BLINK@buffer,w
  1405  05E3  0086               	movwf	6
  1406  05E4  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1407  05E5  0087               	movwf	7
  1408  05E6  3142               	addfsr 1,2
  1409  05E7  3046               	movlw	70
  1410  05E8  0601               	xorwf	1,w
  1411  05E9  1D03               	btfss	3,2
  1412  05EA  2DEC               	goto	u1311
  1413  05EB  2DED               	goto	u1310
  1414  05EC                     u1311:
  1415  05EC  2E4B               	goto	l1499
  1416  05ED                     u1310:
  1417  05ED                     l1475:
  1418  05ED  0865               	movf	ON_OFF_BLINK@buffer,w
  1419  05EE  0086               	movwf	6
  1420  05EF  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1421  05F0  0087               	movwf	7
  1422  05F1  3143               	addfsr 1,3
  1423  05F2  3030               	movlw	48
  1424  05F3  0601               	xorwf	1,w
  1425  05F4  1D03               	btfss	3,2
  1426  05F5  2DF7               	goto	u1321
  1427  05F6  2DF8               	goto	u1320
  1428  05F7                     u1321:
  1429  05F7  2E4B               	goto	l1499
  1430  05F8                     u1320:
  1431  05F8                     l1477:
  1432  05F8  0865               	movf	ON_OFF_BLINK@buffer,w
  1433  05F9  0086               	movwf	6
  1434  05FA  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1435  05FB  0087               	movwf	7
  1436  05FC  3144               	addfsr 1,4
  1437  05FD  0801               	movf	1,w
  1438  05FE  3ED0               	addlw	208
  1439  05FF  00E9               	movwf	??_ON_OFF_BLINK
  1440  0600  30FF               	movlw	255
  1441  0601  1803               	skipnc
  1442  0602  3000               	movlw	0
  1443  0603  00EA               	movwf	??_ON_OFF_BLINK+1
  1444  0604  0868               	movf	ON_OFF_BLINK@i,w
  1445  0605  0669               	xorwf	??_ON_OFF_BLINK,w
  1446  0606  046A               	iorwf	??_ON_OFF_BLINK+1,w
  1447  0607  1D03               	skipz
  1448  0608  2E0A               	goto	u1331
  1449  0609  2E0B               	goto	u1330
  1450  060A                     u1331:
  1451  060A  2E4B               	goto	l1499
  1452  060B                     u1330:
  1453  060B                     l1479:
  1454  060B  0865               	movf	ON_OFF_BLINK@buffer,w
  1455  060C  0086               	movwf	6
  1456  060D  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1457  060E  0087               	movwf	7
  1458  060F  3145               	addfsr 1,5
  1459  0610  3023               	movlw	35
  1460  0611  0601               	xorwf	1,w
  1461  0612  1D03               	btfss	3,2
  1462  0613  2E15               	goto	u1341
  1463  0614  2E16               	goto	u1340
  1464  0615                     u1341:
  1465  0615  2E4B               	goto	l1499
  1466  0616                     u1340:
  1467  0616                     l1481:
  1468                           
  1469                           ;newmain.c: 100:     {;newmain.c: 102:         unsigned char cnt = 1;
  1470  0616  0021               	movlb	1	; select bank1
  1471  0617  01D7               	clrf	ON_OFF_BLINK@cnt^(0+128)
  1472  0618  0AD7               	incf	ON_OFF_BLINK@cnt^(0+128),f
  1473                           
  1474                           ;newmain.c: 103:         while(cnt < i)
  1475  0619  2E28               	goto	l103
  1476  061A                     l1483:
  1477                           
  1478                           ;newmain.c: 104:         {;newmain.c: 105:             bittt <<= 1;
  1479  061A  1003               	clrc
  1480  061B  0DD9               	rlf	ON_OFF_BLINK@bittt^(0+128),f
  1481  061C                     l1485:
  1482                           
  1483                           ;newmain.c: 106:             bittt += 1;
  1484  061C  3001               	movlw	1
  1485  061D  0020               	movlb	0	; select bank0
  1486  061E  00E9               	movwf	??_ON_OFF_BLINK
  1487  061F  0869               	movf	??_ON_OFF_BLINK,w
  1488  0620  0021               	movlb	1	; select bank1
  1489  0621  07D9               	addwf	ON_OFF_BLINK@bittt^(0+128),f
  1490  0622                     l1487:
  1491                           
  1492                           ;newmain.c: 107:             cnt++;
  1493  0622  3001               	movlw	1
  1494  0623  0020               	movlb	0	; select bank0
  1495  0624  00E9               	movwf	??_ON_OFF_BLINK
  1496  0625  0869               	movf	??_ON_OFF_BLINK,w
  1497  0626  0021               	movlb	1	; select bank1
  1498  0627  07D7               	addwf	ON_OFF_BLINK@cnt^(0+128),f
  1499  0628                     l103:	
  1500                           ;newmain.c: 108:         }
  1501                           
  1502                           
  1503                           ;newmain.c: 103:         while(cnt < i)
  1504  0628  0020               	movlb	0	; select bank0
  1505  0629  0868               	movf	ON_OFF_BLINK@i,w
  1506  062A  0021               	movlb	1	; select bank1
  1507  062B  0257               	subwf	ON_OFF_BLINK@cnt^(0+128),w
  1508  062C  1C03               	skipc
  1509  062D  2E2F               	goto	u1351
  1510  062E  2E30               	goto	u1350
  1511  062F                     u1351:
  1512  062F  2E1A               	goto	l1483
  1513  0630                     u1350:
  1514  0630                     l1489:
  1515                           
  1516                           ;newmain.c: 109:         bittt &= savee;
  1517  0630  0020               	movlb	0	; select bank0
  1518  0631  086F               	movf	_savee,w
  1519  0632  00E9               	movwf	??_ON_OFF_BLINK
  1520  0633  0869               	movf	??_ON_OFF_BLINK,w
  1521  0634  0021               	movlb	1	; select bank1
  1522  0635  05D9               	andwf	ON_OFF_BLINK@bittt^(0+128),f
  1523  0636                     l1491:
  1524                           
  1525                           ;newmain.c: 110:         LATC = bittt;
  1526  0636  0859               	movf	ON_OFF_BLINK@bittt^(0+128),w
  1527  0637  0022               	movlb	2	; select bank2
  1528  0638  008E               	movwf	14	;volatile
  1529  0639                     l1493:
  1530                           
  1531                           ;newmain.c: 111:         savee = bittt; savee1 = savee; savee2 = savee;
  1532  0639  0021               	movlb	1	; select bank1
  1533  063A  0859               	movf	ON_OFF_BLINK@bittt^(0+128),w
  1534  063B  0020               	movlb	0	; select bank0
  1535  063C  00E9               	movwf	??_ON_OFF_BLINK
  1536  063D  0869               	movf	??_ON_OFF_BLINK,w
  1537  063E  00EF               	movwf	_savee
  1538  063F                     l1495:
  1539  063F  086F               	movf	_savee,w
  1540  0640  00E9               	movwf	??_ON_OFF_BLINK
  1541  0641  0869               	movf	??_ON_OFF_BLINK,w
  1542  0642  0021               	movlb	1	; select bank1
  1543  0643  00DE               	movwf	_savee1^(0+128)
  1544  0644                     l1497:
  1545  0644  0020               	movlb	0	; select bank0
  1546  0645  086F               	movf	_savee,w
  1547  0646  00E9               	movwf	??_ON_OFF_BLINK
  1548  0647  0869               	movf	??_ON_OFF_BLINK,w
  1549  0648  0021               	movlb	1	; select bank1
  1550  0649  00DD               	movwf	_savee2^(0+128)
  1551                           
  1552                           ;newmain.c: 112:     }
  1553  064A  2E86               	goto	l1515
  1554  064B                     l1499:
  1555  064B  0865               	movf	ON_OFF_BLINK@buffer,w
  1556  064C  0086               	movwf	6
  1557  064D  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1558  064E  0087               	movwf	7
  1559  064F  304F               	movlw	79
  1560  0650  0601               	xorwf	1,w
  1561  0651  1D03               	btfss	3,2
  1562  0652  2E54               	goto	u1361
  1563  0653  2E55               	goto	u1360
  1564  0654                     u1361:
  1565  0654  2E86               	goto	l1515
  1566  0655                     u1360:
  1567  0655                     l1501:
  1568  0655  0865               	movf	ON_OFF_BLINK@buffer,w
  1569  0656  0086               	movwf	6
  1570  0657  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1571  0658  0087               	movwf	7
  1572  0659  3141               	addfsr 1,1
  1573  065A  3046               	movlw	70
  1574  065B  0601               	xorwf	1,w
  1575  065C  1D03               	btfss	3,2
  1576  065D  2E5F               	goto	u1371
  1577  065E  2E60               	goto	u1370
  1578  065F                     u1371:
  1579  065F  2E86               	goto	l1515
  1580  0660                     u1370:
  1581  0660                     l1503:
  1582  0660  0865               	movf	ON_OFF_BLINK@buffer,w
  1583  0661  0086               	movwf	6
  1584  0662  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1585  0663  0087               	movwf	7
  1586  0664  3142               	addfsr 1,2
  1587  0665  3046               	movlw	70
  1588  0666  0601               	xorwf	1,w
  1589  0667  1D03               	btfss	3,2
  1590  0668  2E6A               	goto	u1381
  1591  0669  2E6B               	goto	u1380
  1592  066A                     u1381:
  1593  066A  2E86               	goto	l1515
  1594  066B                     u1380:
  1595  066B                     l1505:
  1596  066B  0865               	movf	ON_OFF_BLINK@buffer,w
  1597  066C  0086               	movwf	6
  1598  066D  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1599  066E  0087               	movwf	7
  1600  066F  3143               	addfsr 1,3
  1601  0670  302A               	movlw	42
  1602  0671  0601               	xorwf	1,w
  1603  0672  1D03               	btfss	3,2
  1604  0673  2E75               	goto	u1391
  1605  0674  2E76               	goto	u1390
  1606  0675                     u1391:
  1607  0675  2E86               	goto	l1515
  1608  0676                     u1390:
  1609  0676                     l1507:
  1610  0676  0865               	movf	ON_OFF_BLINK@buffer,w
  1611  0677  0086               	movwf	6
  1612  0678  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1613  0679  0087               	movwf	7
  1614  067A  3144               	addfsr 1,4
  1615  067B  3023               	movlw	35
  1616  067C  0601               	xorwf	1,w
  1617  067D  1D03               	btfss	3,2
  1618  067E  2E80               	goto	u1401
  1619  067F  2E81               	goto	u1400
  1620  0680                     u1401:
  1621  0680  2E86               	goto	l1515
  1622  0681                     u1400:
  1623  0681                     l1509:
  1624                           
  1625                           ;newmain.c: 114:     {;newmain.c: 115:         LATC = 0;
  1626  0681  0022               	movlb	2	; select bank2
  1627  0682  018E               	clrf	14	;volatile
  1628                           
  1629                           ;newmain.c: 116:         savee = 0; savee1 = savee; savee2 = savee;
  1630  0683  0020               	movlb	0	; select bank0
  1631  0684  01EF               	clrf	_savee
  1632  0685  2E3F               	goto	l1495
  1633  0686                     l1515:
  1634                           
  1635                           ;newmain.c: 118:     unsigned char k = 0b00000001;
  1636  0686  0021               	movlb	1	; select bank1
  1637  0687  01DC               	clrf	ON_OFF_BLINK@k^(0+128)
  1638  0688  0ADC               	incf	ON_OFF_BLINK@k^(0+128),f
  1639  0689                     l1517:
  1640                           
  1641                           ;newmain.c: 119:     unsigned char j = 0b11111110;
  1642  0689  30FE               	movlw	254
  1643  068A  0020               	movlb	0	; select bank0
  1644  068B  00E9               	movwf	??_ON_OFF_BLINK
  1645  068C  0869               	movf	??_ON_OFF_BLINK,w
  1646  068D  0021               	movlb	1	; select bank1
  1647  068E  00DB               	movwf	ON_OFF_BLINK@j^(0+128)
  1648  068F                     l1519:
  1649  068F                     l1521:
  1650                           
  1651                           ;newmain.c: 121:     if((buffer[0] == 'B') && (buffer[1] == 'L') && (buffer[2] == 'I') &
      +                          & (buffer[3] == 'N') && (buffer[4] == 'K') && (buffer[5] == '0') && ((buffer[6] - 48) ==
      +                           i) && (buffer[7] == '#'))
  1652  068F  0020               	movlb	0	; select bank0
  1653  0690  0865               	movf	ON_OFF_BLINK@buffer,w
  1654  0691  0086               	movwf	6
  1655  0692  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1656  0693  0087               	movwf	7
  1657  0694  3042               	movlw	66
  1658  0695  0601               	xorwf	1,w
  1659  0696  1D03               	btfss	3,2
  1660  0697  2E99               	goto	u1411
  1661  0698  2E9A               	goto	u1410
  1662  0699                     u1411:
  1663  0699  2F63               	goto	l1571
  1664  069A                     u1410:
  1665  069A                     l1523:
  1666  069A  0865               	movf	ON_OFF_BLINK@buffer,w
  1667  069B  0086               	movwf	6
  1668  069C  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1669  069D  0087               	movwf	7
  1670  069E  3141               	addfsr 1,1
  1671  069F  304C               	movlw	76
  1672  06A0  0601               	xorwf	1,w
  1673  06A1  1D03               	btfss	3,2
  1674  06A2  2EA4               	goto	u1421
  1675  06A3  2EA5               	goto	u1420
  1676  06A4                     u1421:
  1677  06A4  2F63               	goto	l1571
  1678  06A5                     u1420:
  1679  06A5                     l1525:
  1680  06A5  0865               	movf	ON_OFF_BLINK@buffer,w
  1681  06A6  0086               	movwf	6
  1682  06A7  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1683  06A8  0087               	movwf	7
  1684  06A9  3142               	addfsr 1,2
  1685  06AA  3049               	movlw	73
  1686  06AB  0601               	xorwf	1,w
  1687  06AC  1D03               	btfss	3,2
  1688  06AD  2EAF               	goto	u1431
  1689  06AE  2EB0               	goto	u1430
  1690  06AF                     u1431:
  1691  06AF  2F63               	goto	l1571
  1692  06B0                     u1430:
  1693  06B0                     l1527:
  1694  06B0  0865               	movf	ON_OFF_BLINK@buffer,w
  1695  06B1  0086               	movwf	6
  1696  06B2  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1697  06B3  0087               	movwf	7
  1698  06B4  3143               	addfsr 1,3
  1699  06B5  304E               	movlw	78
  1700  06B6  0601               	xorwf	1,w
  1701  06B7  1D03               	btfss	3,2
  1702  06B8  2EBA               	goto	u1441
  1703  06B9  2EBB               	goto	u1440
  1704  06BA                     u1441:
  1705  06BA  2F63               	goto	l1571
  1706  06BB                     u1440:
  1707  06BB                     l1529:
  1708  06BB  0865               	movf	ON_OFF_BLINK@buffer,w
  1709  06BC  0086               	movwf	6
  1710  06BD  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1711  06BE  0087               	movwf	7
  1712  06BF  3144               	addfsr 1,4
  1713  06C0  304B               	movlw	75
  1714  06C1  0601               	xorwf	1,w
  1715  06C2  1D03               	btfss	3,2
  1716  06C3  2EC5               	goto	u1451
  1717  06C4  2EC6               	goto	u1450
  1718  06C5                     u1451:
  1719  06C5  2F63               	goto	l1571
  1720  06C6                     u1450:
  1721  06C6                     l1531:
  1722  06C6  0865               	movf	ON_OFF_BLINK@buffer,w
  1723  06C7  0086               	movwf	6
  1724  06C8  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1725  06C9  0087               	movwf	7
  1726  06CA  3145               	addfsr 1,5
  1727  06CB  3030               	movlw	48
  1728  06CC  0601               	xorwf	1,w
  1729  06CD  1D03               	btfss	3,2
  1730  06CE  2ED0               	goto	u1461
  1731  06CF  2ED1               	goto	u1460
  1732  06D0                     u1461:
  1733  06D0  2F63               	goto	l1571
  1734  06D1                     u1460:
  1735  06D1                     l1533:
  1736  06D1  0865               	movf	ON_OFF_BLINK@buffer,w
  1737  06D2  0086               	movwf	6
  1738  06D3  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1739  06D4  0087               	movwf	7
  1740  06D5  3146               	addfsr 1,6
  1741  06D6  0801               	movf	1,w
  1742  06D7  3ED0               	addlw	208
  1743  06D8  00E9               	movwf	??_ON_OFF_BLINK
  1744  06D9  30FF               	movlw	255
  1745  06DA  1803               	skipnc
  1746  06DB  3000               	movlw	0
  1747  06DC  00EA               	movwf	??_ON_OFF_BLINK+1
  1748  06DD  0868               	movf	ON_OFF_BLINK@i,w
  1749  06DE  0669               	xorwf	??_ON_OFF_BLINK,w
  1750  06DF  046A               	iorwf	??_ON_OFF_BLINK+1,w
  1751  06E0  1D03               	skipz
  1752  06E1  2EE3               	goto	u1471
  1753  06E2  2EE4               	goto	u1470
  1754  06E3                     u1471:
  1755  06E3  2F63               	goto	l1571
  1756  06E4                     u1470:
  1757  06E4                     l1535:
  1758  06E4  0865               	movf	ON_OFF_BLINK@buffer,w
  1759  06E5  0086               	movwf	6
  1760  06E6  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1761  06E7  0087               	movwf	7
  1762  06E8  3147               	addfsr 1,7
  1763  06E9  3023               	movlw	35
  1764  06EA  0601               	xorwf	1,w
  1765  06EB  1D03               	btfss	3,2
  1766  06EC  2EEE               	goto	u1481
  1767  06ED  2EEF               	goto	u1480
  1768  06EE                     u1481:
  1769  06EE  2F63               	goto	l1571
  1770  06EF                     u1480:
  1771  06EF                     l1537:
  1772                           
  1773                           ;newmain.c: 122:     {;newmain.c: 123:         k = savee1 | (k << (i - 1));
  1774  06EF  0021               	movlb	1	; select bank1
  1775  06F0  085C               	movf	ON_OFF_BLINK@k^(0+128),w
  1776  06F1  0020               	movlb	0	; select bank0
  1777  06F2  00E9               	movwf	??_ON_OFF_BLINK
  1778  06F3  0868               	movf	ON_OFF_BLINK@i,w
  1779  06F4  3EFF               	addlw	-1
  1780  06F5  0A89               	incf	9,f
  1781  06F6  2EF8               	goto	u1494
  1782  06F7                     u1495:
  1783  06F7  35E9               	lslf	??_ON_OFF_BLINK,f
  1784  06F8                     u1494:
  1785  06F8  0B89               	decfsz	9,f
  1786  06F9  2EF7               	goto	u1495
  1787  06FA  0869               	movf	??_ON_OFF_BLINK,w
  1788  06FB  0021               	movlb	1	; select bank1
  1789  06FC  045E               	iorwf	_savee1^(0+128),w
  1790  06FD  0020               	movlb	0	; select bank0
  1791  06FE  00EA               	movwf	??_ON_OFF_BLINK+1
  1792  06FF  086A               	movf	??_ON_OFF_BLINK+1,w
  1793  0700  0021               	movlb	1	; select bank1
  1794  0701  00DC               	movwf	ON_OFF_BLINK@k^(0+128)
  1795  0702                     l1539:
  1796                           
  1797                           ;newmain.c: 124:         LATC = k;
  1798  0702  085C               	movf	ON_OFF_BLINK@k^(0+128),w
  1799  0703  0022               	movlb	2	; select bank2
  1800  0704  008E               	movwf	14	;volatile
  1801  0705                     l1541:
  1802                           
  1803                           ;newmain.c: 125:         savee1 = k;
  1804  0705  0021               	movlb	1	; select bank1
  1805  0706  085C               	movf	ON_OFF_BLINK@k^(0+128),w
  1806  0707  0020               	movlb	0	; select bank0
  1807  0708  00E9               	movwf	??_ON_OFF_BLINK
  1808  0709  0869               	movf	??_ON_OFF_BLINK,w
  1809  070A  0021               	movlb	1	; select bank1
  1810  070B  00DE               	movwf	_savee1^(0+128)
  1811  070C                     l1543:
  1812                           
  1813                           ;newmain.c: 126:         unsigned char cnt = 1;
  1814  070C  01D8               	clrf	ON_OFF_BLINK@cnt_141^(0+128)
  1815  070D  0AD8               	incf	ON_OFF_BLINK@cnt_141^(0+128),f
  1816                           
  1817                           ;newmain.c: 127:         while(cnt < i)
  1818  070E  2F1D               	goto	l109
  1819  070F                     l1545:
  1820                           
  1821                           ;newmain.c: 128:         {;newmain.c: 129:             j <<= 1;
  1822  070F  1003               	clrc
  1823  0710  0DDB               	rlf	ON_OFF_BLINK@j^(0+128),f
  1824  0711                     l1547:
  1825                           
  1826                           ;newmain.c: 130:             j += 1;
  1827  0711  3001               	movlw	1
  1828  0712  0020               	movlb	0	; select bank0
  1829  0713  00E9               	movwf	??_ON_OFF_BLINK
  1830  0714  0869               	movf	??_ON_OFF_BLINK,w
  1831  0715  0021               	movlb	1	; select bank1
  1832  0716  07DB               	addwf	ON_OFF_BLINK@j^(0+128),f
  1833  0717                     l1549:
  1834                           
  1835                           ;newmain.c: 131:             cnt++;
  1836  0717  3001               	movlw	1
  1837  0718  0020               	movlb	0	; select bank0
  1838  0719  00E9               	movwf	??_ON_OFF_BLINK
  1839  071A  0869               	movf	??_ON_OFF_BLINK,w
  1840  071B  0021               	movlb	1	; select bank1
  1841  071C  07D8               	addwf	ON_OFF_BLINK@cnt_141^(0+128),f
  1842  071D                     l109:	
  1843                           ;newmain.c: 132:         }
  1844                           
  1845                           
  1846                           ;newmain.c: 127:         while(cnt < i)
  1847  071D  0020               	movlb	0	; select bank0
  1848  071E  0868               	movf	ON_OFF_BLINK@i,w
  1849  071F  0021               	movlb	1	; select bank1
  1850  0720  0258               	subwf	ON_OFF_BLINK@cnt_141^(0+128),w
  1851  0721  1C03               	skipc
  1852  0722  2F24               	goto	u1501
  1853  0723  2F25               	goto	u1500
  1854  0724                     u1501:
  1855  0724  2F0F               	goto	l1545
  1856  0725                     u1500:
  1857  0725                     l1551:
  1858                           
  1859                           ;newmain.c: 133:         j &= savee2; LATC = j;
  1860  0725  085D               	movf	_savee2^(0+128),w
  1861  0726  0020               	movlb	0	; select bank0
  1862  0727  00E9               	movwf	??_ON_OFF_BLINK
  1863  0728  0869               	movf	??_ON_OFF_BLINK,w
  1864  0729  0021               	movlb	1	; select bank1
  1865  072A  05DB               	andwf	ON_OFF_BLINK@j^(0+128),f
  1866  072B                     l1553:
  1867  072B  085B               	movf	ON_OFF_BLINK@j^(0+128),w
  1868  072C  0022               	movlb	2	; select bank2
  1869  072D  008E               	movwf	14	;volatile
  1870  072E                     l1555:
  1871                           
  1872                           ;newmain.c: 134:         savee2 = j;
  1873  072E  0021               	movlb	1	; select bank1
  1874  072F  085B               	movf	ON_OFF_BLINK@j^(0+128),w
  1875  0730  0020               	movlb	0	; select bank0
  1876  0731  00E9               	movwf	??_ON_OFF_BLINK
  1877  0732  0869               	movf	??_ON_OFF_BLINK,w
  1878  0733  0021               	movlb	1	; select bank1
  1879  0734  00DD               	movwf	_savee2^(0+128)
  1880  0735                     l1557:
  1881                           
  1882                           ;newmain.c: 136:         {;newmain.c: 137:             LATC = k;
  1883  0735  0021               	movlb	1	; select bank1
  1884  0736  085C               	movf	ON_OFF_BLINK@k^(0+128),w
  1885  0737  0022               	movlb	2	; select bank2
  1886  0738  008E               	movwf	14	;volatile
  1887  0739                     l1559:
  1888                           
  1889                           ;newmain.c: 138:             _delay((unsigned long)((500)*(8000000/4000.0))); if(RCIF) b
      +                          reak;
  1890  0739  3006               	movlw	6
  1891  073A  0020               	movlb	0	; select bank0
  1892  073B  00EA               	movwf	??_ON_OFF_BLINK+1
  1893  073C  3013               	movlw	19
  1894  073D  00E9               	movwf	??_ON_OFF_BLINK
  1895  073E  30AD               	movlw	173
  1896  073F                     u1697:
  1897  073F  0B89               	decfsz	9,f
  1898  0740  2F3F               	goto	u1697
  1899  0741  0BE9               	decfsz	??_ON_OFF_BLINK,f
  1900  0742  2F3F               	goto	u1697
  1901  0743  0BEA               	decfsz	??_ON_OFF_BLINK+1,f
  1902  0744  2F3F               	goto	u1697
  1903  0745  3200               	nop2
  1904  0746                     l1561:
  1905  0746  0020               	movlb	0	; select bank0
  1906  0747  1E91               	btfss	17,5	;volatile
  1907  0748  2F4A               	goto	u1511
  1908  0749  2F4B               	goto	u1510
  1909  074A                     u1511:
  1910  074A  2F4C               	goto	l1565
  1911  074B                     u1510:
  1912  074B  2FE4               	goto	l124
  1913  074C                     l1565:
  1914                           
  1915                           ;newmain.c: 139:             LATC = j;
  1916  074C  0021               	movlb	1	; select bank1
  1917  074D  085B               	movf	ON_OFF_BLINK@j^(0+128),w
  1918  074E  0022               	movlb	2	; select bank2
  1919  074F  008E               	movwf	14	;volatile
  1920                           
  1921                           ;newmain.c: 140:             _delay((unsigned long)((500)*(8000000/4000.0))); if(RCIF) b
      +                          reak;
  1922  0750  3006               	movlw	6
  1923  0751  0020               	movlb	0	; select bank0
  1924  0752  00EA               	movwf	??_ON_OFF_BLINK+1
  1925  0753  3013               	movlw	19
  1926  0754  00E9               	movwf	??_ON_OFF_BLINK
  1927  0755  30AD               	movlw	173
  1928  0756                     u1707:
  1929  0756  0B89               	decfsz	9,f
  1930  0757  2F56               	goto	u1707
  1931  0758  0BE9               	decfsz	??_ON_OFF_BLINK,f
  1932  0759  2F56               	goto	u1707
  1933  075A  0BEA               	decfsz	??_ON_OFF_BLINK+1,f
  1934  075B  2F56               	goto	u1707
  1935  075C  3200               	nop2
  1936  075D                     l1567:
  1937  075D  0020               	movlb	0	; select bank0
  1938  075E  1E91               	btfss	17,5	;volatile
  1939  075F  2F61               	goto	u1521
  1940  0760  2F62               	goto	u1520
  1941  0761                     u1521:
  1942  0761  2F35               	goto	l1557
  1943  0762                     u1520:
  1944  0762  2FE4               	goto	l124
  1945  0763                     l1571:
  1946  0763  0865               	movf	ON_OFF_BLINK@buffer,w
  1947  0764  0086               	movwf	6
  1948  0765  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1949  0766  0087               	movwf	7
  1950  0767  3042               	movlw	66
  1951  0768  0601               	xorwf	1,w
  1952  0769  1D03               	btfss	3,2
  1953  076A  2F6C               	goto	u1531
  1954  076B  2F6D               	goto	u1530
  1955  076C                     u1531:
  1956  076C  2FE4               	goto	l124
  1957  076D                     u1530:
  1958  076D                     l1573:
  1959  076D  0865               	movf	ON_OFF_BLINK@buffer,w
  1960  076E  0086               	movwf	6
  1961  076F  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1962  0770  0087               	movwf	7
  1963  0771  3141               	addfsr 1,1
  1964  0772  304C               	movlw	76
  1965  0773  0601               	xorwf	1,w
  1966  0774  1D03               	btfss	3,2
  1967  0775  2F77               	goto	u1541
  1968  0776  2F78               	goto	u1540
  1969  0777                     u1541:
  1970  0777  2FE4               	goto	l124
  1971  0778                     u1540:
  1972  0778                     l1575:
  1973  0778  0865               	movf	ON_OFF_BLINK@buffer,w
  1974  0779  0086               	movwf	6
  1975  077A  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1976  077B  0087               	movwf	7
  1977  077C  3142               	addfsr 1,2
  1978  077D  3049               	movlw	73
  1979  077E  0601               	xorwf	1,w
  1980  077F  1D03               	btfss	3,2
  1981  0780  2F82               	goto	u1551
  1982  0781  2F83               	goto	u1550
  1983  0782                     u1551:
  1984  0782  2FE4               	goto	l124
  1985  0783                     u1550:
  1986  0783                     l1577:
  1987  0783  0865               	movf	ON_OFF_BLINK@buffer,w
  1988  0784  0086               	movwf	6
  1989  0785  0866               	movf	ON_OFF_BLINK@buffer+1,w
  1990  0786  0087               	movwf	7
  1991  0787  3143               	addfsr 1,3
  1992  0788  304E               	movlw	78
  1993  0789  0601               	xorwf	1,w
  1994  078A  1D03               	btfss	3,2
  1995  078B  2F8D               	goto	u1561
  1996  078C  2F8E               	goto	u1560
  1997  078D                     u1561:
  1998  078D  2FE4               	goto	l124
  1999  078E                     u1560:
  2000  078E                     l1579:
  2001  078E  0865               	movf	ON_OFF_BLINK@buffer,w
  2002  078F  0086               	movwf	6
  2003  0790  0866               	movf	ON_OFF_BLINK@buffer+1,w
  2004  0791  0087               	movwf	7
  2005  0792  3144               	addfsr 1,4
  2006  0793  304B               	movlw	75
  2007  0794  0601               	xorwf	1,w
  2008  0795  1D03               	btfss	3,2
  2009  0796  2F98               	goto	u1571
  2010  0797  2F99               	goto	u1570
  2011  0798                     u1571:
  2012  0798  2FE4               	goto	l124
  2013  0799                     u1570:
  2014  0799                     l1581:
  2015  0799  0865               	movf	ON_OFF_BLINK@buffer,w
  2016  079A  0086               	movwf	6
  2017  079B  0866               	movf	ON_OFF_BLINK@buffer+1,w
  2018  079C  0087               	movwf	7
  2019  079D  3145               	addfsr 1,5
  2020  079E  302A               	movlw	42
  2021  079F  0601               	xorwf	1,w
  2022  07A0  1D03               	btfss	3,2
  2023  07A1  2FA3               	goto	u1581
  2024  07A2  2FA4               	goto	u1580
  2025  07A3                     u1581:
  2026  07A3  2FE4               	goto	l124
  2027  07A4                     u1580:
  2028  07A4                     l1583:
  2029  07A4  0865               	movf	ON_OFF_BLINK@buffer,w
  2030  07A5  0086               	movwf	6
  2031  07A6  0866               	movf	ON_OFF_BLINK@buffer+1,w
  2032  07A7  0087               	movwf	7
  2033  07A8  3146               	addfsr 1,6
  2034  07A9  3023               	movlw	35
  2035  07AA  0601               	xorwf	1,w
  2036  07AB  1D03               	btfss	3,2
  2037  07AC  2FAE               	goto	u1591
  2038  07AD  2FAF               	goto	u1590
  2039  07AE                     u1591:
  2040  07AE  2FE4               	goto	l124
  2041  07AF                     u1590:
  2042  07AF                     l1585:
  2043                           
  2044                           ;newmain.c: 144:     {;newmain.c: 145:         savee1 = 0; savee2 = 0xFF;
  2045  07AF  0021               	movlb	1	; select bank1
  2046  07B0  01DE               	clrf	_savee1^(0+128)
  2047  07B1                     l1587:
  2048  07B1  30FF               	movlw	255
  2049  07B2  0020               	movlb	0	; select bank0
  2050  07B3  00E9               	movwf	??_ON_OFF_BLINK
  2051  07B4  0869               	movf	??_ON_OFF_BLINK,w
  2052  07B5  0021               	movlb	1	; select bank1
  2053  07B6  00DD               	movwf	_savee2^(0+128)
  2054  07B7                     l1589:
  2055                           
  2056                           ;newmain.c: 147:         {;newmain.c: 148:             LATC = savee1;
  2057  07B7  0021               	movlb	1	; select bank1
  2058  07B8  085E               	movf	_savee1^(0+128),w
  2059  07B9  0022               	movlb	2	; select bank2
  2060  07BA  008E               	movwf	14	;volatile
  2061  07BB                     l1591:
  2062                           
  2063                           ;newmain.c: 149:             _delay((unsigned long)((500)*(8000000/4000.0))); if(RCIF) b
      +                          reak;
  2064  07BB  3006               	movlw	6
  2065  07BC  0020               	movlb	0	; select bank0
  2066  07BD  00EA               	movwf	??_ON_OFF_BLINK+1
  2067  07BE  3013               	movlw	19
  2068  07BF  00E9               	movwf	??_ON_OFF_BLINK
  2069  07C0  30AD               	movlw	173
  2070  07C1                     u1717:
  2071  07C1  0B89               	decfsz	9,f
  2072  07C2  2FC1               	goto	u1717
  2073  07C3  0BE9               	decfsz	??_ON_OFF_BLINK,f
  2074  07C4  2FC1               	goto	u1717
  2075  07C5  0BEA               	decfsz	??_ON_OFF_BLINK+1,f
  2076  07C6  2FC1               	goto	u1717
  2077  07C7  3200               	nop2
  2078  07C8                     l1593:
  2079  07C8  0020               	movlb	0	; select bank0
  2080  07C9  1E91               	btfss	17,5	;volatile
  2081  07CA  2FCC               	goto	u1601
  2082  07CB  2FCD               	goto	u1600
  2083  07CC                     u1601:
  2084  07CC  2FCE               	goto	l1597
  2085  07CD                     u1600:
  2086  07CD  2FE4               	goto	l124
  2087  07CE                     l1597:
  2088                           
  2089                           ;newmain.c: 150:             LATC = savee2;
  2090  07CE  0021               	movlb	1	; select bank1
  2091  07CF  085D               	movf	_savee2^(0+128),w
  2092  07D0  0022               	movlb	2	; select bank2
  2093  07D1  008E               	movwf	14	;volatile
  2094                           
  2095                           ;newmain.c: 151:             _delay((unsigned long)((500)*(8000000/4000.0))); if(RCIF) b
      +                          reak;
  2096  07D2  3006               	movlw	6
  2097  07D3  0020               	movlb	0	; select bank0
  2098  07D4  00EA               	movwf	??_ON_OFF_BLINK+1
  2099  07D5  3013               	movlw	19
  2100  07D6  00E9               	movwf	??_ON_OFF_BLINK
  2101  07D7  30AD               	movlw	173
  2102  07D8                     u1727:
  2103  07D8  0B89               	decfsz	9,f
  2104  07D9  2FD8               	goto	u1727
  2105  07DA  0BE9               	decfsz	??_ON_OFF_BLINK,f
  2106  07DB  2FD8               	goto	u1727
  2107  07DC  0BEA               	decfsz	??_ON_OFF_BLINK+1,f
  2108  07DD  2FD8               	goto	u1727
  2109  07DE  3200               	nop2
  2110  07DF                     l1599:
  2111  07DF  0020               	movlb	0	; select bank0
  2112  07E0  1E91               	btfss	17,5	;volatile
  2113  07E1  2FE3               	goto	u1611
  2114  07E2  2FE4               	goto	u1610
  2115  07E3                     u1611:
  2116  07E3  2FB7               	goto	l1589
  2117  07E4                     u1610:
  2118  07E4                     l124:
  2119  07E4  0008               	return
  2120  07E5                     __end_of_ON_OFF_BLINK:
  2121                           
  2122                           	psect	text4
  2123  00C6                     __ptext4:	
  2124 ;; *************** function _sprintf *****************
  2125 ;; Defined at:
  2126 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  s               1    wreg     PTR unsigned char 
  2129 ;;		 -> buffer1(1), 
  2130 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  2131 ;;		 -> STR_1(3), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  s               1    1[BANK1 ] PTR unsigned char 
  2134 ;;		 -> buffer1(1), 
  2135 ;;  f              10    2[BANK1 ] struct _IO_FILE
  2136 ;;  ret             2    0        int 
  2137 ;;  ap              1    0[BANK1 ] PTR void [1]
  2138 ;;		 -> ?_sprintf(2), 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2   64[BANK0 ] int 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2148 ;;      Params:         0       4       0       0       0       0       0       0
  2149 ;;      Locals:         0       0      12       0       0       0       0       0
  2150 ;;      Temps:          0       1       0       0       0       0       0       0
  2151 ;;      Totals:         0       5      12       0       0       0       0       0
  2152 ;;Total ram usage:       17 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 8
  2155 ;; This function calls:
  2156 ;;		_vfprintf
  2157 ;; This function is called by:
  2158 ;;		_ON_OFF_BLINK
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162  00C6                     _sprintf:	
  2163                           ;psect for function _sprintf
  2164                           
  2165                           
  2166                           ;incstack = 0
  2167                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2168                           ;sprintf@s stored from wreg
  2169  00C6  0021               	movlb	1	; select bank1
  2170  00C7  00CC               	movwf	sprintf@s^(0+128)
  2171  00C8                     l1395:
  2172  00C8  3062               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2173  00C9  0020               	movlb	0	; select bank0
  2174  00CA  00E4               	movwf	??_sprintf
  2175  00CB  0864               	movf	??_sprintf,w
  2176  00CC  0021               	movlb	1	; select bank1
  2177  00CD  00CB               	movwf	sprintf@ap^(0+128)
  2178  00CE  084C               	movf	sprintf@s^(0+128),w
  2179  00CF  0020               	movlb	0	; select bank0
  2180  00D0  00E4               	movwf	??_sprintf
  2181  00D1  0864               	movf	??_sprintf,w
  2182  00D2  0021               	movlb	1	; select bank1
  2183  00D3  00CD               	movwf	sprintf@f^(0+128)
  2184  00D4                     l1397:
  2185  00D4  01CF               	clrf	(sprintf@f^(0+128)+2)
  2186  00D5  01D0               	clrf	((sprintf@f+1)^(0+128)+2)
  2187  00D6                     l1399:
  2188  00D6  01D5               	clrf	(sprintf@f^(0+128)+8)
  2189  00D7  01D6               	clrf	((sprintf@f+1)^(0+128)+8)
  2190  00D8                     l1401:
  2191  00D8  0020               	movlb	0	; select bank0
  2192  00D9  0861               	movf	sprintf@fmt+1,w
  2193  00DA  00D9               	movwf	vfprintf@fmt+1
  2194  00DB  0860               	movf	sprintf@fmt,w
  2195  00DC  00D8               	movwf	vfprintf@fmt
  2196  00DD  30CB               	movlw	(low (sprintf@ap| 0))& (0+255)
  2197  00DE  00E4               	movwf	??_sprintf
  2198  00DF  0864               	movf	??_sprintf,w
  2199  00E0  00DA               	movwf	vfprintf@ap
  2200  00E1  30CD               	movlw	(low (sprintf@f| 0))& (0+255)
  2201  00E2  3180  20EF  3180   	fcall	_vfprintf
  2202  00E5                     l1403:
  2203  00E5  0021               	movlb	1	; select bank1
  2204  00E6  084F               	movf	(sprintf@f^(0+128)+2),w
  2205  00E7  074C               	addwf	sprintf@s^(0+128),w
  2206  00E8  0020               	movlb	0	; select bank0
  2207  00E9  00E4               	movwf	??_sprintf
  2208  00EA  0864               	movf	??_sprintf,w
  2209  00EB  0086               	movwf	6
  2210  00EC  0187               	clrf	7
  2211  00ED  0181               	clrf	1
  2212  00EE                     l674:
  2213  00EE  0008               	return
  2214  00EF                     __end_of_sprintf:
  2215                           
  2216                           	psect	text5
  2217  00EF                     __ptext5:	
  2218 ;; *************** function _vfprintf *****************
  2219 ;; Defined at:
  2220 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  fp              1    wreg     PTR struct _IO_FILE
  2223 ;;		 -> sprintf@f(10), 
  2224 ;;  fmt             2   56[BANK0 ] PTR const unsigned char 
  2225 ;;		 -> STR_1(3), 
  2226 ;;  ap              1   58[BANK0 ] PTR PTR void 
  2227 ;;		 -> sprintf@ap(1), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  2230 ;;		 -> sprintf@f(10), 
  2231 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  2232 ;;		 -> STR_1(3), 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  2   56[BANK0 ] int 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2242 ;;      Params:         0       3       0       0       0       0       0       0
  2243 ;;      Locals:         0       3       0       0       0       0       0       0
  2244 ;;      Temps:          0       2       0       0       0       0       0       0
  2245 ;;      Totals:         0       8       0       0       0       0       0       0
  2246 ;;Total ram usage:        8 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 7
  2249 ;; This function calls:
  2250 ;;		_vfpfcnvrt
  2251 ;; This function is called by:
  2252 ;;		_sprintf
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256  00EF                     _vfprintf:	
  2257                           ;psect for function _vfprintf
  2258                           
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2262                           ;vfprintf@fp stored from wreg
  2263  00EF  0020               	movlb	0	; select bank0
  2264  00F0  00DD               	movwf	vfprintf@fp
  2265  00F1                     l1383:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2268  00F1  0859               	movf	vfprintf@fmt+1,w
  2269  00F2  00DF               	movwf	vfprintf@cfmt+1
  2270  00F3  0858               	movf	vfprintf@fmt,w
  2271  00F4  00DE               	movwf	vfprintf@cfmt
  2272  00F5                     l1385:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2275  00F5  0021               	movlb	1	; select bank1
  2276  00F6  01A0               	clrf	_nout^(0+128)
  2277  00F7  01A1               	clrf	(_nout+1)^(0+128)
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2280  00F8  290D               	goto	l1389
  2281  00F9                     l1387:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2284  00F9  305E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2285  00FA  00DB               	movwf	??_vfprintf
  2286  00FB  085B               	movf	??_vfprintf,w
  2287  00FC  00C8               	movwf	vfpfcnvrt@fmt
  2288  00FD  085A               	movf	vfprintf@ap,w
  2289  00FE  00DC               	movwf	??_vfprintf+1
  2290  00FF  085C               	movf	??_vfprintf+1,w
  2291  0100  00C9               	movwf	vfpfcnvrt@ap
  2292  0101  085D               	movf	vfprintf@fp,w
  2293  0102  3183  235F  3180   	fcall	_vfpfcnvrt
  2294  0105  0020               	movlb	0	; select bank0
  2295  0106  0848               	movf	?_vfpfcnvrt,w
  2296  0107  0021               	movlb	1	; select bank1
  2297  0108  07A0               	addwf	_nout^(0+128),f
  2298  0109  0020               	movlb	0	; select bank0
  2299  010A  0849               	movf	?_vfpfcnvrt+1,w
  2300  010B  0021               	movlb	1	; select bank1
  2301  010C  3DA1               	addwfc	(_nout+1)^(0+128),f
  2302  010D                     l1389:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2305  010D  0020               	movlb	0	; select bank0
  2306  010E  085E               	movf	vfprintf@cfmt,w
  2307  010F  0084               	movwf	4
  2308  0110  085F               	movf	vfprintf@cfmt+1,w
  2309  0111  0085               	movwf	5
  2310  0112  0012               	moviw fsr0++
  2311  0113  1D03               	btfss	3,2
  2312  0114  2916               	goto	u1161
  2313  0115  2917               	goto	u1160
  2314  0116                     u1161:
  2315  0116  28F9               	goto	l1387
  2316  0117                     u1160:
  2317  0117                     l1391:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2320  0117  0021               	movlb	1	; select bank1
  2321  0118  0821               	movf	(_nout+1)^(0+128),w
  2322  0119  0020               	movlb	0	; select bank0
  2323  011A  00D9               	movwf	?_vfprintf+1
  2324  011B  0021               	movlb	1	; select bank1
  2325  011C  0820               	movf	_nout^(0+128),w
  2326  011D  0020               	movlb	0	; select bank0
  2327  011E  00D8               	movwf	?_vfprintf
  2328  011F                     l731:
  2329  011F  0008               	return
  2330  0120                     __end_of_vfprintf:
  2331                           
  2332                           	psect	text6
  2333  035F                     __ptext6:	
  2334 ;; *************** function _vfpfcnvrt *****************
  2335 ;; Defined at:
  2336 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  fp              1    wreg     PTR struct _IO_FILE
  2339 ;;		 -> sprintf@f(10), 
  2340 ;;  fmt             1   40[BANK0 ] PTR PTR unsigned char 
  2341 ;;		 -> vfprintf@cfmt(2), 
  2342 ;;  ap              1   41[BANK0 ] PTR PTR void 
  2343 ;;		 -> sprintf@ap(1), 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
  2346 ;;		 -> sprintf@f(10), 
  2347 ;;  llu             8   47[BANK0 ] unsigned long long 
  2348 ;;  ll              8    0        long long 
  2349 ;;  f               4    0        long long 
  2350 ;;  ct              3    0        unsigned char [3]
  2351 ;;  vp              2    0        PTR void 
  2352 ;;  i               2    0        int 
  2353 ;;  done            2    0        int 
  2354 ;;  cp              2    0        PTR unsigned char 
  2355 ;;  c               1    0        unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2   40[BANK0 ] int 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2365 ;;      Params:         0       2       0       0       0       0       0       0
  2366 ;;      Locals:         0       9       0       0       0       0       0       0
  2367 ;;      Temps:          0       5       0       0       0       0       0       0
  2368 ;;      Totals:         0      16       0       0       0       0       0       0
  2369 ;;Total ram usage:       16 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 6
  2372 ;; This function calls:
  2373 ;;		_fputc
  2374 ;;		_utoa
  2375 ;; This function is called by:
  2376 ;;		_vfprintf
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380  035F                     _vfpfcnvrt:	
  2381                           ;psect for function _vfpfcnvrt
  2382                           
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2386                           ;vfpfcnvrt@fp stored from wreg
  2387  035F  0020               	movlb	0	; select bank0
  2388  0360  00D7               	movwf	vfpfcnvrt@fp
  2389  0361                     l1341:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2392  0361  0848               	movf	vfpfcnvrt@fmt,w
  2393  0362  0086               	movwf	6
  2394  0363  0187               	clrf	7
  2395  0364  3F40               	moviw [0]fsr1
  2396  0365  00CA               	movwf	??_vfpfcnvrt
  2397  0366  3F41               	moviw [1]fsr1
  2398  0367  00CB               	movwf	??_vfpfcnvrt+1
  2399  0368  084A               	movf	??_vfpfcnvrt,w
  2400  0369  0084               	movwf	4
  2401  036A  084B               	movf	??_vfpfcnvrt+1,w
  2402  036B  0085               	movwf	5
  2403  036C  0012               	moviw fsr0++
  2404  036D  3A25               	xorlw	37
  2405  036E  1D03               	btfss	3,2
  2406  036F  2B71               	goto	u1131
  2407  0370  2B72               	goto	u1130
  2408  0371                     u1131:
  2409  0371  2BFE               	goto	l1375
  2410  0372                     u1130:
  2411  0372                     l1343:
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2414  0372  0848               	movf	vfpfcnvrt@fmt,w
  2415  0373  0086               	movwf	6
  2416  0374  0187               	clrf	7
  2417  0375  3001               	movlw	1
  2418  0376  0781               	addwf	1,f
  2419  0377  3141               	addfsr 1,1
  2420  0378  1803               	skipnc
  2421  0379  0A81               	incf	1,f
  2422  037A                     l1345:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2425  037A  0021               	movlb	1	; select bank1
  2426  037B  01A2               	clrf	_width^(0+128)
  2427  037C  01A3               	clrf	(_width+1)^(0+128)
  2428  037D  01A6               	clrf	_flags^(0+128)
  2429  037E  01A7               	clrf	(_flags+1)^(0+128)
  2430  037F                     l1347:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2433  037F  30FF               	movlw	255
  2434  0380  00A4               	movwf	_prec^(0+128)
  2435  0381  30FF               	movlw	255
  2436  0382  00A5               	movwf	(_prec^(0+128)+1)
  2437  0383                     l1349:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2440  0383  0020               	movlb	0	; select bank0
  2441  0384  0848               	movf	vfpfcnvrt@fmt,w
  2442  0385  0086               	movwf	6
  2443  0386  0187               	clrf	7
  2444  0387  3F40               	moviw [0]fsr1
  2445  0388  00CA               	movwf	??_vfpfcnvrt
  2446  0389  3F41               	moviw [1]fsr1
  2447  038A  00CB               	movwf	??_vfpfcnvrt+1
  2448  038B  084A               	movf	??_vfpfcnvrt,w
  2449  038C  0084               	movwf	4
  2450  038D  084B               	movf	??_vfpfcnvrt+1,w
  2451  038E  0085               	movwf	5
  2452  038F  0012               	moviw fsr0++
  2453  0390  3A75               	xorlw	117
  2454  0391  1D03               	btfss	3,2
  2455  0392  2B94               	goto	u1141
  2456  0393  2B95               	goto	u1140
  2457  0394                     u1141:
  2458  0394  2BC9               	goto	l1359
  2459  0395                     u1140:
  2460  0395                     l1351:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2463  0395  0848               	movf	vfpfcnvrt@fmt,w
  2464  0396  0086               	movwf	6
  2465  0397  0187               	clrf	7
  2466  0398  3001               	movlw	1
  2467  0399  0781               	addwf	1,f
  2468  039A  3141               	addfsr 1,1
  2469  039B  1803               	skipnc
  2470  039C  0A81               	incf	1,f
  2471  039D                     l1353:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2474  039D  0849               	movf	vfpfcnvrt@ap,w
  2475  039E  0086               	movwf	6
  2476  039F  0187               	clrf	7
  2477  03A0  0801               	movf	1,w
  2478  03A1  0084               	movwf	4
  2479  03A2  0185               	clrf	5
  2480  03A3  3002               	movlw	2
  2481  03A4  0781               	addwf	1,f
  2482  03A5  3F00               	moviw [0]fsr0
  2483  03A6  00CF               	movwf	vfpfcnvrt@llu
  2484  03A7  3F01               	moviw [1]fsr0
  2485  03A8  00D0               	movwf	vfpfcnvrt@llu+1
  2486  03A9  01D1               	clrf	vfpfcnvrt@llu+2
  2487  03AA  01D2               	clrf	vfpfcnvrt@llu+3
  2488  03AB  01D3               	clrf	vfpfcnvrt@llu+4
  2489  03AC  01D4               	clrf	vfpfcnvrt@llu+5
  2490  03AD  01D5               	clrf	vfpfcnvrt@llu+6
  2491  03AE  01D6               	clrf	vfpfcnvrt@llu+7
  2492  03AF                     l1355:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  2495  03AF  084F               	movf	vfpfcnvrt@llu,w
  2496  03B0  00B0               	movwf	utoa@d
  2497  03B1  0850               	movf	vfpfcnvrt@llu+1,w
  2498  03B2  00B1               	movwf	utoa@d+1
  2499  03B3  0851               	movf	vfpfcnvrt@llu+2,w
  2500  03B4  00B2               	movwf	utoa@d+2
  2501  03B5  0852               	movf	vfpfcnvrt@llu+3,w
  2502  03B6  00B3               	movwf	utoa@d+3
  2503  03B7  0853               	movf	vfpfcnvrt@llu+4,w
  2504  03B8  00B4               	movwf	utoa@d+4
  2505  03B9  0854               	movf	vfpfcnvrt@llu+5,w
  2506  03BA  00B5               	movwf	utoa@d+5
  2507  03BB  0855               	movf	vfpfcnvrt@llu+6,w
  2508  03BC  00B6               	movwf	utoa@d+6
  2509  03BD  0856               	movf	vfpfcnvrt@llu+7,w
  2510  03BE  00B7               	movwf	utoa@d+7
  2511  03BF  0857               	movf	vfpfcnvrt@fp,w
  2512  03C0  3184  2422  3183   	fcall	_utoa
  2513  03C3  0020               	movlb	0	; select bank0
  2514  03C4  0831               	movf	?_utoa+1,w
  2515  03C5  00C9               	movwf	?_vfpfcnvrt+1
  2516  03C6  0830               	movf	?_utoa,w
  2517  03C7  00C8               	movwf	?_vfpfcnvrt
  2518  03C8  2C21               	goto	l724
  2519  03C9                     l1359:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2522  03C9  0848               	movf	vfpfcnvrt@fmt,w
  2523  03CA  0086               	movwf	6
  2524  03CB  0187               	clrf	7
  2525  03CC  3F40               	moviw [0]fsr1
  2526  03CD  00CA               	movwf	??_vfpfcnvrt
  2527  03CE  3F41               	moviw [1]fsr1
  2528  03CF  00CB               	movwf	??_vfpfcnvrt+1
  2529  03D0  084A               	movf	??_vfpfcnvrt,w
  2530  03D1  0084               	movwf	4
  2531  03D2  084B               	movf	??_vfpfcnvrt+1,w
  2532  03D3  0085               	movwf	5
  2533  03D4  0012               	moviw fsr0++
  2534  03D5  3A25               	xorlw	37
  2535  03D6  1D03               	btfss	3,2
  2536  03D7  2BD9               	goto	u1151
  2537  03D8  2BDA               	goto	u1150
  2538  03D9                     u1151:
  2539  03D9  2BF3               	goto	l1369
  2540  03DA                     u1150:
  2541  03DA                     l1361:
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2544  03DA  0848               	movf	vfpfcnvrt@fmt,w
  2545  03DB  0086               	movwf	6
  2546  03DC  0187               	clrf	7
  2547  03DD  3001               	movlw	1
  2548  03DE  0781               	addwf	1,f
  2549  03DF  3141               	addfsr 1,1
  2550  03E0  1803               	skipnc
  2551  03E1  0A81               	incf	1,f
  2552  03E2                     l1363:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2555  03E2  3025               	movlw	37
  2556  03E3  00F2               	movwf	fputc@c
  2557  03E4  3000               	movlw	0
  2558  03E5  00F3               	movwf	fputc@c+1
  2559  03E6  0857               	movf	vfpfcnvrt@fp,w
  2560  03E7  00CA               	movwf	??_vfpfcnvrt
  2561  03E8  084A               	movf	??_vfpfcnvrt,w
  2562  03E9  00F4               	movwf	fputc@fp
  2563  03EA  3181  2120  3183   	fcall	_fputc
  2564  03ED                     l1365:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2567  03ED  3001               	movlw	1
  2568  03EE  0020               	movlb	0	; select bank0
  2569  03EF  00C8               	movwf	?_vfpfcnvrt
  2570  03F0  3000               	movlw	0
  2571  03F1  00C9               	movwf	?_vfpfcnvrt+1
  2572  03F2  2C21               	goto	l724
  2573  03F3                     l1369:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2576  03F3  0848               	movf	vfpfcnvrt@fmt,w
  2577  03F4  0086               	movwf	6
  2578  03F5  0187               	clrf	7
  2579  03F6  3001               	movlw	1
  2580  03F7  0781               	addwf	1,f
  2581  03F8  3141               	addfsr 1,1
  2582  03F9  1803               	skipnc
  2583  03FA  0A81               	incf	1,f
  2584  03FB                     l1371:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2587  03FB  01C8               	clrf	?_vfpfcnvrt
  2588  03FC  01C9               	clrf	?_vfpfcnvrt+1
  2589  03FD  2C21               	goto	l724
  2590  03FE                     l1375:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2593  03FE  0848               	movf	vfpfcnvrt@fmt,w
  2594  03FF  0086               	movwf	6
  2595  0400  0187               	clrf	7
  2596  0401  3F40               	moviw [0]fsr1
  2597  0402  00CA               	movwf	??_vfpfcnvrt
  2598  0403  3F41               	moviw [1]fsr1
  2599  0404  00CB               	movwf	??_vfpfcnvrt+1
  2600  0405  084A               	movf	??_vfpfcnvrt,w
  2601  0406  0084               	movwf	4
  2602  0407  084B               	movf	??_vfpfcnvrt+1,w
  2603  0408  0085               	movwf	5
  2604  0409  0800               	movf	0,w	;code access
  2605  040A  00CC               	movwf	??_vfpfcnvrt+2
  2606  040B  01CD               	clrf	??_vfpfcnvrt+3
  2607  040C  084C               	movf	??_vfpfcnvrt+2,w
  2608  040D  00F2               	movwf	fputc@c
  2609  040E  084D               	movf	??_vfpfcnvrt+3,w
  2610  040F  00F3               	movwf	fputc@c+1
  2611  0410  0857               	movf	vfpfcnvrt@fp,w
  2612  0411  00CE               	movwf	??_vfpfcnvrt+4
  2613  0412  084E               	movf	??_vfpfcnvrt+4,w
  2614  0413  00F4               	movwf	fputc@fp
  2615  0414  3181  2120  3183   	fcall	_fputc
  2616  0417                     l1377:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2619  0417  0020               	movlb	0	; select bank0
  2620  0418  0848               	movf	vfpfcnvrt@fmt,w
  2621  0419  0086               	movwf	6
  2622  041A  0187               	clrf	7
  2623  041B  3001               	movlw	1
  2624  041C  0781               	addwf	1,f
  2625  041D  3141               	addfsr 1,1
  2626  041E  1803               	skipnc
  2627  041F  0A81               	incf	1,f
  2628  0420  2BED               	goto	l1365
  2629  0421                     l724:
  2630  0421  0008               	return
  2631  0422                     __end_of_vfpfcnvrt:
  2632                           
  2633                           	psect	text7
  2634  0422                     __ptext7:	
  2635 ;; *************** function _utoa *****************
  2636 ;; Defined at:
  2637 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  fp              1    wreg     PTR struct _IO_FILE
  2640 ;;		 -> sprintf@f(10), 
  2641 ;;  d               8   16[BANK0 ] unsigned long long 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  2644 ;;		 -> sprintf@f(10), 
  2645 ;;  n               8   30[BANK0 ] unsigned long long 
  2646 ;;  i               2   38[BANK0 ] int 
  2647 ;;  w               2   28[BANK0 ] int 
  2648 ;;  p               2   26[BANK0 ] int 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2   16[BANK0 ] int 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2658 ;;      Params:         0       8       0       0       0       0       0       0
  2659 ;;      Locals:         0      15       0       0       0       0       0       0
  2660 ;;      Temps:          0       1       0       0       0       0       0       0
  2661 ;;      Totals:         0      24       0       0       0       0       0       0
  2662 ;;Total ram usage:       24 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 5
  2665 ;; This function calls:
  2666 ;;		___lodiv
  2667 ;;		___lomod
  2668 ;;		_pad
  2669 ;; This function is called by:
  2670 ;;		_vfpfcnvrt
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674  0422                     _utoa:	
  2675                           ;psect for function _utoa
  2676                           
  2677                           
  2678                           ;incstack = 0
  2679                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2680                           ;utoa@fp stored from wreg
  2681  0422  0020               	movlb	0	; select bank0
  2682  0423  00B9               	movwf	utoa@fp
  2683  0424                     l1305:
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  2686  0424  0021               	movlb	1	; select bank1
  2687  0425  1BA5               	btfsc	(_prec+1)^(0+128),7
  2688  0426  2C28               	goto	u1061
  2689  0427  2C29               	goto	u1060
  2690  0428                     u1061:
  2691  0428  2C2D               	goto	l707
  2692  0429                     u1060:
  2693  0429                     l1307:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  2696  0429  30FD               	movlw	253
  2697  042A  05A6               	andwf	_flags^(0+128),f
  2698  042B  30FF               	movlw	255
  2699  042C  05A7               	andwf	(_flags+1)^(0+128),f
  2700  042D                     l707:	
  2701                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 623:     }
  2702                           
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  2705  042D  0825               	movf	(_prec+1)^(0+128),w
  2706  042E  3A80               	xorlw	128
  2707  042F  0020               	movlb	0	; select bank0
  2708  0430  00B8               	movwf	??_utoa
  2709  0431  3080               	movlw	128
  2710  0432  0238               	subwf	??_utoa,w
  2711  0433  1D03               	skipz
  2712  0434  2C38               	goto	u1075
  2713  0435  3001               	movlw	1
  2714  0436  0021               	movlb	1	; select bank1
  2715  0437  0224               	subwf	_prec^(0+128),w
  2716  0438                     u1075:
  2717  0438  1803               	skipnc
  2718  0439  2C3B               	goto	u1071
  2719  043A  2C3C               	goto	u1070
  2720  043B                     u1071:
  2721  043B  2C42               	goto	l1311
  2722  043C                     u1070:
  2723  043C                     l1309:
  2724  043C  3001               	movlw	1
  2725  043D  0020               	movlb	0	; select bank0
  2726  043E  00BA               	movwf	utoa@p
  2727  043F  3000               	movlw	0
  2728  0440  00BB               	movwf	utoa@p+1
  2729  0441  2C4A               	goto	l711
  2730  0442                     l1311:
  2731  0442  0021               	movlb	1	; select bank1
  2732  0443  0825               	movf	(_prec+1)^(0+128),w
  2733  0444  0020               	movlb	0	; select bank0
  2734  0445  00BB               	movwf	utoa@p+1
  2735  0446  0021               	movlb	1	; select bank1
  2736  0447  0824               	movf	_prec^(0+128),w
  2737  0448  0020               	movlb	0	; select bank0
  2738  0449  00BA               	movwf	utoa@p
  2739  044A                     l711:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  2742  044A  0021               	movlb	1	; select bank1
  2743  044B  0823               	movf	(_width+1)^(0+128),w
  2744  044C  0020               	movlb	0	; select bank0
  2745  044D  00BD               	movwf	utoa@w+1
  2746  044E  0021               	movlb	1	; select bank1
  2747  044F  0822               	movf	_width^(0+128),w
  2748  0450  0020               	movlb	0	; select bank0
  2749  0451  00BC               	movwf	utoa@w
  2750  0452                     l1313:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  2753  0452  0830               	movf	utoa@d,w
  2754  0453  00BE               	movwf	utoa@n
  2755  0454  0831               	movf	utoa@d+1,w
  2756  0455  00BF               	movwf	utoa@n+1
  2757  0456  0832               	movf	utoa@d+2,w
  2758  0457  00C0               	movwf	utoa@n+2
  2759  0458  0833               	movf	utoa@d+3,w
  2760  0459  00C1               	movwf	utoa@n+3
  2761  045A  0834               	movf	utoa@d+4,w
  2762  045B  00C2               	movwf	utoa@n+4
  2763  045C  0835               	movf	utoa@d+5,w
  2764  045D  00C3               	movwf	utoa@n+5
  2765  045E  0836               	movf	utoa@d+6,w
  2766  045F  00C4               	movwf	utoa@n+6
  2767  0460  0837               	movf	utoa@d+7,w
  2768  0461  00C5               	movwf	utoa@n+7
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  2771  0462  301F               	movlw	31
  2772  0463  00C6               	movwf	utoa@i
  2773  0464  3000               	movlw	0
  2774  0465  00C7               	movwf	utoa@i+1
  2775  0466                     l1315:
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  2778  0466  0021               	movlb	1	; select bank1
  2779  0467  01C9               	clrf	(_dbuf^(0+128)+31)
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2782  0468  2CC9               	goto	l1327
  2783  0469                     l1317:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  2786  0469  30FF               	movlw	255
  2787  046A  0020               	movlb	0	; select bank0
  2788  046B  07C6               	addwf	utoa@i,f
  2789  046C  30FF               	movlw	255
  2790  046D  3DC7               	addwfc	utoa@i+1,f
  2791  046E                     l1319:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  2794  046E  300A               	movlw	10
  2795  046F  00A0               	movwf	___lomod@divisor
  2796  0470  01A1               	clrf	___lomod@divisor+1
  2797  0471  01A2               	clrf	___lomod@divisor+2
  2798  0472  01A3               	clrf	___lomod@divisor+3
  2799  0473  01A4               	clrf	___lomod@divisor+4
  2800  0474  01A5               	clrf	___lomod@divisor+5
  2801  0475  01A6               	clrf	___lomod@divisor+6
  2802  0476  01A7               	clrf	___lomod@divisor+7
  2803  0477  083E               	movf	utoa@n,w
  2804  0478  00A8               	movwf	___lomod@dividend
  2805  0479  083F               	movf	utoa@n+1,w
  2806  047A  00A9               	movwf	___lomod@dividend+1
  2807  047B  0840               	movf	utoa@n+2,w
  2808  047C  00AA               	movwf	___lomod@dividend+2
  2809  047D  0841               	movf	utoa@n+3,w
  2810  047E  00AB               	movwf	___lomod@dividend+3
  2811  047F  0842               	movf	utoa@n+4,w
  2812  0480  00AC               	movwf	___lomod@dividend+4
  2813  0481  0843               	movf	utoa@n+5,w
  2814  0482  00AD               	movwf	___lomod@dividend+5
  2815  0483  0844               	movf	utoa@n+6,w
  2816  0484  00AE               	movwf	___lomod@dividend+6
  2817  0485  0845               	movf	utoa@n+7,w
  2818  0486  00AF               	movwf	___lomod@dividend+7
  2819  0487  3181  21CB  3184   	fcall	___lomod
  2820  048A  0020               	movlb	0	; select bank0
  2821  048B  0820               	movf	?___lomod,w
  2822  048C  3E30               	addlw	48
  2823  048D  00B8               	movwf	??_utoa
  2824  048E  0846               	movf	utoa@i,w
  2825  048F  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2826  0490  0086               	movwf	6
  2827  0491  0187               	clrf	7
  2828  0492  0838               	movf	??_utoa,w
  2829  0493  0081               	movwf	1
  2830  0494                     l1321:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  2833  0494  30FF               	movlw	255
  2834  0495  07BA               	addwf	utoa@p,f
  2835  0496  30FF               	movlw	255
  2836  0497  3DBB               	addwfc	utoa@p+1,f
  2837  0498                     l1323:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  2840  0498  30FF               	movlw	255
  2841  0499  07BC               	addwf	utoa@w,f
  2842  049A  30FF               	movlw	255
  2843  049B  3DBD               	addwfc	utoa@w+1,f
  2844  049C                     l1325:
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  2847  049C  300A               	movlw	10
  2848  049D  00A0               	movwf	___lodiv@divisor
  2849  049E  01A1               	clrf	___lodiv@divisor+1
  2850  049F  01A2               	clrf	___lodiv@divisor+2
  2851  04A0  01A3               	clrf	___lodiv@divisor+3
  2852  04A1  01A4               	clrf	___lodiv@divisor+4
  2853  04A2  01A5               	clrf	___lodiv@divisor+5
  2854  04A3  01A6               	clrf	___lodiv@divisor+6
  2855  04A4  01A7               	clrf	___lodiv@divisor+7
  2856  04A5  083E               	movf	utoa@n,w
  2857  04A6  00A8               	movwf	___lodiv@dividend
  2858  04A7  083F               	movf	utoa@n+1,w
  2859  04A8  00A9               	movwf	___lodiv@dividend+1
  2860  04A9  0840               	movf	utoa@n+2,w
  2861  04AA  00AA               	movwf	___lodiv@dividend+2
  2862  04AB  0841               	movf	utoa@n+3,w
  2863  04AC  00AB               	movwf	___lodiv@dividend+3
  2864  04AD  0842               	movf	utoa@n+4,w
  2865  04AE  00AC               	movwf	___lodiv@dividend+4
  2866  04AF  0843               	movf	utoa@n+5,w
  2867  04B0  00AD               	movwf	___lodiv@dividend+5
  2868  04B1  0844               	movf	utoa@n+6,w
  2869  04B2  00AE               	movwf	___lodiv@dividend+6
  2870  04B3  0845               	movf	utoa@n+7,w
  2871  04B4  00AF               	movwf	___lodiv@dividend+7
  2872  04B5  3182  223C  3184   	fcall	___lodiv
  2873  04B8  0020               	movlb	0	; select bank0
  2874  04B9  0820               	movf	?___lodiv,w
  2875  04BA  00BE               	movwf	utoa@n
  2876  04BB  0821               	movf	?___lodiv+1,w
  2877  04BC  00BF               	movwf	utoa@n+1
  2878  04BD  0822               	movf	?___lodiv+2,w
  2879  04BE  00C0               	movwf	utoa@n+2
  2880  04BF  0823               	movf	?___lodiv+3,w
  2881  04C0  00C1               	movwf	utoa@n+3
  2882  04C1  0824               	movf	?___lodiv+4,w
  2883  04C2  00C2               	movwf	utoa@n+4
  2884  04C3  0825               	movf	?___lodiv+5,w
  2885  04C4  00C3               	movwf	utoa@n+5
  2886  04C5  0826               	movf	?___lodiv+6,w
  2887  04C6  00C4               	movwf	utoa@n+6
  2888  04C7  0827               	movf	?___lodiv+7,w
  2889  04C8  00C5               	movwf	utoa@n+7
  2890  04C9                     l1327:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2893  04C9  0020               	movlb	0	; select bank0
  2894  04CA  0846               	movf	utoa@i,w
  2895  04CB  0447               	iorwf	utoa@i+1,w
  2896  04CC  1903               	btfsc	3,2
  2897  04CD  2CCF               	goto	u1081
  2898  04CE  2CD0               	goto	u1080
  2899  04CF                     u1081:
  2900  04CF  2CFC               	goto	l1337
  2901  04D0                     u1080:
  2902  04D0                     l1329:
  2903  04D0  083E               	movf	utoa@n,w
  2904  04D1  043F               	iorwf	utoa@n+1,w
  2905  04D2  0440               	iorwf	utoa@n+2,w
  2906  04D3  0441               	iorwf	utoa@n+3,w
  2907  04D4  0442               	iorwf	utoa@n+4,w
  2908  04D5  0443               	iorwf	utoa@n+5,w
  2909  04D6  0444               	iorwf	utoa@n+6,w
  2910  04D7  0445               	iorwf	utoa@n+7,w
  2911  04D8  1D03               	skipz
  2912  04D9  2CDB               	goto	u1091
  2913  04DA  2CDC               	goto	u1090
  2914  04DB                     u1091:
  2915  04DB  2C69               	goto	l1317
  2916  04DC                     u1090:
  2917  04DC                     l1331:
  2918  04DC  083B               	movf	utoa@p+1,w
  2919  04DD  3A80               	xorlw	128
  2920  04DE  00B8               	movwf	??_utoa
  2921  04DF  3080               	movlw	128
  2922  04E0  0238               	subwf	??_utoa,w
  2923  04E1  1D03               	skipz
  2924  04E2  2CE5               	goto	u1105
  2925  04E3  3001               	movlw	1
  2926  04E4  023A               	subwf	utoa@p,w
  2927  04E5                     u1105:
  2928  04E5  1803               	skipnc
  2929  04E6  2CE8               	goto	u1101
  2930  04E7  2CE9               	goto	u1100
  2931  04E8                     u1101:
  2932  04E8  2C69               	goto	l1317
  2933  04E9                     u1100:
  2934  04E9                     l1333:
  2935  04E9  0020               	movlb	0	; select bank0
  2936  04EA  083D               	movf	utoa@w+1,w
  2937  04EB  3A80               	xorlw	128
  2938  04EC  00B8               	movwf	??_utoa
  2939  04ED  3080               	movlw	128
  2940  04EE  0238               	subwf	??_utoa,w
  2941  04EF  1D03               	skipz
  2942  04F0  2CF3               	goto	u1115
  2943  04F1  3001               	movlw	1
  2944  04F2  023C               	subwf	utoa@w,w
  2945  04F3                     u1115:
  2946  04F3  1C03               	skipc
  2947  04F4  2CF6               	goto	u1111
  2948  04F5  2CF7               	goto	u1110
  2949  04F6                     u1111:
  2950  04F6  2CFC               	goto	l1337
  2951  04F7                     u1110:
  2952  04F7                     l1335:
  2953  04F7  0021               	movlb	1	; select bank1
  2954  04F8  18A6               	btfsc	_flags^(0+128),1
  2955  04F9  2CFB               	goto	u1121
  2956  04FA  2CFC               	goto	u1120
  2957  04FB                     u1121:
  2958  04FB  2C69               	goto	l1317
  2959  04FC                     u1120:
  2960  04FC                     l1337:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2963  04FC  0020               	movlb	0	; select bank0
  2964  04FD  0846               	movf	utoa@i,w
  2965  04FE  3EAA               	addlw	(low (_dbuf| 0))& (0+255)
  2966  04FF  00B8               	movwf	??_utoa
  2967  0500  0838               	movf	??_utoa,w
  2968  0501  00A4               	movwf	pad@buf
  2969  0502  083D               	movf	utoa@w+1,w
  2970  0503  00A6               	movwf	pad@p+1
  2971  0504  083C               	movf	utoa@w,w
  2972  0505  00A5               	movwf	pad@p
  2973  0506  0839               	movf	utoa@fp,w
  2974  0507  3181  2172  3184   	fcall	_pad
  2975  050A  0020               	movlb	0	; select bank0
  2976  050B  0825               	movf	?_pad+1,w
  2977  050C  00B1               	movwf	?_utoa+1
  2978  050D  0824               	movf	?_pad,w
  2979  050E  00B0               	movwf	?_utoa
  2980  050F                     l719:
  2981  050F  0008               	return
  2982  0510                     __end_of_utoa:
  2983                           
  2984                           	psect	text8
  2985  0172                     __ptext8:	
  2986 ;; *************** function _pad *****************
  2987 ;; Defined at:
  2988 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  fp              1    wreg     PTR struct _IO_FILE
  2991 ;;		 -> sprintf@f(10), 
  2992 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2993 ;;		 -> dbuf(32), 
  2994 ;;  p               2    5[BANK0 ] int 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  2997 ;;		 -> sprintf@f(10), 
  2998 ;;  w               2   10[BANK0 ] int 
  2999 ;;  i               2    8[BANK0 ] int 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  2    4[BANK0 ] int 
  3002 ;; Registers used:
  3003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3009 ;;      Params:         0       3       0       0       0       0       0       0
  3010 ;;      Locals:         0       5       0       0       0       0       0       0
  3011 ;;      Temps:          0       1       0       0       0       0       0       0
  3012 ;;      Totals:         0       9       0       0       0       0       0       0
  3013 ;;Total ram usage:        9 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 4
  3016 ;; This function calls:
  3017 ;;		_fputc
  3018 ;;		_fputs
  3019 ;;		_strlen
  3020 ;; This function is called by:
  3021 ;;		_utoa
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025  0172                     _pad:	
  3026                           ;psect for function _pad
  3027                           
  3028                           
  3029                           ;incstack = 0
  3030                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3031                           ;pad@fp stored from wreg
  3032  0172  0020               	movlb	0	; select bank0
  3033  0173  00AC               	movwf	pad@fp
  3034  0174                     l1283:
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3037  0174  0021               	movlb	1	; select bank1
  3038  0175  1C26               	btfss	_flags^(0+128),0
  3039  0176  2978               	goto	u1021
  3040  0177  2979               	goto	u1020
  3041  0178                     u1021:
  3042  0178  2982               	goto	l1287
  3043  0179                     u1020:
  3044  0179                     l1285:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3047  0179  0020               	movlb	0	; select bank0
  3048  017A  082C               	movf	pad@fp,w
  3049  017B  00A7               	movwf	??_pad
  3050  017C  0827               	movf	??_pad,w
  3051  017D  00FA               	movwf	fputs@fp
  3052  017E  0824               	movf	pad@buf,w
  3053  017F  3180  209E  3181   	fcall	_fputs
  3054  0182                     l1287:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3057  0182  0020               	movlb	0	; select bank0
  3058  0183  1BA6               	btfsc	pad@p+1,7
  3059  0184  2986               	goto	u1031
  3060  0185  2987               	goto	u1030
  3061  0186                     u1031:
  3062  0186  298C               	goto	l1291
  3063  0187                     u1030:
  3064  0187                     l1289:
  3065  0187  0826               	movf	pad@p+1,w
  3066  0188  00AB               	movwf	pad@w+1
  3067  0189  0825               	movf	pad@p,w
  3068  018A  00AA               	movwf	pad@w
  3069  018B  298E               	goto	l699
  3070  018C                     l1291:
  3071  018C  01AA               	clrf	pad@w
  3072  018D  01AB               	clrf	pad@w+1
  3073  018E                     l699:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3076  018E  01A8               	clrf	pad@i
  3077  018F  01A9               	clrf	pad@i+1
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3080  0190  29A2               	goto	l1297
  3081  0191                     l1293:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3084  0191  3020               	movlw	32
  3085  0192  00F2               	movwf	fputc@c
  3086  0193  3000               	movlw	0
  3087  0194  00F3               	movwf	fputc@c+1
  3088  0195  0020               	movlb	0	; select bank0
  3089  0196  082C               	movf	pad@fp,w
  3090  0197  00A7               	movwf	??_pad
  3091  0198  0827               	movf	??_pad,w
  3092  0199  00F4               	movwf	fputc@fp
  3093  019A  3181  2120  3181   	fcall	_fputc
  3094  019D                     l1295:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3097  019D  3001               	movlw	1
  3098  019E  0020               	movlb	0	; select bank0
  3099  019F  07A8               	addwf	pad@i,f
  3100  01A0  3000               	movlw	0
  3101  01A1  3DA9               	addwfc	pad@i+1,f
  3102  01A2                     l1297:
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3105  01A2  0829               	movf	pad@i+1,w
  3106  01A3  3A80               	xorlw	128
  3107  01A4  00A7               	movwf	??_pad
  3108  01A5  082B               	movf	pad@w+1,w
  3109  01A6  3A80               	xorlw	128
  3110  01A7  0227               	subwf	??_pad,w
  3111  01A8  1D03               	skipz
  3112  01A9  29AC               	goto	u1045
  3113  01AA  082A               	movf	pad@w,w
  3114  01AB  0228               	subwf	pad@i,w
  3115  01AC                     u1045:
  3116  01AC  1C03               	skipc
  3117  01AD  29AF               	goto	u1041
  3118  01AE  29B0               	goto	u1040
  3119  01AF                     u1041:
  3120  01AF  2991               	goto	l1293
  3121  01B0                     u1040:
  3122  01B0                     l702:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3125  01B0  0021               	movlb	1	; select bank1
  3126  01B1  1826               	btfsc	_flags^(0+128),0
  3127  01B2  29B4               	goto	u1051
  3128  01B3  29B5               	goto	u1050
  3129  01B4                     u1051:
  3130  01B4  29BE               	goto	l1301
  3131  01B5                     u1050:
  3132  01B5                     l1299:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3135  01B5  0020               	movlb	0	; select bank0
  3136  01B6  082C               	movf	pad@fp,w
  3137  01B7  00A7               	movwf	??_pad
  3138  01B8  0827               	movf	??_pad,w
  3139  01B9  00FA               	movwf	fputs@fp
  3140  01BA  0824               	movf	pad@buf,w
  3141  01BB  3180  209E  3181   	fcall	_fputs
  3142  01BE                     l1301:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3145  01BE  0020               	movlb	0	; select bank0
  3146  01BF  0824               	movf	pad@buf,w
  3147  01C0  3180  2085  3181   	fcall	_strlen
  3148  01C3  0020               	movlb	0	; select bank0
  3149  01C4  082A               	movf	pad@w,w
  3150  01C5  0770               	addwf	?_strlen,w
  3151  01C6  00A4               	movwf	?_pad
  3152  01C7  082B               	movf	pad@w+1,w
  3153  01C8  3D71               	addwfc	?_strlen+1,w
  3154  01C9  00A5               	movwf	?_pad+1
  3155  01CA                     l704:
  3156  01CA  0008               	return
  3157  01CB                     __end_of_pad:
  3158                           
  3159                           	psect	text9
  3160  0085                     __ptext9:	
  3161 ;; *************** function _strlen *****************
  3162 ;; Defined at:
  3163 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  s               1    wreg     PTR const unsigned char 
  3166 ;;		 -> dbuf(32), 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  s               1    4[COMMON] PTR const unsigned char 
  3169 ;;		 -> dbuf(32), 
  3170 ;;  a               1    3[COMMON] PTR const unsigned char 
  3171 ;;		 -> dbuf(32), 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  2    0[COMMON] unsigned int 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3181 ;;      Params:         2       0       0       0       0       0       0       0
  3182 ;;      Locals:         2       0       0       0       0       0       0       0
  3183 ;;      Temps:          1       0       0       0       0       0       0       0
  3184 ;;      Totals:         5       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        5 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_pad
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194  0085                     _strlen:	
  3195                           ;psect for function _strlen
  3196                           
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3200                           ;strlen@s stored from wreg
  3201  0085  00F4               	movwf	strlen@s
  3202  0086                     l1235:
  3203  0086  0874               	movf	strlen@s,w
  3204  0087  00F2               	movwf	??_strlen
  3205  0088  0872               	movf	??_strlen,w
  3206  0089  00F3               	movwf	strlen@a
  3207  008A  288F               	goto	l1239
  3208  008B                     l1237:
  3209  008B  3001               	movlw	1
  3210  008C  00F2               	movwf	??_strlen
  3211  008D  0872               	movf	??_strlen,w
  3212  008E  07F4               	addwf	strlen@s,f
  3213  008F                     l1239:
  3214  008F  0874               	movf	strlen@s,w
  3215  0090  0086               	movwf	6
  3216  0091  0187               	clrf	7
  3217  0092  0801               	movf	1,w
  3218  0093  1D03               	btfss	3,2
  3219  0094  2896               	goto	u921
  3220  0095  2897               	goto	u920
  3221  0096                     u921:
  3222  0096  288B               	goto	l1237
  3223  0097                     u920:
  3224  0097                     l1241:
  3225  0097  0873               	movf	strlen@a,w
  3226  0098  0274               	subwf	strlen@s,w
  3227  0099  00F0               	movwf	?_strlen
  3228  009A  01F1               	clrf	?_strlen+1
  3229  009B  1BF0               	btfsc	?_strlen,7
  3230  009C  03F1               	decf	?_strlen+1,f
  3231  009D                     l757:
  3232  009D  0008               	return
  3233  009E                     __end_of_strlen:
  3234                           
  3235                           	psect	text10
  3236  009E                     __ptext10:	
  3237 ;; *************** function _fputs *****************
  3238 ;; Defined at:
  3239 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  s               1    wreg     PTR const unsigned char 
  3242 ;;		 -> dbuf(32), 
  3243 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  3244 ;;		 -> sprintf@f(10), 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3247 ;;		 -> dbuf(32), 
  3248 ;;  i               2    1[BANK0 ] int 
  3249 ;;  c               1    0[BANK0 ] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  2   10[COMMON] int 
  3252 ;; Registers used:
  3253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3259 ;;      Params:         1       0       0       0       0       0       0       0
  3260 ;;      Locals:         0       4       0       0       0       0       0       0
  3261 ;;      Temps:          3       0       0       0       0       0       0       0
  3262 ;;      Totals:         4       4       0       0       0       0       0       0
  3263 ;;Total ram usage:        8 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 3
  3266 ;; This function calls:
  3267 ;;		_fputc
  3268 ;; This function is called by:
  3269 ;;		_pad
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273  009E                     _fputs:	
  3274                           ;psect for function _fputs
  3275                           
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3279                           ;fputs@s stored from wreg
  3280  009E  0020               	movlb	0	; select bank0
  3281  009F  00A3               	movwf	fputs@s
  3282  00A0                     l1227:
  3283  00A0  01A1               	clrf	fputs@i
  3284  00A1  01A2               	clrf	fputs@i+1
  3285  00A2  28B6               	goto	l1233
  3286  00A3                     l1229:
  3287  00A3  0820               	movf	fputs@c,w
  3288  00A4  00FB               	movwf	??_fputs
  3289  00A5  01FC               	clrf	??_fputs+1
  3290  00A6  087B               	movf	??_fputs,w
  3291  00A7  00F2               	movwf	fputc@c
  3292  00A8  087C               	movf	??_fputs+1,w
  3293  00A9  00F3               	movwf	fputc@c+1
  3294  00AA  087A               	movf	fputs@fp,w
  3295  00AB  00FD               	movwf	??_fputs+2
  3296  00AC  087D               	movf	??_fputs+2,w
  3297  00AD  00F4               	movwf	fputc@fp
  3298  00AE  3181  2120  3180   	fcall	_fputc
  3299  00B1                     l1231:
  3300  00B1  3001               	movlw	1
  3301  00B2  0020               	movlb	0	; select bank0
  3302  00B3  07A1               	addwf	fputs@i,f
  3303  00B4  3000               	movlw	0
  3304  00B5  3DA2               	addwfc	fputs@i+1,f
  3305  00B6                     l1233:
  3306  00B6  0821               	movf	fputs@i,w
  3307  00B7  0723               	addwf	fputs@s,w
  3308  00B8  00FB               	movwf	??_fputs
  3309  00B9  087B               	movf	??_fputs,w
  3310  00BA  0086               	movwf	6
  3311  00BB  0187               	clrf	7
  3312  00BC  0801               	movf	1,w
  3313  00BD  00FC               	movwf	??_fputs+1
  3314  00BE  087C               	movf	??_fputs+1,w
  3315  00BF  00A0               	movwf	fputs@c
  3316  00C0  0820               	movf	fputs@c,w
  3317  00C1  1D03               	btfss	3,2
  3318  00C2  28C4               	goto	u911
  3319  00C3  28C5               	goto	u910
  3320  00C4                     u911:
  3321  00C4  28A3               	goto	l1229
  3322  00C5                     u910:
  3323  00C5                     l751:
  3324  00C5  0008               	return
  3325  00C6                     __end_of_fputs:
  3326                           
  3327                           	psect	text11
  3328  0120                     __ptext11:	
  3329 ;; *************** function _fputc *****************
  3330 ;; Defined at:
  3331 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  c               2    2[COMMON] int 
  3334 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  3335 ;;		 -> sprintf@f(10), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2    2[COMMON] int 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3347 ;;      Params:         3       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0
  3349 ;;      Temps:          5       0       0       0       0       0       0       0
  3350 ;;      Totals:         8       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        8 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 2
  3354 ;; This function calls:
  3355 ;;		_putch
  3356 ;; This function is called by:
  3357 ;;		_pad
  3358 ;;		_vfpfcnvrt
  3359 ;;		_fputs
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363  0120                     _fputc:	
  3364                           ;psect for function _fputc
  3365                           
  3366  0120                     l1211:	
  3367                           ;incstack = 0
  3368                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3369                           
  3370  0120  0874               	movf	fputc@fp,w
  3371  0121  1903               	btfsc	3,2
  3372  0122  2924               	goto	u871
  3373  0123  2925               	goto	u870
  3374  0124                     u871:
  3375  0124  292A               	goto	l1215
  3376  0125                     u870:
  3377  0125                     l1213:
  3378  0125  0874               	movf	fputc@fp,w
  3379  0126  1D03               	btfss	3,2
  3380  0127  2929               	goto	u881
  3381  0128  292A               	goto	u880
  3382  0129                     u881:
  3383  0129  292F               	goto	l1217
  3384  012A                     u880:
  3385  012A                     l1215:
  3386  012A  0872               	movf	fputc@c,w
  3387  012B  3180  204F  3181   	fcall	_putch
  3388  012E  2971               	goto	l743
  3389  012F                     l1217:
  3390  012F  0874               	movf	fputc@fp,w
  3391  0130  3E08               	addlw	8
  3392  0131  0086               	movwf	6
  3393  0132  0187               	clrf	7
  3394  0133  0016               	moviw fsr1++
  3395  0134  0401               	iorwf	1,w
  3396  0135  1903               	btfsc	3,2
  3397  0136  2938               	goto	u891
  3398  0137  2939               	goto	u890
  3399  0138                     u891:
  3400  0138  2957               	goto	l1221
  3401  0139                     u890:
  3402  0139                     l1219:
  3403  0139  0874               	movf	fputc@fp,w
  3404  013A  3E08               	addlw	8
  3405  013B  0086               	movwf	6
  3406  013C  0187               	clrf	7
  3407  013D  3F40               	moviw [0]fsr1
  3408  013E  00F5               	movwf	??_fputc
  3409  013F  3F41               	moviw [1]fsr1
  3410  0140  00F6               	movwf	??_fputc+1
  3411  0141  0874               	movf	fputc@fp,w
  3412  0142  3E02               	addlw	2
  3413  0143  0086               	movwf	6
  3414  0144  0187               	clrf	7
  3415  0145  3F40               	moviw [0]fsr1
  3416  0146  00F7               	movwf	??_fputc+2
  3417  0147  3F41               	moviw [1]fsr1
  3418  0148  00F8               	movwf	??_fputc+3
  3419  0149  0878               	movf	??_fputc+3,w
  3420  014A  3A80               	xorlw	128
  3421  014B  00F9               	movwf	??_fputc+4
  3422  014C  0876               	movf	??_fputc+1,w
  3423  014D  3A80               	xorlw	128
  3424  014E  0279               	subwf	??_fputc+4,w
  3425  014F  1D03               	skipz
  3426  0150  2953               	goto	u905
  3427  0151  0875               	movf	??_fputc,w
  3428  0152  0277               	subwf	??_fputc+2,w
  3429  0153                     u905:
  3430  0153  1803               	skipnc
  3431  0154  2956               	goto	u901
  3432  0155  2957               	goto	u900
  3433  0156                     u901:
  3434  0156  2971               	goto	l743
  3435  0157                     u900:
  3436  0157                     l1221:
  3437  0157  0872               	movf	fputc@c,w
  3438  0158  00F5               	movwf	??_fputc
  3439  0159  0874               	movf	fputc@fp,w
  3440  015A  0086               	movwf	6
  3441  015B  0187               	clrf	7
  3442  015C  0874               	movf	fputc@fp,w
  3443  015D  3E02               	addlw	2
  3444  015E  0084               	movwf	4
  3445  015F  0185               	clrf	5
  3446  0160  0800               	movf	0,w
  3447  0161  0701               	addwf	1,w
  3448  0162  00F6               	movwf	??_fputc+1
  3449  0163  0876               	movf	??_fputc+1,w
  3450  0164  0086               	movwf	6
  3451  0165  0187               	clrf	7
  3452  0166  0875               	movf	??_fputc,w
  3453  0167  0081               	movwf	1
  3454  0168                     l1223:
  3455  0168  0874               	movf	fputc@fp,w
  3456  0169  3E02               	addlw	2
  3457  016A  0086               	movwf	6
  3458  016B  0187               	clrf	7
  3459  016C  3001               	movlw	1
  3460  016D  0781               	addwf	1,f
  3461  016E  3141               	addfsr 1,1
  3462  016F  1803               	skipnc
  3463  0170  0A81               	incf	1,f
  3464  0171                     l743:
  3465  0171  0008               	return
  3466  0172                     __end_of_fputc:
  3467                           
  3468                           	psect	text12
  3469  004F                     __ptext12:	
  3470 ;; *************** function _putch *****************
  3471 ;; Defined at:
  3472 ;;		line 73 in file "newmain.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  x               1    wreg     unsigned char 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  x               1    1[COMMON] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0, pclath, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3486 ;;      Params:         0       0       0       0       0       0       0       0
  3487 ;;      Locals:         1       0       0       0       0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0
  3489 ;;      Totals:         1       0       0       0       0       0       0       0
  3490 ;;Total ram usage:        1 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 1
  3493 ;; This function calls:
  3494 ;;		_EUSART_Write
  3495 ;; This function is called by:
  3496 ;;		_fputc
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500  004F                     _putch:	
  3501                           ;psect for function _putch
  3502                           
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3506                           ;putch@x stored from wreg
  3507  004F  00F1               	movwf	putch@x
  3508  0050                     l1207:
  3509  0050                     l87:	
  3510                           ;newmain.c: 73: void putch(char x);newmain.c: 74: {;newmain.c: 75:     while(!TXIF);
  3511                           
  3512  0050  0020               	movlb	0	; select bank0
  3513  0051  1E11               	btfss	17,4	;volatile
  3514  0052  2854               	goto	u861
  3515  0053  2855               	goto	u860
  3516  0054                     u861:
  3517  0054  2850               	goto	l87
  3518  0055                     u860:
  3519  0055                     l1209:
  3520                           
  3521                           ;newmain.c: 76:     EUSART_Write(x);
  3522  0055  0871               	movf	putch@x,w
  3523  0056  3180  203A  3180   	fcall	_EUSART_Write
  3524  0059                     l90:
  3525  0059  0008               	return
  3526  005A                     __end_of_putch:
  3527                           
  3528                           	psect	text13
  3529  003A                     __ptext13:	
  3530 ;; *************** function _EUSART_Write *****************
  3531 ;; Defined at:
  3532 ;;		line 65 in file "newmain.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  txData          1    wreg     unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  txData          1    0[COMMON] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3546 ;;      Params:         0       0       0       0       0       0       0       0
  3547 ;;      Locals:         1       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0
  3549 ;;      Totals:         1       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        1 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_putch
  3556 ;;		_EUSART_Write_String
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560  003A                     _EUSART_Write:	
  3561                           ;psect for function _EUSART_Write
  3562                           
  3563                           
  3564                           ;incstack = 0
  3565                           ; Regs used in _EUSART_Write: [wreg]
  3566                           ;EUSART_Write@txData stored from wreg
  3567  003A  00F0               	movwf	EUSART_Write@txData
  3568  003B                     l1203:
  3569  003B                     l81:	
  3570                           ;newmain.c: 68:     {;newmain.c: 69:     }
  3571                           
  3572                           
  3573                           ;newmain.c: 67:     while(0 == PIR1bits.TXIF)
  3574  003B  0020               	movlb	0	; select bank0
  3575  003C  1E11               	btfss	17,4	;volatile
  3576  003D  283F               	goto	u851
  3577  003E  2840               	goto	u850
  3578  003F                     u851:
  3579  003F  283B               	goto	l81
  3580  0040                     u850:
  3581  0040                     l1205:
  3582                           
  3583                           ;newmain.c: 71:     TXREG = txData;
  3584  0040  0870               	movf	EUSART_Write@txData,w
  3585  0041  0023               	movlb	3	; select bank3
  3586  0042  009A               	movwf	26	;volatile
  3587  0043                     l84:
  3588  0043  0008               	return
  3589  0044                     __end_of_EUSART_Write:
  3590                           
  3591                           	psect	text14
  3592  01CB                     __ptext14:	
  3593 ;; *************** function ___lomod *****************
  3594 ;; Defined at:
  3595 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  divisor         8    0[BANK0 ] unsigned long long 
  3598 ;;  dividend        8    8[BANK0 ] unsigned long long 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  counter         1    1[COMMON] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  8    0[BANK0 ] unsigned long long 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3610 ;;      Params:         0      16       0       0       0       0       0       0
  3611 ;;      Locals:         1       0       0       0       0       0       0       0
  3612 ;;      Temps:          1       0       0       0       0       0       0       0
  3613 ;;      Totals:         2      16       0       0       0       0       0       0
  3614 ;;Total ram usage:       18 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_utoa
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623  01CB                     ___lomod:	
  3624                           ;psect for function ___lomod
  3625                           
  3626  01CB                     l1267:	
  3627                           ;incstack = 0
  3628                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  3629                           
  3630  01CB  0020               	movlb	0	; select bank0
  3631  01CC  0820               	movf	___lomod@divisor,w
  3632  01CD  0421               	iorwf	___lomod@divisor+1,w
  3633  01CE  0422               	iorwf	___lomod@divisor+2,w
  3634  01CF  0423               	iorwf	___lomod@divisor+3,w
  3635  01D0  0424               	iorwf	___lomod@divisor+4,w
  3636  01D1  0425               	iorwf	___lomod@divisor+5,w
  3637  01D2  0426               	iorwf	___lomod@divisor+6,w
  3638  01D3  0427               	iorwf	___lomod@divisor+7,w
  3639  01D4  1903               	skipnz
  3640  01D5  29D7               	goto	u981
  3641  01D6  29D8               	goto	u980
  3642  01D7                     u981:
  3643  01D7  2A2B               	goto	l454
  3644  01D8                     u980:
  3645  01D8                     l1269:
  3646  01D8  01F1               	clrf	___lomod@counter
  3647  01D9  0AF1               	incf	___lomod@counter,f
  3648  01DA  29E7               	goto	l1275
  3649  01DB                     l1271:
  3650  01DB  35A0               	lslf	___lomod@divisor,f
  3651  01DC  0DA1               	rlf	___lomod@divisor+1,f
  3652  01DD  0DA2               	rlf	___lomod@divisor+2,f
  3653  01DE  0DA3               	rlf	___lomod@divisor+3,f
  3654  01DF  0DA4               	rlf	___lomod@divisor+4,f
  3655  01E0  0DA5               	rlf	___lomod@divisor+5,f
  3656  01E1  0DA6               	rlf	___lomod@divisor+6,f
  3657  01E2  0DA7               	rlf	___lomod@divisor+7,f
  3658  01E3                     l1273:
  3659  01E3  3001               	movlw	1
  3660  01E4  00F0               	movwf	??___lomod
  3661  01E5  0870               	movf	??___lomod,w
  3662  01E6  07F1               	addwf	___lomod@counter,f
  3663  01E7                     l1275:
  3664  01E7  1FA7               	btfss	___lomod@divisor+7,7
  3665  01E8  29EA               	goto	u991
  3666  01E9  29EB               	goto	u990
  3667  01EA                     u991:
  3668  01EA  29DB               	goto	l1271
  3669  01EB                     u990:
  3670  01EB                     l1277:
  3671  01EB  0827               	movf	___lomod@divisor+7,w
  3672  01EC  022F               	subwf	___lomod@dividend+7,w
  3673  01ED  1D03               	skipz
  3674  01EE  2A09               	goto	u1005
  3675  01EF  0826               	movf	___lomod@divisor+6,w
  3676  01F0  022E               	subwf	___lomod@dividend+6,w
  3677  01F1  1D03               	skipz
  3678  01F2  2A09               	goto	u1005
  3679  01F3  0825               	movf	___lomod@divisor+5,w
  3680  01F4  022D               	subwf	___lomod@dividend+5,w
  3681  01F5  1D03               	skipz
  3682  01F6  2A09               	goto	u1005
  3683  01F7  0824               	movf	___lomod@divisor+4,w
  3684  01F8  022C               	subwf	___lomod@dividend+4,w
  3685  01F9  1D03               	skipz
  3686  01FA  2A09               	goto	u1005
  3687  01FB  0823               	movf	___lomod@divisor+3,w
  3688  01FC  022B               	subwf	___lomod@dividend+3,w
  3689  01FD  1D03               	skipz
  3690  01FE  2A09               	goto	u1005
  3691  01FF  0822               	movf	___lomod@divisor+2,w
  3692  0200  022A               	subwf	___lomod@dividend+2,w
  3693  0201  1D03               	skipz
  3694  0202  2A09               	goto	u1005
  3695  0203  0821               	movf	___lomod@divisor+1,w
  3696  0204  0229               	subwf	___lomod@dividend+1,w
  3697  0205  1D03               	skipz
  3698  0206  2A09               	goto	u1005
  3699  0207  0820               	movf	___lomod@divisor,w
  3700  0208  0228               	subwf	___lomod@dividend,w
  3701  0209                     u1005:
  3702  0209  1C03               	skipc
  3703  020A  2A0C               	goto	u1001
  3704  020B  2A0D               	goto	u1000
  3705  020C                     u1001:
  3706  020C  2A1D               	goto	l1281
  3707  020D                     u1000:
  3708  020D                     l1279:
  3709  020D  0820               	movf	___lomod@divisor,w
  3710  020E  02A8               	subwf	___lomod@dividend,f
  3711  020F  0821               	movf	___lomod@divisor+1,w
  3712  0210  3BA9               	subwfb	___lomod@dividend+1,f
  3713  0211  0822               	movf	___lomod@divisor+2,w
  3714  0212  3BAA               	subwfb	___lomod@dividend+2,f
  3715  0213  0823               	movf	___lomod@divisor+3,w
  3716  0214  3BAB               	subwfb	___lomod@dividend+3,f
  3717  0215  0824               	movf	___lomod@divisor+4,w
  3718  0216  3BAC               	subwfb	___lomod@dividend+4,f
  3719  0217  0825               	movf	___lomod@divisor+5,w
  3720  0218  3BAD               	subwfb	___lomod@dividend+5,f
  3721  0219  0826               	movf	___lomod@divisor+6,w
  3722  021A  3BAE               	subwfb	___lomod@dividend+6,f
  3723  021B  0827               	movf	___lomod@divisor+7,w
  3724  021C  3BAF               	subwfb	___lomod@dividend+7,f
  3725  021D                     l1281:
  3726  021D  36A7               	lsrf	___lomod@divisor+7,f
  3727  021E  0CA6               	rrf	___lomod@divisor+6,f
  3728  021F  0CA5               	rrf	___lomod@divisor+5,f
  3729  0220  0CA4               	rrf	___lomod@divisor+4,f
  3730  0221  0CA3               	rrf	___lomod@divisor+3,f
  3731  0222  0CA2               	rrf	___lomod@divisor+2,f
  3732  0223  0CA1               	rrf	___lomod@divisor+1,f
  3733  0224  0CA0               	rrf	___lomod@divisor,f
  3734  0225  3001               	movlw	1
  3735  0226  02F1               	subwf	___lomod@counter,f
  3736  0227  1D03               	btfss	3,2
  3737  0228  2A2A               	goto	u1011
  3738  0229  2A2B               	goto	u1010
  3739  022A                     u1011:
  3740  022A  29EB               	goto	l1277
  3741  022B                     u1010:
  3742  022B                     l454:
  3743  022B  0828               	movf	___lomod@dividend,w
  3744  022C  00A0               	movwf	?___lomod
  3745  022D  0829               	movf	___lomod@dividend+1,w
  3746  022E  00A1               	movwf	?___lomod+1
  3747  022F  082A               	movf	___lomod@dividend+2,w
  3748  0230  00A2               	movwf	?___lomod+2
  3749  0231  082B               	movf	___lomod@dividend+3,w
  3750  0232  00A3               	movwf	?___lomod+3
  3751  0233  082C               	movf	___lomod@dividend+4,w
  3752  0234  00A4               	movwf	?___lomod+4
  3753  0235  082D               	movf	___lomod@dividend+5,w
  3754  0236  00A5               	movwf	?___lomod+5
  3755  0237  082E               	movf	___lomod@dividend+6,w
  3756  0238  00A6               	movwf	?___lomod+6
  3757  0239  082F               	movf	___lomod@dividend+7,w
  3758  023A  00A7               	movwf	?___lomod+7
  3759  023B                     l461:
  3760  023B  0008               	return
  3761  023C                     __end_of___lomod:
  3762                           
  3763                           	psect	text15
  3764  023C                     __ptext15:	
  3765 ;; *************** function ___lodiv *****************
  3766 ;; Defined at:
  3767 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  divisor         8    0[BANK0 ] unsigned long long 
  3770 ;;  dividend        8    8[BANK0 ] unsigned long long 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  quotient        8    1[COMMON] unsigned long long 
  3773 ;;  counter         1    9[COMMON] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  8    0[BANK0 ] unsigned long long 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3783 ;;      Params:         0      16       0       0       0       0       0       0
  3784 ;;      Locals:         9       0       0       0       0       0       0       0
  3785 ;;      Temps:          1       0       0       0       0       0       0       0
  3786 ;;      Totals:        10      16       0       0       0       0       0       0
  3787 ;;Total ram usage:       26 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_utoa
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796  023C                     ___lodiv:	
  3797                           ;psect for function ___lodiv
  3798                           
  3799  023C                     l1245:	
  3800                           ;incstack = 0
  3801                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3802                           
  3803  023C  3071               	movlw	low ___lodiv@quotient
  3804  023D  0086               	movwf	6
  3805  023E  3000               	movlw	high ___lodiv@quotient
  3806  023F  0087               	movwf	7
  3807  0240  3008               	movlw	8
  3808  0241  00F0               	movwf	??___lodiv
  3809  0242  3000               	movlw	0
  3810  0243                     u930:
  3811  0243  001E               	movwi fsr1++
  3812  0244  0BF0               	decfsz	??___lodiv,f
  3813  0245  2A43               	goto	u930
  3814  0246                     l1247:
  3815  0246  0020               	movlb	0	; select bank0
  3816  0247  0820               	movf	___lodiv@divisor,w
  3817  0248  0421               	iorwf	___lodiv@divisor+1,w
  3818  0249  0422               	iorwf	___lodiv@divisor+2,w
  3819  024A  0423               	iorwf	___lodiv@divisor+3,w
  3820  024B  0424               	iorwf	___lodiv@divisor+4,w
  3821  024C  0425               	iorwf	___lodiv@divisor+5,w
  3822  024D  0426               	iorwf	___lodiv@divisor+6,w
  3823  024E  0427               	iorwf	___lodiv@divisor+7,w
  3824  024F  1903               	skipnz
  3825  0250  2A52               	goto	u941
  3826  0251  2A53               	goto	u940
  3827  0252                     u941:
  3828  0252  2AAF               	goto	l444
  3829  0253                     u940:
  3830  0253                     l1249:
  3831  0253  01F9               	clrf	___lodiv@counter
  3832  0254  0AF9               	incf	___lodiv@counter,f
  3833  0255  2A62               	goto	l1255
  3834  0256                     l1251:
  3835  0256  35A0               	lslf	___lodiv@divisor,f
  3836  0257  0DA1               	rlf	___lodiv@divisor+1,f
  3837  0258  0DA2               	rlf	___lodiv@divisor+2,f
  3838  0259  0DA3               	rlf	___lodiv@divisor+3,f
  3839  025A  0DA4               	rlf	___lodiv@divisor+4,f
  3840  025B  0DA5               	rlf	___lodiv@divisor+5,f
  3841  025C  0DA6               	rlf	___lodiv@divisor+6,f
  3842  025D  0DA7               	rlf	___lodiv@divisor+7,f
  3843  025E                     l1253:
  3844  025E  3001               	movlw	1
  3845  025F  00F0               	movwf	??___lodiv
  3846  0260  0870               	movf	??___lodiv,w
  3847  0261  07F9               	addwf	___lodiv@counter,f
  3848  0262                     l1255:
  3849  0262  1FA7               	btfss	___lodiv@divisor+7,7
  3850  0263  2A65               	goto	u951
  3851  0264  2A66               	goto	u950
  3852  0265                     u951:
  3853  0265  2A56               	goto	l1251
  3854  0266                     u950:
  3855  0266                     l1257:
  3856  0266  35F1               	lslf	___lodiv@quotient,f
  3857  0267  0DF2               	rlf	___lodiv@quotient+1,f
  3858  0268  0DF3               	rlf	___lodiv@quotient+2,f
  3859  0269  0DF4               	rlf	___lodiv@quotient+3,f
  3860  026A  0DF5               	rlf	___lodiv@quotient+4,f
  3861  026B  0DF6               	rlf	___lodiv@quotient+5,f
  3862  026C  0DF7               	rlf	___lodiv@quotient+6,f
  3863  026D  0DF8               	rlf	___lodiv@quotient+7,f
  3864  026E                     l1259:
  3865  026E  0827               	movf	___lodiv@divisor+7,w
  3866  026F  022F               	subwf	___lodiv@dividend+7,w
  3867  0270  1D03               	skipz
  3868  0271  2A8C               	goto	u965
  3869  0272  0826               	movf	___lodiv@divisor+6,w
  3870  0273  022E               	subwf	___lodiv@dividend+6,w
  3871  0274  1D03               	skipz
  3872  0275  2A8C               	goto	u965
  3873  0276  0825               	movf	___lodiv@divisor+5,w
  3874  0277  022D               	subwf	___lodiv@dividend+5,w
  3875  0278  1D03               	skipz
  3876  0279  2A8C               	goto	u965
  3877  027A  0824               	movf	___lodiv@divisor+4,w
  3878  027B  022C               	subwf	___lodiv@dividend+4,w
  3879  027C  1D03               	skipz
  3880  027D  2A8C               	goto	u965
  3881  027E  0823               	movf	___lodiv@divisor+3,w
  3882  027F  022B               	subwf	___lodiv@dividend+3,w
  3883  0280  1D03               	skipz
  3884  0281  2A8C               	goto	u965
  3885  0282  0822               	movf	___lodiv@divisor+2,w
  3886  0283  022A               	subwf	___lodiv@dividend+2,w
  3887  0284  1D03               	skipz
  3888  0285  2A8C               	goto	u965
  3889  0286  0821               	movf	___lodiv@divisor+1,w
  3890  0287  0229               	subwf	___lodiv@dividend+1,w
  3891  0288  1D03               	skipz
  3892  0289  2A8C               	goto	u965
  3893  028A  0820               	movf	___lodiv@divisor,w
  3894  028B  0228               	subwf	___lodiv@dividend,w
  3895  028C                     u965:
  3896  028C  1C03               	skipc
  3897  028D  2A8F               	goto	u961
  3898  028E  2A90               	goto	u960
  3899  028F                     u961:
  3900  028F  2AA1               	goto	l1265
  3901  0290                     u960:
  3902  0290                     l1261:
  3903  0290  0820               	movf	___lodiv@divisor,w
  3904  0291  02A8               	subwf	___lodiv@dividend,f
  3905  0292  0821               	movf	___lodiv@divisor+1,w
  3906  0293  3BA9               	subwfb	___lodiv@dividend+1,f
  3907  0294  0822               	movf	___lodiv@divisor+2,w
  3908  0295  3BAA               	subwfb	___lodiv@dividend+2,f
  3909  0296  0823               	movf	___lodiv@divisor+3,w
  3910  0297  3BAB               	subwfb	___lodiv@dividend+3,f
  3911  0298  0824               	movf	___lodiv@divisor+4,w
  3912  0299  3BAC               	subwfb	___lodiv@dividend+4,f
  3913  029A  0825               	movf	___lodiv@divisor+5,w
  3914  029B  3BAD               	subwfb	___lodiv@dividend+5,f
  3915  029C  0826               	movf	___lodiv@divisor+6,w
  3916  029D  3BAE               	subwfb	___lodiv@dividend+6,f
  3917  029E  0827               	movf	___lodiv@divisor+7,w
  3918  029F  3BAF               	subwfb	___lodiv@dividend+7,f
  3919  02A0                     l1263:
  3920  02A0  1471               	bsf	___lodiv@quotient,0
  3921  02A1                     l1265:
  3922  02A1  36A7               	lsrf	___lodiv@divisor+7,f
  3923  02A2  0CA6               	rrf	___lodiv@divisor+6,f
  3924  02A3  0CA5               	rrf	___lodiv@divisor+5,f
  3925  02A4  0CA4               	rrf	___lodiv@divisor+4,f
  3926  02A5  0CA3               	rrf	___lodiv@divisor+3,f
  3927  02A6  0CA2               	rrf	___lodiv@divisor+2,f
  3928  02A7  0CA1               	rrf	___lodiv@divisor+1,f
  3929  02A8  0CA0               	rrf	___lodiv@divisor,f
  3930  02A9  3001               	movlw	1
  3931  02AA  02F9               	subwf	___lodiv@counter,f
  3932  02AB  1D03               	btfss	3,2
  3933  02AC  2AAE               	goto	u971
  3934  02AD  2AAF               	goto	u970
  3935  02AE                     u971:
  3936  02AE  2A66               	goto	l1257
  3937  02AF                     u970:
  3938  02AF                     l444:
  3939  02AF  0871               	movf	___lodiv@quotient,w
  3940  02B0  00A0               	movwf	?___lodiv
  3941  02B1  0872               	movf	___lodiv@quotient+1,w
  3942  02B2  00A1               	movwf	?___lodiv+1
  3943  02B3  0873               	movf	___lodiv@quotient+2,w
  3944  02B4  00A2               	movwf	?___lodiv+2
  3945  02B5  0874               	movf	___lodiv@quotient+3,w
  3946  02B6  00A3               	movwf	?___lodiv+3
  3947  02B7  0875               	movf	___lodiv@quotient+4,w
  3948  02B8  00A4               	movwf	?___lodiv+4
  3949  02B9  0876               	movf	___lodiv@quotient+5,w
  3950  02BA  00A5               	movwf	?___lodiv+5
  3951  02BB  0877               	movf	___lodiv@quotient+6,w
  3952  02BC  00A6               	movwf	?___lodiv+6
  3953  02BD  0878               	movf	___lodiv@quotient+7,w
  3954  02BE  00A7               	movwf	?___lodiv+7
  3955  02BF                     l451:
  3956  02BF  0008               	return
  3957  02C0                     __end_of___lodiv:
  3958                           
  3959                           	psect	text16
  3960  0066                     __ptext16:	
  3961 ;; *************** function _EUSART_Read *****************
  3962 ;; Defined at:
  3963 ;;		line 53 in file "newmain.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      unsigned char 
  3970 ;; Registers used:
  3971 ;;		wreg
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3977 ;;      Params:         0       0       0       0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0
  3980 ;;      Totals:         0       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990  0066                     _EUSART_Read:	
  3991                           ;psect for function _EUSART_Read
  3992                           
  3993  0066                     l1425:	
  3994                           ;incstack = 0
  3995                           ; Regs used in _EUSART_Read: [wreg]
  3996                           
  3997  0066                     l74:	
  3998                           ;newmain.c: 56:     {;newmain.c: 57:     }
  3999                           
  4000                           
  4001                           ;newmain.c: 55:     while(!PIR1bits.RCIF)
  4002  0066  0020               	movlb	0	; select bank0
  4003  0067  1E91               	btfss	17,5	;volatile
  4004  0068  286A               	goto	u1171
  4005  0069  286B               	goto	u1170
  4006  006A                     u1171:
  4007  006A  2866               	goto	l74
  4008  006B                     u1170:
  4009  006B                     l76:
  4010                           
  4011                           ;newmain.c: 58:     if(1 == RCSTAbits.OERR)
  4012  006B  0023               	movlb	3	; select bank3
  4013  006C  1C9D               	btfss	29,1	;volatile
  4014  006D  286F               	goto	u1181
  4015  006E  2870               	goto	u1180
  4016  006F                     u1181:
  4017  006F  2872               	goto	l1429
  4018  0070                     u1180:
  4019  0070                     l1427:
  4020                           
  4021                           ;newmain.c: 59:     {;newmain.c: 60:         RCSTAbits.CREN = 0;
  4022  0070  121D               	bcf	29,4	;volatile
  4023                           
  4024                           ;newmain.c: 61:         RCSTAbits.CREN = 1;
  4025  0071  161D               	bsf	29,4	;volatile
  4026  0072                     l1429:
  4027                           
  4028                           ;newmain.c: 63:     return RCREG;
  4029  0072  0819               	movf	25,w	;volatile
  4030  0073                     l78:
  4031  0073  0008               	return
  4032  0074                     __end_of_EUSART_Read:
  4033                           
  4034                           	psect	text17
  4035  0044                     __ptext17:	
  4036 ;; *************** function _EUSART_Initialize *****************
  4037 ;; Defined at:
  4038 ;;		line 45 in file "newmain.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4052 ;;      Params:         0       0       0       0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0
  4055 ;;      Totals:         0       0       0       0       0       0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_main
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065  0044                     _EUSART_Initialize:	
  4066                           ;psect for function _EUSART_Initialize
  4067                           
  4068  0044                     l1421:	
  4069                           ;incstack = 0
  4070                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4071                           
  4072                           
  4073                           ;newmain.c: 47:     BAUDCON = 0x08;
  4074  0044  3008               	movlw	8
  4075  0045  0023               	movlb	3	; select bank3
  4076  0046  009F               	movwf	31	;volatile
  4077                           
  4078                           ;newmain.c: 48:     RCSTA = 0x90;
  4079  0047  3090               	movlw	144
  4080  0048  009D               	movwf	29	;volatile
  4081                           
  4082                           ;newmain.c: 49:     TXSTA = 0x24;
  4083  0049  3024               	movlw	36
  4084  004A  009E               	movwf	30	;volatile
  4085                           
  4086                           ;newmain.c: 50:     SPBRGL = 0xCF;
  4087  004B  30CF               	movlw	207
  4088  004C  009B               	movwf	27	;volatile
  4089  004D                     l1423:
  4090                           
  4091                           ;newmain.c: 51:     SPBRGH = 0x00;
  4092  004D  019C               	clrf	28	;volatile
  4093  004E                     l71:
  4094  004E  0008               	return
  4095  004F                     __end_of_EUSART_Initialize:
  4096  007E                     btemp	set	126	;btemp
  4097  007E                     wtemp0	set	126
  4098  218C                     
  4099                           	psect	idloc
  4100                           
  4101                           ;Config register IDLOC0 @ 0x8000
  4102                           ;	unspecified, using default values
  4103  8000                     	org	32768
  4104  8000  3FFF               	dw	16383
  4105                           
  4106                           ;Config register IDLOC1 @ 0x8001
  4107                           ;	unspecified, using default values
  4108  8001                     	org	32769
  4109  8001  3FFF               	dw	16383
  4110                           
  4111                           ;Config register IDLOC2 @ 0x8002
  4112                           ;	unspecified, using default values
  4113  8002                     	org	32770
  4114  8002  3FFF               	dw	16383
  4115                           
  4116                           ;Config register IDLOC3 @ 0x8003
  4117                           ;	unspecified, using default values
  4118  8003                     	org	32771
  4119  8003  3FFF               	dw	16383
  4120                           
  4121                           	psect	config
  4122                           
  4123                           ;Config register CONFIG1 @ 0x8007
  4124                           ;	Oscillator Selection Bits
  4125                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4126                           ;	Watchdog Timer Enable
  4127                           ;	WDTE = OFF, WDT disabled
  4128                           ;	Power-up Timer Enable
  4129                           ;	PWRTE = OFF, PWRT disabled
  4130                           ;	MCLR Pin Function Select
  4131                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4132                           ;	Flash Program Memory Code Protection
  4133                           ;	CP = OFF, Program memory code protection is disabled
  4134                           ;	Brown-out Reset Enable
  4135                           ;	BOREN = OFF, Brown-out Reset disabled
  4136                           ;	Clock Out Enable
  4137                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4138                           ;	Internal/External Switchover Mode
  4139                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  4140                           ;	Fail-Safe Clock Monitor Enable
  4141                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4142  8007                     	org	32775
  4143  8007  09A4               	dw	2468
  4144                           
  4145                           ;Config register CONFIG2 @ 0x8008
  4146                           ;	Flash Memory Self-Write Protection
  4147                           ;	WRT = OFF, Write protection off
  4148                           ;	Stack Overflow/Underflow Reset Enable
  4149                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4150                           ;	Brown-out Reset Voltage Selection
  4151                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4152                           ;	Low-Power Brown Out Reset
  4153                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4154                           ;	Low-Voltage Programming Enable
  4155                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4156  8008                     	org	32776
  4157  8008  1DFF               	dw	7679

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         44
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     18      63
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            76      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 1
		 -> buffer1(BANK1[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S465$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S465$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    ON_OFF_BLINK@buffer	PTR unsigned char  size(2) Largest target is 100
		 -> buffer(BIGRAM[100]), 

    ON_OFF_BLINK@buffer1	PTR unsigned char  size(1) Largest target is 1
		 -> buffer1(BANK1[1]), 


Critical Paths under _main in COMMON

    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write

Critical Paths under _main in BANK0

    _main->_ON_OFF_BLINK
    _ON_OFF_BLINK->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->___lodiv
    _utoa->___lomod
    _pad->_fputs

Critical Paths under _main in BANK1

    _main->_ON_OFF_BLINK
    _ON_OFF_BLINK->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7234
                                             75 BANK0      4     4      0
                  _EUSART_Initialize
                        _EUSART_Read
                       _ON_OFF_BLINK
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ON_OFF_BLINK                                        13     9      4    7143
                                             69 BANK0      6     2      4
                                             12 BANK1      6     6      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    5622
                                             64 BANK0      5     1      4
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3    5314
                                             56 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2    5004
                                             40 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                24    16      8    3632
                                             16 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    2625
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1193
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     878
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
   _EUSART_Read
   _ON_OFF_BLINK
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     12      3F       8       78.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               4C      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      9D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 30 00:45:35 2022

                            l71 004E                              l81 003B                              l65 0039  
                            l74 0066                              l90 0059                              l76 006B  
                            l84 0043                              l68 0084                              l78 0073  
                            l87 0050                             l103 0628                             l124 07E4  
                           l132 02D7                             l109 071D                             l451 02BF  
                           l444 02AF                             l461 023B                             l454 022B  
                           l702 01B0                             l711 044A                             l704 01CA  
                           l707 042D                             l731 011F                             l724 0421  
                           l743 0171                             l751 00C5                             l719 050F  
                           l674 00EE                             l757 009D                             l699 018E  
                           u900 0157                             u901 0156                             u910 00C5  
                           u911 00C4                             u920 0097                             u905 0153  
                           u921 0096                             u930 0243                             u850 0040  
                           u851 003F                             u940 0253                             u860 0055  
                           u941 0252                             u861 0054                             u950 0266  
                           u870 0125                             u951 0265                             u871 0124  
                           u960 0290                             u880 012A                             u961 028F  
                           u881 0129                             u970 02AF                             u890 0139  
                           u971 02AE                             u891 0138                             u980 01D8  
                           u965 028C                             u981 01D7                             u990 01EB  
                           u991 01EA                             _pad 0172                             _val 00A8  
                           wreg 0009                    ?_EUSART_Read 0070                            l1203 003B  
                          l1211 0120                            l1205 0040                            l1221 0157  
                          l1213 0125                            l1301 01BE                            l1207 0050  
                          l1223 0168                            l1215 012A                            l1231 00B1  
                          l1311 0442                            l1209 0055                            l1217 012F  
                          l1233 00B6                            l1241 0097                            l1321 0494  
                          l1313 0452                            l1305 0424                            l1401 00D8  
                          l1251 0256                            l1219 0139                            l1227 00A0  
                          l1235 0086                            l1331 04DC                            l1323 0498  
                          l1315 0466                            l1307 0429                            l1403 00E5  
                          l1411 0074                            l1421 0044                            l1261 0290  
                          l1253 025E                            l1245 023C                            l1229 00A3  
                          l1237 008B                            l1333 04E9                            l1325 049C  
                          l1317 0469                            l1309 043C                            l1341 0361  
                          l1501 0655                            l1413 0078                            l1423 004D  
                          l1263 02A0                            l1255 0262                            l1247 0246  
                          l1271 01DB                            l1239 008F                            l1335 04F7  
                          l1319 046E                            l1327 04C9                            l1351 0395  
                          l1343 0372                            l1503 0660                            l1407 0034  
                          l1415 007B                            l1425 0066                            l1265 02A1  
                          l1257 0266                            l1249 0253                            l1281 021D  
                          l1273 01E3                            l1329 04D0                            l1337 04FC  
                          l1361 03DA                            l1353 039D                            l1345 037A  
                          l1521 068F                            l1505 066B                            l1441 0534  
                          l1433 0510                            l1409 0037                            l1417 0080  
                          l1427 0070                            l1259 026E                            l1275 01E7  
                          l1267 01CB                            l1291 018C                            l1283 0174  
                          l1371 03FB                            l1363 03E2                            l1355 03AF  
                          l1347 037F                            l1531 06C6                            l1523 069A  
                          l1507 0676                            l1515 0686                            l1451 0579  
                          l1443 053F                            l1435 0513                            l1419 0082  
                          l1611 02C0                            l1429 0072                            l1277 01EB  
                          l1269 01D8                            l1293 0191                            l1285 0179  
                          l1365 03ED                            l1349 0383                            l1541 0705  
                          l1533 06D1                            l1525 06A5                            l1517 0689  
                          l1509 0681                            l1461 0598                            l1453 057C  
                          l1445 054A                            l1437 0519                            l1613 02C9  
                          l1279 020D                            l1295 019D                            l1287 0182  
                          l1359 03C9                            l1375 03FE                            l1391 0117  
                          l1383 00F1                            l1551 0725                            l1543 070C  
                          l1535 06E4                            l1527 06B0                            l1519 068F  
                          l1471 05D7                            l1463 05A3                            l1455 0582  
                          l1447 055D                            l1439 0529                            l1631 0307  
                          l1623 02DB                            l1615 02CF                            l1297 01A2  
                          l1289 0187                            l1377 0417                            l1369 03F3  
                          l1385 00F5                            l1561 0746                            l1553 072B  
                          l1545 070F                            l1537 06EF                            l1529 06BB  
                          l1481 0616                            l1473 05E2                            l1465 05AE  
                          l1457 0587                            l1449 0568                            l1641 0340  
                          l1633 0313                            l1625 02EC                            l1617 02D5  
                          l1299 01B5                            l1387 00F9                            l1395 00C8  
                          l1555 072E                            l1547 0711                            l1539 0702  
                          l1571 0763                            l1491 0636                            l1483 061A  
                          l1475 05ED                            l1467 05B9                            l1459 058E  
                          l1643 0345                            l1635 031E                            l1627 02F8  
                          l1389 010D                            l1397 00D4                            l1581 0799  
                          l1573 076D                            l1565 074C                            l1557 0735  
                          l1549 0717                            l1493 0639                            l1485 061C  
                          l1477 05F8                            l1469 05CC                            l1645 034B  
                          l1637 032A                            l1629 02FC                            l1399 00D6  
                          l1591 07BB                            l1583 07A4                            l1575 0778  
                          l1567 075D                            l1559 0739                            l1495 063F  
                          l1487 0622                            l1479 060B                            l1639 0335  
                          l1593 07C8                            l1585 07AF                            l1577 0783  
                          l1497 0644                            l1489 0630                            l1587 07B1  
                          l1579 078E                            l1499 064B                            l1597 07CE  
                          l1589 07B7                            l1599 07DF                            ?_pad 0024  
                          STR_1 0800                            u1000 020D                            u1001 020C  
                          u1010 022B                            u1011 022A                            u1020 0179  
                          u1100 04E9                            u1005 0209                            u1021 0178  
                          u1101 04E8                            u1030 0187                            u1110 04F7  
                          u1031 0186                            u1111 04F6                            u1040 01B0  
                          u1120 04FC                            u1200 053F                            u1041 01AF  
                          u1121 04FB                            u1105 04E5                            u1201 053E  
                          u1050 01B5                            u1130 0372                            u1210 054A  
                          u1051 01B4                            u1115 04F3                            u1131 0371  
                          u1211 0549                            u1060 0429                            u1140 0395  
                          u1300 05E2                            u1220 055D                            u1045 01AC  
                          u1061 0428                            u1141 0394                            u1301 05E1  
                          u1221 055C                            u1070 043C                            u1150 03DA  
                          u1310 05ED                            u1230 0568                            u1071 043B  
                          u1151 03D9                            u1311 05EC                            u1231 0567  
                          u1080 04D0                            u1160 0117                            u1400 0681  
                          u1320 05F8                            u1081 04CF                            u1161 0116  
                          u1401 0680                            u1321 05F7                            u1170 006B  
                          u1090 04DC                            u1410 069A                            u1330 060B  
                          u1250 0598                            u1171 006A                            u1091 04DB  
                          u1075 0438                            u1411 0699                            u1331 060A  
                          u1251 0597                            u1180 0070                            u1500 0725  
                          u1420 06A5                            u1340 0616                            u1260 05A3  
                          u1244 0571                            u1181 006F                            u1501 0724  
                          u1421 06A4                            u1341 0615                            u1261 05A2  
                          u1245 0570                            _LATA 010C                            u1510 074B  
                          u1430 06B0                            u1350 0630                            u1270 05AE  
                          u1190 0534                            _LATB 010D                            u1511 074A  
                          u1431 06AF                            u1351 062F                            u1271 05AD  
                          u1191 0533                            _LATC 010E                            u1600 07CD  
                          u1520 0762                            u1440 06BB                            u1360 0655  
                          u1280 05B9                            u1601 07CC                            u1521 0761  
                          u1441 06BA                            u1361 0654                            u1281 05B8  
                          u1610 07E4                            u1530 076D                            u1450 06C6  
                          u1370 0660                            u1290 05D7                            u1611 07E3  
                          u1531 076C                            u1451 06C5                            u1371 065F  
                          u1291 05D6                            u1540 0778                            u1460 06D1  
                          u1380 066B                            u1541 0777                            u1461 06D0  
                          u1381 066A                            u1550 0783                            u1470 06E4  
                          u1390 0676                            u1630 02DB                            u1551 0782  
                          u1471 06E3                            u1391 0675                            u1631 02DA  
                          u1560 078E                            u1480 06EF                            u1640 02F8  
                          u1561 078D                            u1481 06EE                            u1641 02F7  
                          u1570 0799                            u1650 0307                            u1571 0798  
                          u1707 0756                            u1651 0306                            u1580 07A4  
                          u1660 031E                            u1717 07C1                            u1581 07A3  
                          u1661 031D                            u1590 07AF                            u1494 06F8  
                          u1670 0335                            u1727 07D8                            u1591 07AE  
                          u1495 06F7                            u1671 0334                            u1680 034B  
                          u1681 034A                            u1697 073F                            _RCIF 008D  
                          _TXIF 008C                            _dbuf 00AA                            _main 02C0  
                          _prec 00A4                            _nout 00A0                            pad@i 0028  
                          pad@p 0025                            fsr0h 0005                            fsr1h 0007  
                          indf0 0000                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            pad@w 002A                            btemp 007E  
                          _utoa 0422                            start 0002                           ??_pad 0027  
                 ?_EUSART_Write 0070   __end_of_OSCILLATOR_Initialize 003A                           ?_main 0070  
                         ?_utoa 0030                 __end_of___lodiv 02C0                 __end_of___lomod 023C  
                         _RCREG 0199                           _RCSTA 019D                 ON_OFF_BLINK@cnt 00D7  
                  vfpfcnvrt@fmt 0048                    vfpfcnvrt@llu 004F                           _TRISA 008C  
                         _TRISB 008D                           _TRISC 008E                           _TXREG 019A  
                         _TXSTA 019E                           _flags 00A6                           _fputc 0120  
                         _fputs 009E                           _savee 006F                           pad@fp 002C  
                         _width 00A2                           _putch 004F                           main@i 006E  
                         utoa@d 0030                           utoa@i 0046                           utoa@n 003E  
                         utoa@p 003A                           utoa@w 003C                           status 0003  
                         wtemp0 007E                 __end_of_sprintf 00EF                ___lodiv@dividend 0028  
               __initialization 07E5                    __end_of_main 035F                    __end_of_utoa 0510  
                ??_EUSART_Write 0070                          ??_main 006B                          ??_utoa 0038  
              ___lodiv@quotient 0071                          ?_fputc 0072                          ?_fputs 007A  
                        _ANSELA 018C                          ?_putch 0070                          _ANSELB 018D  
                        _ANSELC 018E                          _BORCON 0116                          _OSCCON 0099  
              ON_OFF_BLINK@bitt 00DA                          _SPBRGH 019C                          _SPBRGL 019B  
                  vfprintf@cfmt 005E                       ??___lodiv 0070                       ??___lomod 0070  
                        _buffer 218C                          _savee1 00DE                          _savee2 00DD  
                        pad@buf 0024                          _strlen 0085                          fputc@c 0072  
                        fputs@c 0020                          fputs@i 0021                          fputs@s 0023  
                        putch@x 0071                __end_of_vfprintf 0120                          utoa@fp 0039  
                     ??_sprintf 0064         __end_of__initialization 07FD                  __pcstackCOMMON 0070  
                 __end_of_fputc 0172                   __end_of_fputs 00C6                   __end_of_putch 005A  
                       ??_fputc 0075                         ??_fputs 007B                         ??_putch 0071  
                    __pbssBANK0 006F                      __pbssBANK1 00A0            __end_of_EUSART_Write 0044  
                    __pmaintext 02C0                         _BAUDCON 019F                         ?_strlen 0070  
             ON_OFF_BLINK@bittt 00D9                ___lomod@dividend 0028                   ?_ON_OFF_BLINK 0065  
                       ___lodiv 023C                         ___lomod 01CB                       ?_vfprintf 0058  
                       __ptext1 0074                         __ptext2 0034                         __ptext3 0510  
                       __ptext4 00C6                         __ptext5 00EF                         __ptext6 035F  
                       __ptext7 0422                         __ptext8 0172                         __ptext9 0085  
                       _buffer1 00CA                         _buffer2 00A9           _OSCILLATOR_Initialize 0034  
      ??_PIN_MANAGER_Initialize 0070                         _sprintf 00C6                         clrloop0 005B  
          end_of_initialization 07FD                         fputc@fp 0074                         fputs@fp 007A  
             _EUSART_Initialize 0044              ?_EUSART_Initialize 0070             ON_OFF_BLINK@cnt_141 00D8  
             __end_of_vfpfcnvrt 0422                       _RCSTAbits 019D                  ??_ON_OFF_BLINK 0069  
           ON_OFF_BLINK@buffer1 0067                      ??_vfprintf 005B                         strlen@a 0073  
                       strlen@s 0074             ??_EUSART_Initialize 0070       __end_of_EUSART_Initialize 004F  
                   vfpfcnvrt@ap 0049                     vfpfcnvrt@fp 0057                    _EUSART_Write 003A  
        ?_OSCILLATOR_Initialize 0070                  __end_of_strlen 009E             start_initialization 07E5  
               ___lodiv@divisor 0020                 ___lodiv@counter 0079                     __end_of_pad 01CB  
                 ??_EUSART_Read 0070                     vfprintf@fmt 0058                        ??_strlen 0072  
                   __pbssBIGRAM 218C                       ___latbits 0002                   __pcstackBANK0 0020  
                 __pcstackBANK1 00CB            __end_of_ON_OFF_BLINK 07E5             __end_of_EUSART_Read 0074  
                     __pnvBANK1 00DD          _PIN_MANAGER_Initialize 0074                        ?___lodiv 0020  
                      ?___lomod 0020                 ___lomod@divisor 0020                 ___lomod@counter 0071  
                      ?_sprintf 0060                       clear_ram0 005A                        _PIR1bits 0011  
            ON_OFF_BLINK@buffer 0065                       _vfpfcnvrt 035F                     _EUSART_Read 0066  
                 ON_OFF_BLINK@i 0068                   ON_OFF_BLINK@j 00DB                   ON_OFF_BLINK@k 00DC  
                    vfprintf@ap 005A                      vfprintf@fp 005D         ??_OSCILLATOR_Initialize 0070  
                    ?_vfpfcnvrt 0048                      sprintf@fmt 0060                        __ptext10 009E  
                      __ptext11 0120                        __ptext12 004F                        __ptext13 003A  
                      __ptext14 01CB                        __ptext15 023C                        __ptext16 0066  
                      __ptext17 0044                    _ON_OFF_BLINK 0510                        _vfprintf 00EF  
                     sprintf@ap 00CB         ?_PIN_MANAGER_Initialize 0070                     ??_vfpfcnvrt 004A  
                 __pstringtext1 0800                   __pstringtext2 0000                        sprintf@f 00CD  
                      sprintf@s 00CC              EUSART_Write@txData 0070  __end_of_PIN_MANAGER_Initialize 0085  
