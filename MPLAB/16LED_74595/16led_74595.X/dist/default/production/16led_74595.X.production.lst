

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun May 29 21:40:39 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	nvBANK0
   209  0020                     __pnvBANK0:
   210  0020                     _a:
   211  0020                     	ds	2
   212  0008                     _PORTDbits	set	8
   213  0088                     _TRISD	set	136
   214                           
   215                           	psect	cinit
   216  07FC                     start_initialization:	
   217                           ; #config settings
   218                           
   219  07FC                     __initialization:
   220  07FC                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223  07FC                     __end_of__initialization:
   224  07FC  0183               	clrf	3
   225  07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	cstackCOMMON
   228  0070                     __pcstackCOMMON:
   229  0070                     ?_laybit7:
   230  0070                     ??_laybit7:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_xuat_1byte:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     laybit7@x:	
   240                           ; 1 bytes @ 0x0
   241                           
   242                           
   243                           ; 1 bytes @ 0x0
   244  0070                     	ds	1
   245  0071                     ??_xuat_1byte:
   246                           
   247                           ; 1 bytes @ 0x1
   248  0071                     	ds	1
   249  0072                     xuat_1byte@xuatbyte:
   250                           
   251                           ; 1 bytes @ 0x2
   252  0072                     	ds	1
   253  0073                     xuat_1byte@xuat:
   254                           
   255                           ; 1 bytes @ 0x3
   256  0073                     	ds	1
   257  0074                     xuat_1byte@b:
   258                           
   259                           ; 1 bytes @ 0x4
   260  0074                     	ds	1
   261  0075                     xuat_1byte@i:
   262                           
   263                           ; 1 bytes @ 0x5
   264  0075                     	ds	1
   265  0076                     ?_hienthi:
   266  0076                     hienthi@n:	
   267                           ; 1 bytes @ 0x6
   268                           
   269                           
   270                           ; 2 bytes @ 0x6
   271  0076                     	ds	2
   272  0078                     ??_hienthi:
   273                           
   274                           ; 1 bytes @ 0x8
   275  0078                     	ds	2
   276  007A                     hienthi@x:
   277                           
   278                           ; 1 bytes @ 0xA
   279  007A                     	ds	1
   280  007B                     hienthi@y:
   281                           
   282                           ; 1 bytes @ 0xB
   283  007B                     	ds	1
   284  007C                     ??_main:
   285                           
   286                           ; 1 bytes @ 0xC
   287  007C                     	ds	2
   288                           
   289                           	psect	cstackBANK0
   290  0022                     __pcstackBANK0:
   291  0022                     main@i:
   292                           
   293                           ; 1 bytes @ 0x0
   294  0022                     	ds	1
   295  0023                     main@i_79:
   296                           
   297                           ; 1 bytes @ 0x1
   298  0023                     	ds	1
   299                           
   300                           	psect	maintext
   301  0781                     __pmaintext:	
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 56 in file "newmain.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  i               1    1[BANK0 ] unsigned char 
   312 ;;  i               1    0[BANK0 ] unsigned char 
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, pclath, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : B00/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0       2       0       0       0
   324 ;;      Temps:          2       0       0       0       0
   325 ;;      Totals:         2       2       0       0       0
   326 ;;Total ram usage:        4 bytes
   327 ;; Hardware stack levels required when called: 3
   328 ;; This function calls:
   329 ;;		_hienthi
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335  0781                     _main:	
   336                           ;psect for function _main
   337                           
   338  0781                     l763:	
   339                           ;incstack = 0
   340                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   341                           
   342                           
   343                           ;newmain.c: 57:     TRISD = 0;
   344  0781  1683               	bsf	3,5	;RP0=1, select bank1
   345  0782  1303               	bcf	3,6	;RP1=0, select bank1
   346  0783  0188               	clrf	8	;volatile
   347  0784                     l26:	
   348                           ;newmain.c: 58:     while(1)
   349                           
   350                           
   351                           ;newmain.c: 59:     {;newmain.c: 60:         a = 0;
   352  0784  1283               	bcf	3,5	;RP0=0, select bank0
   353  0785  01A0               	clrf	_a
   354  0786  01A1               	clrf	_a+1
   355  0787                     l765:
   356                           
   357                           ;newmain.c: 61:         hienthi(a);
   358  0787  3000               	movlw	0
   359  0788  00F6               	movwf	hienthi@n
   360  0789  00F7               	movwf	hienthi@n+1
   361  078A  120A  118A  2739  120A  118A  	fcall	_hienthi
   362  078F                     l767:
   363                           
   364                           ;newmain.c: 62:         _delay((unsigned long)((50)*(8000000/4000.0)));
   365  078F  3082               	movlw	130
   366  0790  00FD               	movwf	??_main+1
   367  0791  30DD               	movlw	221
   368  0792  00FC               	movwf	??_main
   369  0793                     u97:
   370  0793  0BFC               	decfsz	??_main,f
   371  0794  2F93               	goto	u97
   372  0795  0BFD               	decfsz	??_main+1,f
   373  0796  2F93               	goto	u97
   374  0797  2F98               	nop2
   375  0798                     l769:
   376                           
   377                           ;newmain.c: 63:         a = 0b0000000000000001;
   378  0798  3001               	movlw	1
   379  0799  1283               	bcf	3,5	;RP0=0, select bank0
   380  079A  1303               	bcf	3,6	;RP1=0, select bank0
   381  079B  00A0               	movwf	_a
   382  079C  3000               	movlw	0
   383  079D  00A1               	movwf	_a+1
   384  079E                     l771:
   385                           
   386                           ;newmain.c: 64:         for(unsigned char i = 0; i < 16; i++)
   387  079E  01A2               	clrf	main@i
   388  079F                     l777:
   389                           
   390                           ;newmain.c: 65:         {;newmain.c: 66:             hienthi(a);
   391  079F  0821               	movf	_a+1,w
   392  07A0  00F7               	movwf	hienthi@n+1
   393  07A1  0820               	movf	_a,w
   394  07A2  00F6               	movwf	hienthi@n
   395  07A3  120A  118A  2739  120A  118A  	fcall	_hienthi
   396  07A8                     l779:
   397                           
   398                           ;newmain.c: 67:             a = a << 1;
   399  07A8  1003               	clrc
   400  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   401  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   402  07AB  0D20               	rlf	_a,w
   403  07AC  00A0               	movwf	_a
   404  07AD  0D21               	rlf	_a+1,w
   405  07AE  00A1               	movwf	_a+1
   406  07AF                     l781:
   407                           
   408                           ;newmain.c: 68:             _delay((unsigned long)((50)*(8000000/4000.0)));
   409  07AF  3082               	movlw	130
   410  07B0  00FD               	movwf	??_main+1
   411  07B1  30DD               	movlw	221
   412  07B2  00FC               	movwf	??_main
   413  07B3                     u107:
   414  07B3  0BFC               	decfsz	??_main,f
   415  07B4  2FB3               	goto	u107
   416  07B5  0BFD               	decfsz	??_main+1,f
   417  07B6  2FB3               	goto	u107
   418  07B7  2FB8               	nop2
   419  07B8                     l783:
   420                           
   421                           ;newmain.c: 69:         }
   422  07B8  3001               	movlw	1
   423  07B9  00FC               	movwf	??_main
   424  07BA  087C               	movf	??_main,w
   425  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   426  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   427  07BD  07A2               	addwf	main@i,f
   428  07BE                     l785:
   429  07BE  3010               	movlw	16
   430  07BF  0222               	subwf	main@i,w
   431  07C0  1C03               	skipc
   432  07C1  2FC3               	goto	u71
   433  07C2  2FC4               	goto	u70
   434  07C3                     u71:
   435  07C3  2F9F               	goto	l777
   436  07C4                     u70:
   437  07C4                     l787:
   438                           
   439                           ;newmain.c: 70:         a = 0b0000000000000001;
   440  07C4  3001               	movlw	1
   441  07C5  00A0               	movwf	_a
   442  07C6  3000               	movlw	0
   443  07C7  00A1               	movwf	_a+1
   444  07C8                     l789:
   445                           
   446                           ;newmain.c: 71:         for(unsigned char i = 0; i < 16; i++)
   447  07C8  01A3               	clrf	main@i_79
   448  07C9                     l795:
   449                           
   450                           ;newmain.c: 72:         {;newmain.c: 73:             hienthi(a);
   451  07C9  0821               	movf	_a+1,w
   452  07CA  00F7               	movwf	hienthi@n+1
   453  07CB  0820               	movf	_a,w
   454  07CC  00F6               	movwf	hienthi@n
   455  07CD  120A  118A  2739  120A  118A  	fcall	_hienthi
   456  07D2                     l797:
   457                           
   458                           ;newmain.c: 74:             a = (a << 1) + 1;
   459  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   460  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   461  07D4  0821               	movf	_a+1,w
   462  07D5  00FD               	movwf	??_main+1
   463  07D6  0820               	movf	_a,w
   464  07D7  00FC               	movwf	??_main
   465  07D8  1003               	clrc
   466  07D9  0DFC               	rlf	??_main,f
   467  07DA  0DFD               	rlf	??_main+1,f
   468  07DB  087C               	movf	??_main,w
   469  07DC  3E01               	addlw	1
   470  07DD  00A0               	movwf	_a
   471  07DE  087D               	movf	??_main+1,w
   472  07DF  1803               	skipnc
   473  07E0  3E01               	addlw	1
   474  07E1  3E00               	addlw	0
   475  07E2  00A1               	movwf	_a+1
   476  07E3                     l799:
   477                           
   478                           ;newmain.c: 75:             _delay((unsigned long)((50)*(8000000/4000.0)));
   479  07E3  3082               	movlw	130
   480  07E4  00FD               	movwf	??_main+1
   481  07E5  30DD               	movlw	221
   482  07E6  00FC               	movwf	??_main
   483  07E7                     u117:
   484  07E7  0BFC               	decfsz	??_main,f
   485  07E8  2FE7               	goto	u117
   486  07E9  0BFD               	decfsz	??_main+1,f
   487  07EA  2FE7               	goto	u117
   488  07EB  2FEC               	nop2
   489  07EC                     l801:
   490                           
   491                           ;newmain.c: 76:         }
   492  07EC  3001               	movlw	1
   493  07ED  00FC               	movwf	??_main
   494  07EE  087C               	movf	??_main,w
   495  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   496  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   497  07F1  07A3               	addwf	main@i_79,f
   498  07F2                     l803:
   499  07F2  3010               	movlw	16
   500  07F3  0223               	subwf	main@i_79,w
   501  07F4  1C03               	skipc
   502  07F5  2FF7               	goto	u81
   503  07F6  2FF8               	goto	u80
   504  07F7                     u81:
   505  07F7  2FC9               	goto	l795
   506  07F8                     u80:
   507  07F8  2F84               	goto	l26
   508  07F9  120A  118A  2800   	ljmp	start
   509  07FC                     __end_of_main:
   510                           
   511                           	psect	text1
   512  0739                     __ptext1:	
   513 ;; *************** function _hienthi *****************
   514 ;; Defined at:
   515 ;;		line 47 in file "newmain.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  n               2    6[COMMON] unsigned int 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  y               1   11[COMMON] unsigned char 
   520 ;;  x               1   10[COMMON] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         2       0       0       0       0
   531 ;;      Locals:         2       0       0       0       0
   532 ;;      Temps:          2       0       0       0       0
   533 ;;      Totals:         6       0       0       0       0
   534 ;;Total ram usage:        6 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 2
   537 ;; This function calls:
   538 ;;		_xuat_1byte
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544  0739                     _hienthi:	
   545                           ;psect for function _hienthi
   546                           
   547  0739                     l749:	
   548                           ;incstack = 0
   549                           ; Regs used in _hienthi: [wreg+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;newmain.c: 47: void hienthi(unsigned int n);newmain.c: 48: {;newmain.c: 49:     unsigne
      +                          d char x = n;
   553  0739  0876               	movf	hienthi@n,w
   554  073A  00F8               	movwf	??_hienthi
   555  073B  0878               	movf	??_hienthi,w
   556  073C  00FA               	movwf	hienthi@x
   557  073D                     l751:
   558                           
   559                           ;newmain.c: 50:     unsigned char y = n >> 8;
   560  073D  0877               	movf	hienthi@n+1,w
   561  073E  00F8               	movwf	??_hienthi
   562  073F  0878               	movf	??_hienthi,w
   563  0740  00FB               	movwf	hienthi@y
   564  0741                     l753:
   565                           
   566                           ;newmain.c: 51:     xuat_1byte(y);
   567  0741  087B               	movf	hienthi@y,w
   568  0742  120A  118A  275B  120A  118A  	fcall	_xuat_1byte
   569  0747                     l755:
   570                           
   571                           ;newmain.c: 52:     xuat_1byte(x);
   572  0747  087A               	movf	hienthi@x,w
   573  0748  120A  118A  275B  120A  118A  	fcall	_xuat_1byte
   574  074D                     l757:
   575                           
   576                           ;newmain.c: 53:     PORTDbits.RD2 = 0; PORTDbits.RD2 = 1;
   577  074D  1283               	bcf	3,5	;RP0=0, select bank0
   578  074E  1303               	bcf	3,6	;RP1=0, select bank0
   579  074F  1108               	bcf	8,2	;volatile
   580  0750                     l759:
   581  0750  1508               	bsf	8,2	;volatile
   582  0751                     l761:
   583                           
   584                           ;newmain.c: 54:     _delay((unsigned long)((10)*(8000000/4000.0)));
   585  0751  301A               	movlw	26
   586  0752  00F9               	movwf	??_hienthi+1
   587  0753  30F8               	movlw	248
   588  0754  00F8               	movwf	??_hienthi
   589  0755                     u127:
   590  0755  0BF8               	decfsz	??_hienthi,f
   591  0756  2F55               	goto	u127
   592  0757  0BF9               	decfsz	??_hienthi+1,f
   593  0758  2F55               	goto	u127
   594  0759  0000               	nop
   595  075A                     l21:
   596  075A  0008               	return
   597  075B                     __end_of_hienthi:
   598                           
   599                           	psect	text2
   600  075B                     __ptext2:	
   601 ;; *************** function _xuat_1byte *****************
   602 ;; Defined at:
   603 ;;		line 36 in file "newmain.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  xuatbyte        1    wreg     unsigned char 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  xuatbyte        1    2[COMMON] unsigned char 
   608 ;;  i               1    5[COMMON] unsigned char 
   609 ;;  b               1    4[COMMON] unsigned char 
   610 ;;  xuat            1    3[COMMON] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         4       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0
   623 ;;      Totals:         5       0       0       0       0
   624 ;;Total ram usage:        5 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 1
   627 ;; This function calls:
   628 ;;		_laybit7
   629 ;; This function is called by:
   630 ;;		_hienthi
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634  075B                     _xuat_1byte:	
   635                           ;psect for function _xuat_1byte
   636                           
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _xuat_1byte: [wreg+status,2+status,0+pclath+cstack]
   640                           ;xuat_1byte@xuatbyte stored from wreg
   641  075B  00F2               	movwf	xuat_1byte@xuatbyte
   642  075C                     l727:
   643                           
   644                           ;newmain.c: 36: void xuat_1byte(unsigned char xuatbyte);newmain.c: 37: {;newmain.c: 38: 
      +                              unsigned char b = 0x80, xuat;
   645  075C  3080               	movlw	128
   646  075D  00F1               	movwf	??_xuat_1byte
   647  075E  0871               	movf	??_xuat_1byte,w
   648  075F  00F4               	movwf	xuat_1byte@b
   649  0760                     l729:
   650                           
   651                           ;newmain.c: 39:     for(unsigned char i = 0; i < 8; i++)
   652  0760  01F5               	clrf	xuat_1byte@i
   653  0761                     l735:
   654                           
   655                           ;newmain.c: 40:     {;newmain.c: 41:         xuat = laybit7(xuatbyte & b);
   656  0761  0872               	movf	xuat_1byte@xuatbyte,w
   657  0762  0574               	andwf	xuat_1byte@b,w
   658  0763  120A  118A  272F  120A  118A  	fcall	_laybit7
   659  0768  00F1               	movwf	??_xuat_1byte
   660  0769  0871               	movf	??_xuat_1byte,w
   661  076A  00F3               	movwf	xuat_1byte@xuat
   662  076B                     l737:
   663                           
   664                           ;newmain.c: 42:         PORTDbits.RD0 = xuat;
   665  076B  0C73               	rrf	xuat_1byte@xuat,w
   666  076C  1283               	bcf	3,5	;RP0=0, select bank0
   667  076D  1303               	bcf	3,6	;RP1=0, select bank0
   668  076E  1C03               	skipc
   669  076F  1008               	bcf	8,0	;volatile
   670  0770  1803               	skipnc
   671  0771  1408               	bsf	8,0	;volatile
   672  0772                     l739:
   673                           
   674                           ;newmain.c: 43:         PORTDbits.RD1 = 0; PORTDbits.RD1 = 1;
   675  0772  1088               	bcf	8,1	;volatile
   676  0773                     l741:
   677  0773  1488               	bsf	8,1	;volatile
   678  0774                     l743:
   679                           
   680                           ;newmain.c: 44:         b >>= 1;
   681  0774  1003               	clrc
   682  0775  0CF4               	rrf	xuat_1byte@b,f
   683  0776                     l745:
   684                           
   685                           ;newmain.c: 45:     }
   686  0776  3001               	movlw	1
   687  0777  00F1               	movwf	??_xuat_1byte
   688  0778  0871               	movf	??_xuat_1byte,w
   689  0779  07F5               	addwf	xuat_1byte@i,f
   690  077A                     l747:
   691  077A  3008               	movlw	8
   692  077B  0275               	subwf	xuat_1byte@i,w
   693  077C  1C03               	skipc
   694  077D  2F7F               	goto	u61
   695  077E  2F80               	goto	u60
   696  077F                     u61:
   697  077F  2F61               	goto	l735
   698  0780                     u60:
   699  0780                     l18:
   700  0780  0008               	return
   701  0781                     __end_of_xuat_1byte:
   702                           
   703                           	psect	text3
   704  072F                     __ptext3:	
   705 ;; *************** function _laybit7 *****************
   706 ;; Defined at:
   707 ;;		line 29 in file "newmain.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  x               1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  x               1    0[COMMON] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      unsigned char 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         1       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0
   724 ;;      Totals:         1       0       0       0       0
   725 ;;Total ram usage:        1 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_xuat_1byte
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734  072F                     _laybit7:	
   735                           ;psect for function _laybit7
   736                           
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in _laybit7: [wreg+status,2+status,0]
   740                           ;laybit7@x stored from wreg
   741  072F  00F0               	movwf	laybit7@x
   742  0730                     l715:
   743                           
   744                           ;newmain.c: 29: char laybit7(unsigned char x);newmain.c: 30: {;newmain.c: 31:     if(x =
      +                          = 0)
   745  0730  0870               	movf	laybit7@x,w
   746  0731  1D03               	btfss	3,2
   747  0732  2F34               	goto	u51
   748  0733  2F35               	goto	u50
   749  0734                     u51:
   750  0734  2F37               	goto	l723
   751  0735                     u50:
   752  0735                     l717:
   753                           
   754                           ;newmain.c: 32:         return 0;
   755  0735  3000               	movlw	0
   756  0736  2F38               	goto	l12
   757  0737                     l723:
   758                           
   759                           ;newmain.c: 34:         return 1;
   760  0737  3001               	movlw	1
   761  0738                     l12:
   762  0738  0008               	return
   763  0739                     __end_of_laybit7:
   764  007E                     btemp	set	126	;btemp
   765  007E                     wtemp0	set	126
   766                           
   767                           	psect	idloc
   768                           
   769                           ;Config register IDLOC0 @ 0x2000
   770                           ;	unspecified, using default values
   771  2000                     	org	8192
   772  2000  3FFF               	dw	16383
   773                           
   774                           ;Config register IDLOC1 @ 0x2001
   775                           ;	unspecified, using default values
   776  2001                     	org	8193
   777  2001  3FFF               	dw	16383
   778                           
   779                           ;Config register IDLOC2 @ 0x2002
   780                           ;	unspecified, using default values
   781  2002                     	org	8194
   782  2002  3FFF               	dw	16383
   783                           
   784                           ;Config register IDLOC3 @ 0x2003
   785                           ;	unspecified, using default values
   786  2003                     	org	8195
   787  2003  3FFF               	dw	16383
   788                           
   789                           	psect	config
   790                           
   791                           ;Config register CONFIG1 @ 0x2007
   792                           ;	Oscillator Selection bits
   793                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   794                           ;	Watchdog Timer Enable bit
   795                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   796                           ;	Power-up Timer Enable bit
   797                           ;	PWRTE = OFF, PWRT disabled
   798                           ;	RE3/MCLR pin function select bit
   799                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   800                           ;	Code Protection bit
   801                           ;	CP = OFF, Program memory code protection is disabled
   802                           ;	Data Code Protection bit
   803                           ;	CPD = OFF, Data memory code protection is disabled
   804                           ;	Brown Out Reset Selection bits
   805                           ;	BOREN = OFF, BOR disabled
   806                           ;	Internal External Switchover bit
   807                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   808                           ;	Fail-Safe Clock Monitor Enabled bit
   809                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   810                           ;	Low Voltage Programming Enable bit
   811                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   812                           ;	In-Circuit Debugger Mode bit
   813                           ;	DEBUG = 0x1, unprogrammed default
   814  2007                     	org	8199
   815  2007  20D4               	dw	8404
   816                           
   817                           ;Config register CONFIG2 @ 0x2008
   818                           ;	Brown-out Reset Selection bit
   819                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   820                           ;	Flash Program Memory Self Write Enable bits
   821                           ;	WRT = OFF, Write protection off
   822  2008                     	org	8200
   823  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_hienthi
    _hienthi->_xuat_1byte
    _xuat_1byte->_laybit7

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     547
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                            _hienthi
 ---------------------------------------------------------------------------------
 (1) _hienthi                                              6     4      2     455
                                              6 COMMON     6     4      2
                         _xuat_1byte
 ---------------------------------------------------------------------------------
 (2) _xuat_1byte                                           5     5      0     137
                                              1 COMMON     5     5      0
                            _laybit7
 ---------------------------------------------------------------------------------
 (3) _laybit7                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hienthi
     _xuat_1byte
       _laybit7

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun May 29 21:40:39 2022

                      _a 0020                       l12 0738                       l21 075A  
                     l18 0780                       l26 0784                       u50 0735  
                     u51 0734                       u60 0780                       u61 077F  
                     u70 07C4                       u71 07C3                       u80 07F8  
                     u81 07F7                       u97 0793                      l801 07EC  
                    l723 0737                      l715 0730                      l803 07F2  
                    l717 0735                      l741 0773                      l743 0774  
                    l735 0761                      l727 075C                      l751 073D  
                    l745 0776                      l737 076B                      l729 0760  
                    l761 0751                      l753 0741                      l747 077A  
                    l739 0772                      l755 0747                      l771 079E  
                    l763 0781                      l757 074D                      l749 0739  
                    l781 07AF                      l765 0787                      l759 0750  
                    l783 07B8                      l767 078F                      l785 07BE  
                    l777 079F                      l769 0798                      l795 07C9  
                    l787 07C4                      l779 07A8                      l797 07D2  
                    l789 07C8                      l799 07E3                      u107 07B3  
                    u117 07E7                      u127 0755                     _main 0781  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _TRISD 0088          __end_of_hienthi 075B          __end_of_laybit7 0739  
                  main@i 0022       xuat_1byte@xuatbyte 0072                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 007C                ??_hienthi 0078                ??_laybit7 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0781  
                __ptext1 0739                  __ptext2 075B                  __ptext3 072F  
                _hienthi 0739                  _laybit7 072F     end_of_initialization 07FC  
              _PORTDbits 0008               _xuat_1byte 075B      start_initialization 07FC  
              ___latbits 0002            __pcstackBANK0 0022                __pnvBANK0 0020  
            ?_xuat_1byte 0070                 ?_hienthi 0076                 ?_laybit7 0070  
            xuat_1byte@b 0074              xuat_1byte@i 0075           xuat_1byte@xuat 0073  
               main@i_79 0023                 hienthi@n 0076                 hienthi@x 007A  
               hienthi@y 007B                 laybit7@x 0070             ??_xuat_1byte 0071  
     __end_of_xuat_1byte 0781  
