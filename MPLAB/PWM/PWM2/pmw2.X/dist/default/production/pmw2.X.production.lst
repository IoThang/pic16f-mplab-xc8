

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 20 14:54:06 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  0695                     __pidataBANK0:
   179                           
   180                           ;initializer for _maLed
   181  0695  3440               	retlw	64
   182  0696  3479               	retlw	121
   183  0697  3424               	retlw	36
   184  0698  3430               	retlw	48
   185  0699  3419               	retlw	25
   186  069A  3412               	retlw	18
   187  069B  3402               	retlw	2
   188  069C  3478               	retlw	120
   189  069D  3400               	retlw	0
   190  069E  3410               	retlw	16
   191                           
   192                           	psect	nvCOMMON
   193  0076                     __pnvCOMMON:
   194  0076                     _flag2:
   195  0076                     	ds	1
   196  0077                     _flag1:
   197  0077                     	ds	1
   198  0007                     _PORTCbits	set	7
   199  0006                     _PORTBbits	set	6
   200  0008                     _PORTD	set	8
   201  0015                     _CCPR1L	set	21
   202  00BD                     _CCP1X	set	189
   203  00BC                     _CCP1Y	set	188
   204  0092                     _TMR2ON	set	146
   205  0091                     _T2CKPS1	set	145
   206  0090                     _T2CKPS0	set	144
   207  00BA                     _CCP1M2	set	186
   208  00BB                     _CCP1M3	set	187
   209  0088                     _TRISD	set	136
   210  0087                     _TRISC	set	135
   211  0086                     _TRISB	set	134
   212  0092                     _PR2	set	146
   213  043A                     _TRISC2	set	1082
   214                           
   215                           	psect	cinit
   216  07EC                     start_initialization:	
   217                           ; #config settings
   218                           
   219  07EC                     __initialization:
   220                           
   221                           ; Initialize objects allocated to BANK0
   222  07EC  1383               	bcf	3,7	;select IRP bank0
   223  07ED  302A               	movlw	low (__pdataBANK0+10)
   224  07EE  00FD               	movwf	btemp+-1
   225  07EF  3006               	movlw	high __pidataBANK0
   226  07F0  00FE               	movwf	btemp
   227  07F1  3095               	movlw	low __pidataBANK0
   228  07F2  00FF               	movwf	btemp+1
   229  07F3  3020               	movlw	low __pdataBANK0
   230  07F4  0084               	movwf	4
   231  07F5  120A  118A  26B2  120A  118A  	fcall	init_ram0
   232                           
   233                           ; Clear objects allocated to COMMON
   234  07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   235  07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   236  07FC                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239  07FC                     __end_of__initialization:
   240  07FC  0183               	clrf	3
   241  07FD  120A  118A  2F3D   	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMMON
   244  0078                     __pbssCOMMON:
   245  0078                     _dutyCycle:
   246  0078                     	ds	2
   247                           
   248                           	psect	dataBANK0
   249  0020                     __pdataBANK0:
   250  0020                     _maLed:
   251  0020                     	ds	10
   252                           
   253                           	psect	inittext
   254  06AE                     init_fetch0:	
   255                           ;	Called with low address in FSR and high address in W
   256                           
   257  06AE  087E               	movf	btemp,w
   258  06AF  008A               	movwf	10
   259  06B0  087F               	movf	btemp+1,w
   260  06B1  0082               	movwf	2
   261  06B2                     init_ram0:	
   262                           ;Called with:
   263                           ;	high address of idata address in btemp 
   264                           ;	low address of idata address in btemp+1 
   265                           ;	low address of data in FSR
   266                           ;	high address + 1 of data in btemp-1
   267                           
   268  06B2  120A  118A  26AE  120A  118A  	fcall	init_fetch0
   269  06B7  0080               	movwf	0
   270  06B8  0A84               	incf	4,f
   271  06B9  0804               	movf	4,w
   272  06BA  067D               	xorwf	btemp+-1,w
   273  06BB  1903               	btfsc	3,2
   274  06BC  3400               	retlw	0
   275  06BD  0AFF               	incf	btemp+1,f
   276  06BE  1903               	btfsc	3,2
   277  06BF  0AFE               	incf	btemp,f
   278  06C0  2EB2               	goto	init_ram0
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:
   282  0070                     ?_PWM_Init:
   283  0070                     ??_PWM_Init:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_PWM_Set_Duty:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_levelpwm:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_Start_Stop:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_level_pwm:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     Start_Stop@flag2:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     level_pwm@flag2:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     PWM_Set_Duty@DC:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 2 bytes @ 0x0
   312  0070                     	ds	1
   313  0071                     ??_Start_Stop:
   314  0071                     ??_level_pwm:	
   315                           ; 1 bytes @ 0x1
   316                           
   317                           
   318                           ; 1 bytes @ 0x1
   319  0071                     	ds	1
   320  0072                     ??_PWM_Set_Duty:
   321                           
   322                           ; 1 bytes @ 0x2
   323  0072                     	ds	1
   324  0073                     Start_Stop@flag1:
   325  0073                     level_pwm@flag1:	
   326                           ; 1 bytes @ 0x3
   327                           
   328                           
   329                           ; 1 bytes @ 0x3
   330  0073                     	ds	1
   331  0074                     ??_levelpwm:
   332  0074                     levelpwm@flag2:	
   333                           ; 1 bytes @ 0x4
   334                           
   335                           
   336                           ; 1 bytes @ 0x4
   337  0074                     	ds	1
   338  0075                     ??_main:
   339                           
   340                           ; 1 bytes @ 0x5
   341  0075                     	ds	1
   342                           
   343                           	psect	maintext
   344  073D                     __pmaintext:	
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 237 in file "newmain.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          1       0       0       0       0
   367 ;;      Totals:         1       0       0       0       0
   368 ;;Total ram usage:        1 bytes
   369 ;; Hardware stack levels required when called: 2
   370 ;; This function calls:
   371 ;;		_PWM_Init
   372 ;;		_PWM_Set_Duty
   373 ;;		_Start_Stop
   374 ;;		_level_pwm
   375 ;;		_levelpwm
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381  073D                     _main:	
   382                           ;psect for function _main
   383                           
   384  073D                     l853:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;newmain.c: 238:     TRISB = 1;
   390  073D  3001               	movlw	1
   391  073E  1683               	bsf	3,5	;RP0=1, select bank1
   392  073F  1303               	bcf	3,6	;RP1=0, select bank1
   393  0740  0086               	movwf	6	;volatile
   394  0741                     l855:
   395                           
   396                           ;newmain.c: 239:     TRISC = 0;
   397  0741  0187               	clrf	7	;volatile
   398  0742                     l857:
   399                           
   400                           ;newmain.c: 240:     TRISD = 0;
   401  0742  0188               	clrf	8	;volatile
   402  0743                     l859:
   403                           
   404                           ;newmain.c: 241:     PWM_Init();
   405  0743  120A  118A  269F  120A  118A  	fcall	_PWM_Init
   406  0748                     l861:
   407                           
   408                           ;newmain.c: 243:     flag1 = 0; flag2 = 0;
   409  0748  01F7               	clrf	_flag1
   410  0749                     l863:
   411  0749  01F6               	clrf	_flag2
   412  074A                     l865:
   413                           
   414                           ;newmain.c: 244:     PWM_Set_Duty(0);
   415  074A  3000               	movlw	0
   416  074B  00F0               	movwf	PWM_Set_Duty@DC
   417  074C  00F1               	movwf	PWM_Set_Duty@DC+1
   418  074D  120A  118A  26C1  120A  118A  	fcall	_PWM_Set_Duty
   419                           
   420                           ;newmain.c: 245:     PORTD = maLed[0];
   421  0752  1283               	bcf	3,5	;RP0=0, select bank0
   422  0753  1303               	bcf	3,6	;RP1=0, select bank0
   423  0754  0820               	movf	_maLed,w
   424  0755  0088               	movwf	8	;volatile
   425  0756                     l867:
   426                           
   427                           ;newmain.c: 246:     PORTCbits.RC3 = 1; PORTCbits.RC4 = 0;
   428  0756  1587               	bsf	7,3	;volatile
   429  0757                     l869:
   430  0757  1207               	bcf	7,4	;volatile
   431  0758                     l871:
   432                           
   433                           ;newmain.c: 248:     {;newmain.c: 249:         Start_Stop(&flag1, &flag2);
   434  0758  3076               	movlw	(low (_flag2| 0))& (0+255)
   435  0759  00F5               	movwf	??_main
   436  075A  0875               	movf	??_main,w
   437  075B  00F0               	movwf	Start_Stop@flag2
   438  075C  3077               	movlw	(low (_flag1| 0))& (0+255)
   439  075D  120A  118A  26E2  120A  118A  	fcall	_Start_Stop
   440  0762                     l873:
   441                           
   442                           ;newmain.c: 250:         if(flag1 == 2)
   443  0762  3002               	movlw	2
   444  0763  0677               	xorwf	_flag1,w
   445  0764  1D03               	btfss	3,2
   446  0765  2F67               	goto	u361
   447  0766  2F68               	goto	u360
   448  0767                     u361:
   449  0767  2F69               	goto	l877
   450  0768                     u360:
   451  0768  2F48               	goto	l861
   452  0769                     l877:
   453                           
   454                           ;newmain.c: 252:         level_pwm(&flag1, &flag2);
   455  0769  3076               	movlw	(low (_flag2| 0))& (0+255)
   456  076A  00F5               	movwf	??_main
   457  076B  0875               	movf	??_main,w
   458  076C  00F0               	movwf	level_pwm@flag2
   459  076D  3077               	movlw	(low (_flag1| 0))& (0+255)
   460  076E  120A  118A  2706  120A  118A  	fcall	_level_pwm
   461  0773                     l879:
   462                           
   463                           ;newmain.c: 253:         if((flag1 == 1) && (flag2 > 0))
   464  0773  0377               	decf	_flag1,w
   465  0774  1D03               	btfss	3,2
   466  0775  2F77               	goto	u371
   467  0776  2F78               	goto	u370
   468  0777                     u371:
   469  0777  2F58               	goto	l871
   470  0778                     u370:
   471  0778                     l881:
   472  0778  0876               	movf	_flag2,w
   473  0779  1903               	btfsc	3,2
   474  077A  2F7C               	goto	u381
   475  077B  2F7D               	goto	u380
   476  077C                     u381:
   477  077C  2F58               	goto	l871
   478  077D                     u380:
   479  077D                     l883:
   480                           
   481                           ;newmain.c: 254:             levelpwm(flag2);
   482  077D  0876               	movf	_flag2,w
   483  077E  120A  118A  2787  120A  118A  	fcall	_levelpwm
   484  0783  2F58               	goto	l871
   485  0784  120A  118A  2800   	ljmp	start
   486  0787                     __end_of_main:
   487                           
   488                           	psect	text1
   489  0787                     __ptext1:	
   490 ;; *************** function _levelpwm *****************
   491 ;; Defined at:
   492 ;;		line 183 in file "newmain.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;  flag2           1    wreg     unsigned char 
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  flag2           1    4[COMMON] unsigned char 
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, status,2, status,0, pclath, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         1       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         1       0       0       0       0
   510 ;;Total ram usage:        1 bytes
   511 ;; Hardware stack levels used: 1
   512 ;; Hardware stack levels required when called: 1
   513 ;; This function calls:
   514 ;;		_PWM_Set_Duty
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520  0787                     _levelpwm:	
   521                           ;psect for function _levelpwm
   522                           
   523                           
   524                           ;incstack = 0
   525                           ; Regs used in _levelpwm: [wreg+status,2+status,0+pclath+cstack]
   526                           ;levelpwm@flag2 stored from wreg
   527  0787  00F4               	movwf	levelpwm@flag2
   528  0788                     l799:
   529                           
   530                           ;newmain.c: 183: void levelpwm(unsigned char flag2);newmain.c: 184: {;newmain.c: 185:   
      +                            if(flag2 == 1)
   531  0788  0374               	decf	levelpwm@flag2,w
   532  0789  1D03               	btfss	3,2
   533  078A  2F8C               	goto	u231
   534  078B  2F8D               	goto	u230
   535  078C                     u231:
   536  078C  2F9B               	goto	l805
   537  078D                     u230:
   538  078D                     l801:
   539                           
   540                           ;newmain.c: 186:     {;newmain.c: 187:         PWM_Set_Duty(100);
   541  078D  3064               	movlw	100
   542  078E  00F0               	movwf	PWM_Set_Duty@DC
   543  078F  3000               	movlw	0
   544  0790  00F1               	movwf	PWM_Set_Duty@DC+1
   545  0791  120A  118A  26C1  120A  118A  	fcall	_PWM_Set_Duty
   546  0796                     l803:
   547                           
   548                           ;newmain.c: 188:         PORTD = maLed[1];
   549  0796  1283               	bcf	3,5	;RP0=0, select bank0
   550  0797  1303               	bcf	3,6	;RP1=0, select bank0
   551  0798  0821               	movf	_maLed+1,w
   552  0799  0088               	movwf	8	;volatile
   553                           
   554                           ;newmain.c: 189:     }
   555  079A  2FEB               	goto	l61
   556  079B                     l805:
   557  079B  3002               	movlw	2
   558  079C  0674               	xorwf	levelpwm@flag2,w
   559  079D  1D03               	btfss	3,2
   560  079E  2FA0               	goto	u241
   561  079F  2FA1               	goto	u240
   562  07A0                     u241:
   563  07A0  2FAF               	goto	l811
   564  07A1                     u240:
   565  07A1                     l807:
   566                           
   567                           ;newmain.c: 191:     {;newmain.c: 192:         PWM_Set_Duty(200);
   568  07A1  30C8               	movlw	200
   569  07A2  00F0               	movwf	PWM_Set_Duty@DC
   570  07A3  3000               	movlw	0
   571  07A4  00F1               	movwf	PWM_Set_Duty@DC+1
   572  07A5  120A  118A  26C1  120A  118A  	fcall	_PWM_Set_Duty
   573  07AA                     l809:
   574                           
   575                           ;newmain.c: 193:         PORTD = maLed[2];
   576  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   577  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   578  07AC  0822               	movf	_maLed+2,w
   579  07AD  0088               	movwf	8	;volatile
   580                           
   581                           ;newmain.c: 194:     }
   582  07AE  2FEB               	goto	l61
   583  07AF                     l811:
   584  07AF  3003               	movlw	3
   585  07B0  0674               	xorwf	levelpwm@flag2,w
   586  07B1  1D03               	btfss	3,2
   587  07B2  2FB4               	goto	u251
   588  07B3  2FB5               	goto	u250
   589  07B4                     u251:
   590  07B4  2FC3               	goto	l817
   591  07B5                     u250:
   592  07B5                     l813:
   593                           
   594                           ;newmain.c: 196:     {;newmain.c: 197:         PWM_Set_Duty(300);
   595  07B5  302C               	movlw	44
   596  07B6  00F0               	movwf	PWM_Set_Duty@DC
   597  07B7  3001               	movlw	1
   598  07B8  00F1               	movwf	PWM_Set_Duty@DC+1
   599  07B9  120A  118A  26C1  120A  118A  	fcall	_PWM_Set_Duty
   600  07BE                     l815:
   601                           
   602                           ;newmain.c: 198:         PORTD = maLed[3];
   603  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   604  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   605  07C0  0823               	movf	_maLed+3,w
   606  07C1  0088               	movwf	8	;volatile
   607                           
   608                           ;newmain.c: 199:     }
   609  07C2  2FEB               	goto	l61
   610  07C3                     l817:
   611  07C3  3004               	movlw	4
   612  07C4  0674               	xorwf	levelpwm@flag2,w
   613  07C5  1D03               	btfss	3,2
   614  07C6  2FC8               	goto	u261
   615  07C7  2FC9               	goto	u260
   616  07C8                     u261:
   617  07C8  2FD7               	goto	l823
   618  07C9                     u260:
   619  07C9                     l819:
   620                           
   621                           ;newmain.c: 201:     {;newmain.c: 202:         PWM_Set_Duty(400);
   622  07C9  3090               	movlw	144
   623  07CA  00F0               	movwf	PWM_Set_Duty@DC
   624  07CB  3001               	movlw	1
   625  07CC  00F1               	movwf	PWM_Set_Duty@DC+1
   626  07CD  120A  118A  26C1  120A  118A  	fcall	_PWM_Set_Duty
   627  07D2                     l821:
   628                           
   629                           ;newmain.c: 203:         PORTD = maLed[4];
   630  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   631  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   632  07D4  0824               	movf	_maLed+4,w
   633  07D5  0088               	movwf	8	;volatile
   634                           
   635                           ;newmain.c: 204:     }
   636  07D6  2FEB               	goto	l61
   637  07D7                     l823:
   638  07D7  3005               	movlw	5
   639  07D8  0674               	xorwf	levelpwm@flag2,w
   640  07D9  1D03               	btfss	3,2
   641  07DA  2FDC               	goto	u271
   642  07DB  2FDD               	goto	u270
   643  07DC                     u271:
   644  07DC  2FEB               	goto	l55
   645  07DD                     u270:
   646  07DD                     l825:
   647                           
   648                           ;newmain.c: 206:     {;newmain.c: 207:         PWM_Set_Duty(499);
   649  07DD  30F3               	movlw	243
   650  07DE  00F0               	movwf	PWM_Set_Duty@DC
   651  07DF  3001               	movlw	1
   652  07E0  00F1               	movwf	PWM_Set_Duty@DC+1
   653  07E1  120A  118A  26C1  120A  118A  	fcall	_PWM_Set_Duty
   654  07E6                     l827:
   655                           
   656                           ;newmain.c: 208:         PORTD = maLed[5];
   657  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   658  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   659  07E8  0825               	movf	_maLed+5,w
   660  07E9  0088               	movwf	8	;volatile
   661  07EA  2FEB               	goto	l61
   662  07EB                     l55:
   663  07EB                     l61:
   664  07EB  0008               	return
   665  07EC                     __end_of_levelpwm:
   666                           
   667                           	psect	text2
   668  06C1                     __ptext2:	
   669 ;; *************** function _PWM_Set_Duty *****************
   670 ;; Defined at:
   671 ;;		line 173 in file "newmain.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  DC              2    0[COMMON] unsigned int 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         2       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0
   687 ;;      Temps:          2       0       0       0       0
   688 ;;      Totals:         4       0       0       0       0
   689 ;;Total ram usage:        4 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_levelpwm
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699  06C1                     _PWM_Set_Duty:	
   700                           ;psect for function _PWM_Set_Duty
   701                           
   702  06C1                     l783:	
   703                           ;incstack = 0
   704                           ; Regs used in _PWM_Set_Duty: [wreg+status,2+status,0]
   705                           
   706                           
   707                           ;newmain.c: 173: void PWM_Set_Duty(uint16_t DC);newmain.c: 174: {;newmain.c: 176:     if
      +                          (DC<1024)
   708  06C1  3004               	movlw	4
   709  06C2  0271               	subwf	PWM_Set_Duty@DC+1,w
   710  06C3  3000               	movlw	0
   711  06C4  1903               	skipnz
   712  06C5  0270               	subwf	PWM_Set_Duty@DC,w
   713  06C6  1803               	skipnc
   714  06C7  2EC9               	goto	u201
   715  06C8  2ECA               	goto	u200
   716  06C9                     u201:
   717  06C9  2EE1               	goto	l49
   718  06CA                     u200:
   719  06CA                     l785:
   720                           
   721                           ;newmain.c: 177:     {;newmain.c: 178:         CCP1Y = DC & 1;
   722  06CA  1870               	btfsc	PWM_Set_Duty@DC,0
   723  06CB  2ECD               	goto	u211
   724  06CC  2ED1               	goto	u210
   725  06CD                     u211:
   726  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   727  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   728  06CF  1617               	bsf	23,4	;volatile
   729  06D0  2ED4               	goto	u224
   730  06D1                     u210:
   731  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   732  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   733  06D3  1217               	bcf	23,4	;volatile
   734  06D4                     u224:
   735                           
   736                           ;newmain.c: 179:         CCP1X = DC & 2;
   737  06D4  1297               	bcf	23,5	;volatile
   738  06D5                     l787:
   739                           
   740                           ;newmain.c: 180:         CCPR1L = DC >> 2;
   741  06D5  0871               	movf	PWM_Set_Duty@DC+1,w
   742  06D6  00F3               	movwf	??_PWM_Set_Duty+1
   743  06D7  0870               	movf	PWM_Set_Duty@DC,w
   744  06D8  00F2               	movwf	??_PWM_Set_Duty
   745  06D9  1003               	clrc
   746  06DA  0CF3               	rrf	??_PWM_Set_Duty+1,f
   747  06DB  0CF2               	rrf	??_PWM_Set_Duty,f
   748  06DC  1003               	clrc
   749  06DD  0CF3               	rrf	??_PWM_Set_Duty+1,f
   750  06DE  0CF2               	rrf	??_PWM_Set_Duty,f
   751  06DF  0872               	movf	??_PWM_Set_Duty,w
   752  06E0  0095               	movwf	21	;volatile
   753  06E1                     l49:
   754  06E1  0008               	return
   755  06E2                     __end_of_PWM_Set_Duty:
   756                           
   757                           	psect	text3
   758  0706                     __ptext3:	
   759 ;; *************** function _level_pwm *****************
   760 ;; Defined at:
   761 ;;		line 223 in file "newmain.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  flag1           1    wreg     PTR unsigned char 
   764 ;;		 -> flag1(1), 
   765 ;;  flag2           1    0[COMMON] PTR unsigned char 
   766 ;;		 -> flag2(1), 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  flag1           1    3[COMMON] PTR unsigned char 
   769 ;;		 -> flag1(1), 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         1       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          2       0       0       0       0
   782 ;;      Totals:         4       0       0       0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792  0706                     _level_pwm:	
   793                           ;psect for function _level_pwm
   794                           
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _level_pwm: [wreg-fsr0h+status,2+status,0]
   798                           ;level_pwm@flag1 stored from wreg
   799  0706  00F3               	movwf	level_pwm@flag1
   800  0707                     l839:
   801                           
   802                           ;newmain.c: 223: void level_pwm(unsigned char *flag1, unsigned char *flag2);newmain.c: 2
      +                          24: {;newmain.c: 225:         if((PORTBbits.RB1 == 1) && (*flag1 == 1))
   803  0707  1283               	bcf	3,5	;RP0=0, select bank0
   804  0708  1303               	bcf	3,6	;RP1=0, select bank0
   805  0709  1C86               	btfss	6,1	;volatile
   806  070A  2F0C               	goto	u311
   807  070B  2F0D               	goto	u310
   808  070C                     u311:
   809  070C  2F3C               	goto	l78
   810  070D                     u310:
   811  070D                     l841:
   812  070D  0873               	movf	level_pwm@flag1,w
   813  070E  0084               	movwf	4
   814  070F  0300               	decf	0,w
   815  0710  1D03               	btfss	3,2
   816  0711  2F13               	goto	u321
   817  0712  2F14               	goto	u320
   818  0713                     u321:
   819  0713  2F3C               	goto	l78
   820  0714                     u320:
   821  0714                     l843:
   822                           
   823                           ;newmain.c: 226:         {;newmain.c: 227:             _delay((unsigned long)((10)*(4000
      +                          000/4000.0)));
   824  0714  300D               	movlw	13
   825  0715  00F2               	movwf	??_level_pwm+1
   826  0716  30FB               	movlw	251
   827  0717  00F1               	movwf	??_level_pwm
   828  0718                     u397:
   829  0718  0BF1               	decfsz	??_level_pwm,f
   830  0719  2F18               	goto	u397
   831  071A  0BF2               	decfsz	??_level_pwm+1,f
   832  071B  2F18               	goto	u397
   833  071C  2F1D               	nop2
   834  071D                     l845:
   835                           
   836                           ;newmain.c: 228:             if(PORTBbits.RB1 == 1)
   837  071D  1283               	bcf	3,5	;RP0=0, select bank0
   838  071E  1303               	bcf	3,6	;RP1=0, select bank0
   839  071F  1C86               	btfss	6,1	;volatile
   840  0720  2F22               	goto	u331
   841  0721  2F23               	goto	u330
   842  0722                     u331:
   843  0722  2F3C               	goto	l78
   844  0723                     u330:
   845  0723                     l74:
   846  0723  1886               	btfsc	6,1	;volatile
   847  0724  2F26               	goto	u341
   848  0725  2F27               	goto	u340
   849  0726                     u341:
   850  0726  2F23               	goto	l74
   851  0727                     u340:
   852  0727                     l849:
   853                           
   854                           ;newmain.c: 231:                 *flag2 = *flag2 + 1;
   855  0727  0870               	movf	level_pwm@flag2,w
   856  0728  0084               	movwf	4
   857  0729  0800               	movf	0,w
   858  072A  3E01               	addlw	1
   859  072B  00F1               	movwf	??_level_pwm
   860  072C  0870               	movf	level_pwm@flag2,w
   861  072D  0084               	movwf	4
   862  072E  0871               	movf	??_level_pwm,w
   863  072F  0080               	movwf	0
   864                           
   865                           ;newmain.c: 232:                 if(*flag2 == 6)
   866  0730  0870               	movf	level_pwm@flag2,w
   867  0731  0084               	movwf	4
   868  0732  3006               	movlw	6
   869  0733  0600               	xorwf	0,w
   870  0734  1D03               	btfss	3,2
   871  0735  2F37               	goto	u351
   872  0736  2F38               	goto	u350
   873  0737                     u351:
   874  0737  2F3C               	goto	l78
   875  0738                     u350:
   876  0738                     l851:
   877                           
   878                           ;newmain.c: 233:                     *flag2 = 1;
   879  0738  0870               	movf	level_pwm@flag2,w
   880  0739  0084               	movwf	4
   881  073A  0180               	clrf	0
   882  073B  0A80               	incf	0,f
   883  073C                     l78:
   884  073C  0008               	return
   885  073D                     __end_of_level_pwm:
   886                           
   887                           	psect	text4
   888  06E2                     __ptext4:	
   889 ;; *************** function _Start_Stop *****************
   890 ;; Defined at:
   891 ;;		line 211 in file "newmain.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  flag1           1    wreg     PTR unsigned char 
   894 ;;		 -> flag1(1), 
   895 ;;  flag2           1    0[COMMON] PTR unsigned char 
   896 ;;		 -> flag2(1), 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  flag1           1    3[COMMON] PTR unsigned char 
   899 ;;		 -> flag1(1), 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         1       0       0       0       0
   910 ;;      Locals:         1       0       0       0       0
   911 ;;      Temps:          2       0       0       0       0
   912 ;;      Totals:         4       0       0       0       0
   913 ;;Total ram usage:        4 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922  06E2                     _Start_Stop:	
   923                           ;psect for function _Start_Stop
   924                           
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _Start_Stop: [wreg-fsr0h+status,2+status,0]
   928                           ;Start_Stop@flag1 stored from wreg
   929  06E2  00F3               	movwf	Start_Stop@flag1
   930  06E3                     l829:
   931                           
   932                           ;newmain.c: 211: void Start_Stop(unsigned char *flag1, unsigned char *flag2);newmain.c: 
      +                          212: {;newmain.c: 213:         if(PORTBbits.RB0 == 1)
   933  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   934  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   935  06E5  1C06               	btfss	6,0	;volatile
   936  06E6  2EE8               	goto	u281
   937  06E7  2EE9               	goto	u280
   938  06E8                     u281:
   939  06E8  2F05               	goto	l69
   940  06E9                     u280:
   941  06E9                     l831:
   942                           
   943                           ;newmain.c: 214:         {;newmain.c: 215:             _delay((unsigned long)((10)*(4000
      +                          000/4000.0)));
   944  06E9  300D               	movlw	13
   945  06EA  00F2               	movwf	??_Start_Stop+1
   946  06EB  30FB               	movlw	251
   947  06EC  00F1               	movwf	??_Start_Stop
   948  06ED                     u407:
   949  06ED  0BF1               	decfsz	??_Start_Stop,f
   950  06EE  2EED               	goto	u407
   951  06EF  0BF2               	decfsz	??_Start_Stop+1,f
   952  06F0  2EED               	goto	u407
   953  06F1  2EF2               	nop2
   954  06F2                     l833:
   955                           
   956                           ;newmain.c: 216:             if(PORTBbits.RB0 == 1)
   957  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   958  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   959  06F4  1C06               	btfss	6,0	;volatile
   960  06F5  2EF7               	goto	u291
   961  06F6  2EF8               	goto	u290
   962  06F7                     u291:
   963  06F7  2F05               	goto	l69
   964  06F8                     u290:
   965  06F8                     l66:
   966  06F8  1806               	btfsc	6,0	;volatile
   967  06F9  2EFB               	goto	u301
   968  06FA  2EFC               	goto	u300
   969  06FB                     u301:
   970  06FB  2EF8               	goto	l66
   971  06FC                     u300:
   972  06FC                     l837:
   973                           
   974                           ;newmain.c: 219:                 *flag1 = *flag1 + 1;
   975  06FC  0873               	movf	Start_Stop@flag1,w
   976  06FD  0084               	movwf	4
   977  06FE  0800               	movf	0,w
   978  06FF  3E01               	addlw	1
   979  0700  00F1               	movwf	??_Start_Stop
   980  0701  0873               	movf	Start_Stop@flag1,w
   981  0702  0084               	movwf	4
   982  0703  0871               	movf	??_Start_Stop,w
   983  0704  0080               	movwf	0
   984  0705                     l69:
   985  0705  0008               	return
   986  0706                     __end_of_Start_Stop:
   987                           
   988                           	psect	text5
   989  069F                     __ptext5:	
   990 ;; *************** function _PWM_Init *****************
   991 ;; Defined at:
   992 ;;		line 159 in file "newmain.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019  069F                     _PWM_Init:	
  1020                           ;psect for function _PWM_Init
  1021                           
  1022  069F                     l789:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _PWM_Init: [wreg]
  1025                           
  1026                           
  1027                           ;newmain.c: 162:       CCP1M3 = 1;
  1028  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1029  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1030  06A1  1597               	bsf	23,3	;volatile
  1031                           
  1032                           ;newmain.c: 163:       CCP1M2 = 1;
  1033  06A2  1517               	bsf	23,2	;volatile
  1034                           
  1035                           ;newmain.c: 164:       TRISC2 = 0;
  1036  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  1037  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  1038  06A5  1107               	bcf	7,2	;volatile
  1039  06A6                     l791:
  1040                           
  1041                           ;newmain.c: 166:       PR2 = 124;
  1042  06A6  307C               	movlw	124
  1043  06A7  0092               	movwf	18	;volatile
  1044  06A8                     l793:
  1045                           
  1046                           ;newmain.c: 168:       T2CKPS0 = 1;
  1047  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1048  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1049  06AA  1412               	bsf	18,0	;volatile
  1050  06AB                     l795:
  1051                           
  1052                           ;newmain.c: 169:       T2CKPS1 = 0;
  1053  06AB  1092               	bcf	18,1	;volatile
  1054  06AC                     l797:
  1055                           
  1056                           ;newmain.c: 171:       TMR2ON = 1;
  1057  06AC  1512               	bsf	18,2	;volatile
  1058  06AD                     l45:
  1059  06AD  0008               	return
  1060  06AE                     __end_of_PWM_Init:
  1061  007E                     btemp	set	126	;btemp
  1062  007E                     wtemp0	set	126
  1063                           
  1064                           	psect	idloc
  1065                           
  1066                           ;Config register IDLOC0 @ 0x2000
  1067                           ;	unspecified, using default values
  1068  2000                     	org	8192
  1069  2000  3FFF               	dw	16383
  1070                           
  1071                           ;Config register IDLOC1 @ 0x2001
  1072                           ;	unspecified, using default values
  1073  2001                     	org	8193
  1074  2001  3FFF               	dw	16383
  1075                           
  1076                           ;Config register IDLOC2 @ 0x2002
  1077                           ;	unspecified, using default values
  1078  2002                     	org	8194
  1079  2002  3FFF               	dw	16383
  1080                           
  1081                           ;Config register IDLOC3 @ 0x2003
  1082                           ;	unspecified, using default values
  1083  2003                     	org	8195
  1084  2003  3FFF               	dw	16383
  1085                           
  1086                           	psect	config
  1087                           
  1088                           ;Config register CONFIG @ 0x2007
  1089                           ;	Oscillator Selection bits
  1090                           ;	FOSC = EXTRC, RC oscillator
  1091                           ;	Watchdog Timer Enable bit
  1092                           ;	WDTE = OFF, WDT disabled
  1093                           ;	Power-up Timer Enable bit
  1094                           ;	PWRTE = OFF, PWRT disabled
  1095                           ;	Brown-out Reset Enable bit
  1096                           ;	BOREN = OFF, BOR disabled
  1097                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1098                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1099                           ;	Data EEPROM Memory Code Protection bit
  1100                           ;	CPD = OFF, Data EEPROM code protection off
  1101                           ;	Flash Program Memory Write Enable bits
  1102                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1103                           ;	In-Circuit Debugger Mode bit
  1104                           ;	DEBUG = 0x1, unprogrammed default
  1105                           ;	Flash Program Memory Code Protection bit
  1106                           ;	CP = OFF, Code protection off
  1107  2007                     	org	8199
  1108  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Start_Stop@flag2	PTR unsigned char  size(1) Largest target is 1
		 -> flag2(COMMON[1]), 

    level_pwm@flag2	PTR unsigned char  size(1) Largest target is 1
		 -> flag2(COMMON[1]), 

    level_pwm@flag1	PTR unsigned char  size(1) Largest target is 1
		 -> flag1(COMMON[1]), 

    Start_Stop@flag1	PTR unsigned char  size(1) Largest target is 1
		 -> flag1(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_levelpwm
    _levelpwm->_PWM_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1526
                                              5 COMMON     1     1      0
                           _PWM_Init
                       _PWM_Set_Duty
                         _Start_Stop
                          _level_pwm
                           _levelpwm
 ---------------------------------------------------------------------------------
 (1) _levelpwm                                             1     1      0     632
                                              4 COMMON     1     1      0
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (2) _PWM_Set_Duty                                         4     2      2     522
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _level_pwm                                            4     3      1     219
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Start_Stop                                           4     3      1     153
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Init
   _PWM_Set_Duty
   _Start_Stop
   _level_pwm
   _levelpwm
     _PWM_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      14      12        0.0%
ABS                  0      0      14       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 20 14:54:06 2022

                      pc 0002            levelpwm@flag2 0074                       l45 06AD  
                     l61 07EB                       l55 07EB                       l49 06E1  
                     l66 06F8                       l74 0723                       l69 0705  
                     l78 073C                       fsr 0004           PWM_Set_Duty@DC 0070  
                    l801 078D                      l811 07AF                      l803 0796  
                    l821 07D2                      l813 07B5                      l805 079B  
                    l831 06E9                      l823 07D7                      l815 07BE  
                    l807 07A1                      l833 06F2                      l841 070D  
                    l825 07DD                      l817 07C3                      l809 07AA  
                    l851 0738                      l843 0714                      l827 07E6  
                    l819 07C9                      l837 06FC                      l829 06E3  
                    l845 071D                      l861 0748                      l853 073D  
                    l791 06A6                      l839 0707                      l783 06C1  
                    l871 0758                      l863 0749                      l855 0741  
                    l793 06A8                      l849 0727                      l785 06CA  
                    l881 0778                      l873 0762                      l865 074A  
                    l857 0742                      l795 06AB                      l787 06D5  
                    l883 077D                      l867 0756                      l859 0743  
                    l797 06AC                      l789 069F                      l877 0769  
                    l869 0757                      l799 0788                      l879 0773  
                    u200 06CA                      u201 06C9                      u210 06D1  
                    u211 06CD                      u300 06FC                      u301 06FB  
                    u310 070D                      u230 078D                      u311 070C  
                    u231 078C                      u320 0714                      u224 06D4  
                    u240 07A1                      u321 0713                      u241 07A0  
                    u330 0723                      u250 07B5                      u331 0722  
                    u251 07B4                      u340 0727                      u260 07C9  
                    u341 0726                      u261 07C8                      u350 0738  
                    u270 07DD                      _PR2 0092                      u407 06ED  
                    u351 0737                      u271 07DC                      u280 06E9  
                    u360 0768                      u281 06E8                      u361 0767  
                    u290 06F8                      u370 0778                      u291 06F7  
                    u371 0777                      u380 077D                      u381 077C  
                    u397 0718                      fsr0 0004                      indf 0000  
                   _main 073D                     btemp 007E                     start 0000  
           _PWM_Set_Duty 06C1                    ?_main 0070                    _CCP1X 00BD  
                  _CCP1Y 00BC                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _maLed 0020  
                  _flag1 0077                    _flag2 0076                    pclath 000A  
       __end_of_PWM_Init 06AE                    status 0003                    wtemp0 007E  
        __initialization 07EC             __end_of_main 0787                   ??_main 0075  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISC2 043A         __end_of_levelpwm 07EC  
             _Start_Stop 06E2  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0695                ?_PWM_Init 0070               __pnvCOMMON 0076  
             __pmaintext 073D               ??_PWM_Init 0070                  _T2CKPS0 0090  
                _T2CKPS1 0091              ?_Start_Stop 0070                ?_levelpwm 0070  
        Start_Stop@flag1 0073          Start_Stop@flag2 0070                  __ptext1 0787  
                __ptext2 06C1                  __ptext3 0706                  __ptext4 06E2  
                __ptext5 069F        __end_of_level_pwm 073D     end_of_initialization 07FC  
             ??_levelpwm 0074                _PORTBbits 0006                _PORTCbits 0007  
    start_initialization 07EC            ?_PWM_Set_Duty 0070               init_fetch0 06AE  
            __pdataBANK0 0020              __pbssCOMMON 0078                ___latbits 0002  
           ??_Start_Stop 0071           ??_PWM_Set_Duty 0072       __end_of_Start_Stop 0706  
              _dutyCycle 0078                _level_pwm 0706                 _PWM_Init 069F  
             ?_level_pwm 0070     __end_of_PWM_Set_Duty 06E2                 _levelpwm 0787  
         level_pwm@flag1 0073           level_pwm@flag2 0070                 init_ram0 06B2  
            ??_level_pwm 0071  
