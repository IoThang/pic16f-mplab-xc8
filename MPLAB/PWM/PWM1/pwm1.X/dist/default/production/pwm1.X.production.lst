

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 16 22:39:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	nvCOMMON
   171  0076                     __pnvCOMMON:
   172  0076                     _dutyCycle:
   173  0076                     	ds	2
   174  0015                     _CCPR1L	set	21
   175  00BD                     _CCP1X	set	189
   176  00BC                     _CCP1Y	set	188
   177  0092                     _TMR2ON	set	146
   178  0091                     _T2CKPS1	set	145
   179  0090                     _T2CKPS0	set	144
   180  00BA                     _CCP1M2	set	186
   181  00BB                     _CCP1M3	set	187
   182  0092                     _PR2	set	146
   183  043A                     _TRISC2	set	1082
   184                           
   185                           	psect	cinit
   186  07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189  07FC                     __initialization:
   190  07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193  07FC                     __end_of__initialization:
   194  07FC  0183               	clrf	3
   195  07FD  120A  118A  2F9E   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198  0070                     __pcstackCOMMON:
   199  0070                     ?_PWM_Init:
   200  0070                     ??_PWM_Init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_PWM_Set_Duty:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     PWM_Set_Duty@DC:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 2 bytes @ 0x0
   214  0070                     	ds	2
   215  0072                     ??_PWM_Set_Duty:
   216                           
   217                           ; 1 bytes @ 0x2
   218  0072                     	ds	2
   219  0074                     ??_main:
   220                           
   221                           ; 1 bytes @ 0x4
   222  0074                     	ds	2
   223                           
   224                           	psect	maintext
   225  079E                     __pmaintext:	
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 49 in file "newmain.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : B00/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0
   248 ;;      Totals:         2       0       0       0       0
   249 ;;Total ram usage:        2 bytes
   250 ;; Hardware stack levels required when called: 1
   251 ;; This function calls:
   252 ;;		_PWM_Init
   253 ;;		_PWM_Set_Duty
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259  079E                     _main:	
   260                           ;psect for function _main
   261                           
   262  079E                     l683:	
   263                           ;incstack = 0
   264                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   265                           
   266                           
   267                           ;newmain.c: 50:     PWM_Init();
   268  079E  120A  118A  276E  120A  118A  	fcall	_PWM_Init
   269  07A3                     l685:
   270                           
   271                           ;newmain.c: 52:     {;newmain.c: 53:         dutyCycle = 0;
   272  07A3  01F6               	clrf	_dutyCycle
   273  07A4  01F7               	clrf	_dutyCycle+1
   274                           
   275                           ;newmain.c: 56:         while (dutyCycle<500)
   276  07A5  2FBE               	goto	l693
   277  07A6                     l687:
   278                           
   279                           ;newmain.c: 57:         {;newmain.c: 58:           PWM_Set_Duty(dutyCycle);
   280  07A6  0877               	movf	_dutyCycle+1,w
   281  07A7  00F1               	movwf	PWM_Set_Duty@DC+1
   282  07A8  0876               	movf	_dutyCycle,w
   283  07A9  00F0               	movwf	PWM_Set_Duty@DC
   284  07AA  120A  118A  277D  120A  118A  	fcall	_PWM_Set_Duty
   285  07AF                     l689:
   286                           
   287                           ;newmain.c: 59:           dutyCycle++;
   288  07AF  3001               	movlw	1
   289  07B0  07F6               	addwf	_dutyCycle,f
   290  07B1  1803               	skipnc
   291  07B2  0AF7               	incf	_dutyCycle+1,f
   292  07B3  3000               	movlw	0
   293  07B4  07F7               	addwf	_dutyCycle+1,f
   294  07B5                     l691:
   295                           
   296                           ;newmain.c: 60:           _delay((unsigned long)((2)*(4000000/4000.0)));
   297  07B5  3003               	movlw	3
   298  07B6  00F5               	movwf	??_main+1
   299  07B7  3097               	movlw	151
   300  07B8  00F4               	movwf	??_main
   301  07B9                     u117:
   302  07B9  0BF4               	decfsz	??_main,f
   303  07BA  2FB9               	goto	u117
   304  07BB  0BF5               	decfsz	??_main+1,f
   305  07BC  2FB9               	goto	u117
   306  07BD  2FBE               	nop2
   307  07BE                     l693:
   308                           
   309                           ;newmain.c: 56:         while (dutyCycle<500)
   310  07BE  3001               	movlw	1
   311  07BF  0277               	subwf	_dutyCycle+1,w
   312  07C0  30F4               	movlw	244
   313  07C1  1903               	skipnz
   314  07C2  0276               	subwf	_dutyCycle,w
   315  07C3  1C03               	skipc
   316  07C4  2FC6               	goto	u91
   317  07C5  2FC7               	goto	u90
   318  07C6                     u91:
   319  07C6  2FA6               	goto	l687
   320  07C7                     u90:
   321  07C7                     l695:
   322                           
   323                           ;newmain.c: 62:         _delay((unsigned long)((100)*(4000000/4000.0)));
   324  07C7  3082               	movlw	130
   325  07C8  00F5               	movwf	??_main+1
   326  07C9  30DD               	movlw	221
   327  07CA  00F4               	movwf	??_main
   328  07CB                     u127:
   329  07CB  0BF4               	decfsz	??_main,f
   330  07CC  2FCB               	goto	u127
   331  07CD  0BF5               	decfsz	??_main+1,f
   332  07CE  2FCB               	goto	u127
   333  07CF  2FD0               	nop2
   334                           
   335                           ;newmain.c: 65:         while(dutyCycle>0)
   336  07D0  2FE9               	goto	l703
   337  07D1                     l697:
   338                           
   339                           ;newmain.c: 66:         {;newmain.c: 67:           PWM_Set_Duty(dutyCycle);
   340  07D1  0877               	movf	_dutyCycle+1,w
   341  07D2  00F1               	movwf	PWM_Set_Duty@DC+1
   342  07D3  0876               	movf	_dutyCycle,w
   343  07D4  00F0               	movwf	PWM_Set_Duty@DC
   344  07D5  120A  118A  277D  120A  118A  	fcall	_PWM_Set_Duty
   345  07DA                     l699:
   346                           
   347                           ;newmain.c: 68:           dutyCycle--;
   348  07DA  3001               	movlw	1
   349  07DB  02F6               	subwf	_dutyCycle,f
   350  07DC  3000               	movlw	0
   351  07DD  1C03               	skipc
   352  07DE  03F7               	decf	_dutyCycle+1,f
   353  07DF  02F7               	subwf	_dutyCycle+1,f
   354  07E0                     l701:
   355                           
   356                           ;newmain.c: 69:           _delay((unsigned long)((2)*(4000000/4000.0)));
   357  07E0  3003               	movlw	3
   358  07E1  00F5               	movwf	??_main+1
   359  07E2  3097               	movlw	151
   360  07E3  00F4               	movwf	??_main
   361  07E4                     u137:
   362  07E4  0BF4               	decfsz	??_main,f
   363  07E5  2FE4               	goto	u137
   364  07E6  0BF5               	decfsz	??_main+1,f
   365  07E7  2FE4               	goto	u137
   366  07E8  2FE9               	nop2
   367  07E9                     l703:
   368                           
   369                           ;newmain.c: 65:         while(dutyCycle>0)
   370  07E9  0876               	movf	_dutyCycle,w
   371  07EA  0477               	iorwf	_dutyCycle+1,w
   372  07EB  1D03               	btfss	3,2
   373  07EC  2FEE               	goto	u101
   374  07ED  2FEF               	goto	u100
   375  07EE                     u101:
   376  07EE  2FD1               	goto	l697
   377  07EF                     u100:
   378  07EF                     l705:
   379                           
   380                           ;newmain.c: 72:         _delay((unsigned long)((100)*(4000000/4000.0)));
   381  07EF  3082               	movlw	130
   382  07F0  00F5               	movwf	??_main+1
   383  07F1  30DD               	movlw	221
   384  07F2  00F4               	movwf	??_main
   385  07F3                     u147:
   386  07F3  0BF4               	decfsz	??_main,f
   387  07F4  2FF3               	goto	u147
   388  07F5  0BF5               	decfsz	??_main+1,f
   389  07F6  2FF3               	goto	u147
   390  07F7  2FF8               	nop2
   391  07F8  2FA3               	goto	l685
   392  07F9  120A  118A  2800   	ljmp	start
   393  07FC                     __end_of_main:
   394                           
   395                           	psect	text1
   396  077D                     __ptext1:	
   397 ;; *************** function _PWM_Set_Duty *****************
   398 ;; Defined at:
   399 ;;		line 39 in file "newmain.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;  DC              2    0[COMMON] unsigned int 
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         2       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          2       0       0       0       0
   416 ;;      Totals:         4       0       0       0       0
   417 ;;Total ram usage:        4 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426  077D                     _PWM_Set_Duty:	
   427                           ;psect for function _PWM_Set_Duty
   428                           
   429  077D                     l677:	
   430                           ;incstack = 0
   431                           ; Regs used in _PWM_Set_Duty: [wreg+status,2+status,0]
   432                           
   433                           
   434                           ;newmain.c: 39: void PWM_Set_Duty(uint16_t DC);newmain.c: 40: {;newmain.c: 42:     if(DC
      +                          <1024)
   435  077D  3004               	movlw	4
   436  077E  0271               	subwf	PWM_Set_Duty@DC+1,w
   437  077F  3000               	movlw	0
   438  0780  1903               	skipnz
   439  0781  0270               	subwf	PWM_Set_Duty@DC,w
   440  0782  1803               	skipnc
   441  0783  2F85               	goto	u61
   442  0784  2F86               	goto	u60
   443  0785                     u61:
   444  0785  2F9D               	goto	l31
   445  0786                     u60:
   446  0786                     l679:
   447                           
   448                           ;newmain.c: 43:     {;newmain.c: 44:         CCP1Y = DC & 1;
   449  0786  1870               	btfsc	PWM_Set_Duty@DC,0
   450  0787  2F89               	goto	u71
   451  0788  2F8D               	goto	u70
   452  0789                     u71:
   453  0789  1283               	bcf	3,5	;RP0=0, select bank0
   454  078A  1303               	bcf	3,6	;RP1=0, select bank0
   455  078B  1617               	bsf	23,4	;volatile
   456  078C  2F90               	goto	u84
   457  078D                     u70:
   458  078D  1283               	bcf	3,5	;RP0=0, select bank0
   459  078E  1303               	bcf	3,6	;RP1=0, select bank0
   460  078F  1217               	bcf	23,4	;volatile
   461  0790                     u84:
   462                           
   463                           ;newmain.c: 45:         CCP1X = DC & 2;
   464  0790  1297               	bcf	23,5	;volatile
   465  0791                     l681:
   466                           
   467                           ;newmain.c: 46:         CCPR1L = DC >> 2;
   468  0791  0871               	movf	PWM_Set_Duty@DC+1,w
   469  0792  00F3               	movwf	??_PWM_Set_Duty+1
   470  0793  0870               	movf	PWM_Set_Duty@DC,w
   471  0794  00F2               	movwf	??_PWM_Set_Duty
   472  0795  1003               	clrc
   473  0796  0CF3               	rrf	??_PWM_Set_Duty+1,f
   474  0797  0CF2               	rrf	??_PWM_Set_Duty,f
   475  0798  1003               	clrc
   476  0799  0CF3               	rrf	??_PWM_Set_Duty+1,f
   477  079A  0CF2               	rrf	??_PWM_Set_Duty,f
   478  079B  0872               	movf	??_PWM_Set_Duty,w
   479  079C  0095               	movwf	21	;volatile
   480  079D                     l31:
   481  079D  0008               	return
   482  079E                     __end_of_PWM_Set_Duty:
   483                           
   484                           	psect	text2
   485  076E                     __ptext2:	
   486 ;; *************** function _PWM_Init *****************
   487 ;; Defined at:
   488 ;;		line 25 in file "newmain.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515  076E                     _PWM_Init:	
   516                           ;psect for function _PWM_Init
   517                           
   518  076E                     l637:	
   519                           ;incstack = 0
   520                           ; Regs used in _PWM_Init: [wreg]
   521                           
   522                           
   523                           ;newmain.c: 28:       CCP1M3 = 1;
   524  076E  1283               	bcf	3,5	;RP0=0, select bank0
   525  076F  1303               	bcf	3,6	;RP1=0, select bank0
   526  0770  1597               	bsf	23,3	;volatile
   527                           
   528                           ;newmain.c: 29:       CCP1M2 = 1;
   529  0771  1517               	bsf	23,2	;volatile
   530                           
   531                           ;newmain.c: 30:       TRISC2 = 0;
   532  0772  1683               	bsf	3,5	;RP0=1, select bank1
   533  0773  1303               	bcf	3,6	;RP1=0, select bank1
   534  0774  1107               	bcf	7,2	;volatile
   535  0775                     l639:
   536                           
   537                           ;newmain.c: 32:       PR2 = 124;
   538  0775  307C               	movlw	124
   539  0776  0092               	movwf	18	;volatile
   540  0777                     l641:
   541                           
   542                           ;newmain.c: 34:       T2CKPS0 = 1;
   543  0777  1283               	bcf	3,5	;RP0=0, select bank0
   544  0778  1303               	bcf	3,6	;RP1=0, select bank0
   545  0779  1412               	bsf	18,0	;volatile
   546  077A                     l643:
   547                           
   548                           ;newmain.c: 35:       T2CKPS1 = 0;
   549  077A  1092               	bcf	18,1	;volatile
   550  077B                     l645:
   551                           
   552                           ;newmain.c: 37:       TMR2ON = 1;
   553  077B  1512               	bsf	18,2	;volatile
   554  077C                     l27:
   555  077C  0008               	return
   556  077D                     __end_of_PWM_Init:
   557  007E                     btemp	set	126	;btemp
   558  007E                     wtemp0	set	126
   559                           
   560                           	psect	idloc
   561                           
   562                           ;Config register IDLOC0 @ 0x2000
   563                           ;	unspecified, using default values
   564  2000                     	org	8192
   565  2000  3FFF               	dw	16383
   566                           
   567                           ;Config register IDLOC1 @ 0x2001
   568                           ;	unspecified, using default values
   569  2001                     	org	8193
   570  2001  3FFF               	dw	16383
   571                           
   572                           ;Config register IDLOC2 @ 0x2002
   573                           ;	unspecified, using default values
   574  2002                     	org	8194
   575  2002  3FFF               	dw	16383
   576                           
   577                           ;Config register IDLOC3 @ 0x2003
   578                           ;	unspecified, using default values
   579  2003                     	org	8195
   580  2003  3FFF               	dw	16383
   581                           
   582                           	psect	config
   583                           
   584                           ;Config register CONFIG @ 0x2007
   585                           ;	Oscillator Selection bits
   586                           ;	FOSC = EXTRC, RC oscillator
   587                           ;	Watchdog Timer Enable bit
   588                           ;	WDTE = OFF, WDT disabled
   589                           ;	Power-up Timer Enable bit
   590                           ;	PWRTE = OFF, PWRT disabled
   591                           ;	Brown-out Reset Enable bit
   592                           ;	BOREN = OFF, BOR disabled
   593                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   594                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   595                           ;	Data EEPROM Memory Code Protection bit
   596                           ;	CPD = OFF, Data EEPROM code protection off
   597                           ;	Flash Program Memory Write Enable bits
   598                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   599                           ;	In-Circuit Debugger Mode bit
   600                           ;	DEBUG = 0x1, unprogrammed default
   601                           ;	Flash Program Memory Code Protection bit
   602                           ;	CP = OFF, Code protection off
   603  2007                     	org	8199
   604  2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     218
                                              4 COMMON     2     2      0
                           _PWM_Init
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (1) _PWM_Set_Duty                                         4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Init
   _PWM_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 16 22:39:12 2022

                     l31 079D                       l27 077C                       u60 0786  
                     u61 0785                       u70 078D                       u71 0789  
                     u90 07C7                       u91 07C6                       u84 0790  
         PWM_Set_Duty@DC 0070                      l701 07E0                      l703 07E9  
                    l641 0777                      l705 07EF                      l643 077A  
                    l645 077B                      l637 076E                      l639 0775  
                    l681 0791                      l691 07B5                      l683 079E  
                    l677 077D                      l693 07BE                      l685 07A3  
                    l679 0786                      l695 07C7                      l687 07A6  
                    l697 07D1                      l689 07AF                      l699 07DA  
                    u100 07EF                      u101 07EE                      u117 07B9  
                    u127 07CB                      u137 07E4                      u147 07F3  
                    _PR2 0092                     _main 079E                     btemp 007E  
                   start 0000             _PWM_Set_Duty 077D                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC         __end_of_PWM_Init 077D  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCPR1L 0015                   _TMR2ON 0092  
                 _TRISC2 043A  __end_of__initialization 07FC           __pcstackCOMMON 0070  
              ?_PWM_Init 0070               __pnvCOMMON 0076               __pmaintext 079E  
             ??_PWM_Init 0070                  _T2CKPS0 0090                  _T2CKPS1 0091  
                __ptext1 077D                  __ptext2 076E     end_of_initialization 07FC  
    start_initialization 07FC            ?_PWM_Set_Duty 0070                ___latbits 0002  
         ??_PWM_Set_Duty 0072                _dutyCycle 0076                 _PWM_Init 076E  
   __end_of_PWM_Set_Duty 079E  
