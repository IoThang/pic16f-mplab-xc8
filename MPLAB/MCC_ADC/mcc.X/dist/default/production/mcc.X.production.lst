

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 06 10:58:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F1509 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0194                     	;# 
   160  0195                     	;# 
   161  0196                     	;# 
   162  0197                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019D                     	;# 
   169  019E                     	;# 
   170  019F                     	;# 
   171  020C                     	;# 
   172  020D                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0214                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0216                     	;# 
   185  0216                     	;# 
   186  0217                     	;# 
   187  0217                     	;# 
   188  0391                     	;# 
   189  0392                     	;# 
   190  0393                     	;# 
   191  0394                     	;# 
   192  0395                     	;# 
   193  0396                     	;# 
   194  0498                     	;# 
   195  0498                     	;# 
   196  0499                     	;# 
   197  049A                     	;# 
   198  049B                     	;# 
   199  049B                     	;# 
   200  049C                     	;# 
   201  049D                     	;# 
   202  049E                     	;# 
   203  049F                     	;# 
   204  0611                     	;# 
   205  0612                     	;# 
   206  0613                     	;# 
   207  0613                     	;# 
   208  0614                     	;# 
   209  0615                     	;# 
   210  0616                     	;# 
   211  0616                     	;# 
   212  0617                     	;# 
   213  0618                     	;# 
   214  0619                     	;# 
   215  0619                     	;# 
   216  061A                     	;# 
   217  061B                     	;# 
   218  061C                     	;# 
   219  061C                     	;# 
   220  0691                     	;# 
   221  0692                     	;# 
   222  0693                     	;# 
   223  0694                     	;# 
   224  0695                     	;# 
   225  0F0F                     	;# 
   226  0F10                     	;# 
   227  0F11                     	;# 
   228  0F12                     	;# 
   229  0F13                     	;# 
   230  0F14                     	;# 
   231  0F15                     	;# 
   232  0F16                     	;# 
   233  0F17                     	;# 
   234  0F18                     	;# 
   235  0F19                     	;# 
   236  0F1A                     	;# 
   237  0F1B                     	;# 
   238  0F1C                     	;# 
   239  0F1D                     	;# 
   240  0F1E                     	;# 
   241  0F1F                     	;# 
   242  0F20                     	;# 
   243  0F21                     	;# 
   244  0F22                     	;# 
   245  0F23                     	;# 
   246  0F24                     	;# 
   247  0F25                     	;# 
   248  0F26                     	;# 
   249  0F27                     	;# 
   250  0F28                     	;# 
   251  0F29                     	;# 
   252  0F2A                     	;# 
   253  0F2B                     	;# 
   254  0F2C                     	;# 
   255  0F2D                     	;# 
   256  0F2E                     	;# 
   257  0F2F                     	;# 
   258  0F8C                     	;# 
   259  0F8D                     	;# 
   260  0F91                     	;# 
   261  0F95                     	;# 
   262  0F96                     	;# 
   263  0F97                     	;# 
   264  0F9C                     	;# 
   265  0F9D                     	;# 
   266  0F9E                     	;# 
   267  0FE3                     	;# 
   268  0FE4                     	;# 
   269  0FE5                     	;# 
   270  0FE6                     	;# 
   271  0FE7                     	;# 
   272  0FE8                     	;# 
   273  0FE9                     	;# 
   274  0FEA                     	;# 
   275  0FEB                     	;# 
   276  0FED                     	;# 
   277  0FEE                     	;# 
   278  0FEF                     	;# 
   279  0000                     	;# 
   280  0001                     	;# 
   281  0002                     	;# 
   282  0003                     	;# 
   283  0004                     	;# 
   284  0005                     	;# 
   285  0006                     	;# 
   286  0007                     	;# 
   287  0008                     	;# 
   288  0009                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000D                     	;# 
   293  000E                     	;# 
   294  0011                     	;# 
   295  0012                     	;# 
   296  0013                     	;# 
   297  0015                     	;# 
   298  0016                     	;# 
   299  0016                     	;# 
   300  0017                     	;# 
   301  0018                     	;# 
   302  0019                     	;# 
   303  001A                     	;# 
   304  001B                     	;# 
   305  001C                     	;# 
   306  008C                     	;# 
   307  008D                     	;# 
   308  008E                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  010C                     	;# 
   324  010D                     	;# 
   325  010E                     	;# 
   326  0111                     	;# 
   327  0112                     	;# 
   328  0113                     	;# 
   329  0114                     	;# 
   330  0115                     	;# 
   331  0116                     	;# 
   332  0117                     	;# 
   333  0118                     	;# 
   334  0119                     	;# 
   335  011D                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  018E                     	;# 
   339  0191                     	;# 
   340  0191                     	;# 
   341  0192                     	;# 
   342  0193                     	;# 
   343  0193                     	;# 
   344  0194                     	;# 
   345  0195                     	;# 
   346  0196                     	;# 
   347  0197                     	;# 
   348  0199                     	;# 
   349  019A                     	;# 
   350  019B                     	;# 
   351  019B                     	;# 
   352  019C                     	;# 
   353  019D                     	;# 
   354  019E                     	;# 
   355  019F                     	;# 
   356  020C                     	;# 
   357  020D                     	;# 
   358  0211                     	;# 
   359  0211                     	;# 
   360  0212                     	;# 
   361  0212                     	;# 
   362  0213                     	;# 
   363  0213                     	;# 
   364  0214                     	;# 
   365  0214                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0391                     	;# 
   374  0392                     	;# 
   375  0393                     	;# 
   376  0394                     	;# 
   377  0395                     	;# 
   378  0396                     	;# 
   379  0498                     	;# 
   380  0498                     	;# 
   381  0499                     	;# 
   382  049A                     	;# 
   383  049B                     	;# 
   384  049B                     	;# 
   385  049C                     	;# 
   386  049D                     	;# 
   387  049E                     	;# 
   388  049F                     	;# 
   389  0611                     	;# 
   390  0612                     	;# 
   391  0613                     	;# 
   392  0613                     	;# 
   393  0614                     	;# 
   394  0615                     	;# 
   395  0616                     	;# 
   396  0616                     	;# 
   397  0617                     	;# 
   398  0618                     	;# 
   399  0619                     	;# 
   400  0619                     	;# 
   401  061A                     	;# 
   402  061B                     	;# 
   403  061C                     	;# 
   404  061C                     	;# 
   405  0691                     	;# 
   406  0692                     	;# 
   407  0693                     	;# 
   408  0694                     	;# 
   409  0695                     	;# 
   410  0F0F                     	;# 
   411  0F10                     	;# 
   412  0F11                     	;# 
   413  0F12                     	;# 
   414  0F13                     	;# 
   415  0F14                     	;# 
   416  0F15                     	;# 
   417  0F16                     	;# 
   418  0F17                     	;# 
   419  0F18                     	;# 
   420  0F19                     	;# 
   421  0F1A                     	;# 
   422  0F1B                     	;# 
   423  0F1C                     	;# 
   424  0F1D                     	;# 
   425  0F1E                     	;# 
   426  0F1F                     	;# 
   427  0F20                     	;# 
   428  0F21                     	;# 
   429  0F22                     	;# 
   430  0F23                     	;# 
   431  0F24                     	;# 
   432  0F25                     	;# 
   433  0F26                     	;# 
   434  0F27                     	;# 
   435  0F28                     	;# 
   436  0F29                     	;# 
   437  0F2A                     	;# 
   438  0F2B                     	;# 
   439  0F2C                     	;# 
   440  0F2D                     	;# 
   441  0F2E                     	;# 
   442  0F2F                     	;# 
   443  0F8C                     	;# 
   444  0F8D                     	;# 
   445  0F91                     	;# 
   446  0F95                     	;# 
   447  0F96                     	;# 
   448  0F97                     	;# 
   449  0F9C                     	;# 
   450  0F9D                     	;# 
   451  0F9E                     	;# 
   452  0FE3                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  008C                     	;# 
   492  008D                     	;# 
   493  008E                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010E                     	;# 
   511  0111                     	;# 
   512  0112                     	;# 
   513  0113                     	;# 
   514  0114                     	;# 
   515  0115                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  0118                     	;# 
   519  0119                     	;# 
   520  011D                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  018E                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0194                     	;# 
   530  0195                     	;# 
   531  0196                     	;# 
   532  0197                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019E                     	;# 
   540  019F                     	;# 
   541  020C                     	;# 
   542  020D                     	;# 
   543  0211                     	;# 
   544  0211                     	;# 
   545  0212                     	;# 
   546  0212                     	;# 
   547  0213                     	;# 
   548  0213                     	;# 
   549  0214                     	;# 
   550  0214                     	;# 
   551  0215                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0216                     	;# 
   555  0216                     	;# 
   556  0217                     	;# 
   557  0217                     	;# 
   558  0391                     	;# 
   559  0392                     	;# 
   560  0393                     	;# 
   561  0394                     	;# 
   562  0395                     	;# 
   563  0396                     	;# 
   564  0498                     	;# 
   565  0498                     	;# 
   566  0499                     	;# 
   567  049A                     	;# 
   568  049B                     	;# 
   569  049B                     	;# 
   570  049C                     	;# 
   571  049D                     	;# 
   572  049E                     	;# 
   573  049F                     	;# 
   574  0611                     	;# 
   575  0612                     	;# 
   576  0613                     	;# 
   577  0613                     	;# 
   578  0614                     	;# 
   579  0615                     	;# 
   580  0616                     	;# 
   581  0616                     	;# 
   582  0617                     	;# 
   583  0618                     	;# 
   584  0619                     	;# 
   585  0619                     	;# 
   586  061A                     	;# 
   587  061B                     	;# 
   588  061C                     	;# 
   589  061C                     	;# 
   590  0691                     	;# 
   591  0692                     	;# 
   592  0693                     	;# 
   593  0694                     	;# 
   594  0695                     	;# 
   595  0F0F                     	;# 
   596  0F10                     	;# 
   597  0F11                     	;# 
   598  0F12                     	;# 
   599  0F13                     	;# 
   600  0F14                     	;# 
   601  0F15                     	;# 
   602  0F16                     	;# 
   603  0F17                     	;# 
   604  0F18                     	;# 
   605  0F19                     	;# 
   606  0F1A                     	;# 
   607  0F1B                     	;# 
   608  0F1C                     	;# 
   609  0F1D                     	;# 
   610  0F1E                     	;# 
   611  0F1F                     	;# 
   612  0F20                     	;# 
   613  0F21                     	;# 
   614  0F22                     	;# 
   615  0F23                     	;# 
   616  0F24                     	;# 
   617  0F25                     	;# 
   618  0F26                     	;# 
   619  0F27                     	;# 
   620  0F28                     	;# 
   621  0F29                     	;# 
   622  0F2A                     	;# 
   623  0F2B                     	;# 
   624  0F2C                     	;# 
   625  0F2D                     	;# 
   626  0F2E                     	;# 
   627  0F2F                     	;# 
   628  0F8C                     	;# 
   629  0F8D                     	;# 
   630  0F91                     	;# 
   631  0F95                     	;# 
   632  0F96                     	;# 
   633  0F97                     	;# 
   634  0F9C                     	;# 
   635  0F9D                     	;# 
   636  0F9E                     	;# 
   637  0FE3                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  000E                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0093                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  009F                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  0111                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0115                     	;# 
   701  0116                     	;# 
   702  0117                     	;# 
   703  0118                     	;# 
   704  0119                     	;# 
   705  011D                     	;# 
   706  018C                     	;# 
   707  018D                     	;# 
   708  018E                     	;# 
   709  0191                     	;# 
   710  0191                     	;# 
   711  0192                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0197                     	;# 
   718  0199                     	;# 
   719  019A                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  019D                     	;# 
   724  019E                     	;# 
   725  019F                     	;# 
   726  020C                     	;# 
   727  020D                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0391                     	;# 
   744  0392                     	;# 
   745  0393                     	;# 
   746  0394                     	;# 
   747  0395                     	;# 
   748  0396                     	;# 
   749  0498                     	;# 
   750  0498                     	;# 
   751  0499                     	;# 
   752  049A                     	;# 
   753  049B                     	;# 
   754  049B                     	;# 
   755  049C                     	;# 
   756  049D                     	;# 
   757  049E                     	;# 
   758  049F                     	;# 
   759  0611                     	;# 
   760  0612                     	;# 
   761  0613                     	;# 
   762  0613                     	;# 
   763  0614                     	;# 
   764  0615                     	;# 
   765  0616                     	;# 
   766  0616                     	;# 
   767  0617                     	;# 
   768  0618                     	;# 
   769  0619                     	;# 
   770  0619                     	;# 
   771  061A                     	;# 
   772  061B                     	;# 
   773  061C                     	;# 
   774  061C                     	;# 
   775  0691                     	;# 
   776  0692                     	;# 
   777  0693                     	;# 
   778  0694                     	;# 
   779  0695                     	;# 
   780  0F0F                     	;# 
   781  0F10                     	;# 
   782  0F11                     	;# 
   783  0F12                     	;# 
   784  0F13                     	;# 
   785  0F14                     	;# 
   786  0F15                     	;# 
   787  0F16                     	;# 
   788  0F17                     	;# 
   789  0F18                     	;# 
   790  0F19                     	;# 
   791  0F1A                     	;# 
   792  0F1B                     	;# 
   793  0F1C                     	;# 
   794  0F1D                     	;# 
   795  0F1E                     	;# 
   796  0F1F                     	;# 
   797  0F20                     	;# 
   798  0F21                     	;# 
   799  0F22                     	;# 
   800  0F23                     	;# 
   801  0F24                     	;# 
   802  0F25                     	;# 
   803  0F26                     	;# 
   804  0F27                     	;# 
   805  0F28                     	;# 
   806  0F29                     	;# 
   807  0F2A                     	;# 
   808  0F2B                     	;# 
   809  0F2C                     	;# 
   810  0F2D                     	;# 
   811  0F2E                     	;# 
   812  0F2F                     	;# 
   813  0F8C                     	;# 
   814  0F8D                     	;# 
   815  0F91                     	;# 
   816  0F95                     	;# 
   817  0F96                     	;# 
   818  0F97                     	;# 
   819  0F9C                     	;# 
   820  0F9D                     	;# 
   821  0F9E                     	;# 
   822  0FE3                     	;# 
   823  0FE4                     	;# 
   824  0FE5                     	;# 
   825  0FE6                     	;# 
   826  0FE7                     	;# 
   827  0FE8                     	;# 
   828  0FE9                     	;# 
   829  0FEA                     	;# 
   830  0FEB                     	;# 
   831  0FED                     	;# 
   832  0FEE                     	;# 
   833  0FEF                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0008                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000D                     	;# 
   848  000E                     	;# 
   849  0011                     	;# 
   850  0012                     	;# 
   851  0013                     	;# 
   852  0015                     	;# 
   853  0016                     	;# 
   854  0016                     	;# 
   855  0017                     	;# 
   856  0018                     	;# 
   857  0019                     	;# 
   858  001A                     	;# 
   859  001B                     	;# 
   860  001C                     	;# 
   861  008C                     	;# 
   862  008D                     	;# 
   863  008E                     	;# 
   864  0091                     	;# 
   865  0092                     	;# 
   866  0093                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0099                     	;# 
   871  009A                     	;# 
   872  009B                     	;# 
   873  009B                     	;# 
   874  009C                     	;# 
   875  009D                     	;# 
   876  009E                     	;# 
   877  009F                     	;# 
   878  010C                     	;# 
   879  010D                     	;# 
   880  010E                     	;# 
   881  0111                     	;# 
   882  0112                     	;# 
   883  0113                     	;# 
   884  0114                     	;# 
   885  0115                     	;# 
   886  0116                     	;# 
   887  0117                     	;# 
   888  0118                     	;# 
   889  0119                     	;# 
   890  011D                     	;# 
   891  018C                     	;# 
   892  018D                     	;# 
   893  018E                     	;# 
   894  0191                     	;# 
   895  0191                     	;# 
   896  0192                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0197                     	;# 
   903  0199                     	;# 
   904  019A                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019C                     	;# 
   908  019D                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  020C                     	;# 
   912  020D                     	;# 
   913  0211                     	;# 
   914  0211                     	;# 
   915  0212                     	;# 
   916  0212                     	;# 
   917  0213                     	;# 
   918  0213                     	;# 
   919  0214                     	;# 
   920  0214                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0216                     	;# 
   925  0216                     	;# 
   926  0217                     	;# 
   927  0217                     	;# 
   928  0391                     	;# 
   929  0392                     	;# 
   930  0393                     	;# 
   931  0394                     	;# 
   932  0395                     	;# 
   933  0396                     	;# 
   934  0498                     	;# 
   935  0498                     	;# 
   936  0499                     	;# 
   937  049A                     	;# 
   938  049B                     	;# 
   939  049B                     	;# 
   940  049C                     	;# 
   941  049D                     	;# 
   942  049E                     	;# 
   943  049F                     	;# 
   944  0611                     	;# 
   945  0612                     	;# 
   946  0613                     	;# 
   947  0613                     	;# 
   948  0614                     	;# 
   949  0615                     	;# 
   950  0616                     	;# 
   951  0616                     	;# 
   952  0617                     	;# 
   953  0618                     	;# 
   954  0619                     	;# 
   955  0619                     	;# 
   956  061A                     	;# 
   957  061B                     	;# 
   958  061C                     	;# 
   959  061C                     	;# 
   960  0691                     	;# 
   961  0692                     	;# 
   962  0693                     	;# 
   963  0694                     	;# 
   964  0695                     	;# 
   965  0F0F                     	;# 
   966  0F10                     	;# 
   967  0F11                     	;# 
   968  0F12                     	;# 
   969  0F13                     	;# 
   970  0F14                     	;# 
   971  0F15                     	;# 
   972  0F16                     	;# 
   973  0F17                     	;# 
   974  0F18                     	;# 
   975  0F19                     	;# 
   976  0F1A                     	;# 
   977  0F1B                     	;# 
   978  0F1C                     	;# 
   979  0F1D                     	;# 
   980  0F1E                     	;# 
   981  0F1F                     	;# 
   982  0F20                     	;# 
   983  0F21                     	;# 
   984  0F22                     	;# 
   985  0F23                     	;# 
   986  0F24                     	;# 
   987  0F25                     	;# 
   988  0F26                     	;# 
   989  0F27                     	;# 
   990  0F28                     	;# 
   991  0F29                     	;# 
   992  0F2A                     	;# 
   993  0F2B                     	;# 
   994  0F2C                     	;# 
   995  0F2D                     	;# 
   996  0F2E                     	;# 
   997  0F2F                     	;# 
   998  0F8C                     	;# 
   999  0F8D                     	;# 
  1000  0F91                     	;# 
  1001  0F95                     	;# 
  1002  0F96                     	;# 
  1003  0F97                     	;# 
  1004  0F9C                     	;# 
  1005  0F9D                     	;# 
  1006  0F9E                     	;# 
  1007  0FE3                     	;# 
  1008  0FE4                     	;# 
  1009  0FE5                     	;# 
  1010  0FE6                     	;# 
  1011  0FE7                     	;# 
  1012  0FE8                     	;# 
  1013  0FE9                     	;# 
  1014  0FEA                     	;# 
  1015  0FEB                     	;# 
  1016  0FED                     	;# 
  1017  0FEE                     	;# 
  1018  0FEF                     	;# 
  1019                           
  1020                           	psect	stringtext1
  1021  1835                     __pstringtext1:
  1022  1835                     __powers_:
  1023  1835  3400               	retlw	0
  1024  1836  3480               	retlw	128
  1025  1837  343F               	retlw	63
  1026  1838  3400               	retlw	0
  1027  1839  3420               	retlw	32
  1028  183A  3441               	retlw	65
  1029  183B  3400               	retlw	0
  1030  183C  34C8               	retlw	200
  1031  183D  3442               	retlw	66
  1032  183E  3400               	retlw	0
  1033  183F  347A               	retlw	122
  1034  1840  3444               	retlw	68
  1035  1841  3440               	retlw	64
  1036  1842  341C               	retlw	28
  1037  1843  3446               	retlw	70
  1038  1844  3450               	retlw	80
  1039  1845  34C3               	retlw	195
  1040  1846  3447               	retlw	71
  1041  1847  3424               	retlw	36
  1042  1848  3474               	retlw	116
  1043  1849  3449               	retlw	73
  1044  184A  3497               	retlw	151
  1045  184B  3418               	retlw	24
  1046  184C  344B               	retlw	75
  1047  184D  34BC               	retlw	188
  1048  184E  34BE               	retlw	190
  1049  184F  344C               	retlw	76
  1050  1850  346B               	retlw	107
  1051  1851  346E               	retlw	110
  1052  1852  344E               	retlw	78
  1053  1853  3403               	retlw	3
  1054  1854  3415               	retlw	21
  1055  1855  3450               	retlw	80
  1056  1856  3479               	retlw	121
  1057  1857  34AD               	retlw	173
  1058  1858  3460               	retlw	96
  1059  1859  34F3               	retlw	243
  1060  185A  3449               	retlw	73
  1061  185B  3471               	retlw	113
  1062  185C                     __end_of__powers_:
  1063                           
  1064                           	psect	stringtext2
  1065  185C                     __pstringtext2:
  1066  185C                     __npowers_:
  1067  185C  3400               	retlw	0
  1068  185D  3480               	retlw	128
  1069  185E  343F               	retlw	63
  1070  185F  34CD               	retlw	205
  1071  1860  34CC               	retlw	204
  1072  1861  343D               	retlw	61
  1073  1862  34D7               	retlw	215
  1074  1863  3423               	retlw	35
  1075  1864  343C               	retlw	60
  1076  1865  3412               	retlw	18
  1077  1866  3483               	retlw	131
  1078  1867  343A               	retlw	58
  1079  1868  34B7               	retlw	183
  1080  1869  34D1               	retlw	209
  1081  186A  3438               	retlw	56
  1082  186B  34C6               	retlw	198
  1083  186C  3427               	retlw	39
  1084  186D  3437               	retlw	55
  1085  186E  3438               	retlw	56
  1086  186F  3486               	retlw	134
  1087  1870  3435               	retlw	53
  1088  1871  34C0               	retlw	192
  1089  1872  34D6               	retlw	214
  1090  1873  3433               	retlw	51
  1091  1874  34CC               	retlw	204
  1092  1875  342B               	retlw	43
  1093  1876  3432               	retlw	50
  1094  1877  3470               	retlw	112
  1095  1878  3489               	retlw	137
  1096  1879  3430               	retlw	48
  1097  187A  34E7               	retlw	231
  1098  187B  34DB               	retlw	219
  1099  187C  342E               	retlw	46
  1100  187D  34E5               	retlw	229
  1101  187E  343C               	retlw	60
  1102  187F  341E               	retlw	30
  1103  1880  3442               	retlw	66
  1104  1881  34A2               	retlw	162
  1105  1882  340D               	retlw	13
  1106  1883                     __end_of__npowers_:
  1107                           
  1108                           	psect	stringtext3
  1109  1800                     __pstringtext3:
  1110  1800                     _dpowers:
  1111  1800  3401               	retlw	1
  1112  1801  3400               	retlw	0
  1113  1802  3400               	retlw	0
  1114  1803  3400               	retlw	0
  1115  1804  340A               	retlw	10
  1116  1805  3400               	retlw	0
  1117  1806  3400               	retlw	0
  1118  1807  3400               	retlw	0
  1119  1808  3464               	retlw	100
  1120  1809  3400               	retlw	0
  1121  180A  3400               	retlw	0
  1122  180B  3400               	retlw	0
  1123  180C  34E8               	retlw	232
  1124  180D  3403               	retlw	3
  1125  180E  3400               	retlw	0
  1126  180F  3400               	retlw	0
  1127  1810  3410               	retlw	16
  1128  1811  3427               	retlw	39
  1129  1812  3400               	retlw	0
  1130  1813  3400               	retlw	0
  1131  1814  34A0               	retlw	160
  1132  1815  3486               	retlw	134
  1133  1816  3401               	retlw	1
  1134  1817  3400               	retlw	0
  1135  1818  3440               	retlw	64
  1136  1819  3442               	retlw	66
  1137  181A  340F               	retlw	15
  1138  181B  3400               	retlw	0
  1139  181C  3480               	retlw	128
  1140  181D  3496               	retlw	150
  1141  181E  3498               	retlw	152
  1142  181F  3400               	retlw	0
  1143  1820  3400               	retlw	0
  1144  1821  34E1               	retlw	225
  1145  1822  34F5               	retlw	245
  1146  1823  3405               	retlw	5
  1147  1824  3400               	retlw	0
  1148  1825  34CA               	retlw	202
  1149  1826  349A               	retlw	154
  1150  1827  343B               	retlw	59
  1151  1828                     __end_of_dpowers:
  1152  000E                     _PORTCbits	set	14
  1153  000E                     _PORTC	set	14
  1154  009D                     _ADCON0bits	set	157
  1155  009D                     _ADCON0	set	157
  1156  009C                     _ADRESH	set	156
  1157  009B                     _ADRESL	set	155
  1158  009F                     _ADCON2	set	159
  1159  009E                     _ADCON1	set	158
  1160  0095                     _OPTION_REGbits	set	149
  1161  008E                     _TRISC	set	142
  1162  008D                     _TRISB	set	141
  1163  008C                     _TRISA	set	140
  1164  0097                     _WDTCON	set	151
  1165  0099                     _OSCCON	set	153
  1166  011D                     _APFCON	set	285
  1167  010E                     _LATC	set	270
  1168  010D                     _LATB	set	269
  1169  010C                     _LATA	set	268
  1170  0116                     _BORCON	set	278
  1171  018C                     _ANSELA	set	396
  1172  018D                     _ANSELB	set	397
  1173  018E                     _ANSELC	set	398
  1174  020C                     _WPUA	set	524
  1175  020D                     _WPUB	set	525
  1176  1828                     STR_2:
  1177  1828  3454               	retlw	84	;'T'
  1178  1829  3465               	retlw	101	;'e'
  1179  182A  346D               	retlw	109	;'m'
  1180  182B  3470               	retlw	112	;'p'
  1181  182C  343D               	retlw	61	;'='
  1182  182D  3425               	retlw	37	;'%'
  1183  182E  342E               	retlw	46	;'.'
  1184  182F  3430               	retlw	48	;'0'
  1185  1830  3431               	retlw	49	;'1'
  1186  1831  3466               	retlw	102	;'f'
  1187  1832  3420               	retlw	32	;' '
  1188  1833  3443               	retlw	67	;'C'
  1189  1834  3400               	retlw	0
  1190                           
  1191                           	psect	stringtext4
  1192  1883                     __pstringtext4:
  1193  1883                     STR_1:
  1194  1883  3454               	retlw	84	;'T'
  1195  1884  3445               	retlw	69	;'E'
  1196  1885  344E               	retlw	78	;'N'
  1197  1886  3420               	retlw	32	;' '
  1198  1887  344D               	retlw	77	;'M'
  1199  1888  3453               	retlw	83	;'S'
  1200  1889  3453               	retlw	83	;'S'
  1201  188A  3456               	retlw	86	;'V'
  1202  188B  3400               	retlw	0
  1203                           
  1204                           	psect	stringtext5
  1205  0000                     __pstringtext5:
  1206                           
  1207                           	psect	cinit
  1208  07EF                     start_initialization:	
  1209                           ; #config settings
  1210                           
  1211  07EF                     __initialization:
  1212                           
  1213                           ; Clear objects allocated to BANK0
  1214  07EF  0020               	movlb	0	; select bank0
  1215  07F0  01E6               	clrf	__pbssBANK0& (0+127)
  1216  07F1  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1217  07F2  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1218  07F3  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1219  07F4  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1220                           
  1221                           ; Clear objects allocated to BANK1
  1222  07F5  30B7               	movlw	low __pbssBANK1
  1223  07F6  0084               	movwf	4
  1224  07F7  3000               	movlw	high __pbssBANK1
  1225  07F8  0085               	movwf	5
  1226  07F9  3014               	movlw	20
  1227  07FA  3195  2577  3187   	fcall	clear_ram0
  1228  07FD                     end_of_initialization:	
  1229                           ;End of C runtime variable initialization code
  1230                           
  1231  07FD                     __end_of__initialization:
  1232  07FD  0020               	movlb	0
  1233  07FE  3189  2947         	ljmp	_main	;jump to C main() function
  1234                           
  1235                           	psect	bssBANK0
  1236  0066                     __pbssBANK0:
  1237  0066                     _temp:
  1238  0066                     	ds	3
  1239  0069                     _ADC_InterruptHandler:
  1240  0069                     	ds	2
  1241                           
  1242                           	psect	bssBANK1
  1243  00B7                     __pbssBANK1:
  1244  00B7                     _x:
  1245  00B7                     	ds	20
  1246                           
  1247                           	psect	clrtext
  1248  1577                     clear_ram0:	
  1249                           ;	Called with FSR0 containing the base address, and
  1250                           ;	WREG with the size to clear
  1251                           
  1252  1577  0064               	clrwdt	;clear the watchdog before getting into this loop
  1253  1578                     clrloop0:
  1254  1578  0180               	clrf	0	;clear RAM location pointed to by FSR
  1255  1579  3101               	addfsr 0,1
  1256  157A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1257  157B  2D78               	goto	clrloop0	;have we reached the end yet?
  1258  157C  3400               	retlw	0	;all done for this memory range, return
  1259                           
  1260                           	psect	cstackBANK1
  1261  00A0                     __pcstackBANK1:
  1262  00A0                     _sprintf$737:
  1263                           
  1264                           ; 3 bytes @ 0x0
  1265  00A0                     	ds	3
  1266  00A3                     sprintf@ap:
  1267                           
  1268                           ; 1 bytes @ 0x3
  1269  00A3                     	ds	1
  1270  00A4                     sprintf@flag:
  1271                           
  1272                           ; 2 bytes @ 0x4
  1273  00A4                     	ds	2
  1274  00A6                     sprintf@val:
  1275                           
  1276                           ; 4 bytes @ 0x6
  1277  00A6                     	ds	4
  1278  00AA                     sprintf@eexp:
  1279                           
  1280                           ; 2 bytes @ 0xA
  1281  00AA                     	ds	2
  1282  00AC                     sprintf@tmpval:
  1283                           
  1284                           ; 4 bytes @ 0xC
  1285  00AC                     	ds	4
  1286  00B0                     sprintf@sp:
  1287                           
  1288                           ; 1 bytes @ 0x10
  1289  00B0                     	ds	1
  1290  00B1                     sprintf@prec:
  1291                           
  1292                           ; 2 bytes @ 0x11
  1293  00B1                     	ds	2
  1294  00B3                     sprintf@fval:
  1295                           
  1296                           ; 3 bytes @ 0x13
  1297  00B3                     	ds	3
  1298  00B6                     sprintf@c:
  1299                           
  1300                           ; 1 bytes @ 0x16
  1301  00B6                     	ds	1
  1302                           
  1303                           	psect	cstackCOMMON
  1304  0070                     __pcstackCOMMON:
  1305  0070                     ?_isdigit:
  1306  0070                     ?___ftge:	
  1307                           ; 1 bit 
  1308                           
  1309  0070                     ?_PIN_MANAGER_Initialize:	
  1310                           ; 1 bit 
  1311                           
  1312  0070                     ??_PIN_MANAGER_Initialize:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_OSCILLATOR_Initialize:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ??_OSCILLATOR_Initialize:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ?_WDT_Initialize:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ??_WDT_Initialize:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_ADC_Initialize:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ??_ADC_Initialize:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_LCD_Initialize:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_LCDPutCmd:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ??_isdigit:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ?_SYSTEM_Initialize:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ??_SYSTEM_Initialize:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_ADC_SelectChannel:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ??_ADC_SelectChannel:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_ADC_StartConversion:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ??_ADC_StartConversion:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_ADC_IsConversionDone:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ??_ADC_IsConversionDone:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_main:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_LCDWriteNibble:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_LCDPutChar:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_ADC_GetConversionResult:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?___awmod:	
  1379                           ; 2 bytes @ 0x0
  1380                           
  1381  0070                     ?___lwmod:	
  1382                           ; 2 bytes @ 0x0
  1383                           
  1384  0070                     ?___ftpack:	
  1385                           ; 2 bytes @ 0x0
  1386                           
  1387  0070                     ?___ftneg:	
  1388                           ; 3 bytes @ 0x0
  1389                           
  1390  0070                     ?__tdiv_to_l_:	
  1391                           ; 3 bytes @ 0x0
  1392                           
  1393  0070                     ?__div_to_l_:	
  1394                           ; 4 bytes @ 0x0
  1395                           
  1396  0070                     ?___lldiv:	
  1397                           ; 4 bytes @ 0x0
  1398                           
  1399  0070                     ?___llmod:	
  1400                           ; 4 bytes @ 0x0
  1401                           
  1402  0070                     LCDWriteNibble@rs:	
  1403                           ; 4 bytes @ 0x0
  1404                           
  1405  0070                     _isdigit$572:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ___awmod@divisor:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ___lwmod@divisor:	
  1412                           ; 2 bytes @ 0x0
  1413                           
  1414  0070                     __div_to_l_@f1:	
  1415                           ; 2 bytes @ 0x0
  1416                           
  1417  0070                     ___ftpack@arg:	
  1418                           ; 3 bytes @ 0x0
  1419                           
  1420  0070                     __tdiv_to_l_@f1:	
  1421                           ; 3 bytes @ 0x0
  1422                           
  1423  0070                     ___ftge@ff1:	
  1424                           ; 3 bytes @ 0x0
  1425                           
  1426  0070                     ___ftneg@f1:	
  1427                           ; 3 bytes @ 0x0
  1428                           
  1429  0070                     ___lldiv@divisor:	
  1430                           ; 3 bytes @ 0x0
  1431                           
  1432  0070                     ___llmod@divisor:	
  1433                           ; 4 bytes @ 0x0
  1434                           
  1435                           
  1436                           ; 4 bytes @ 0x0
  1437  0070                     	ds	1
  1438  0071                     ??_LCDWriteNibble:
  1439  0071                     ADC_SelectChannel@channel:	
  1440                           ; 1 bytes @ 0x1
  1441                           
  1442  0071                     isdigit@c:	
  1443                           ; 1 bytes @ 0x1
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x1
  1447  0071                     	ds	1
  1448  0072                     ??_ADC_GetConversionResult:
  1449  0072                     ___awmod@dividend:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  0072                     ___lwmod@dividend:	
  1453                           ; 2 bytes @ 0x2
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x2
  1457  0072                     	ds	1
  1458  0073                     ??___ftneg:
  1459  0073                     LCDWriteNibble@ch:	
  1460                           ; 1 bytes @ 0x3
  1461                           
  1462  0073                     ___ftpack@exp:	
  1463                           ; 1 bytes @ 0x3
  1464                           
  1465  0073                     __div_to_l_@f2:	
  1466                           ; 1 bytes @ 0x3
  1467                           
  1468  0073                     __tdiv_to_l_@f2:	
  1469                           ; 3 bytes @ 0x3
  1470                           
  1471  0073                     ___ftge@ff2:	
  1472                           ; 3 bytes @ 0x3
  1473                           
  1474                           
  1475                           ; 3 bytes @ 0x3
  1476  0073                     	ds	1
  1477  0074                     ??_LCDPutCmd:
  1478  0074                     ??_LCDPutChar:	
  1479                           ; 1 bytes @ 0x4
  1480                           
  1481  0074                     ??___awmod:	
  1482                           ; 1 bytes @ 0x4
  1483                           
  1484  0074                     ??___lwmod:	
  1485                           ; 1 bytes @ 0x4
  1486                           
  1487  0074                     ___ftpack@sign:	
  1488                           ; 1 bytes @ 0x4
  1489                           
  1490  0074                     ___lldiv@dividend:	
  1491                           ; 1 bytes @ 0x4
  1492                           
  1493  0074                     ___llmod@dividend:	
  1494                           ; 4 bytes @ 0x4
  1495                           
  1496                           
  1497                           ; 4 bytes @ 0x4
  1498  0074                     	ds	1
  1499  0075                     ??___ftpack:
  1500  0075                     ___awmod@counter:	
  1501                           ; 1 bytes @ 0x5
  1502                           
  1503  0075                     ___lwmod@counter:	
  1504                           ; 1 bytes @ 0x5
  1505                           
  1506                           
  1507                           ; 1 bytes @ 0x5
  1508  0075                     	ds	1
  1509  0076                     ??__tdiv_to_l_:
  1510  0076                     ??__div_to_l_:	
  1511                           ; 1 bytes @ 0x6
  1512                           
  1513  0076                     ??___ftge:	
  1514                           ; 1 bytes @ 0x6
  1515                           
  1516  0076                     ?___lwdiv:	
  1517                           ; 1 bytes @ 0x6
  1518                           
  1519  0076                     LCDPutChar@ch:	
  1520                           ; 2 bytes @ 0x6
  1521                           
  1522  0076                     LCDPutCmd@ch:	
  1523                           ; 1 bytes @ 0x6
  1524                           
  1525  0076                     ___awmod@sign:	
  1526                           ; 1 bytes @ 0x6
  1527                           
  1528  0076                     ___lwdiv@divisor:	
  1529                           ; 1 bytes @ 0x6
  1530                           
  1531                           
  1532                           ; 2 bytes @ 0x6
  1533  0076                     	ds	1
  1534  0077                     ??_LCD_Initialize:
  1535  0077                     ?_LCDGoto:	
  1536                           ; 1 bytes @ 0x7
  1537                           
  1538  0077                     ?_LCDPutStr:	
  1539                           ; 1 bytes @ 0x7
  1540                           
  1541  0077                     ?___awdiv:	
  1542                           ; 1 bytes @ 0x7
  1543                           
  1544  0077                     LCDGoto@ln:	
  1545                           ; 2 bytes @ 0x7
  1546                           
  1547  0077                     LCDPutStr@str:	
  1548                           ; 1 bytes @ 0x7
  1549                           
  1550  0077                     ___awdiv@divisor:	
  1551                           ; 2 bytes @ 0x7
  1552                           
  1553                           
  1554                           ; 2 bytes @ 0x7
  1555  0077                     	ds	1
  1556  0078                     ??_LCDGoto:
  1557  0078                     ??___lldiv:	
  1558                           ; 1 bytes @ 0x8
  1559                           
  1560  0078                     ??___llmod:	
  1561                           ; 1 bytes @ 0x8
  1562                           
  1563  0078                     ?___lltoft:	
  1564                           ; 1 bytes @ 0x8
  1565                           
  1566  0078                     ?___lwtoft:	
  1567                           ; 3 bytes @ 0x8
  1568                           
  1569  0078                     _LCDGoto$261:	
  1570                           ; 3 bytes @ 0x8
  1571                           
  1572  0078                     ___lwdiv@dividend:	
  1573                           ; 2 bytes @ 0x8
  1574                           
  1575  0078                     ___lwtoft@c:	
  1576                           ; 2 bytes @ 0x8
  1577                           
  1578  0078                     ___lltoft@c:	
  1579                           ; 2 bytes @ 0x8
  1580                           
  1581                           
  1582                           ; 4 bytes @ 0x8
  1583  0078                     	ds	1
  1584  0079                     ??_LCDPutStr:
  1585  0079                     ___llmod@counter:	
  1586                           ; 1 bytes @ 0x9
  1587                           
  1588  0079                     ___awdiv@dividend:	
  1589                           ; 1 bytes @ 0x9
  1590                           
  1591  0079                     ___lldiv@quotient:	
  1592                           ; 2 bytes @ 0x9
  1593                           
  1594                           
  1595                           ; 4 bytes @ 0x9
  1596  0079                     	ds	1
  1597  007A                     ??___lwdiv:
  1598  007A                     LCDGoto@pos:	
  1599                           ; 1 bytes @ 0xA
  1600                           
  1601                           
  1602                           ; 1 bytes @ 0xA
  1603  007A                     	ds	1
  1604  007B                     ??___awdiv:
  1605  007B                     ??___lwtoft:	
  1606                           ; 1 bytes @ 0xB
  1607                           
  1608  007B                     ___lwdiv@quotient:	
  1609                           ; 1 bytes @ 0xB
  1610                           
  1611                           
  1612                           ; 2 bytes @ 0xB
  1613  007B                     	ds	1
  1614  007C                     ??___lltoft:
  1615  007C                     LCDPutStr@i:	
  1616                           ; 1 bytes @ 0xC
  1617                           
  1618                           
  1619                           ; 1 bytes @ 0xC
  1620  007C                     	ds	1
  1621  007D                     ___lldiv@counter:
  1622  007D                     ___lltoft@exp:	
  1623                           ; 1 bytes @ 0xD
  1624                           
  1625  007D                     ___lwdiv@counter:	
  1626                           ; 1 bytes @ 0xD
  1627                           
  1628                           
  1629                           ; 1 bytes @ 0xD
  1630  007D                     	ds	1
  1631  007E                     ??_main:
  1632  007E                     ??___wmul:	
  1633                           ; 1 bytes @ 0xE
  1634                           
  1635  007E                     ??___ftsub:	
  1636                           ; 1 bytes @ 0xE
  1637                           
  1638                           
  1639                           	psect	cstackBANK0
  1640  0020                     __pcstackBANK0:	
  1641                           ; 1 bytes @ 0xE
  1642                           
  1643  0020                     ___awdiv@counter:
  1644  0020                     __div_to_l_@quot:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0020                     __tdiv_to_l_@quot:	
  1648                           ; 4 bytes @ 0x0
  1649                           
  1650                           
  1651                           ; 4 bytes @ 0x0
  1652  0020                     	ds	1
  1653  0021                     ___awdiv@sign:
  1654                           
  1655                           ; 1 bytes @ 0x1
  1656  0021                     	ds	1
  1657  0022                     ___awdiv@quotient:
  1658                           
  1659                           ; 2 bytes @ 0x2
  1660  0022                     	ds	2
  1661  0024                     ?___wmul:
  1662  0024                     __div_to_l_@cntr:	
  1663                           ; 2 bytes @ 0x4
  1664                           
  1665  0024                     __tdiv_to_l_@cntr:	
  1666                           ; 1 bytes @ 0x4
  1667                           
  1668  0024                     ___wmul@multiplier:	
  1669                           ; 1 bytes @ 0x4
  1670                           
  1671                           
  1672                           ; 2 bytes @ 0x4
  1673  0024                     	ds	1
  1674  0025                     __div_to_l_@exp1:
  1675  0025                     __tdiv_to_l_@exp1:	
  1676                           ; 1 bytes @ 0x5
  1677                           
  1678                           
  1679                           ; 1 bytes @ 0x5
  1680  0025                     	ds	1
  1681  0026                     ___wmul@multiplicand:
  1682                           
  1683                           ; 2 bytes @ 0x6
  1684  0026                     	ds	2
  1685  0028                     ___wmul@product:
  1686                           
  1687                           ; 2 bytes @ 0x8
  1688  0028                     	ds	2
  1689  002A                     ?___ftmul:
  1690  002A                     ___ftmul@f1:	
  1691                           ; 3 bytes @ 0xA
  1692                           
  1693                           
  1694                           ; 3 bytes @ 0xA
  1695  002A                     	ds	3
  1696  002D                     ___ftmul@f2:
  1697                           
  1698                           ; 3 bytes @ 0xD
  1699  002D                     	ds	3
  1700  0030                     ??___ftmul:
  1701                           
  1702                           ; 1 bytes @ 0x10
  1703  0030                     	ds	4
  1704  0034                     ___ftmul@exp:
  1705                           
  1706                           ; 1 bytes @ 0x14
  1707  0034                     	ds	1
  1708  0035                     ___ftmul@f3_as_product:
  1709                           
  1710                           ; 3 bytes @ 0x15
  1711  0035                     	ds	3
  1712  0038                     ___ftmul@cntr:
  1713                           
  1714                           ; 1 bytes @ 0x18
  1715  0038                     	ds	1
  1716  0039                     ___ftmul@sign:
  1717                           
  1718                           ; 1 bytes @ 0x19
  1719  0039                     	ds	1
  1720  003A                     ?_fround:
  1721  003A                     ?_scale:	
  1722                           ; 3 bytes @ 0x1A
  1723                           
  1724  003A                     ?___ftdiv:	
  1725                           ; 3 bytes @ 0x1A
  1726                           
  1727  003A                     ___ftdiv@f2:	
  1728                           ; 3 bytes @ 0x1A
  1729                           
  1730                           
  1731                           ; 3 bytes @ 0x1A
  1732  003A                     	ds	3
  1733  003D                     ??_fround:
  1734  003D                     ??_scale:	
  1735                           ; 1 bytes @ 0x1D
  1736                           
  1737  003D                     ___ftdiv@f1:	
  1738                           ; 1 bytes @ 0x1D
  1739                           
  1740                           
  1741                           ; 3 bytes @ 0x1D
  1742  003D                     	ds	3
  1743  0040                     ??___ftdiv:
  1744                           
  1745                           ; 1 bytes @ 0x20
  1746  0040                     	ds	1
  1747  0041                     _fround$735:
  1748  0041                     _scale$736:	
  1749                           ; 3 bytes @ 0x21
  1750                           
  1751                           
  1752                           ; 3 bytes @ 0x21
  1753  0041                     	ds	3
  1754  0044                     scale@scl:
  1755  0044                     ___ftdiv@cntr:	
  1756                           ; 1 bytes @ 0x24
  1757                           
  1758  0044                     _fround$734:	
  1759                           ; 1 bytes @ 0x24
  1760                           
  1761                           
  1762                           ; 3 bytes @ 0x24
  1763  0044                     	ds	1
  1764  0045                     ?___fttol:
  1765  0045                     ___ftdiv@f3:	
  1766                           ; 4 bytes @ 0x25
  1767                           
  1768  0045                     ___fttol@f1:	
  1769                           ; 3 bytes @ 0x25
  1770                           
  1771                           
  1772                           ; 3 bytes @ 0x25
  1773  0045                     	ds	2
  1774  0047                     fround@prec:
  1775                           
  1776                           ; 1 bytes @ 0x27
  1777  0047                     	ds	1
  1778  0048                     ?___ftadd:
  1779  0048                     ___ftdiv@exp:	
  1780                           ; 3 bytes @ 0x28
  1781                           
  1782  0048                     ___ftadd@f1:	
  1783                           ; 1 bytes @ 0x28
  1784                           
  1785                           
  1786                           ; 3 bytes @ 0x28
  1787  0048                     	ds	1
  1788  0049                     ??___fttol:
  1789  0049                     ___ftdiv@sign:	
  1790                           ; 1 bytes @ 0x29
  1791                           
  1792                           
  1793                           ; 1 bytes @ 0x29
  1794  0049                     	ds	2
  1795  004B                     ___ftadd@f2:
  1796                           
  1797                           ; 3 bytes @ 0x2B
  1798  004B                     	ds	2
  1799  004D                     ___fttol@sign1:
  1800                           
  1801                           ; 1 bytes @ 0x2D
  1802  004D                     	ds	1
  1803  004E                     ??___ftadd:
  1804  004E                     ___fttol@lval:	
  1805                           ; 1 bytes @ 0x2E
  1806                           
  1807                           
  1808                           ; 4 bytes @ 0x2E
  1809  004E                     	ds	4
  1810  0052                     ___ftadd@sign:
  1811  0052                     ___fttol@exp1:	
  1812                           ; 1 bytes @ 0x32
  1813                           
  1814                           
  1815                           ; 1 bytes @ 0x32
  1816  0052                     	ds	1
  1817  0053                     ___ftadd@exp2:
  1818                           
  1819                           ; 1 bytes @ 0x33
  1820  0053                     	ds	1
  1821  0054                     ___ftadd@exp1:
  1822                           
  1823                           ; 1 bytes @ 0x34
  1824  0054                     	ds	1
  1825  0055                     ?___ftsub:
  1826  0055                     ___ftsub@f2:	
  1827                           ; 3 bytes @ 0x35
  1828                           
  1829                           
  1830                           ; 3 bytes @ 0x35
  1831  0055                     	ds	3
  1832  0058                     ___ftsub@f1:
  1833                           
  1834                           ; 3 bytes @ 0x38
  1835  0058                     	ds	3
  1836  005B                     ?_sprintf:
  1837  005B                     sprintf@f:	
  1838                           ; 2 bytes @ 0x3B
  1839                           
  1840                           
  1841                           ; 2 bytes @ 0x3B
  1842  005B                     	ds	5
  1843  0060                     ??_sprintf:
  1844                           
  1845                           ; 1 bytes @ 0x40
  1846  0060                     	ds	6
  1847                           
  1848                           	psect	maintext
  1849  0947                     __pmaintext:	
  1850 ;;
  1851 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1852 ;;
  1853 ;; *************** function _main *****************
  1854 ;; Defined at:
  1855 ;;		line 49 in file "main.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : B1F/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1869 ;;      Params:         0       0       0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels required when called: 4
  1875 ;; This function calls:
  1876 ;;		_ADC_GetConversionResult
  1877 ;;		_ADC_Initialize
  1878 ;;		_ADC_IsConversionDone
  1879 ;;		_ADC_SelectChannel
  1880 ;;		_ADC_StartConversion
  1881 ;;		_LCDGoto
  1882 ;;		_LCDPutStr
  1883 ;;		_LCD_Initialize
  1884 ;;		_SYSTEM_Initialize
  1885 ;;		___ftdiv
  1886 ;;		___ftmul
  1887 ;;		___lwtoft
  1888 ;;		_sprintf
  1889 ;; This function is called by:
  1890 ;;		Startup code after reset
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894  0947                     _main:	
  1895                           ;psect for function _main
  1896                           
  1897  0947                     l2839:	
  1898                           ;incstack = 0
  1899                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1900                           
  1901                           
  1902                           ;main.c: 52:     SYSTEM_Initialize();
  1903  0947  3195  25A4  3189   	fcall	_SYSTEM_Initialize
  1904                           
  1905                           ;main.c: 53:     LCD_Initialize();
  1906  094A  3196  2674  3189   	fcall	_LCD_Initialize
  1907                           
  1908                           ;main.c: 54:     LCDGoto(0,0);
  1909  094D  01F7               	clrf	LCDGoto@ln
  1910  094E  3000               	movlw	0
  1911  094F  3196  26BC  3189   	fcall	_LCDGoto
  1912  0952                     l2841:
  1913                           
  1914                           ;main.c: 55:     LCDPutStr("TEN MSSV");
  1915  0952  3083               	movlw	low (STR_1| (0+32768))
  1916  0953  00F7               	movwf	LCDPutStr@str
  1917  0954  3098               	movlw	high (STR_1| (0+32768))
  1918  0955  00F8               	movwf	LCDPutStr@str+1
  1919  0956  3196  2696  3189   	fcall	_LCDPutStr
  1920  0959                     l2843:
  1921                           
  1922                           ;main.c: 56:     ADC_Initialize();
  1923  0959  3195  2584  3189   	fcall	_ADC_Initialize
  1924  095C                     l2845:
  1925                           
  1926                           ;main.c: 57:     ADC_SelectChannel(channel_AN0);
  1927  095C  3000               	movlw	0
  1928  095D  3195  2597  3189   	fcall	_ADC_SelectChannel
  1929  0960                     l2847:
  1930                           
  1931                           ;main.c: 59:     {;main.c: 60:         ADC_StartConversion();
  1932  0960  3195  2564  3189   	fcall	_ADC_StartConversion
  1933  0963                     l2849:	
  1934                           ;main.c: 61:         while(!ADC_IsConversionDone());
  1935                           
  1936  0963  3195  257D  3189   	fcall	_ADC_IsConversionDone
  1937  0966  3A00               	xorlw	0
  1938  0967  1903               	skipnz
  1939  0968  296A               	goto	u3911
  1940  0969  296B               	goto	u3910
  1941  096A                     u3911:
  1942  096A  2963               	goto	l2849
  1943  096B                     u3910:
  1944  096B                     l2851:
  1945                           
  1946                           ;main.c: 62:         temp = ADC_GetConversionResult() * 1.0 / 2.046;
  1947  096B  30F2               	movlw	242
  1948  096C  0020               	movlb	0	; select bank0
  1949  096D  00BA               	movwf	___ftdiv@f2
  1950  096E  3002               	movlw	2
  1951  096F  00BB               	movwf	___ftdiv@f2+1
  1952  0970  3040               	movlw	64
  1953  0971  00BC               	movwf	___ftdiv@f2+2
  1954  0972  3000               	movlw	0
  1955  0973  00AA               	movwf	___ftmul@f1
  1956  0974  3080               	movlw	128
  1957  0975  00AB               	movwf	___ftmul@f1+1
  1958  0976  303F               	movlw	63
  1959  0977  00AC               	movwf	___ftmul@f1+2
  1960  0978  3195  256B  3189   	fcall	_ADC_GetConversionResult
  1961  097B  0871               	movf	?_ADC_GetConversionResult+1,w
  1962  097C  00F9               	movwf	___lwtoft@c+1
  1963  097D  0870               	movf	?_ADC_GetConversionResult,w
  1964  097E  00F8               	movwf	___lwtoft@c
  1965  097F  3195  25C3  3189   	fcall	___lwtoft
  1966  0982  0878               	movf	?___lwtoft,w
  1967  0983  0020               	movlb	0	; select bank0
  1968  0984  00AD               	movwf	___ftmul@f2
  1969  0985  0879               	movf	?___lwtoft+1,w
  1970  0986  00AE               	movwf	___ftmul@f2+1
  1971  0987  087A               	movf	?___lwtoft+2,w
  1972  0988  00AF               	movwf	___ftmul@f2+2
  1973  0989  318B  23A2  3189   	fcall	___ftmul
  1974  098C  0020               	movlb	0	; select bank0
  1975  098D  082A               	movf	?___ftmul,w
  1976  098E  00BD               	movwf	___ftdiv@f1
  1977  098F  082B               	movf	?___ftmul+1,w
  1978  0990  00BE               	movwf	___ftdiv@f1+1
  1979  0991  082C               	movf	?___ftmul+2,w
  1980  0992  00BF               	movwf	___ftdiv@f1+2
  1981  0993  318A  22F0  3189   	fcall	___ftdiv
  1982  0996  0020               	movlb	0	; select bank0
  1983  0997  083A               	movf	?___ftdiv,w
  1984  0998  00E6               	movwf	_temp
  1985  0999  083B               	movf	?___ftdiv+1,w
  1986  099A  00E7               	movwf	_temp+1
  1987  099B  083C               	movf	?___ftdiv+2,w
  1988  099C  00E8               	movwf	_temp+2
  1989  099D                     l2853:
  1990                           
  1991                           ;main.c: 63:         sprintf(x, "Temp=%.01f C", temp);
  1992  099D  3028               	movlw	low (STR_2| (0+32768))
  1993  099E  00DB               	movwf	sprintf@f
  1994  099F  3098               	movlw	high (STR_2| (0+32768))
  1995  09A0  00DC               	movwf	sprintf@f+1
  1996  09A1  0866               	movf	_temp,w
  1997  09A2  00DD               	movwf	?_sprintf+2
  1998  09A3  0867               	movf	_temp+1,w
  1999  09A4  00DE               	movwf	?_sprintf+3
  2000  09A5  0868               	movf	_temp+2,w
  2001  09A6  00DF               	movwf	?_sprintf+4
  2002  09A7  30B7               	movlw	(low (_x| 0))& (0+255)
  2003  09A8  3182  22C4  3189   	fcall	_sprintf
  2004  09AB                     l2855:
  2005                           
  2006                           ;main.c: 64:         LCDGoto(0,1);
  2007  09AB  01F7               	clrf	LCDGoto@ln
  2008  09AC  0AF7               	incf	LCDGoto@ln,f
  2009  09AD  3000               	movlw	0
  2010  09AE  3196  26BC  3189   	fcall	_LCDGoto
  2011  09B1                     l2857:
  2012                           
  2013                           ;main.c: 65:         LCDPutStr(x);
  2014  09B1  30B7               	movlw	low _x
  2015  09B2  00F7               	movwf	LCDPutStr@str
  2016  09B3  3000               	movlw	high _x
  2017  09B4  00F8               	movwf	LCDPutStr@str+1
  2018  09B5  3196  2696  3189   	fcall	_LCDPutStr
  2019  09B8  2960               	goto	l2847
  2020  09B9  3180  2802         	ljmp	start
  2021  09BB                     __end_of_main:
  2022                           
  2023                           	psect	text1
  2024  02C4                     __ptext1:	
  2025 ;; *************** function _sprintf *****************
  2026 ;; Defined at:
  2027 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  sp              1    wreg     PTR unsigned char 
  2030 ;;		 -> x(20), 
  2031 ;;  f               2   59[BANK0 ] PTR const unsigned char 
  2032 ;;		 -> STR_2(13), 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  2035 ;;		 -> x(20), 
  2036 ;;  tmpval          4   12[BANK1 ] struct .
  2037 ;;  val             4    6[BANK1 ] unsigned long 
  2038 ;;  fval            3   19[BANK1 ] unsigned long 
  2039 ;;  prec            2   17[BANK1 ] int 
  2040 ;;  eexp            2   10[BANK1 ] int 
  2041 ;;  flag            2    4[BANK1 ] unsigned short 
  2042 ;;  cp              2    0        PTR const unsigned char 
  2043 ;;  len             2    0        unsigned int 
  2044 ;;  width           2    0        int 
  2045 ;;  c               1   22[BANK1 ] unsigned char 
  2046 ;;  ap              1    3[BANK1 ] PTR void [1]
  2047 ;;		 -> ?_sprintf(2), 
  2048 ;;  d               1    0        unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2   59[BANK0 ] int 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2058 ;;      Params:         0       5       0       0       0       0       0       0
  2059 ;;      Locals:         0       0      23       0       0       0       0       0
  2060 ;;      Temps:          0       6       0       0       0       0       0       0
  2061 ;;      Totals:         0      11      23       0       0       0       0       0
  2062 ;;Total ram usage:       34 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 3
  2065 ;; This function calls:
  2066 ;;		___awdiv
  2067 ;;		___ftadd
  2068 ;;		___ftge
  2069 ;;		___ftmul
  2070 ;;		___ftneg
  2071 ;;		___ftsub
  2072 ;;		___fttol
  2073 ;;		___lldiv
  2074 ;;		___llmod
  2075 ;;		___lltoft
  2076 ;;		___wmul
  2077 ;;		__div_to_l_
  2078 ;;		__tdiv_to_l_
  2079 ;;		_fround
  2080 ;;		_isdigit
  2081 ;;		_scale
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087  02C4                     _sprintf:	
  2088                           ;psect for function _sprintf
  2089                           
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2093                           ;sprintf@sp stored from wreg
  2094  02C4  0021               	movlb	1	; select bank1
  2095  02C5  00B0               	movwf	sprintf@sp^(0+128)
  2096  02C6                     l2587:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2099  02C6  305D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2100  02C7  0020               	movlb	0	; select bank0
  2101  02C8  00E0               	movwf	??_sprintf
  2102  02C9  0860               	movf	??_sprintf,w
  2103  02CA  0021               	movlb	1	; select bank1
  2104  02CB  00A3               	movwf	sprintf@ap^(0+128)
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2107  02CC  2FD3               	goto	l2783
  2108  02CD                     l2589:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2111  02CD  3025               	movlw	37
  2112  02CE  0636               	xorwf	sprintf@c^(0+128),w
  2113  02CF  1903               	btfsc	3,2
  2114  02D0  2AD2               	goto	u3511
  2115  02D1  2AD3               	goto	u3510
  2116  02D2                     u3511:
  2117  02D2  2AE3               	goto	l2595
  2118  02D3                     u3510:
  2119  02D3                     l2591:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2122  02D3  0836               	movf	sprintf@c^(0+128),w
  2123  02D4  0020               	movlb	0	; select bank0
  2124  02D5  00E0               	movwf	??_sprintf
  2125  02D6  0021               	movlb	1	; select bank1
  2126  02D7  0830               	movf	sprintf@sp^(0+128),w
  2127  02D8  0086               	movwf	6
  2128  02D9  0187               	clrf	7
  2129  02DA  0020               	movlb	0	; select bank0
  2130  02DB  0860               	movf	??_sprintf,w
  2131  02DC  0081               	movwf	1
  2132  02DD                     l2593:
  2133  02DD  3001               	movlw	1
  2134  02DE  00E0               	movwf	??_sprintf
  2135  02DF  0860               	movf	??_sprintf,w
  2136  02E0  0021               	movlb	1	; select bank1
  2137  02E1  07B0               	addwf	sprintf@sp^(0+128),f
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  2140  02E2  2FD3               	goto	l2783
  2141  02E3                     l2595:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2144  02E3  01A4               	clrf	sprintf@flag^(0+128)
  2145  02E4  01A5               	clrf	(sprintf@flag+1)^(0+128)
  2146  02E5                     l2597:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2149  02E5  0020               	movlb	0	; select bank0
  2150  02E6  085B               	movf	sprintf@f,w
  2151  02E7  0084               	movwf	4
  2152  02E8  085C               	movf	sprintf@f+1,w
  2153  02E9  0085               	movwf	5
  2154  02EA  0012               	moviw fsr0++
  2155  02EB  3A2E               	xorlw	46
  2156  02EC  1D03               	btfss	3,2
  2157  02ED  2AEF               	goto	u3521
  2158  02EE  2AF0               	goto	u3520
  2159  02EF                     u3521:
  2160  02EF  2B39               	goto	l2613
  2161  02F0                     u3520:
  2162  02F0                     l2599:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2165  02F0  0021               	movlb	1	; select bank1
  2166  02F1  1725               	bsf	(sprintf@flag^(0+128)+1),6
  2167  02F2                     l2601:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 630:    f++;
  2170  02F2  3001               	movlw	1
  2171  02F3  0020               	movlb	0	; select bank0
  2172  02F4  07DB               	addwf	sprintf@f,f
  2173  02F5  3000               	movlw	0
  2174  02F6  3DDC               	addwfc	sprintf@f+1,f
  2175  02F7                     l2603:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2178  02F7  0021               	movlb	1	; select bank1
  2179  02F8  01B1               	clrf	sprintf@prec^(0+128)
  2180  02F9  01B2               	clrf	(sprintf@prec+1)^(0+128)
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2183  02FA  2B2B               	goto	l2611
  2184  02FB                     l2605:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2187  02FB  300A               	movlw	10
  2188  02FC  0020               	movlb	0	; select bank0
  2189  02FD  00A4               	movwf	___wmul@multiplier
  2190  02FE  3000               	movlw	0
  2191  02FF  00A5               	movwf	___wmul@multiplier+1
  2192  0300  0021               	movlb	1	; select bank1
  2193  0301  0832               	movf	(sprintf@prec+1)^(0+128),w
  2194  0302  0020               	movlb	0	; select bank0
  2195  0303  00A7               	movwf	___wmul@multiplicand+1
  2196  0304  0021               	movlb	1	; select bank1
  2197  0305  0831               	movf	sprintf@prec^(0+128),w
  2198  0306  0020               	movlb	0	; select bank0
  2199  0307  00A6               	movwf	___wmul@multiplicand
  2200  0308  3196  2633  3182   	fcall	___wmul
  2201  030B  0020               	movlb	0	; select bank0
  2202  030C  0825               	movf	?___wmul+1,w
  2203  030D  0021               	movlb	1	; select bank1
  2204  030E  00B2               	movwf	(sprintf@prec+1)^(0+128)
  2205  030F  0020               	movlb	0	; select bank0
  2206  0310  0824               	movf	?___wmul,w
  2207  0311  0021               	movlb	1	; select bank1
  2208  0312  00B1               	movwf	sprintf@prec^(0+128)
  2209  0313                     l2607:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2212  0313  0020               	movlb	0	; select bank0
  2213  0314  085B               	movf	sprintf@f,w
  2214  0315  0084               	movwf	4
  2215  0316  085C               	movf	sprintf@f+1,w
  2216  0317  0085               	movwf	5
  2217  0318  0800               	movf	0,w	;code access
  2218  0319  3ED0               	addlw	208
  2219  031A  00E0               	movwf	??_sprintf
  2220  031B  30FF               	movlw	255
  2221  031C  1803               	skipnc
  2222  031D  3000               	movlw	0
  2223  031E  00E1               	movwf	??_sprintf+1
  2224  031F  0860               	movf	??_sprintf,w
  2225  0320  0021               	movlb	1	; select bank1
  2226  0321  07B1               	addwf	sprintf@prec^(0+128),f
  2227  0322  0020               	movlb	0	; select bank0
  2228  0323  0861               	movf	??_sprintf+1,w
  2229  0324  0021               	movlb	1	; select bank1
  2230  0325  3DB2               	addwfc	(sprintf@prec+1)^(0+128),f
  2231  0326                     l2609:
  2232  0326  3001               	movlw	1
  2233  0327  0020               	movlb	0	; select bank0
  2234  0328  07DB               	addwf	sprintf@f,f
  2235  0329  3000               	movlw	0
  2236  032A  3DDC               	addwfc	sprintf@f+1,f
  2237  032B                     l2611:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2240  032B  0020               	movlb	0	; select bank0
  2241  032C  085B               	movf	sprintf@f,w
  2242  032D  0084               	movwf	4
  2243  032E  085C               	movf	sprintf@f+1,w
  2244  032F  0085               	movwf	5
  2245  0330  0800               	movf	0,w	;code access
  2246  0331  3195  25B1  3182   	fcall	_isdigit
  2247  0334  1803               	btfsc	3,0
  2248  0335  2B37               	goto	u3531
  2249  0336  2B38               	goto	u3530
  2250  0337                     u3531:
  2251  0337  2AFB               	goto	l2605
  2252  0338                     u3530:
  2253  0338  2B41               	goto	l2619
  2254  0339                     l2613:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2257  0339  0021               	movlb	1	; select bank1
  2258  033A  01B1               	clrf	sprintf@prec^(0+128)
  2259  033B  01B2               	clrf	(sprintf@prec+1)^(0+128)
  2260  033C                     l2615:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2263  033C  1625               	bsf	(sprintf@flag^(0+128)+1),4
  2264  033D  2B41               	goto	l2619
  2265  033E                     l278:	
  2266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2267                           
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2270  033E  0021               	movlb	1	; select bank1
  2271  033F  1525               	bsf	(sprintf@flag^(0+128)+1),2
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 690:    break;
  2274  0340  2B60               	goto	l2621
  2275  0341                     l2619:
  2276  0341  0020               	movlb	0	; select bank0
  2277  0342  085C               	movf	sprintf@f+1,w
  2278  0343  00E1               	movwf	??_sprintf+1
  2279  0344  085B               	movf	sprintf@f,w
  2280  0345  00E0               	movwf	??_sprintf
  2281  0346  0ADB               	incf	sprintf@f,f
  2282  0347  1903               	skipnz
  2283  0348  0ADC               	incf	sprintf@f+1,f
  2284  0349  0860               	movf	??_sprintf,w
  2285  034A  0084               	movwf	4
  2286  034B  0861               	movf	??_sprintf+1,w
  2287  034C  0085               	movwf	5
  2288  034D  0800               	movf	0,w	;code access
  2289  034E  0021               	movlb	1	; select bank1
  2290  034F  00B6               	movwf	sprintf@c^(0+128)
  2291  0350  0020               	movlb	0	; select bank0
  2292  0351  00E2               	movwf	??_sprintf+2
  2293  0352  01E3               	clrf	??_sprintf+3
  2294                           
  2295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2296                           ; Switch size 1, requested type "simple"
  2297                           ; Number of cases is 1, Range of values is 0 to 0
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte            4     3 (average)
  2301                           ; direct_byte            8     6 (fixed)
  2302                           ; jumptable            260     6 (fixed)
  2303                           ;	Chosen strategy is simple_byte
  2304  0353  0863               	movf	??_sprintf+3,w
  2305  0354  3A00               	xorlw	0	; case 0
  2306  0355  1903               	skipnz
  2307  0356  2B58               	goto	l2879
  2308  0357  2FD3               	goto	l2783
  2309  0358                     l2879:
  2310                           
  2311                           ; Switch size 1, requested type "simple"
  2312                           ; Number of cases is 2, Range of values is 0 to 102
  2313                           ; switch strategies available:
  2314                           ; Name         Instructions Cycles
  2315                           ; simple_byte            7     4 (average)
  2316                           ; direct_byte          212     6 (fixed)
  2317                           ; jumptable            260     6 (fixed)
  2318                           ;	Chosen strategy is simple_byte
  2319  0358  0862               	movf	??_sprintf+2,w
  2320  0359  3A00               	xorlw	0	; case 0
  2321  035A  1903               	skipnz
  2322  035B  2FE9               	goto	l2785
  2323  035C  3A66               	xorlw	102	; case 102
  2324  035D  1903               	skipnz
  2325  035E  2B3E               	goto	l278
  2326  035F  2FD3               	goto	l2783
  2327  0360                     l2621:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2330  0360  3000               	movlw	0
  2331  0361  0524               	andwf	sprintf@flag^(0+128),w
  2332  0362  0020               	movlb	0	; select bank0
  2333  0363  00E0               	movwf	??_sprintf
  2334  0364  3007               	movlw	7
  2335  0365  0021               	movlb	1	; select bank1
  2336  0366  0525               	andwf	(sprintf@flag+1)^(0+128),w
  2337  0367  0020               	movlb	0	; select bank0
  2338  0368  00E1               	movwf	??_sprintf+1
  2339  0369  0860               	movf	??_sprintf,w
  2340  036A  0461               	iorwf	??_sprintf+1,w
  2341  036B  1903               	btfsc	3,2
  2342  036C  2B6E               	goto	u3541
  2343  036D  2B6F               	goto	u3540
  2344  036E                     u3541:
  2345  036E  2F8A               	goto	l2765
  2346  036F                     u3540:
  2347  036F                     l2623:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2350  036F  0021               	movlb	1	; select bank1
  2351  0370  1E25               	btfss	(sprintf@flag+1)^(0+128),4
  2352  0371  2B73               	goto	u3551
  2353  0372  2B74               	goto	u3550
  2354  0373                     u3551:
  2355  0373  2B78               	goto	l2627
  2356  0374                     u3550:
  2357  0374                     l2625:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2360  0374  3006               	movlw	6
  2361  0375  00B1               	movwf	sprintf@prec^(0+128)
  2362  0376  3000               	movlw	0
  2363  0377  00B2               	movwf	(sprintf@prec^(0+128)+1)
  2364  0378                     l2627:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2367  0378  0823               	movf	sprintf@ap^(0+128),w
  2368  0379  0086               	movwf	6
  2369  037A  0187               	clrf	7
  2370  037B  3F40               	moviw [0]fsr1
  2371  037C  00B3               	movwf	sprintf@fval^(0+128)
  2372  037D  3F41               	moviw [1]fsr1
  2373  037E  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2374  037F  3F42               	moviw [2]fsr1
  2375  0380  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2376  0381                     l2629:
  2377  0381  3003               	movlw	3
  2378  0382  0020               	movlb	0	; select bank0
  2379  0383  00E0               	movwf	??_sprintf
  2380  0384  0860               	movf	??_sprintf,w
  2381  0385  0021               	movlb	1	; select bank1
  2382  0386  07A3               	addwf	sprintf@ap^(0+128),f
  2383  0387                     l2631:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2386  0387  0833               	movf	sprintf@fval^(0+128),w
  2387  0388  00F0               	movwf	___ftge@ff1
  2388  0389  0834               	movf	(sprintf@fval+1)^(0+128),w
  2389  038A  00F1               	movwf	___ftge@ff1+1
  2390  038B  0835               	movf	(sprintf@fval+2)^(0+128),w
  2391  038C  00F2               	movwf	___ftge@ff1+2
  2392  038D  3000               	movlw	0
  2393  038E  00F3               	movwf	___ftge@ff2
  2394  038F  3000               	movlw	0
  2395  0390  00F4               	movwf	___ftge@ff2+1
  2396  0391  3000               	movlw	0
  2397  0392  00F5               	movwf	___ftge@ff2+2
  2398  0393  3197  2742  3182   	fcall	___ftge
  2399  0396  1803               	btfsc	3,0
  2400  0397  2B99               	goto	u3561
  2401  0398  2B9A               	goto	u3560
  2402  0399                     u3561:
  2403  0399  2BAF               	goto	l2637
  2404  039A                     u3560:
  2405  039A                     l2633:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2408  039A  0021               	movlb	1	; select bank1
  2409  039B  0833               	movf	sprintf@fval^(0+128),w
  2410  039C  00F0               	movwf	___ftneg@f1
  2411  039D  0834               	movf	(sprintf@fval+1)^(0+128),w
  2412  039E  00F1               	movwf	___ftneg@f1+1
  2413  039F  0835               	movf	(sprintf@fval+2)^(0+128),w
  2414  03A0  00F2               	movwf	___ftneg@f1+2
  2415  03A1  3195  258D  3182   	fcall	___ftneg
  2416  03A4  0870               	movf	?___ftneg,w
  2417  03A5  0021               	movlb	1	; select bank1
  2418  03A6  00B3               	movwf	sprintf@fval^(0+128)
  2419  03A7  0871               	movf	?___ftneg+1,w
  2420  03A8  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2421  03A9  0872               	movf	?___ftneg+2,w
  2422  03AA  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2423  03AB                     l2635:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2426  03AB  3003               	movlw	3
  2427  03AC  04A4               	iorwf	sprintf@flag^(0+128),f
  2428  03AD  3000               	movlw	0
  2429  03AE  04A5               	iorwf	(sprintf@flag+1)^(0+128),f
  2430  03AF                     l2637:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2433  03AF  0021               	movlb	1	; select bank1
  2434  03B0  01AA               	clrf	sprintf@eexp^(0+128)
  2435  03B1  01AB               	clrf	(sprintf@eexp+1)^(0+128)
  2436  03B2                     l2639:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2439  03B2  0835               	movf	(sprintf@fval+2)^(0+128),w
  2440  03B3  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2441  03B4  0433               	iorwf	sprintf@fval^(0+128),w
  2442  03B5  1903               	skipnz
  2443  03B6  2BB8               	goto	u3571
  2444  03B7  2BB9               	goto	u3570
  2445  03B8                     u3571:
  2446  03B8  2C78               	goto	l284
  2447  03B9                     u3570:
  2448  03B9                     l2641:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2451  03B9  30B3               	movlw	low (sprintf@fval| 0)
  2452  03BA  0086               	movwf	6
  2453  03BB  0187               	clrf	7
  2454  03BC  3F40               	moviw [0]fsr1
  2455  03BD  0020               	movlb	0	; select bank0
  2456  03BE  00E0               	movwf	??_sprintf
  2457  03BF  3F41               	moviw [1]fsr1
  2458  03C0  00E1               	movwf	??_sprintf+1
  2459  03C1  3F42               	moviw [2]fsr1
  2460  03C2  00E2               	movwf	??_sprintf+2
  2461  03C3  3F43               	moviw [3]fsr1
  2462  03C4  00E3               	movwf	??_sprintf+3
  2463  03C5  300F               	movlw	15
  2464  03C6                     u3585:
  2465  03C6  36E3               	lsrf	??_sprintf+3,f
  2466  03C7  0CE2               	rrf	??_sprintf+2,f
  2467  03C8  0CE1               	rrf	??_sprintf+1,f
  2468  03C9  0CE0               	rrf	??_sprintf,f
  2469  03CA                     u3580:
  2470  03CA  0B89               	decfsz	9,f
  2471  03CB  2BC6               	goto	u3585
  2472  03CC  30FF               	movlw	255
  2473  03CD  0560               	andwf	??_sprintf,w
  2474  03CE  00E4               	movwf	??_sprintf+4
  2475  03CF  3000               	movlw	0
  2476  03D0  0561               	andwf	??_sprintf+1,w
  2477  03D1  00E5               	movwf	??_sprintf+5
  2478  03D2  0864               	movf	??_sprintf+4,w
  2479  03D3  3E82               	addlw	130
  2480  03D4  0021               	movlb	1	; select bank1
  2481  03D5  00AA               	movwf	sprintf@eexp^(0+128)
  2482  03D6  30FF               	movlw	255
  2483  03D7  0020               	movlb	0	; select bank0
  2484  03D8  3D65               	addwfc	??_sprintf+5,w
  2485  03D9  0021               	movlb	1	; select bank1
  2486  03DA  00AB               	movwf	(sprintf@eexp+1)^(0+128)
  2487  03DB                     l2643:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2490  03DB  30FF               	movlw	255
  2491  03DC  07AA               	addwf	sprintf@eexp^(0+128),f
  2492  03DD  30FF               	movlw	255
  2493  03DE  3DAB               	addwfc	(sprintf@eexp+1)^(0+128),f
  2494  03DF                     l2645:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2497  03DF  3003               	movlw	3
  2498  03E0  0020               	movlb	0	; select bank0
  2499  03E1  00A4               	movwf	___wmul@multiplier
  2500  03E2  3000               	movlw	0
  2501  03E3  00A5               	movwf	___wmul@multiplier+1
  2502  03E4  0021               	movlb	1	; select bank1
  2503  03E5  082B               	movf	(sprintf@eexp+1)^(0+128),w
  2504  03E6  0020               	movlb	0	; select bank0
  2505  03E7  00A7               	movwf	___wmul@multiplicand+1
  2506  03E8  0021               	movlb	1	; select bank1
  2507  03E9  082A               	movf	sprintf@eexp^(0+128),w
  2508  03EA  0020               	movlb	0	; select bank0
  2509  03EB  00A6               	movwf	___wmul@multiplicand
  2510  03EC  3196  2633  3182   	fcall	___wmul
  2511  03EF  0020               	movlb	0	; select bank0
  2512  03F0  0825               	movf	?___wmul+1,w
  2513  03F1  0021               	movlb	1	; select bank1
  2514  03F2  00AB               	movwf	(sprintf@eexp+1)^(0+128)
  2515  03F3  0020               	movlb	0	; select bank0
  2516  03F4  0824               	movf	?___wmul,w
  2517  03F5  0021               	movlb	1	; select bank1
  2518  03F6  00AA               	movwf	sprintf@eexp^(0+128)
  2519  03F7                     l2647:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2522  03F7  300A               	movlw	10
  2523  03F8  00F7               	movwf	___awdiv@divisor
  2524  03F9  3000               	movlw	0
  2525  03FA  00F8               	movwf	___awdiv@divisor+1
  2526  03FB  082B               	movf	(sprintf@eexp+1)^(0+128),w
  2527  03FC  00FA               	movwf	___awdiv@dividend+1
  2528  03FD  082A               	movf	sprintf@eexp^(0+128),w
  2529  03FE  00F9               	movwf	___awdiv@dividend
  2530  03FF  3188  2073  3182   	fcall	___awdiv
  2531  0402  0878               	movf	?___awdiv+1,w
  2532  0403  0021               	movlb	1	; select bank1
  2533  0404  00AB               	movwf	(sprintf@eexp+1)^(0+128)
  2534  0405  0877               	movf	?___awdiv,w
  2535  0406  00AA               	movwf	sprintf@eexp^(0+128)
  2536  0407                     l2649:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2539  0407  1FAB               	btfss	(sprintf@eexp+1)^(0+128),7
  2540  0408  2C0A               	goto	u3591
  2541  0409  2C0B               	goto	u3590
  2542  040A                     u3591:
  2543  040A  2C0F               	goto	l2653
  2544  040B                     u3590:
  2545  040B                     l2651:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2548  040B  30FF               	movlw	255
  2549  040C  07AA               	addwf	sprintf@eexp^(0+128),f
  2550  040D  30FF               	movlw	255
  2551  040E  3DAB               	addwfc	(sprintf@eexp+1)^(0+128),f
  2552  040F                     l2653:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2555  040F  032A               	decf	sprintf@eexp^(0+128),w
  2556  0410  3AFF               	xorlw	255
  2557  0411  3180  2058  3182   	fcall	_scale
  2558  0414  0020               	movlb	0	; select bank0
  2559  0415  083A               	movf	?_scale,w
  2560  0416  0021               	movlb	1	; select bank1
  2561  0417  00AC               	movwf	sprintf@tmpval^(0+128)
  2562  0418  0020               	movlb	0	; select bank0
  2563  0419  083B               	movf	?_scale+1,w
  2564  041A  0021               	movlb	1	; select bank1
  2565  041B  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2566  041C  0020               	movlb	0	; select bank0
  2567  041D  083C               	movf	?_scale+2,w
  2568  041E  0021               	movlb	1	; select bank1
  2569  041F  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2570  0420                     l2655:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2573  0420  0833               	movf	sprintf@fval^(0+128),w
  2574  0421  0020               	movlb	0	; select bank0
  2575  0422  00AA               	movwf	___ftmul@f1
  2576  0423  0021               	movlb	1	; select bank1
  2577  0424  0834               	movf	(sprintf@fval+1)^(0+128),w
  2578  0425  0020               	movlb	0	; select bank0
  2579  0426  00AB               	movwf	___ftmul@f1+1
  2580  0427  0021               	movlb	1	; select bank1
  2581  0428  0835               	movf	(sprintf@fval+2)^(0+128),w
  2582  0429  0020               	movlb	0	; select bank0
  2583  042A  00AC               	movwf	___ftmul@f1+2
  2584  042B  0021               	movlb	1	; select bank1
  2585  042C  082C               	movf	sprintf@tmpval^(0+128),w
  2586  042D  0020               	movlb	0	; select bank0
  2587  042E  00AD               	movwf	___ftmul@f2
  2588  042F  0021               	movlb	1	; select bank1
  2589  0430  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2590  0431  0020               	movlb	0	; select bank0
  2591  0432  00AE               	movwf	___ftmul@f2+1
  2592  0433  0021               	movlb	1	; select bank1
  2593  0434  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2594  0435  0020               	movlb	0	; select bank0
  2595  0436  00AF               	movwf	___ftmul@f2+2
  2596  0437  318B  23A2  3182   	fcall	___ftmul
  2597  043A  0020               	movlb	0	; select bank0
  2598  043B  082A               	movf	?___ftmul,w
  2599  043C  0021               	movlb	1	; select bank1
  2600  043D  00AC               	movwf	sprintf@tmpval^(0+128)
  2601  043E  0020               	movlb	0	; select bank0
  2602  043F  082B               	movf	?___ftmul+1,w
  2603  0440  0021               	movlb	1	; select bank1
  2604  0441  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2605  0442  0020               	movlb	0	; select bank0
  2606  0443  082C               	movf	?___ftmul+2,w
  2607  0444  0021               	movlb	1	; select bank1
  2608  0445  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2609  0446                     l2657:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2612  0446  082C               	movf	sprintf@tmpval^(0+128),w
  2613  0447  00F0               	movwf	___ftge@ff1
  2614  0448  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2615  0449  00F1               	movwf	___ftge@ff1+1
  2616  044A  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2617  044B  00F2               	movwf	___ftge@ff1+2
  2618  044C  3000               	movlw	0
  2619  044D  00F3               	movwf	___ftge@ff2
  2620  044E  3080               	movlw	128
  2621  044F  00F4               	movwf	___ftge@ff2+1
  2622  0450  303F               	movlw	63
  2623  0451  00F5               	movwf	___ftge@ff2+2
  2624  0452  3197  2742  3182   	fcall	___ftge
  2625  0455  1803               	btfsc	3,0
  2626  0456  2C58               	goto	u3601
  2627  0457  2C59               	goto	u3600
  2628  0458                     u3601:
  2629  0458  2C5F               	goto	l2661
  2630  0459                     u3600:
  2631  0459                     l2659:
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2634  0459  30FF               	movlw	255
  2635  045A  0021               	movlb	1	; select bank1
  2636  045B  07AA               	addwf	sprintf@eexp^(0+128),f
  2637  045C  30FF               	movlw	255
  2638  045D  3DAB               	addwfc	(sprintf@eexp+1)^(0+128),f
  2639  045E  2C78               	goto	l284
  2640  045F                     l2661:
  2641  045F  0021               	movlb	1	; select bank1
  2642  0460  082C               	movf	sprintf@tmpval^(0+128),w
  2643  0461  00F0               	movwf	___ftge@ff1
  2644  0462  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2645  0463  00F1               	movwf	___ftge@ff1+1
  2646  0464  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2647  0465  00F2               	movwf	___ftge@ff1+2
  2648  0466  3000               	movlw	0
  2649  0467  00F3               	movwf	___ftge@ff2
  2650  0468  3020               	movlw	32
  2651  0469  00F4               	movwf	___ftge@ff2+1
  2652  046A  3041               	movlw	65
  2653  046B  00F5               	movwf	___ftge@ff2+2
  2654  046C  3197  2742  3182   	fcall	___ftge
  2655  046F  1C03               	btfss	3,0
  2656  0470  2C72               	goto	u3611
  2657  0471  2C73               	goto	u3610
  2658  0472                     u3611:
  2659  0472  2C78               	goto	l284
  2660  0473                     u3610:
  2661  0473                     l2663:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2664  0473  3001               	movlw	1
  2665  0474  0021               	movlb	1	; select bank1
  2666  0475  07AA               	addwf	sprintf@eexp^(0+128),f
  2667  0476  3000               	movlw	0
  2668  0477  3DAB               	addwfc	(sprintf@eexp+1)^(0+128),f
  2669  0478                     l284:	
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 878:    }
  2671                           
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2674  0478  0021               	movlb	1	; select bank1
  2675  0479  0832               	movf	(sprintf@prec+1)^(0+128),w
  2676  047A  3A80               	xorlw	128
  2677  047B  0020               	movlb	0	; select bank0
  2678  047C  00E0               	movwf	??_sprintf
  2679  047D  3080               	movlw	128
  2680  047E  0260               	subwf	??_sprintf,w
  2681  047F  1D03               	skipz
  2682  0480  2C84               	goto	u3625
  2683  0481  300D               	movlw	13
  2684  0482  0021               	movlb	1	; select bank1
  2685  0483  0231               	subwf	sprintf@prec^(0+128),w
  2686  0484                     u3625:
  2687  0484  1803               	skipnc
  2688  0485  2C87               	goto	u3621
  2689  0486  2C88               	goto	u3620
  2690  0487                     u3621:
  2691  0487  2CAF               	goto	l2667
  2692  0488                     u3620:
  2693  0488                     l2665:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2696  0488  0021               	movlb	1	; select bank1
  2697  0489  0831               	movf	sprintf@prec^(0+128),w
  2698  048A  318E  269A  3182   	fcall	_fround
  2699  048D  0020               	movlb	0	; select bank0
  2700  048E  083A               	movf	?_fround,w
  2701  048F  00C8               	movwf	___ftadd@f1
  2702  0490  083B               	movf	?_fround+1,w
  2703  0491  00C9               	movwf	___ftadd@f1+1
  2704  0492  083C               	movf	?_fround+2,w
  2705  0493  00CA               	movwf	___ftadd@f1+2
  2706  0494  0021               	movlb	1	; select bank1
  2707  0495  0833               	movf	sprintf@fval^(0+128),w
  2708  0496  0020               	movlb	0	; select bank0
  2709  0497  00CB               	movwf	___ftadd@f2
  2710  0498  0021               	movlb	1	; select bank1
  2711  0499  0834               	movf	(sprintf@fval+1)^(0+128),w
  2712  049A  0020               	movlb	0	; select bank0
  2713  049B  00CC               	movwf	___ftadd@f2+1
  2714  049C  0021               	movlb	1	; select bank1
  2715  049D  0835               	movf	(sprintf@fval+2)^(0+128),w
  2716  049E  0020               	movlb	0	; select bank0
  2717  049F  00CD               	movwf	___ftadd@f2+2
  2718  04A0  318D  257A  3182   	fcall	___ftadd
  2719  04A3  0020               	movlb	0	; select bank0
  2720  04A4  0848               	movf	?___ftadd,w
  2721  04A5  0021               	movlb	1	; select bank1
  2722  04A6  00B3               	movwf	sprintf@fval^(0+128)
  2723  04A7  0020               	movlb	0	; select bank0
  2724  04A8  0849               	movf	?___ftadd+1,w
  2725  04A9  0021               	movlb	1	; select bank1
  2726  04AA  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2727  04AB  0020               	movlb	0	; select bank0
  2728  04AC  084A               	movf	?___ftadd+2,w
  2729  04AD  0021               	movlb	1	; select bank1
  2730  04AE  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2731  04AF                     l2667:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2734  04AF  0021               	movlb	1	; select bank1
  2735  04B0  082B               	movf	(sprintf@eexp+1)^(0+128),w
  2736  04B1  3A80               	xorlw	128
  2737  04B2  0020               	movlb	0	; select bank0
  2738  04B3  00E0               	movwf	??_sprintf
  2739  04B4  3080               	movlw	128
  2740  04B5  0260               	subwf	??_sprintf,w
  2741  04B6  1D03               	skipz
  2742  04B7  2CBB               	goto	u3635
  2743  04B8  300A               	movlw	10
  2744  04B9  0021               	movlb	1	; select bank1
  2745  04BA  022A               	subwf	sprintf@eexp^(0+128),w
  2746  04BB                     u3635:
  2747  04BB  1803               	skipnc
  2748  04BC  2CBE               	goto	u3631
  2749  04BD  2CBF               	goto	u3630
  2750  04BE                     u3631:
  2751  04BE  2CEE               	goto	l2675
  2752  04BF                     u3630:
  2753  04BF                     l2669:
  2754  04BF  0021               	movlb	1	; select bank1
  2755  04C0  0835               	movf	(sprintf@fval+2)^(0+128),w
  2756  04C1  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2757  04C2  0433               	iorwf	sprintf@fval^(0+128),w
  2758  04C3  1903               	skipnz
  2759  04C4  2CC6               	goto	u3641
  2760  04C5  2CC7               	goto	u3640
  2761  04C6                     u3641:
  2762  04C6  2D3C               	goto	l2689
  2763  04C7                     u3640:
  2764  04C7                     l2671:
  2765  04C7  0833               	movf	sprintf@fval^(0+128),w
  2766  04C8  0020               	movlb	0	; select bank0
  2767  04C9  00C5               	movwf	___fttol@f1
  2768  04CA  0021               	movlb	1	; select bank1
  2769  04CB  0834               	movf	(sprintf@fval+1)^(0+128),w
  2770  04CC  0020               	movlb	0	; select bank0
  2771  04CD  00C6               	movwf	___fttol@f1+1
  2772  04CE  0021               	movlb	1	; select bank1
  2773  04CF  0835               	movf	(sprintf@fval+2)^(0+128),w
  2774  04D0  0020               	movlb	0	; select bank0
  2775  04D1  00C7               	movwf	___fttol@f1+2
  2776  04D2  3189  21BB  3182   	fcall	___fttol
  2777  04D5  0020               	movlb	0	; select bank0
  2778  04D6  0848               	movf	?___fttol+3,w
  2779  04D7  0447               	iorwf	?___fttol+2,w
  2780  04D8  0446               	iorwf	?___fttol+1,w
  2781  04D9  0445               	iorwf	?___fttol,w
  2782  04DA  1D03               	skipz
  2783  04DB  2CDD               	goto	u3651
  2784  04DC  2CDE               	goto	u3650
  2785  04DD                     u3651:
  2786  04DD  2D3C               	goto	l2689
  2787  04DE                     u3650:
  2788  04DE                     l2673:
  2789  04DE  0021               	movlb	1	; select bank1
  2790  04DF  082B               	movf	(sprintf@eexp+1)^(0+128),w
  2791  04E0  3A80               	xorlw	128
  2792  04E1  0020               	movlb	0	; select bank0
  2793  04E2  00E0               	movwf	??_sprintf
  2794  04E3  3080               	movlw	128
  2795  04E4  0260               	subwf	??_sprintf,w
  2796  04E5  1D03               	skipz
  2797  04E6  2CEA               	goto	u3665
  2798  04E7  3002               	movlw	2
  2799  04E8  0021               	movlb	1	; select bank1
  2800  04E9  022A               	subwf	sprintf@eexp^(0+128),w
  2801  04EA                     u3665:
  2802  04EA  1C03               	skipc
  2803  04EB  2CED               	goto	u3661
  2804  04EC  2CEE               	goto	u3660
  2805  04ED                     u3661:
  2806  04ED  2D3C               	goto	l2689
  2807  04EE                     u3660:
  2808  04EE                     l2675:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2811  04EE  0021               	movlb	1	; select bank1
  2812  04EF  082C               	movf	sprintf@tmpval^(0+128),w
  2813  04F0  00F0               	movwf	___ftge@ff1
  2814  04F1  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2815  04F2  00F1               	movwf	___ftge@ff1+1
  2816  04F3  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2817  04F4  00F2               	movwf	___ftge@ff1+2
  2818  04F5  3070               	movlw	112
  2819  04F6  00F3               	movwf	___ftge@ff2
  2820  04F7  3089               	movlw	137
  2821  04F8  00F4               	movwf	___ftge@ff2+1
  2822  04F9  3040               	movlw	64
  2823  04FA  00F5               	movwf	___ftge@ff2+2
  2824  04FB  3197  2742  3182   	fcall	___ftge
  2825  04FE  1803               	btfsc	3,0
  2826  04FF  2D01               	goto	u3671
  2827  0500  2D02               	goto	u3670
  2828  0501                     u3671:
  2829  0501  2D08               	goto	l2679
  2830  0502                     u3670:
  2831  0502                     l2677:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2834  0502  30F7               	movlw	247
  2835  0503  0021               	movlb	1	; select bank1
  2836  0504  07AA               	addwf	sprintf@eexp^(0+128),f
  2837  0505  30FF               	movlw	255
  2838  0506  3DAB               	addwfc	(sprintf@eexp+1)^(0+128),f
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2841  0507  2D0D               	goto	l2681
  2842  0508                     l2679:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2845  0508  30F8               	movlw	248
  2846  0509  0021               	movlb	1	; select bank1
  2847  050A  07AA               	addwf	sprintf@eexp^(0+128),f
  2848  050B  30FF               	movlw	255
  2849  050C  3DAB               	addwfc	(sprintf@eexp+1)^(0+128),f
  2850  050D                     l2681:
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  2853  050D  082A               	movf	sprintf@eexp^(0+128),w
  2854  050E  3180  2058  3182   	fcall	_scale
  2855  0511  0020               	movlb	0	; select bank0
  2856  0512  083A               	movf	?_scale,w
  2857  0513  0021               	movlb	1	; select bank1
  2858  0514  00AC               	movwf	sprintf@tmpval^(0+128)
  2859  0515  0020               	movlb	0	; select bank0
  2860  0516  083B               	movf	?_scale+1,w
  2861  0517  0021               	movlb	1	; select bank1
  2862  0518  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  2863  0519  0020               	movlb	0	; select bank0
  2864  051A  083C               	movf	?_scale+2,w
  2865  051B  0021               	movlb	1	; select bank1
  2866  051C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  2867  051D                     l2685:	
  2868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2869                           
  2870  051D  0833               	movf	sprintf@fval^(0+128),w
  2871  051E  00F0               	movwf	__tdiv_to_l_@f1
  2872  051F  0834               	movf	(sprintf@fval+1)^(0+128),w
  2873  0520  00F1               	movwf	__tdiv_to_l_@f1+1
  2874  0521  0835               	movf	(sprintf@fval+2)^(0+128),w
  2875  0522  00F2               	movwf	__tdiv_to_l_@f1+2
  2876  0523  082C               	movf	sprintf@tmpval^(0+128),w
  2877  0524  00F3               	movwf	__tdiv_to_l_@f2
  2878  0525  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  2879  0526  00F4               	movwf	__tdiv_to_l_@f2+1
  2880  0527  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  2881  0528  00F5               	movwf	__tdiv_to_l_@f2+2
  2882  0529  318A  2240  3182   	fcall	__tdiv_to_l_
  2883  052C  0873               	movf	?__tdiv_to_l_+3,w
  2884  052D  0021               	movlb	1	; select bank1
  2885  052E  00A9               	movwf	(sprintf@val+3)^(0+128)
  2886  052F  0872               	movf	?__tdiv_to_l_+2,w
  2887  0530  00A8               	movwf	(sprintf@val+2)^(0+128)
  2888  0531  0871               	movf	?__tdiv_to_l_+1,w
  2889  0532  00A7               	movwf	(sprintf@val+1)^(0+128)
  2890  0533  0870               	movf	?__tdiv_to_l_,w
  2891  0534  00A6               	movwf	sprintf@val^(0+128)
  2892  0535                     l2687:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2895  0535  3000               	movlw	0
  2896  0536  00B3               	movwf	sprintf@fval^(0+128)
  2897  0537  3000               	movlw	0
  2898  0538  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2899  0539  3000               	movlw	0
  2900  053A  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2903  053B  2D8A               	goto	l2693
  2904  053C                     l2689:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2907  053C  0021               	movlb	1	; select bank1
  2908  053D  0833               	movf	sprintf@fval^(0+128),w
  2909  053E  0020               	movlb	0	; select bank0
  2910  053F  00C5               	movwf	___fttol@f1
  2911  0540  0021               	movlb	1	; select bank1
  2912  0541  0834               	movf	(sprintf@fval+1)^(0+128),w
  2913  0542  0020               	movlb	0	; select bank0
  2914  0543  00C6               	movwf	___fttol@f1+1
  2915  0544  0021               	movlb	1	; select bank1
  2916  0545  0835               	movf	(sprintf@fval+2)^(0+128),w
  2917  0546  0020               	movlb	0	; select bank0
  2918  0547  00C7               	movwf	___fttol@f1+2
  2919  0548  3189  21BB  3182   	fcall	___fttol
  2920  054B  0020               	movlb	0	; select bank0
  2921  054C  0848               	movf	?___fttol+3,w
  2922  054D  0021               	movlb	1	; select bank1
  2923  054E  00A9               	movwf	(sprintf@val+3)^(0+128)
  2924  054F  0020               	movlb	0	; select bank0
  2925  0550  0847               	movf	?___fttol+2,w
  2926  0551  0021               	movlb	1	; select bank1
  2927  0552  00A8               	movwf	(sprintf@val+2)^(0+128)
  2928  0553  0020               	movlb	0	; select bank0
  2929  0554  0846               	movf	?___fttol+1,w
  2930  0555  0021               	movlb	1	; select bank1
  2931  0556  00A7               	movwf	(sprintf@val+1)^(0+128)
  2932  0557  0020               	movlb	0	; select bank0
  2933  0558  0845               	movf	?___fttol,w
  2934  0559  0021               	movlb	1	; select bank1
  2935  055A  00A6               	movwf	sprintf@val^(0+128)
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2938  055B  0829               	movf	(sprintf@val+3)^(0+128),w
  2939  055C  00FB               	movwf	___lltoft@c+3
  2940  055D  0828               	movf	(sprintf@val+2)^(0+128),w
  2941  055E  00FA               	movwf	___lltoft@c+2
  2942  055F  0827               	movf	(sprintf@val+1)^(0+128),w
  2943  0560  00F9               	movwf	___lltoft@c+1
  2944  0561  0826               	movf	sprintf@val^(0+128),w
  2945  0562  00F8               	movwf	___lltoft@c
  2946  0563  3196  26E3  3182   	fcall	___lltoft
  2947  0566  0878               	movf	?___lltoft,w
  2948  0567  0020               	movlb	0	; select bank0
  2949  0568  00D5               	movwf	___ftsub@f2
  2950  0569  0879               	movf	?___lltoft+1,w
  2951  056A  00D6               	movwf	___ftsub@f2+1
  2952  056B  087A               	movf	?___lltoft+2,w
  2953  056C  00D7               	movwf	___ftsub@f2+2
  2954  056D  0021               	movlb	1	; select bank1
  2955  056E  0833               	movf	sprintf@fval^(0+128),w
  2956  056F  0020               	movlb	0	; select bank0
  2957  0570  00D8               	movwf	___ftsub@f1
  2958  0571  0021               	movlb	1	; select bank1
  2959  0572  0834               	movf	(sprintf@fval+1)^(0+128),w
  2960  0573  0020               	movlb	0	; select bank0
  2961  0574  00D9               	movwf	___ftsub@f1+1
  2962  0575  0021               	movlb	1	; select bank1
  2963  0576  0835               	movf	(sprintf@fval+2)^(0+128),w
  2964  0577  0020               	movlb	0	; select bank0
  2965  0578  00DA               	movwf	___ftsub@f1+2
  2966  0579  3196  2653  3182   	fcall	___ftsub
  2967  057C  0020               	movlb	0	; select bank0
  2968  057D  0855               	movf	?___ftsub,w
  2969  057E  0021               	movlb	1	; select bank1
  2970  057F  00B3               	movwf	sprintf@fval^(0+128)
  2971  0580  0020               	movlb	0	; select bank0
  2972  0581  0856               	movf	?___ftsub+1,w
  2973  0582  0021               	movlb	1	; select bank1
  2974  0583  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2975  0584  0020               	movlb	0	; select bank0
  2976  0585  0857               	movf	?___ftsub+2,w
  2977  0586  0021               	movlb	1	; select bank1
  2978  0587  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2979  0588                     l2691:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2982  0588  01AA               	clrf	sprintf@eexp^(0+128)
  2983  0589  01AB               	clrf	(sprintf@eexp+1)^(0+128)
  2984  058A                     l2693:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2987  058A  01B6               	clrf	sprintf@c^(0+128)
  2988  058B  0AB6               	incf	sprintf@c^(0+128),f
  2989  058C                     l2699:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2992  058C  0836               	movf	sprintf@c^(0+128),w
  2993  058D  0020               	movlb	0	; select bank0
  2994  058E  00E0               	movwf	??_sprintf
  2995  058F  01E1               	clrf	??_sprintf+1
  2996  0590  35E0               	lslf	??_sprintf,f
  2997  0591  0DE1               	rlf	??_sprintf+1,f
  2998  0592  35E0               	lslf	??_sprintf,f
  2999  0593  0DE1               	rlf	??_sprintf+1,f
  3000  0594  3000               	movlw	low (_dpowers| (0+32768))
  3001  0595  0760               	addwf	??_sprintf,w
  3002  0596  0084               	movwf	4
  3003  0597  3098               	movlw	high (_dpowers| (0+32768))
  3004  0598  3D61               	addwfc	??_sprintf+1,w
  3005  0599  0085               	movwf	5
  3006  059A  3F00               	moviw [0]fsr0
  3007  059B  00E2               	movwf	??_sprintf+2
  3008  059C  3F01               	moviw [1]fsr0
  3009  059D  00E3               	movwf	??_sprintf+3
  3010  059E  3F02               	moviw [2]fsr0
  3011  059F  00E4               	movwf	??_sprintf+4
  3012  05A0  3F03               	moviw [3]fsr0
  3013  05A1  00E5               	movwf	??_sprintf+5
  3014  05A2  0865               	movf	??_sprintf+5,w
  3015  05A3  0021               	movlb	1	; select bank1
  3016  05A4  0229               	subwf	(sprintf@val+3)^(0+128),w
  3017  05A5  1D03               	skipz
  3018  05A6  2DB7               	goto	u3685
  3019  05A7  0020               	movlb	0	; select bank0
  3020  05A8  0864               	movf	??_sprintf+4,w
  3021  05A9  0021               	movlb	1	; select bank1
  3022  05AA  0228               	subwf	(sprintf@val+2)^(0+128),w
  3023  05AB  1D03               	skipz
  3024  05AC  2DB7               	goto	u3685
  3025  05AD  0020               	movlb	0	; select bank0
  3026  05AE  0863               	movf	??_sprintf+3,w
  3027  05AF  0021               	movlb	1	; select bank1
  3028  05B0  0227               	subwf	(sprintf@val+1)^(0+128),w
  3029  05B1  1D03               	skipz
  3030  05B2  2DB7               	goto	u3685
  3031  05B3  0020               	movlb	0	; select bank0
  3032  05B4  0862               	movf	??_sprintf+2,w
  3033  05B5  0021               	movlb	1	; select bank1
  3034  05B6  0226               	subwf	sprintf@val^(0+128),w
  3035  05B7                     u3685:
  3036  05B7  1803               	skipnc
  3037  05B8  2DBA               	goto	u3681
  3038  05B9  2DBB               	goto	u3680
  3039  05BA                     u3681:
  3040  05BA  2DBC               	goto	l2703
  3041  05BB                     u3680:
  3042  05BB  2DC8               	goto	l2705
  3043  05BC                     l2703:
  3044  05BC  3001               	movlw	1
  3045  05BD  0020               	movlb	0	; select bank0
  3046  05BE  00E0               	movwf	??_sprintf
  3047  05BF  0860               	movf	??_sprintf,w
  3048  05C0  0021               	movlb	1	; select bank1
  3049  05C1  07B6               	addwf	sprintf@c^(0+128),f
  3050  05C2  300A               	movlw	10
  3051  05C3  0636               	xorwf	sprintf@c^(0+128),w
  3052  05C4  1D03               	btfss	3,2
  3053  05C5  2DC7               	goto	u3691
  3054  05C6  2DC8               	goto	u3690
  3055  05C7                     u3691:
  3056  05C7  2D8C               	goto	l2699
  3057  05C8                     u3690:
  3058  05C8                     l2705:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3061  05C8  3003               	movlw	3
  3062  05C9  0524               	andwf	sprintf@flag^(0+128),w
  3063  05CA  0020               	movlb	0	; select bank0
  3064  05CB  00E0               	movwf	??_sprintf
  3065  05CC  3000               	movlw	0
  3066  05CD  0021               	movlb	1	; select bank1
  3067  05CE  0525               	andwf	(sprintf@flag+1)^(0+128),w
  3068  05CF  0020               	movlb	0	; select bank0
  3069  05D0  00E1               	movwf	??_sprintf+1
  3070  05D1  0860               	movf	??_sprintf,w
  3071  05D2  0461               	iorwf	??_sprintf+1,w
  3072  05D3  1903               	btfsc	3,2
  3073  05D4  2DD6               	goto	u3701
  3074  05D5  2DD7               	goto	u3700
  3075  05D6                     u3701:
  3076  05D6  2E39               	goto	l2719
  3077  05D7                     u3700:
  3078  05D7                     l2707:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3081  05D7  302D               	movlw	45
  3082  05D8  00E0               	movwf	??_sprintf
  3083  05D9  0021               	movlb	1	; select bank1
  3084  05DA  0830               	movf	sprintf@sp^(0+128),w
  3085  05DB  0086               	movwf	6
  3086  05DC  0187               	clrf	7
  3087  05DD  0020               	movlb	0	; select bank0
  3088  05DE  0860               	movf	??_sprintf,w
  3089  05DF  0081               	movwf	1
  3090  05E0                     l2709:
  3091  05E0  3001               	movlw	1
  3092  05E1  00E0               	movwf	??_sprintf
  3093  05E2  0860               	movf	??_sprintf,w
  3094  05E3  0021               	movlb	1	; select bank1
  3095  05E4  07B0               	addwf	sprintf@sp^(0+128),f
  3096  05E5  2E39               	goto	l2719
  3097  05E6                     l2711:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3100  05E6  0836               	movf	sprintf@c^(0+128),w
  3101  05E7  0020               	movlb	0	; select bank0
  3102  05E8  00E0               	movwf	??_sprintf
  3103  05E9  01E1               	clrf	??_sprintf+1
  3104  05EA  35E0               	lslf	??_sprintf,f
  3105  05EB  0DE1               	rlf	??_sprintf+1,f
  3106  05EC  35E0               	lslf	??_sprintf,f
  3107  05ED  0DE1               	rlf	??_sprintf+1,f
  3108  05EE  3000               	movlw	low (_dpowers| (0+32768))
  3109  05EF  0760               	addwf	??_sprintf,w
  3110  05F0  0084               	movwf	4
  3111  05F1  3098               	movlw	high (_dpowers| (0+32768))
  3112  05F2  3D61               	addwfc	??_sprintf+1,w
  3113  05F3  0085               	movwf	5
  3114  05F4  3F00               	moviw [0]fsr0
  3115  05F5  00F0               	movwf	___lldiv@divisor
  3116  05F6  3F01               	moviw [1]fsr0
  3117  05F7  00F1               	movwf	___lldiv@divisor+1
  3118  05F8  3F02               	moviw [2]fsr0
  3119  05F9  00F2               	movwf	___lldiv@divisor+2
  3120  05FA  3F03               	moviw [3]fsr0
  3121  05FB  00F3               	movwf	___lldiv@divisor+3
  3122  05FC  0021               	movlb	1	; select bank1
  3123  05FD  0829               	movf	(sprintf@val+3)^(0+128),w
  3124  05FE  00F7               	movwf	___lldiv@dividend+3
  3125  05FF  0828               	movf	(sprintf@val+2)^(0+128),w
  3126  0600  00F6               	movwf	___lldiv@dividend+2
  3127  0601  0827               	movf	(sprintf@val+1)^(0+128),w
  3128  0602  00F5               	movwf	___lldiv@dividend+1
  3129  0603  0826               	movf	sprintf@val^(0+128),w
  3130  0604  00F4               	movwf	___lldiv@dividend
  3131  0605  3188  2019  3182   	fcall	___lldiv
  3132  0608  0873               	movf	?___lldiv+3,w
  3133  0609  0021               	movlb	1	; select bank1
  3134  060A  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3135  060B  0872               	movf	?___lldiv+2,w
  3136  060C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3137  060D  0871               	movf	?___lldiv+1,w
  3138  060E  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3139  060F  0870               	movf	?___lldiv,w
  3140  0610  00AC               	movwf	sprintf@tmpval^(0+128)
  3141  0611                     l2713:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3144  0611  3000               	movlw	0
  3145  0612  00F3               	movwf	___llmod@divisor+3
  3146  0613  3000               	movlw	0
  3147  0614  00F2               	movwf	___llmod@divisor+2
  3148  0615  3000               	movlw	0
  3149  0616  00F1               	movwf	___llmod@divisor+1
  3150  0617  300A               	movlw	10
  3151  0618  00F0               	movwf	___llmod@divisor
  3152  0619  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  3153  061A  00F7               	movwf	___llmod@dividend+3
  3154  061B  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3155  061C  00F6               	movwf	___llmod@dividend+2
  3156  061D  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3157  061E  00F5               	movwf	___llmod@dividend+1
  3158  061F  082C               	movf	sprintf@tmpval^(0+128),w
  3159  0620  00F4               	movwf	___llmod@dividend
  3160  0621  3197  27B6  3182   	fcall	___llmod
  3161  0624  0873               	movf	?___llmod+3,w
  3162  0625  0021               	movlb	1	; select bank1
  3163  0626  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3164  0627  0872               	movf	?___llmod+2,w
  3165  0628  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3166  0629  0871               	movf	?___llmod+1,w
  3167  062A  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3168  062B  0870               	movf	?___llmod,w
  3169  062C  00AC               	movwf	sprintf@tmpval^(0+128)
  3170  062D                     l2715:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3173  062D  082C               	movf	sprintf@tmpval^(0+128),w
  3174  062E  3E30               	addlw	48
  3175  062F  0020               	movlb	0	; select bank0
  3176  0630  00E0               	movwf	??_sprintf
  3177  0631  0021               	movlb	1	; select bank1
  3178  0632  0830               	movf	sprintf@sp^(0+128),w
  3179  0633  0086               	movwf	6
  3180  0634  0187               	clrf	7
  3181  0635  0020               	movlb	0	; select bank0
  3182  0636  0860               	movf	??_sprintf,w
  3183  0637  0081               	movwf	1
  3184  0638  2DE0               	goto	l2709
  3185  0639                     l2719:
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3188  0639  3001               	movlw	1
  3189  063A  0021               	movlb	1	; select bank1
  3190  063B  02B6               	subwf	sprintf@c^(0+128),f
  3191  063C  0A36               	incf	sprintf@c^(0+128),w
  3192  063D  1D03               	btfss	3,2
  3193  063E  2E40               	goto	u3711
  3194  063F  2E41               	goto	u3710
  3195  0640                     u3711:
  3196  0640  2DE6               	goto	l2711
  3197  0641                     u3710:
  3198  0641  2E55               	goto	l2727
  3199  0642                     l2721:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3202  0642  3030               	movlw	48
  3203  0643  0020               	movlb	0	; select bank0
  3204  0644  00E0               	movwf	??_sprintf
  3205  0645  0021               	movlb	1	; select bank1
  3206  0646  0830               	movf	sprintf@sp^(0+128),w
  3207  0647  0086               	movwf	6
  3208  0648  0187               	clrf	7
  3209  0649  0020               	movlb	0	; select bank0
  3210  064A  0860               	movf	??_sprintf,w
  3211  064B  0081               	movwf	1
  3212  064C                     l2723:
  3213  064C  3001               	movlw	1
  3214  064D  00E0               	movwf	??_sprintf
  3215  064E  0860               	movf	??_sprintf,w
  3216  064F  0021               	movlb	1	; select bank1
  3217  0650  07B0               	addwf	sprintf@sp^(0+128),f
  3218  0651                     l2725:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3221  0651  30FF               	movlw	255
  3222  0652  07AA               	addwf	sprintf@eexp^(0+128),f
  3223  0653  30FF               	movlw	255
  3224  0654  3DAB               	addwfc	(sprintf@eexp+1)^(0+128),f
  3225  0655                     l2727:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3228  0655  082B               	movf	(sprintf@eexp+1)^(0+128),w
  3229  0656  3A80               	xorlw	128
  3230  0657  0020               	movlb	0	; select bank0
  3231  0658  00E0               	movwf	??_sprintf
  3232  0659  3080               	movlw	128
  3233  065A  0260               	subwf	??_sprintf,w
  3234  065B  1D03               	skipz
  3235  065C  2E60               	goto	u3725
  3236  065D  3001               	movlw	1
  3237  065E  0021               	movlb	1	; select bank1
  3238  065F  022A               	subwf	sprintf@eexp^(0+128),w
  3239  0660                     u3725:
  3240  0660  1803               	skipnc
  3241  0661  2E63               	goto	u3721
  3242  0662  2E64               	goto	u3720
  3243  0663                     u3721:
  3244  0663  2E42               	goto	l2721
  3245  0664                     u3720:
  3246  0664                     l2729:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3249  0664  0021               	movlb	1	; select bank1
  3250  0665  0832               	movf	(sprintf@prec+1)^(0+128),w
  3251  0666  3A80               	xorlw	128
  3252  0667  0020               	movlb	0	; select bank0
  3253  0668  00E0               	movwf	??_sprintf
  3254  0669  3080               	movlw	128
  3255  066A  0260               	subwf	??_sprintf,w
  3256  066B  1D03               	skipz
  3257  066C  2E70               	goto	u3735
  3258  066D  3009               	movlw	9
  3259  066E  0021               	movlb	1	; select bank1
  3260  066F  0231               	subwf	sprintf@prec^(0+128),w
  3261  0670                     u3735:
  3262  0670  1C03               	skipc
  3263  0671  2E73               	goto	u3731
  3264  0672  2E74               	goto	u3730
  3265  0673                     u3731:
  3266  0673  2E7B               	goto	l2733
  3267  0674                     u3730:
  3268  0674                     l2731:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3271  0674  3008               	movlw	8
  3272  0675  0020               	movlb	0	; select bank0
  3273  0676  00E0               	movwf	??_sprintf
  3274  0677  0860               	movf	??_sprintf,w
  3275  0678  0021               	movlb	1	; select bank1
  3276  0679  00B6               	movwf	sprintf@c^(0+128)
  3277  067A  2E82               	goto	l311
  3278  067B                     l2733:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3281  067B  0021               	movlb	1	; select bank1
  3282  067C  0831               	movf	sprintf@prec^(0+128),w
  3283  067D  0020               	movlb	0	; select bank0
  3284  067E  00E0               	movwf	??_sprintf
  3285  067F  0860               	movf	??_sprintf,w
  3286  0680  0021               	movlb	1	; select bank1
  3287  0681  00B6               	movwf	sprintf@c^(0+128)
  3288  0682                     l311:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3291  0682  0836               	movf	sprintf@c^(0+128),w
  3292  0683  0020               	movlb	0	; select bank0
  3293  0684  00E0               	movwf	??_sprintf
  3294  0685  01E1               	clrf	??_sprintf+1
  3295  0686  0860               	movf	??_sprintf,w
  3296  0687  0021               	movlb	1	; select bank1
  3297  0688  02B1               	subwf	sprintf@prec^(0+128),f
  3298  0689  0020               	movlb	0	; select bank0
  3299  068A  0861               	movf	??_sprintf+1,w
  3300  068B  0021               	movlb	1	; select bank1
  3301  068C  3BB2               	subwfb	(sprintf@prec+1)^(0+128),f
  3302  068D                     l2735:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3305  068D  0836               	movf	sprintf@c^(0+128),w
  3306  068E  1903               	btfsc	3,2
  3307  068F  2E91               	goto	u3741
  3308  0690  2E92               	goto	u3740
  3309  0691                     u3741:
  3310  0691  2EA1               	goto	l2741
  3311  0692                     u3740:
  3312  0692                     l2737:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3315  0692  302E               	movlw	46
  3316  0693  0020               	movlb	0	; select bank0
  3317  0694  00E0               	movwf	??_sprintf
  3318  0695  0021               	movlb	1	; select bank1
  3319  0696  0830               	movf	sprintf@sp^(0+128),w
  3320  0697  0086               	movwf	6
  3321  0698  0187               	clrf	7
  3322  0699  0020               	movlb	0	; select bank0
  3323  069A  0860               	movf	??_sprintf,w
  3324  069B  0081               	movwf	1
  3325  069C                     l2739:
  3326  069C  3001               	movlw	1
  3327  069D  00E0               	movwf	??_sprintf
  3328  069E  0860               	movf	??_sprintf,w
  3329  069F  0021               	movlb	1	; select bank1
  3330  06A0  07B0               	addwf	sprintf@sp^(0+128),f
  3331  06A1                     l2741:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3334  06A1  0836               	movf	sprintf@c^(0+128),w
  3335  06A2  3180  2058  3182   	fcall	_scale
  3336  06A5  0020               	movlb	0	; select bank0
  3337  06A6  083A               	movf	?_scale,w
  3338  06A7  0021               	movlb	1	; select bank1
  3339  06A8  00A0               	movwf	_sprintf$737^(0+128)
  3340  06A9  0020               	movlb	0	; select bank0
  3341  06AA  083B               	movf	?_scale+1,w
  3342  06AB  0021               	movlb	1	; select bank1
  3343  06AC  00A1               	movwf	(_sprintf$737+1)^(0+128)
  3344  06AD  0020               	movlb	0	; select bank0
  3345  06AE  083C               	movf	?_scale+2,w
  3346  06AF  0021               	movlb	1	; select bank1
  3347  06B0  00A2               	movwf	(_sprintf$737+2)^(0+128)
  3348  06B1                     l2743:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3351  06B1  0820               	movf	_sprintf$737^(0+128),w
  3352  06B2  0020               	movlb	0	; select bank0
  3353  06B3  00AD               	movwf	___ftmul@f2
  3354  06B4  0021               	movlb	1	; select bank1
  3355  06B5  0821               	movf	(_sprintf$737+1)^(0+128),w
  3356  06B6  0020               	movlb	0	; select bank0
  3357  06B7  00AE               	movwf	___ftmul@f2+1
  3358  06B8  0021               	movlb	1	; select bank1
  3359  06B9  0822               	movf	(_sprintf$737+2)^(0+128),w
  3360  06BA  0020               	movlb	0	; select bank0
  3361  06BB  00AF               	movwf	___ftmul@f2+2
  3362  06BC  0021               	movlb	1	; select bank1
  3363  06BD  0833               	movf	sprintf@fval^(0+128),w
  3364  06BE  0020               	movlb	0	; select bank0
  3365  06BF  00AA               	movwf	___ftmul@f1
  3366  06C0  0021               	movlb	1	; select bank1
  3367  06C1  0834               	movf	(sprintf@fval+1)^(0+128),w
  3368  06C2  0020               	movlb	0	; select bank0
  3369  06C3  00AB               	movwf	___ftmul@f1+1
  3370  06C4  0021               	movlb	1	; select bank1
  3371  06C5  0835               	movf	(sprintf@fval+2)^(0+128),w
  3372  06C6  0020               	movlb	0	; select bank0
  3373  06C7  00AC               	movwf	___ftmul@f1+2
  3374  06C8  318B  23A2  3182   	fcall	___ftmul
  3375  06CB  0020               	movlb	0	; select bank0
  3376  06CC  082A               	movf	?___ftmul,w
  3377  06CD  00C5               	movwf	___fttol@f1
  3378  06CE  082B               	movf	?___ftmul+1,w
  3379  06CF  00C6               	movwf	___fttol@f1+1
  3380  06D0  082C               	movf	?___ftmul+2,w
  3381  06D1  00C7               	movwf	___fttol@f1+2
  3382  06D2  3189  21BB  3182   	fcall	___fttol
  3383  06D5  0020               	movlb	0	; select bank0
  3384  06D6  0848               	movf	?___fttol+3,w
  3385  06D7  0021               	movlb	1	; select bank1
  3386  06D8  00A9               	movwf	(sprintf@val+3)^(0+128)
  3387  06D9  0020               	movlb	0	; select bank0
  3388  06DA  0847               	movf	?___fttol+2,w
  3389  06DB  0021               	movlb	1	; select bank1
  3390  06DC  00A8               	movwf	(sprintf@val+2)^(0+128)
  3391  06DD  0020               	movlb	0	; select bank0
  3392  06DE  0846               	movf	?___fttol+1,w
  3393  06DF  0021               	movlb	1	; select bank1
  3394  06E0  00A7               	movwf	(sprintf@val+1)^(0+128)
  3395  06E1  0020               	movlb	0	; select bank0
  3396  06E2  0845               	movf	?___fttol,w
  3397  06E3  0021               	movlb	1	; select bank1
  3398  06E4  00A6               	movwf	sprintf@val^(0+128)
  3399                           
  3400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3401  06E5  2F68               	goto	l2755
  3402  06E6                     l2745:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3405  06E6  0836               	movf	sprintf@c^(0+128),w
  3406  06E7  0020               	movlb	0	; select bank0
  3407  06E8  00E0               	movwf	??_sprintf
  3408  06E9  01E1               	clrf	??_sprintf+1
  3409  06EA  35E0               	lslf	??_sprintf,f
  3410  06EB  0DE1               	rlf	??_sprintf+1,f
  3411  06EC  35E0               	lslf	??_sprintf,f
  3412  06ED  0DE1               	rlf	??_sprintf+1,f
  3413  06EE  3000               	movlw	low (_dpowers| (0+32768))
  3414  06EF  0760               	addwf	??_sprintf,w
  3415  06F0  0084               	movwf	4
  3416  06F1  3098               	movlw	high (_dpowers| (0+32768))
  3417  06F2  3D61               	addwfc	??_sprintf+1,w
  3418  06F3  0085               	movwf	5
  3419  06F4  3F00               	moviw [0]fsr0
  3420  06F5  00F0               	movwf	___lldiv@divisor
  3421  06F6  3F01               	moviw [1]fsr0
  3422  06F7  00F1               	movwf	___lldiv@divisor+1
  3423  06F8  3F02               	moviw [2]fsr0
  3424  06F9  00F2               	movwf	___lldiv@divisor+2
  3425  06FA  3F03               	moviw [3]fsr0
  3426  06FB  00F3               	movwf	___lldiv@divisor+3
  3427  06FC  0021               	movlb	1	; select bank1
  3428  06FD  0829               	movf	(sprintf@val+3)^(0+128),w
  3429  06FE  00F7               	movwf	___lldiv@dividend+3
  3430  06FF  0828               	movf	(sprintf@val+2)^(0+128),w
  3431  0700  00F6               	movwf	___lldiv@dividend+2
  3432  0701  0827               	movf	(sprintf@val+1)^(0+128),w
  3433  0702  00F5               	movwf	___lldiv@dividend+1
  3434  0703  0826               	movf	sprintf@val^(0+128),w
  3435  0704  00F4               	movwf	___lldiv@dividend
  3436  0705  3188  2019  3182   	fcall	___lldiv
  3437  0708  0873               	movf	?___lldiv+3,w
  3438  0709  0021               	movlb	1	; select bank1
  3439  070A  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3440  070B  0872               	movf	?___lldiv+2,w
  3441  070C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3442  070D  0871               	movf	?___lldiv+1,w
  3443  070E  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3444  070F  0870               	movf	?___lldiv,w
  3445  0710  00AC               	movwf	sprintf@tmpval^(0+128)
  3446  0711                     l2747:
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3449  0711  3000               	movlw	0
  3450  0712  00F3               	movwf	___llmod@divisor+3
  3451  0713  3000               	movlw	0
  3452  0714  00F2               	movwf	___llmod@divisor+2
  3453  0715  3000               	movlw	0
  3454  0716  00F1               	movwf	___llmod@divisor+1
  3455  0717  300A               	movlw	10
  3456  0718  00F0               	movwf	___llmod@divisor
  3457  0719  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  3458  071A  00F7               	movwf	___llmod@dividend+3
  3459  071B  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  3460  071C  00F6               	movwf	___llmod@dividend+2
  3461  071D  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  3462  071E  00F5               	movwf	___llmod@dividend+1
  3463  071F  082C               	movf	sprintf@tmpval^(0+128),w
  3464  0720  00F4               	movwf	___llmod@dividend
  3465  0721  3197  27B6  3182   	fcall	___llmod
  3466  0724  0873               	movf	?___llmod+3,w
  3467  0725  0021               	movlb	1	; select bank1
  3468  0726  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  3469  0727  0872               	movf	?___llmod+2,w
  3470  0728  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  3471  0729  0871               	movf	?___llmod+1,w
  3472  072A  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  3473  072B  0870               	movf	?___llmod,w
  3474  072C  00AC               	movwf	sprintf@tmpval^(0+128)
  3475  072D                     l2749:
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3478  072D  082C               	movf	sprintf@tmpval^(0+128),w
  3479  072E  3E30               	addlw	48
  3480  072F  0020               	movlb	0	; select bank0
  3481  0730  00E0               	movwf	??_sprintf
  3482  0731  0021               	movlb	1	; select bank1
  3483  0732  0830               	movf	sprintf@sp^(0+128),w
  3484  0733  0086               	movwf	6
  3485  0734  0187               	clrf	7
  3486  0735  0020               	movlb	0	; select bank0
  3487  0736  0860               	movf	??_sprintf,w
  3488  0737  0081               	movwf	1
  3489  0738                     l2751:
  3490  0738  3001               	movlw	1
  3491  0739  00E0               	movwf	??_sprintf
  3492  073A  0860               	movf	??_sprintf,w
  3493  073B  0021               	movlb	1	; select bank1
  3494  073C  07B0               	addwf	sprintf@sp^(0+128),f
  3495  073D                     l2753:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3498  073D  0836               	movf	sprintf@c^(0+128),w
  3499  073E  0020               	movlb	0	; select bank0
  3500  073F  00E0               	movwf	??_sprintf
  3501  0740  01E1               	clrf	??_sprintf+1
  3502  0741  35E0               	lslf	??_sprintf,f
  3503  0742  0DE1               	rlf	??_sprintf+1,f
  3504  0743  35E0               	lslf	??_sprintf,f
  3505  0744  0DE1               	rlf	??_sprintf+1,f
  3506  0745  3000               	movlw	low (_dpowers| (0+32768))
  3507  0746  0760               	addwf	??_sprintf,w
  3508  0747  0084               	movwf	4
  3509  0748  3098               	movlw	high (_dpowers| (0+32768))
  3510  0749  3D61               	addwfc	??_sprintf+1,w
  3511  074A  0085               	movwf	5
  3512  074B  3F00               	moviw [0]fsr0
  3513  074C  00F0               	movwf	___llmod@divisor
  3514  074D  3F01               	moviw [1]fsr0
  3515  074E  00F1               	movwf	___llmod@divisor+1
  3516  074F  3F02               	moviw [2]fsr0
  3517  0750  00F2               	movwf	___llmod@divisor+2
  3518  0751  3F03               	moviw [3]fsr0
  3519  0752  00F3               	movwf	___llmod@divisor+3
  3520  0753  0021               	movlb	1	; select bank1
  3521  0754  0829               	movf	(sprintf@val+3)^(0+128),w
  3522  0755  00F7               	movwf	___llmod@dividend+3
  3523  0756  0828               	movf	(sprintf@val+2)^(0+128),w
  3524  0757  00F6               	movwf	___llmod@dividend+2
  3525  0758  0827               	movf	(sprintf@val+1)^(0+128),w
  3526  0759  00F5               	movwf	___llmod@dividend+1
  3527  075A  0826               	movf	sprintf@val^(0+128),w
  3528  075B  00F4               	movwf	___llmod@dividend
  3529  075C  3197  27B6  3182   	fcall	___llmod
  3530  075F  0873               	movf	?___llmod+3,w
  3531  0760  0021               	movlb	1	; select bank1
  3532  0761  00A9               	movwf	(sprintf@val+3)^(0+128)
  3533  0762  0872               	movf	?___llmod+2,w
  3534  0763  00A8               	movwf	(sprintf@val+2)^(0+128)
  3535  0764  0871               	movf	?___llmod+1,w
  3536  0765  00A7               	movwf	(sprintf@val+1)^(0+128)
  3537  0766  0870               	movf	?___llmod,w
  3538  0767  00A6               	movwf	sprintf@val^(0+128)
  3539  0768                     l2755:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3542  0768  3001               	movlw	1
  3543  0769  02B6               	subwf	sprintf@c^(0+128),f
  3544  076A  0A36               	incf	sprintf@c^(0+128),w
  3545  076B  1D03               	btfss	3,2
  3546  076C  2F6E               	goto	u3751
  3547  076D  2F6F               	goto	u3750
  3548  076E                     u3751:
  3549  076E  2EE6               	goto	l2745
  3550  076F                     u3750:
  3551  076F  2F83               	goto	l2763
  3552  0770                     l2757:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3555  0770  3030               	movlw	48
  3556  0771  0020               	movlb	0	; select bank0
  3557  0772  00E0               	movwf	??_sprintf
  3558  0773  0021               	movlb	1	; select bank1
  3559  0774  0830               	movf	sprintf@sp^(0+128),w
  3560  0775  0086               	movwf	6
  3561  0776  0187               	clrf	7
  3562  0777  0020               	movlb	0	; select bank0
  3563  0778  0860               	movf	??_sprintf,w
  3564  0779  0081               	movwf	1
  3565  077A                     l2759:
  3566  077A  3001               	movlw	1
  3567  077B  00E0               	movwf	??_sprintf
  3568  077C  0860               	movf	??_sprintf,w
  3569  077D  0021               	movlb	1	; select bank1
  3570  077E  07B0               	addwf	sprintf@sp^(0+128),f
  3571  077F                     l2761:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3574  077F  30FF               	movlw	255
  3575  0780  07B1               	addwf	sprintf@prec^(0+128),f
  3576  0781  30FF               	movlw	255
  3577  0782  3DB2               	addwfc	(sprintf@prec+1)^(0+128),f
  3578  0783                     l2763:
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3581  0783  0831               	movf	sprintf@prec^(0+128),w
  3582  0784  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  3583  0785  1D03               	btfss	3,2
  3584  0786  2F88               	goto	u3761
  3585  0787  2F89               	goto	u3760
  3586  0788                     u3761:
  3587  0788  2F70               	goto	l2757
  3588  0789                     u3760:
  3589  0789  2FD3               	goto	l2783
  3590  078A                     l2765:
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3593  078A  0021               	movlb	1	; select bank1
  3594  078B  0831               	movf	sprintf@prec^(0+128),w
  3595  078C  0432               	iorwf	(sprintf@prec+1)^(0+128),w
  3596  078D  1D03               	btfss	3,2
  3597  078E  2F90               	goto	u3771
  3598  078F  2F91               	goto	u3770
  3599  0790                     u3771:
  3600  0790  2F9D               	goto	l319
  3601  0791                     u3770:
  3602  0791                     l2767:
  3603  0791  0829               	movf	(sprintf@val+3)^(0+128),w
  3604  0792  0428               	iorwf	(sprintf@val+2)^(0+128),w
  3605  0793  0427               	iorwf	(sprintf@val+1)^(0+128),w
  3606  0794  0426               	iorwf	sprintf@val^(0+128),w
  3607  0795  1D03               	skipz
  3608  0796  2F98               	goto	u3781
  3609  0797  2F99               	goto	u3780
  3610  0798                     u3781:
  3611  0798  2F9D               	goto	l319
  3612  0799                     u3780:
  3613  0799                     l2769:
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3616  0799  3001               	movlw	1
  3617  079A  07B1               	addwf	sprintf@prec^(0+128),f
  3618  079B  3000               	movlw	0
  3619  079C  3DB2               	addwfc	(sprintf@prec+1)^(0+128),f
  3620  079D                     l319:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3623  079D  0832               	movf	(sprintf@prec+1)^(0+128),w
  3624  079E  3A80               	xorlw	128
  3625  079F  3C80               	sublw	128
  3626  07A0  1D03               	skipz
  3627  07A1  2FA4               	goto	u3795
  3628  07A2  0831               	movf	sprintf@prec^(0+128),w
  3629  07A3  0236               	subwf	sprintf@c^(0+128),w
  3630  07A4                     u3795:
  3631  07A4  1803               	skipnc
  3632  07A5  2FA7               	goto	u3791
  3633  07A6  2FA8               	goto	u3790
  3634  07A7                     u3791:
  3635  07A7  2FA9               	goto	l2773
  3636  07A8                     u3790:
  3637  07A8                     l2771:
  3638  07A8  2FB9               	goto	l2777
  3639  07A9                     l2773:
  3640  07A9  0021               	movlb	1	; select bank1
  3641  07AA  0832               	movf	(sprintf@prec+1)^(0+128),w
  3642  07AB  3A80               	xorlw	128
  3643  07AC  0020               	movlb	0	; select bank0
  3644  07AD  00E0               	movwf	??_sprintf
  3645  07AE  3080               	movlw	128
  3646  07AF  0260               	subwf	??_sprintf,w
  3647  07B0  1D03               	skipz
  3648  07B1  2FB5               	goto	u3805
  3649  07B2  0021               	movlb	1	; select bank1
  3650  07B3  0836               	movf	sprintf@c^(0+128),w
  3651  07B4  0231               	subwf	sprintf@prec^(0+128),w
  3652  07B5                     u3805:
  3653  07B5  1803               	skipnc
  3654  07B6  2FB8               	goto	u3801
  3655  07B7  2FB9               	goto	u3800
  3656  07B8                     u3801:
  3657  07B8  2FB9               	goto	l2777
  3658  07B9                     u3800:
  3659  07B9                     l2775:
  3660  07B9                     l2777:
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3663  07B9  3003               	movlw	3
  3664  07BA  0021               	movlb	1	; select bank1
  3665  07BB  0524               	andwf	sprintf@flag^(0+128),w
  3666  07BC  0020               	movlb	0	; select bank0
  3667  07BD  00E0               	movwf	??_sprintf
  3668  07BE  3000               	movlw	0
  3669  07BF  0021               	movlb	1	; select bank1
  3670  07C0  0525               	andwf	(sprintf@flag+1)^(0+128),w
  3671  07C1  0020               	movlb	0	; select bank0
  3672  07C2  00E1               	movwf	??_sprintf+1
  3673  07C3  0860               	movf	??_sprintf,w
  3674  07C4  0461               	iorwf	??_sprintf+1,w
  3675  07C5  1903               	btfsc	3,2
  3676  07C6  2FC8               	goto	u3811
  3677  07C7  2FC9               	goto	u3810
  3678  07C8                     u3811:
  3679  07C8  2FD3               	goto	l2783
  3680  07C9                     u3810:
  3681  07C9                     l2779:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3684  07C9  302D               	movlw	45
  3685  07CA  00E0               	movwf	??_sprintf
  3686  07CB  0021               	movlb	1	; select bank1
  3687  07CC  0830               	movf	sprintf@sp^(0+128),w
  3688  07CD  0086               	movwf	6
  3689  07CE  0187               	clrf	7
  3690  07CF  0020               	movlb	0	; select bank0
  3691  07D0  0860               	movf	??_sprintf,w
  3692  07D1  0081               	movwf	1
  3693  07D2  2ADD               	goto	l2593
  3694  07D3                     l2783:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3697  07D3  0020               	movlb	0	; select bank0
  3698  07D4  085C               	movf	sprintf@f+1,w
  3699  07D5  00E1               	movwf	??_sprintf+1
  3700  07D6  085B               	movf	sprintf@f,w
  3701  07D7  00E0               	movwf	??_sprintf
  3702  07D8  0ADB               	incf	sprintf@f,f
  3703  07D9  1903               	skipnz
  3704  07DA  0ADC               	incf	sprintf@f+1,f
  3705  07DB  0860               	movf	??_sprintf,w
  3706  07DC  0084               	movwf	4
  3707  07DD  0861               	movf	??_sprintf+1,w
  3708  07DE  0085               	movwf	5
  3709  07DF  0800               	movf	0,w	;code access
  3710  07E0  00E2               	movwf	??_sprintf+2
  3711  07E1  0862               	movf	??_sprintf+2,w
  3712  07E2  0021               	movlb	1	; select bank1
  3713  07E3  00B6               	movwf	sprintf@c^(0+128)
  3714  07E4  0836               	movf	sprintf@c^(0+128),w
  3715  07E5  1D03               	btfss	3,2
  3716  07E6  2FE8               	goto	u3821
  3717  07E7  2FE9               	goto	u3820
  3718  07E8                     u3821:
  3719  07E8  2ACD               	goto	l2589
  3720  07E9                     u3820:
  3721  07E9                     l2785:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3724  07E9  0021               	movlb	1	; select bank1
  3725  07EA  0830               	movf	sprintf@sp^(0+128),w
  3726  07EB  0086               	movwf	6
  3727  07EC  0187               	clrf	7
  3728  07ED  0181               	clrf	1
  3729  07EE                     l325:
  3730  07EE  0008               	return
  3731  07EF                     __end_of_sprintf:
  3732                           
  3733                           	psect	text2
  3734  0058                     __ptext2:	
  3735 ;; *************** function _scale *****************
  3736 ;; Defined at:
  3737 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  scl             1    wreg     char 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  scl             1   36[BANK0 ] char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  3   26[BANK0 ] char 
  3744 ;; Registers used:
  3745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3751 ;;      Params:         0       3       0       0       0       0       0       0
  3752 ;;      Locals:         0       4       0       0       0       0       0       0
  3753 ;;      Temps:          0       4       0       0       0       0       0       0
  3754 ;;      Totals:         0      11       0       0       0       0       0       0
  3755 ;;Total ram usage:       11 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; Hardware stack levels required when called: 2
  3758 ;; This function calls:
  3759 ;;		___awdiv
  3760 ;;		___awmod
  3761 ;;		___ftmul
  3762 ;;		___wmul
  3763 ;; This function is called by:
  3764 ;;		_sprintf
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768  0058                     _scale:	
  3769                           ;psect for function _scale
  3770                           
  3771                           
  3772                           ;incstack = 0
  3773                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3774                           ;scale@scl stored from wreg
  3775  0058  0020               	movlb	0	; select bank0
  3776  0059  00C4               	movwf	scale@scl
  3777  005A                     l2243:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3780  005A  1FC4               	btfss	scale@scl,7
  3781  005B  285D               	goto	u2851
  3782  005C  285E               	goto	u2850
  3783  005D                     u2851:
  3784  005D  2992               	goto	l2265
  3785  005E                     u2850:
  3786  005E                     l2245:
  3787                           
  3788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3789  005E  09C4               	comf	scale@scl,f
  3790  005F  0AC4               	incf	scale@scl,f
  3791  0060                     l2247:
  3792                           
  3793                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3794  0060  0844               	movf	scale@scl,w
  3795  0061  3A80               	xorlw	128
  3796  0062  3E12               	addlw	-238
  3797  0063  1C03               	skipc
  3798  0064  2866               	goto	u2861
  3799  0065  2867               	goto	u2860
  3800  0066                     u2861:
  3801  0066  290D               	goto	l2255
  3802  0067                     u2860:
  3803  0067                     l2249:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3806  0067  0844               	movf	scale@scl,w
  3807  0068  00F2               	movwf	___awmod@dividend
  3808  0069  01F3               	clrf	___awmod@dividend+1
  3809  006A  1BF2               	btfsc	___awmod@dividend,7
  3810  006B  03F3               	decf	___awmod@dividend+1,f
  3811  006C  3064               	movlw	100
  3812  006D  00F0               	movwf	___awmod@divisor
  3813  006E  3000               	movlw	0
  3814  006F  00F1               	movwf	___awmod@divisor+1
  3815  0070  3180  2005  3180   	fcall	___awmod
  3816  0073  0871               	movf	?___awmod+1,w
  3817  0074  00FA               	movwf	___awdiv@dividend+1
  3818  0075  0870               	movf	?___awmod,w
  3819  0076  00F9               	movwf	___awdiv@dividend
  3820  0077  300A               	movlw	10
  3821  0078  00F7               	movwf	___awdiv@divisor
  3822  0079  3000               	movlw	0
  3823  007A  00F8               	movwf	___awdiv@divisor+1
  3824  007B  3188  2073  3180   	fcall	___awdiv
  3825  007E  0877               	movf	?___awdiv,w
  3826  007F  3E09               	addlw	9
  3827  0080  0020               	movlb	0	; select bank0
  3828  0081  00BD               	movwf	??_scale
  3829  0082  01BE               	clrf	??_scale+1
  3830  0083  083D               	movf	??_scale,w
  3831  0084  00A4               	movwf	___wmul@multiplier
  3832  0085  083E               	movf	??_scale+1,w
  3833  0086  00A5               	movwf	___wmul@multiplier+1
  3834  0087  3003               	movlw	3
  3835  0088  00A6               	movwf	___wmul@multiplicand
  3836  0089  3000               	movlw	0
  3837  008A  00A7               	movwf	___wmul@multiplicand+1
  3838  008B  3196  2633  3180   	fcall	___wmul
  3839  008E  0020               	movlb	0	; select bank0
  3840  008F  0825               	movf	?___wmul+1,w
  3841  0090  0085               	movwf	5
  3842  0091  0824               	movf	?___wmul,w
  3843  0092  0084               	movwf	4
  3844  0093  305C               	movlw	low (__npowers_| (0+32768))
  3845  0094  0784               	addwf	4,f
  3846  0095  3098               	movlw	high (__npowers_| (0+32768))
  3847  0096  3D85               	addwfc	5,f
  3848  0097  3F00               	moviw [0]fsr0
  3849  0098  00AA               	movwf	___ftmul@f1
  3850  0099  3F01               	moviw [1]fsr0
  3851  009A  00AB               	movwf	___ftmul@f1+1
  3852  009B  3F02               	moviw [2]fsr0
  3853  009C  00AC               	movwf	___ftmul@f1+2
  3854  009D  0844               	movf	scale@scl,w
  3855  009E  00F9               	movwf	___awdiv@dividend
  3856  009F  01FA               	clrf	___awdiv@dividend+1
  3857  00A0  1BF9               	btfsc	___awdiv@dividend,7
  3858  00A1  03FA               	decf	___awdiv@dividend+1,f
  3859  00A2  3064               	movlw	100
  3860  00A3  00F7               	movwf	___awdiv@divisor
  3861  00A4  3000               	movlw	0
  3862  00A5  00F8               	movwf	___awdiv@divisor+1
  3863  00A6  3188  2073  3180   	fcall	___awdiv
  3864  00A9  0877               	movf	?___awdiv,w
  3865  00AA  3E12               	addlw	18
  3866  00AB  0020               	movlb	0	; select bank0
  3867  00AC  00BF               	movwf	??_scale+2
  3868  00AD  01C0               	clrf	??_scale+3
  3869  00AE  083F               	movf	??_scale+2,w
  3870  00AF  00A4               	movwf	___wmul@multiplier
  3871  00B0  0840               	movf	??_scale+3,w
  3872  00B1  00A5               	movwf	___wmul@multiplier+1
  3873  00B2  3003               	movlw	3
  3874  00B3  00A6               	movwf	___wmul@multiplicand
  3875  00B4  3000               	movlw	0
  3876  00B5  00A7               	movwf	___wmul@multiplicand+1
  3877  00B6  3196  2633  3180   	fcall	___wmul
  3878  00B9  0020               	movlb	0	; select bank0
  3879  00BA  0825               	movf	?___wmul+1,w
  3880  00BB  0085               	movwf	5
  3881  00BC  0824               	movf	?___wmul,w
  3882  00BD  0084               	movwf	4
  3883  00BE  305C               	movlw	low (__npowers_| (0+32768))
  3884  00BF  0784               	addwf	4,f
  3885  00C0  3098               	movlw	high (__npowers_| (0+32768))
  3886  00C1  3D85               	addwfc	5,f
  3887  00C2  3F00               	moviw [0]fsr0
  3888  00C3  00AD               	movwf	___ftmul@f2
  3889  00C4  3F01               	moviw [1]fsr0
  3890  00C5  00AE               	movwf	___ftmul@f2+1
  3891  00C6  3F02               	moviw [2]fsr0
  3892  00C7  00AF               	movwf	___ftmul@f2+2
  3893  00C8  318B  23A2  3180   	fcall	___ftmul
  3894  00CB  0020               	movlb	0	; select bank0
  3895  00CC  082A               	movf	?___ftmul,w
  3896  00CD  00C1               	movwf	_scale$736
  3897  00CE  082B               	movf	?___ftmul+1,w
  3898  00CF  00C2               	movwf	_scale$736+1
  3899  00D0  082C               	movf	?___ftmul+2,w
  3900  00D1  00C3               	movwf	_scale$736+2
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3903  00D2  0844               	movf	scale@scl,w
  3904  00D3  00F2               	movwf	___awmod@dividend
  3905  00D4  01F3               	clrf	___awmod@dividend+1
  3906  00D5  1BF2               	btfsc	___awmod@dividend,7
  3907  00D6  03F3               	decf	___awmod@dividend+1,f
  3908  00D7  300A               	movlw	10
  3909  00D8  00F0               	movwf	___awmod@divisor
  3910  00D9  3000               	movlw	0
  3911  00DA  00F1               	movwf	___awmod@divisor+1
  3912  00DB  3180  2005  3180   	fcall	___awmod
  3913  00DE  0870               	movf	?___awmod,w
  3914  00DF  0020               	movlb	0	; select bank0
  3915  00E0  00BD               	movwf	??_scale
  3916  00E1  01BE               	clrf	??_scale+1
  3917  00E2  083D               	movf	??_scale,w
  3918  00E3  00A4               	movwf	___wmul@multiplier
  3919  00E4  083E               	movf	??_scale+1,w
  3920  00E5  00A5               	movwf	___wmul@multiplier+1
  3921  00E6  3003               	movlw	3
  3922  00E7  00A6               	movwf	___wmul@multiplicand
  3923  00E8  3000               	movlw	0
  3924  00E9  00A7               	movwf	___wmul@multiplicand+1
  3925  00EA  3196  2633  3180   	fcall	___wmul
  3926  00ED  0020               	movlb	0	; select bank0
  3927  00EE  0825               	movf	?___wmul+1,w
  3928  00EF  0085               	movwf	5
  3929  00F0  0824               	movf	?___wmul,w
  3930  00F1  0084               	movwf	4
  3931  00F2  305C               	movlw	low (__npowers_| (0+32768))
  3932  00F3  0784               	addwf	4,f
  3933  00F4  3098               	movlw	high (__npowers_| (0+32768))
  3934  00F5  3D85               	addwfc	5,f
  3935  00F6  3F00               	moviw [0]fsr0
  3936  00F7  00AA               	movwf	___ftmul@f1
  3937  00F8  3F01               	moviw [1]fsr0
  3938  00F9  00AB               	movwf	___ftmul@f1+1
  3939  00FA  3F02               	moviw [2]fsr0
  3940  00FB  00AC               	movwf	___ftmul@f1+2
  3941  00FC  0841               	movf	_scale$736,w
  3942  00FD  00AD               	movwf	___ftmul@f2
  3943  00FE  0842               	movf	_scale$736+1,w
  3944  00FF  00AE               	movwf	___ftmul@f2+1
  3945  0100  0843               	movf	_scale$736+2,w
  3946  0101  00AF               	movwf	___ftmul@f2+2
  3947  0102  318B  23A2  3180   	fcall	___ftmul
  3948  0105  0020               	movlb	0	; select bank0
  3949  0106  082A               	movf	?___ftmul,w
  3950  0107  00BA               	movwf	?_scale
  3951  0108  082B               	movf	?___ftmul+1,w
  3952  0109  00BB               	movwf	?_scale+1
  3953  010A  082C               	movf	?___ftmul+2,w
  3954  010B  00BC               	movwf	?_scale+2
  3955  010C  2AC3               	goto	l259
  3956  010D                     l2255:
  3957  010D  0844               	movf	scale@scl,w
  3958  010E  3A80               	xorlw	128
  3959  010F  3E75               	addlw	-139
  3960  0110  1C03               	skipc
  3961  0111  2913               	goto	u2871
  3962  0112  2914               	goto	u2870
  3963  0113                     u2871:
  3964  0113  2974               	goto	l2261
  3965  0114                     u2870:
  3966  0114                     l2257:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3969  0114  0844               	movf	scale@scl,w
  3970  0115  00F2               	movwf	___awmod@dividend
  3971  0116  01F3               	clrf	___awmod@dividend+1
  3972  0117  1BF2               	btfsc	___awmod@dividend,7
  3973  0118  03F3               	decf	___awmod@dividend+1,f
  3974  0119  300A               	movlw	10
  3975  011A  00F0               	movwf	___awmod@divisor
  3976  011B  3000               	movlw	0
  3977  011C  00F1               	movwf	___awmod@divisor+1
  3978  011D  3180  2005  3180   	fcall	___awmod
  3979  0120  0870               	movf	?___awmod,w
  3980  0121  0020               	movlb	0	; select bank0
  3981  0122  00BD               	movwf	??_scale
  3982  0123  01BE               	clrf	??_scale+1
  3983  0124  083D               	movf	??_scale,w
  3984  0125  00A4               	movwf	___wmul@multiplier
  3985  0126  083E               	movf	??_scale+1,w
  3986  0127  00A5               	movwf	___wmul@multiplier+1
  3987  0128  3003               	movlw	3
  3988  0129  00A6               	movwf	___wmul@multiplicand
  3989  012A  3000               	movlw	0
  3990  012B  00A7               	movwf	___wmul@multiplicand+1
  3991  012C  3196  2633  3180   	fcall	___wmul
  3992  012F  0020               	movlb	0	; select bank0
  3993  0130  0825               	movf	?___wmul+1,w
  3994  0131  0085               	movwf	5
  3995  0132  0824               	movf	?___wmul,w
  3996  0133  0084               	movwf	4
  3997  0134  305C               	movlw	low (__npowers_| (0+32768))
  3998  0135  0784               	addwf	4,f
  3999  0136  3098               	movlw	high (__npowers_| (0+32768))
  4000  0137  3D85               	addwfc	5,f
  4001  0138  3F00               	moviw [0]fsr0
  4002  0139  00AA               	movwf	___ftmul@f1
  4003  013A  3F01               	moviw [1]fsr0
  4004  013B  00AB               	movwf	___ftmul@f1+1
  4005  013C  3F02               	moviw [2]fsr0
  4006  013D  00AC               	movwf	___ftmul@f1+2
  4007  013E  0844               	movf	scale@scl,w
  4008  013F  00F9               	movwf	___awdiv@dividend
  4009  0140  01FA               	clrf	___awdiv@dividend+1
  4010  0141  1BF9               	btfsc	___awdiv@dividend,7
  4011  0142  03FA               	decf	___awdiv@dividend+1,f
  4012  0143  300A               	movlw	10
  4013  0144  00F7               	movwf	___awdiv@divisor
  4014  0145  3000               	movlw	0
  4015  0146  00F8               	movwf	___awdiv@divisor+1
  4016  0147  3188  2073  3180   	fcall	___awdiv
  4017  014A  0877               	movf	?___awdiv,w
  4018  014B  3E09               	addlw	9
  4019  014C  0020               	movlb	0	; select bank0
  4020  014D  00BF               	movwf	??_scale+2
  4021  014E  01C0               	clrf	??_scale+3
  4022  014F  083F               	movf	??_scale+2,w
  4023  0150  00A4               	movwf	___wmul@multiplier
  4024  0151  0840               	movf	??_scale+3,w
  4025  0152  00A5               	movwf	___wmul@multiplier+1
  4026  0153  3003               	movlw	3
  4027  0154  00A6               	movwf	___wmul@multiplicand
  4028  0155  3000               	movlw	0
  4029  0156  00A7               	movwf	___wmul@multiplicand+1
  4030  0157  3196  2633  3180   	fcall	___wmul
  4031  015A  0020               	movlb	0	; select bank0
  4032  015B  0825               	movf	?___wmul+1,w
  4033  015C  0085               	movwf	5
  4034  015D  0824               	movf	?___wmul,w
  4035  015E  0084               	movwf	4
  4036  015F  305C               	movlw	low (__npowers_| (0+32768))
  4037  0160  0784               	addwf	4,f
  4038  0161  3098               	movlw	high (__npowers_| (0+32768))
  4039  0162  3D85               	addwfc	5,f
  4040  0163  3F00               	moviw [0]fsr0
  4041  0164  00AD               	movwf	___ftmul@f2
  4042  0165  3F01               	moviw [1]fsr0
  4043  0166  00AE               	movwf	___ftmul@f2+1
  4044  0167  3F02               	moviw [2]fsr0
  4045  0168  00AF               	movwf	___ftmul@f2+2
  4046  0169  318B  23A2  3180   	fcall	___ftmul
  4047  016C  0020               	movlb	0	; select bank0
  4048  016D  082A               	movf	?___ftmul,w
  4049  016E  00BA               	movwf	?_scale
  4050  016F  082B               	movf	?___ftmul+1,w
  4051  0170  00BB               	movwf	?_scale+1
  4052  0171  082C               	movf	?___ftmul+2,w
  4053  0172  00BC               	movwf	?_scale+2
  4054  0173  2AC3               	goto	l259
  4055  0174                     l2261:
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4058  0174  0844               	movf	scale@scl,w
  4059  0175  00BD               	movwf	??_scale
  4060  0176  01BE               	clrf	??_scale+1
  4061  0177  083D               	movf	??_scale,w
  4062  0178  00A4               	movwf	___wmul@multiplier
  4063  0179  083E               	movf	??_scale+1,w
  4064  017A  00A5               	movwf	___wmul@multiplier+1
  4065  017B  3003               	movlw	3
  4066  017C  00A6               	movwf	___wmul@multiplicand
  4067  017D  3000               	movlw	0
  4068  017E  00A7               	movwf	___wmul@multiplicand+1
  4069  017F  3196  2633  3180   	fcall	___wmul
  4070  0182  0020               	movlb	0	; select bank0
  4071  0183  0825               	movf	?___wmul+1,w
  4072  0184  0085               	movwf	5
  4073  0185  0824               	movf	?___wmul,w
  4074  0186  0084               	movwf	4
  4075  0187  305C               	movlw	low (__npowers_| (0+32768))
  4076  0188  0784               	addwf	4,f
  4077  0189  3098               	movlw	high (__npowers_| (0+32768))
  4078  018A  3D85               	addwfc	5,f
  4079  018B  3F00               	moviw [0]fsr0
  4080  018C  00BA               	movwf	?_scale
  4081  018D  3F01               	moviw [1]fsr0
  4082  018E  00BB               	movwf	?_scale+1
  4083  018F  3F02               	moviw [2]fsr0
  4084  0190  00BC               	movwf	?_scale+2
  4085  0191  2AC3               	goto	l259
  4086  0192                     l2265:
  4087                           
  4088                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4089  0192  0844               	movf	scale@scl,w
  4090  0193  3A80               	xorlw	128
  4091  0194  3E12               	addlw	-238
  4092  0195  1C03               	skipc
  4093  0196  2998               	goto	u2881
  4094  0197  2999               	goto	u2880
  4095  0198                     u2881:
  4096  0198  2A3F               	goto	l2273
  4097  0199                     u2880:
  4098  0199                     l2267:
  4099                           
  4100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4101  0199  0844               	movf	scale@scl,w
  4102  019A  00F2               	movwf	___awmod@dividend
  4103  019B  01F3               	clrf	___awmod@dividend+1
  4104  019C  1BF2               	btfsc	___awmod@dividend,7
  4105  019D  03F3               	decf	___awmod@dividend+1,f
  4106  019E  3064               	movlw	100
  4107  019F  00F0               	movwf	___awmod@divisor
  4108  01A0  3000               	movlw	0
  4109  01A1  00F1               	movwf	___awmod@divisor+1
  4110  01A2  3180  2005  3180   	fcall	___awmod
  4111  01A5  0871               	movf	?___awmod+1,w
  4112  01A6  00FA               	movwf	___awdiv@dividend+1
  4113  01A7  0870               	movf	?___awmod,w
  4114  01A8  00F9               	movwf	___awdiv@dividend
  4115  01A9  300A               	movlw	10
  4116  01AA  00F7               	movwf	___awdiv@divisor
  4117  01AB  3000               	movlw	0
  4118  01AC  00F8               	movwf	___awdiv@divisor+1
  4119  01AD  3188  2073  3180   	fcall	___awdiv
  4120  01B0  0877               	movf	?___awdiv,w
  4121  01B1  3E09               	addlw	9
  4122  01B2  0020               	movlb	0	; select bank0
  4123  01B3  00BD               	movwf	??_scale
  4124  01B4  01BE               	clrf	??_scale+1
  4125  01B5  083D               	movf	??_scale,w
  4126  01B6  00A4               	movwf	___wmul@multiplier
  4127  01B7  083E               	movf	??_scale+1,w
  4128  01B8  00A5               	movwf	___wmul@multiplier+1
  4129  01B9  3003               	movlw	3
  4130  01BA  00A6               	movwf	___wmul@multiplicand
  4131  01BB  3000               	movlw	0
  4132  01BC  00A7               	movwf	___wmul@multiplicand+1
  4133  01BD  3196  2633  3180   	fcall	___wmul
  4134  01C0  0020               	movlb	0	; select bank0
  4135  01C1  0825               	movf	?___wmul+1,w
  4136  01C2  0085               	movwf	5
  4137  01C3  0824               	movf	?___wmul,w
  4138  01C4  0084               	movwf	4
  4139  01C5  3035               	movlw	low (__powers_| (0+32768))
  4140  01C6  0784               	addwf	4,f
  4141  01C7  3098               	movlw	high (__powers_| (0+32768))
  4142  01C8  3D85               	addwfc	5,f
  4143  01C9  3F00               	moviw [0]fsr0
  4144  01CA  00AA               	movwf	___ftmul@f1
  4145  01CB  3F01               	moviw [1]fsr0
  4146  01CC  00AB               	movwf	___ftmul@f1+1
  4147  01CD  3F02               	moviw [2]fsr0
  4148  01CE  00AC               	movwf	___ftmul@f1+2
  4149  01CF  0844               	movf	scale@scl,w
  4150  01D0  00F9               	movwf	___awdiv@dividend
  4151  01D1  01FA               	clrf	___awdiv@dividend+1
  4152  01D2  1BF9               	btfsc	___awdiv@dividend,7
  4153  01D3  03FA               	decf	___awdiv@dividend+1,f
  4154  01D4  3064               	movlw	100
  4155  01D5  00F7               	movwf	___awdiv@divisor
  4156  01D6  3000               	movlw	0
  4157  01D7  00F8               	movwf	___awdiv@divisor+1
  4158  01D8  3188  2073  3180   	fcall	___awdiv
  4159  01DB  0877               	movf	?___awdiv,w
  4160  01DC  3E12               	addlw	18
  4161  01DD  0020               	movlb	0	; select bank0
  4162  01DE  00BF               	movwf	??_scale+2
  4163  01DF  01C0               	clrf	??_scale+3
  4164  01E0  083F               	movf	??_scale+2,w
  4165  01E1  00A4               	movwf	___wmul@multiplier
  4166  01E2  0840               	movf	??_scale+3,w
  4167  01E3  00A5               	movwf	___wmul@multiplier+1
  4168  01E4  3003               	movlw	3
  4169  01E5  00A6               	movwf	___wmul@multiplicand
  4170  01E6  3000               	movlw	0
  4171  01E7  00A7               	movwf	___wmul@multiplicand+1
  4172  01E8  3196  2633  3180   	fcall	___wmul
  4173  01EB  0020               	movlb	0	; select bank0
  4174  01EC  0825               	movf	?___wmul+1,w
  4175  01ED  0085               	movwf	5
  4176  01EE  0824               	movf	?___wmul,w
  4177  01EF  0084               	movwf	4
  4178  01F0  3035               	movlw	low (__powers_| (0+32768))
  4179  01F1  0784               	addwf	4,f
  4180  01F2  3098               	movlw	high (__powers_| (0+32768))
  4181  01F3  3D85               	addwfc	5,f
  4182  01F4  3F00               	moviw [0]fsr0
  4183  01F5  00AD               	movwf	___ftmul@f2
  4184  01F6  3F01               	moviw [1]fsr0
  4185  01F7  00AE               	movwf	___ftmul@f2+1
  4186  01F8  3F02               	moviw [2]fsr0
  4187  01F9  00AF               	movwf	___ftmul@f2+2
  4188  01FA  318B  23A2  3180   	fcall	___ftmul
  4189  01FD  0020               	movlb	0	; select bank0
  4190  01FE  082A               	movf	?___ftmul,w
  4191  01FF  00C1               	movwf	_scale$736
  4192  0200  082B               	movf	?___ftmul+1,w
  4193  0201  00C2               	movwf	_scale$736+1
  4194  0202  082C               	movf	?___ftmul+2,w
  4195  0203  00C3               	movwf	_scale$736+2
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4198  0204  0844               	movf	scale@scl,w
  4199  0205  00F2               	movwf	___awmod@dividend
  4200  0206  01F3               	clrf	___awmod@dividend+1
  4201  0207  1BF2               	btfsc	___awmod@dividend,7
  4202  0208  03F3               	decf	___awmod@dividend+1,f
  4203  0209  300A               	movlw	10
  4204  020A  00F0               	movwf	___awmod@divisor
  4205  020B  3000               	movlw	0
  4206  020C  00F1               	movwf	___awmod@divisor+1
  4207  020D  3180  2005  3180   	fcall	___awmod
  4208  0210  0870               	movf	?___awmod,w
  4209  0211  0020               	movlb	0	; select bank0
  4210  0212  00BD               	movwf	??_scale
  4211  0213  01BE               	clrf	??_scale+1
  4212  0214  083D               	movf	??_scale,w
  4213  0215  00A4               	movwf	___wmul@multiplier
  4214  0216  083E               	movf	??_scale+1,w
  4215  0217  00A5               	movwf	___wmul@multiplier+1
  4216  0218  3003               	movlw	3
  4217  0219  00A6               	movwf	___wmul@multiplicand
  4218  021A  3000               	movlw	0
  4219  021B  00A7               	movwf	___wmul@multiplicand+1
  4220  021C  3196  2633  3180   	fcall	___wmul
  4221  021F  0020               	movlb	0	; select bank0
  4222  0220  0825               	movf	?___wmul+1,w
  4223  0221  0085               	movwf	5
  4224  0222  0824               	movf	?___wmul,w
  4225  0223  0084               	movwf	4
  4226  0224  3035               	movlw	low (__powers_| (0+32768))
  4227  0225  0784               	addwf	4,f
  4228  0226  3098               	movlw	high (__powers_| (0+32768))
  4229  0227  3D85               	addwfc	5,f
  4230  0228  3F00               	moviw [0]fsr0
  4231  0229  00AA               	movwf	___ftmul@f1
  4232  022A  3F01               	moviw [1]fsr0
  4233  022B  00AB               	movwf	___ftmul@f1+1
  4234  022C  3F02               	moviw [2]fsr0
  4235  022D  00AC               	movwf	___ftmul@f1+2
  4236  022E  0841               	movf	_scale$736,w
  4237  022F  00AD               	movwf	___ftmul@f2
  4238  0230  0842               	movf	_scale$736+1,w
  4239  0231  00AE               	movwf	___ftmul@f2+1
  4240  0232  0843               	movf	_scale$736+2,w
  4241  0233  00AF               	movwf	___ftmul@f2+2
  4242  0234  318B  23A2  3180   	fcall	___ftmul
  4243  0237  0020               	movlb	0	; select bank0
  4244  0238  082A               	movf	?___ftmul,w
  4245  0239  00BA               	movwf	?_scale
  4246  023A  082B               	movf	?___ftmul+1,w
  4247  023B  00BB               	movwf	?_scale+1
  4248  023C  082C               	movf	?___ftmul+2,w
  4249  023D  00BC               	movwf	?_scale+2
  4250  023E  2AC3               	goto	l259
  4251  023F                     l2273:
  4252  023F  0844               	movf	scale@scl,w
  4253  0240  3A80               	xorlw	128
  4254  0241  3E75               	addlw	-139
  4255  0242  1C03               	skipc
  4256  0243  2A45               	goto	u2891
  4257  0244  2A46               	goto	u2890
  4258  0245                     u2891:
  4259  0245  2AA6               	goto	l2279
  4260  0246                     u2890:
  4261  0246                     l2275:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4264  0246  0844               	movf	scale@scl,w
  4265  0247  00F2               	movwf	___awmod@dividend
  4266  0248  01F3               	clrf	___awmod@dividend+1
  4267  0249  1BF2               	btfsc	___awmod@dividend,7
  4268  024A  03F3               	decf	___awmod@dividend+1,f
  4269  024B  300A               	movlw	10
  4270  024C  00F0               	movwf	___awmod@divisor
  4271  024D  3000               	movlw	0
  4272  024E  00F1               	movwf	___awmod@divisor+1
  4273  024F  3180  2005  3180   	fcall	___awmod
  4274  0252  0870               	movf	?___awmod,w
  4275  0253  0020               	movlb	0	; select bank0
  4276  0254  00BD               	movwf	??_scale
  4277  0255  01BE               	clrf	??_scale+1
  4278  0256  083D               	movf	??_scale,w
  4279  0257  00A4               	movwf	___wmul@multiplier
  4280  0258  083E               	movf	??_scale+1,w
  4281  0259  00A5               	movwf	___wmul@multiplier+1
  4282  025A  3003               	movlw	3
  4283  025B  00A6               	movwf	___wmul@multiplicand
  4284  025C  3000               	movlw	0
  4285  025D  00A7               	movwf	___wmul@multiplicand+1
  4286  025E  3196  2633  3180   	fcall	___wmul
  4287  0261  0020               	movlb	0	; select bank0
  4288  0262  0825               	movf	?___wmul+1,w
  4289  0263  0085               	movwf	5
  4290  0264  0824               	movf	?___wmul,w
  4291  0265  0084               	movwf	4
  4292  0266  3035               	movlw	low (__powers_| (0+32768))
  4293  0267  0784               	addwf	4,f
  4294  0268  3098               	movlw	high (__powers_| (0+32768))
  4295  0269  3D85               	addwfc	5,f
  4296  026A  3F00               	moviw [0]fsr0
  4297  026B  00AA               	movwf	___ftmul@f1
  4298  026C  3F01               	moviw [1]fsr0
  4299  026D  00AB               	movwf	___ftmul@f1+1
  4300  026E  3F02               	moviw [2]fsr0
  4301  026F  00AC               	movwf	___ftmul@f1+2
  4302  0270  0844               	movf	scale@scl,w
  4303  0271  00F9               	movwf	___awdiv@dividend
  4304  0272  01FA               	clrf	___awdiv@dividend+1
  4305  0273  1BF9               	btfsc	___awdiv@dividend,7
  4306  0274  03FA               	decf	___awdiv@dividend+1,f
  4307  0275  300A               	movlw	10
  4308  0276  00F7               	movwf	___awdiv@divisor
  4309  0277  3000               	movlw	0
  4310  0278  00F8               	movwf	___awdiv@divisor+1
  4311  0279  3188  2073  3180   	fcall	___awdiv
  4312  027C  0877               	movf	?___awdiv,w
  4313  027D  3E09               	addlw	9
  4314  027E  0020               	movlb	0	; select bank0
  4315  027F  00BF               	movwf	??_scale+2
  4316  0280  01C0               	clrf	??_scale+3
  4317  0281  083F               	movf	??_scale+2,w
  4318  0282  00A4               	movwf	___wmul@multiplier
  4319  0283  0840               	movf	??_scale+3,w
  4320  0284  00A5               	movwf	___wmul@multiplier+1
  4321  0285  3003               	movlw	3
  4322  0286  00A6               	movwf	___wmul@multiplicand
  4323  0287  3000               	movlw	0
  4324  0288  00A7               	movwf	___wmul@multiplicand+1
  4325  0289  3196  2633  3180   	fcall	___wmul
  4326  028C  0020               	movlb	0	; select bank0
  4327  028D  0825               	movf	?___wmul+1,w
  4328  028E  0085               	movwf	5
  4329  028F  0824               	movf	?___wmul,w
  4330  0290  0084               	movwf	4
  4331  0291  3035               	movlw	low (__powers_| (0+32768))
  4332  0292  0784               	addwf	4,f
  4333  0293  3098               	movlw	high (__powers_| (0+32768))
  4334  0294  3D85               	addwfc	5,f
  4335  0295  3F00               	moviw [0]fsr0
  4336  0296  00AD               	movwf	___ftmul@f2
  4337  0297  3F01               	moviw [1]fsr0
  4338  0298  00AE               	movwf	___ftmul@f2+1
  4339  0299  3F02               	moviw [2]fsr0
  4340  029A  00AF               	movwf	___ftmul@f2+2
  4341  029B  318B  23A2  3180   	fcall	___ftmul
  4342  029E  0020               	movlb	0	; select bank0
  4343  029F  082A               	movf	?___ftmul,w
  4344  02A0  00BA               	movwf	?_scale
  4345  02A1  082B               	movf	?___ftmul+1,w
  4346  02A2  00BB               	movwf	?_scale+1
  4347  02A3  082C               	movf	?___ftmul+2,w
  4348  02A4  00BC               	movwf	?_scale+2
  4349  02A5  2AC3               	goto	l259
  4350  02A6                     l2279:
  4351                           
  4352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4353  02A6  0844               	movf	scale@scl,w
  4354  02A7  00BD               	movwf	??_scale
  4355  02A8  01BE               	clrf	??_scale+1
  4356  02A9  083D               	movf	??_scale,w
  4357  02AA  00A4               	movwf	___wmul@multiplier
  4358  02AB  083E               	movf	??_scale+1,w
  4359  02AC  00A5               	movwf	___wmul@multiplier+1
  4360  02AD  3003               	movlw	3
  4361  02AE  00A6               	movwf	___wmul@multiplicand
  4362  02AF  3000               	movlw	0
  4363  02B0  00A7               	movwf	___wmul@multiplicand+1
  4364  02B1  3196  2633  3180   	fcall	___wmul
  4365  02B4  0020               	movlb	0	; select bank0
  4366  02B5  0825               	movf	?___wmul+1,w
  4367  02B6  0085               	movwf	5
  4368  02B7  0824               	movf	?___wmul,w
  4369  02B8  0084               	movwf	4
  4370  02B9  3035               	movlw	low (__powers_| (0+32768))
  4371  02BA  0784               	addwf	4,f
  4372  02BB  3098               	movlw	high (__powers_| (0+32768))
  4373  02BC  3D85               	addwfc	5,f
  4374  02BD  3F00               	moviw [0]fsr0
  4375  02BE  00BA               	movwf	?_scale
  4376  02BF  3F01               	moviw [1]fsr0
  4377  02C0  00BB               	movwf	?_scale+1
  4378  02C1  3F02               	moviw [2]fsr0
  4379  02C2  00BC               	movwf	?_scale+2
  4380  02C3                     l259:
  4381  02C3  0008               	return
  4382  02C4                     __end_of_scale:
  4383                           
  4384                           	psect	text3
  4385  0005                     __ptext3:	
  4386 ;; *************** function ___awmod *****************
  4387 ;; Defined at:
  4388 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  divisor         2    0[COMMON] int 
  4391 ;;  dividend        2    2[COMMON] int 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  sign            1    6[COMMON] unsigned char 
  4394 ;;  counter         1    5[COMMON] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  2    0[COMMON] int 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4404 ;;      Params:         4       0       0       0       0       0       0       0
  4405 ;;      Locals:         2       0       0       0       0       0       0       0
  4406 ;;      Temps:          1       0       0       0       0       0       0       0
  4407 ;;      Totals:         7       0       0       0       0       0       0       0
  4408 ;;Total ram usage:        7 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_scale
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417  0005                     ___awmod:	
  4418                           ;psect for function ___awmod
  4419                           
  4420  0005                     l1969:	
  4421                           ;incstack = 0
  4422                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4423                           
  4424  0005  01F6               	clrf	___awmod@sign
  4425  0006                     l1971:
  4426  0006  1FF3               	btfss	___awmod@dividend+1,7
  4427  0007  2809               	goto	u2241
  4428  0008  280A               	goto	u2240
  4429  0009                     u2241:
  4430  0009  2811               	goto	l1977
  4431  000A                     u2240:
  4432  000A                     l1973:
  4433  000A  09F2               	comf	___awmod@dividend,f
  4434  000B  09F3               	comf	___awmod@dividend+1,f
  4435  000C  0AF2               	incf	___awmod@dividend,f
  4436  000D  1903               	skipnz
  4437  000E  0AF3               	incf	___awmod@dividend+1,f
  4438  000F                     l1975:
  4439  000F  01F6               	clrf	___awmod@sign
  4440  0010  0AF6               	incf	___awmod@sign,f
  4441  0011                     l1977:
  4442  0011  1FF1               	btfss	___awmod@divisor+1,7
  4443  0012  2814               	goto	u2251
  4444  0013  2815               	goto	u2250
  4445  0014                     u2251:
  4446  0014  281A               	goto	l1981
  4447  0015                     u2250:
  4448  0015                     l1979:
  4449  0015  09F0               	comf	___awmod@divisor,f
  4450  0016  09F1               	comf	___awmod@divisor+1,f
  4451  0017  0AF0               	incf	___awmod@divisor,f
  4452  0018  1903               	skipnz
  4453  0019  0AF1               	incf	___awmod@divisor+1,f
  4454  001A                     l1981:
  4455  001A  0870               	movf	___awmod@divisor,w
  4456  001B  0471               	iorwf	___awmod@divisor+1,w
  4457  001C  1903               	btfsc	3,2
  4458  001D  281F               	goto	u2261
  4459  001E  2820               	goto	u2260
  4460  001F                     u2261:
  4461  001F  2849               	goto	l1999
  4462  0020                     u2260:
  4463  0020                     l1983:
  4464  0020  01F5               	clrf	___awmod@counter
  4465  0021  0AF5               	incf	___awmod@counter,f
  4466  0022  282C               	goto	l1989
  4467  0023                     l1985:
  4468  0023  3001               	movlw	1
  4469  0024                     u2275:
  4470  0024  35F0               	lslf	___awmod@divisor,f
  4471  0025  0DF1               	rlf	___awmod@divisor+1,f
  4472  0026  0B89               	decfsz	9,f
  4473  0027  2824               	goto	u2275
  4474  0028                     l1987:
  4475  0028  3001               	movlw	1
  4476  0029  00F4               	movwf	??___awmod
  4477  002A  0874               	movf	??___awmod,w
  4478  002B  07F5               	addwf	___awmod@counter,f
  4479  002C                     l1989:
  4480  002C  1FF1               	btfss	___awmod@divisor+1,7
  4481  002D  282F               	goto	u2281
  4482  002E  2830               	goto	u2280
  4483  002F                     u2281:
  4484  002F  2823               	goto	l1985
  4485  0030                     u2280:
  4486  0030                     l1991:
  4487  0030  0871               	movf	___awmod@divisor+1,w
  4488  0031  0273               	subwf	___awmod@dividend+1,w
  4489  0032  1D03               	skipz
  4490  0033  2836               	goto	u2295
  4491  0034  0870               	movf	___awmod@divisor,w
  4492  0035  0272               	subwf	___awmod@dividend,w
  4493  0036                     u2295:
  4494  0036  1C03               	skipc
  4495  0037  2839               	goto	u2291
  4496  0038  283A               	goto	u2290
  4497  0039                     u2291:
  4498  0039  283E               	goto	l1995
  4499  003A                     u2290:
  4500  003A                     l1993:
  4501  003A  0870               	movf	___awmod@divisor,w
  4502  003B  02F2               	subwf	___awmod@dividend,f
  4503  003C  0871               	movf	___awmod@divisor+1,w
  4504  003D  3BF3               	subwfb	___awmod@dividend+1,f
  4505  003E                     l1995:
  4506  003E  3001               	movlw	1
  4507  003F                     u2305:
  4508  003F  36F1               	lsrf	___awmod@divisor+1,f
  4509  0040  0CF0               	rrf	___awmod@divisor,f
  4510  0041  0B89               	decfsz	9,f
  4511  0042  283F               	goto	u2305
  4512  0043                     l1997:
  4513  0043  3001               	movlw	1
  4514  0044  02F5               	subwf	___awmod@counter,f
  4515  0045  1D03               	btfss	3,2
  4516  0046  2848               	goto	u2311
  4517  0047  2849               	goto	u2310
  4518  0048                     u2311:
  4519  0048  2830               	goto	l1991
  4520  0049                     u2310:
  4521  0049                     l1999:
  4522  0049  0876               	movf	___awmod@sign,w
  4523  004A  1903               	btfsc	3,2
  4524  004B  284D               	goto	u2321
  4525  004C  284E               	goto	u2320
  4526  004D                     u2321:
  4527  004D  2853               	goto	l2003
  4528  004E                     u2320:
  4529  004E                     l2001:
  4530  004E  09F2               	comf	___awmod@dividend,f
  4531  004F  09F3               	comf	___awmod@dividend+1,f
  4532  0050  0AF2               	incf	___awmod@dividend,f
  4533  0051  1903               	skipnz
  4534  0052  0AF3               	incf	___awmod@dividend+1,f
  4535  0053                     l2003:
  4536  0053  0873               	movf	___awmod@dividend+1,w
  4537  0054  00F1               	movwf	?___awmod+1
  4538  0055  0872               	movf	___awmod@dividend,w
  4539  0056  00F0               	movwf	?___awmod
  4540  0057                     l525:
  4541  0057  0008               	return
  4542  0058                     __end_of___awmod:
  4543                           
  4544                           	psect	text4
  4545  0873                     __ptext4:	
  4546 ;; *************** function ___awdiv *****************
  4547 ;; Defined at:
  4548 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  divisor         2    7[COMMON] int 
  4551 ;;  dividend        2    9[COMMON] int 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  quotient        2    2[BANK0 ] int 
  4554 ;;  sign            1    1[BANK0 ] unsigned char 
  4555 ;;  counter         1    0[BANK0 ] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    7[COMMON] int 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4565 ;;      Params:         4       0       0       0       0       0       0       0
  4566 ;;      Locals:         0       4       0       0       0       0       0       0
  4567 ;;      Temps:          1       0       0       0       0       0       0       0
  4568 ;;      Totals:         5       4       0       0       0       0       0       0
  4569 ;;Total ram usage:        9 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_scale
  4575 ;;		_sprintf
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579  0873                     ___awdiv:	
  4580                           ;psect for function ___awdiv
  4581                           
  4582  0873                     l1925:	
  4583                           ;incstack = 0
  4584                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4585                           
  4586  0873  0020               	movlb	0	; select bank0
  4587  0874  01A1               	clrf	___awdiv@sign
  4588  0875                     l1927:
  4589  0875  1FF8               	btfss	___awdiv@divisor+1,7
  4590  0876  2878               	goto	u2141
  4591  0877  2879               	goto	u2140
  4592  0878                     u2141:
  4593  0878  2880               	goto	l1933
  4594  0879                     u2140:
  4595  0879                     l1929:
  4596  0879  09F7               	comf	___awdiv@divisor,f
  4597  087A  09F8               	comf	___awdiv@divisor+1,f
  4598  087B  0AF7               	incf	___awdiv@divisor,f
  4599  087C  1903               	skipnz
  4600  087D  0AF8               	incf	___awdiv@divisor+1,f
  4601  087E                     l1931:
  4602  087E  01A1               	clrf	___awdiv@sign
  4603  087F  0AA1               	incf	___awdiv@sign,f
  4604  0880                     l1933:
  4605  0880  1FFA               	btfss	___awdiv@dividend+1,7
  4606  0881  2883               	goto	u2151
  4607  0882  2884               	goto	u2150
  4608  0883                     u2151:
  4609  0883  288D               	goto	l1939
  4610  0884                     u2150:
  4611  0884                     l1935:
  4612  0884  09F9               	comf	___awdiv@dividend,f
  4613  0885  09FA               	comf	___awdiv@dividend+1,f
  4614  0886  0AF9               	incf	___awdiv@dividend,f
  4615  0887  1903               	skipnz
  4616  0888  0AFA               	incf	___awdiv@dividend+1,f
  4617  0889                     l1937:
  4618  0889  3001               	movlw	1
  4619  088A  00FB               	movwf	??___awdiv
  4620  088B  087B               	movf	??___awdiv,w
  4621  088C  06A1               	xorwf	___awdiv@sign,f
  4622  088D                     l1939:
  4623  088D  01A2               	clrf	___awdiv@quotient
  4624  088E  01A3               	clrf	___awdiv@quotient+1
  4625  088F                     l1941:
  4626  088F  0877               	movf	___awdiv@divisor,w
  4627  0890  0478               	iorwf	___awdiv@divisor+1,w
  4628  0891  1903               	btfsc	3,2
  4629  0892  2894               	goto	u2161
  4630  0893  2895               	goto	u2160
  4631  0894                     u2161:
  4632  0894  28C4               	goto	l1961
  4633  0895                     u2160:
  4634  0895                     l1943:
  4635  0895  01A0               	clrf	___awdiv@counter
  4636  0896  0AA0               	incf	___awdiv@counter,f
  4637  0897  28A1               	goto	l1949
  4638  0898                     l1945:
  4639  0898  3001               	movlw	1
  4640  0899                     u2175:
  4641  0899  35F7               	lslf	___awdiv@divisor,f
  4642  089A  0DF8               	rlf	___awdiv@divisor+1,f
  4643  089B  0B89               	decfsz	9,f
  4644  089C  2899               	goto	u2175
  4645  089D                     l1947:
  4646  089D  3001               	movlw	1
  4647  089E  00FB               	movwf	??___awdiv
  4648  089F  087B               	movf	??___awdiv,w
  4649  08A0  07A0               	addwf	___awdiv@counter,f
  4650  08A1                     l1949:
  4651  08A1  1FF8               	btfss	___awdiv@divisor+1,7
  4652  08A2  28A4               	goto	u2181
  4653  08A3  28A5               	goto	u2180
  4654  08A4                     u2181:
  4655  08A4  2898               	goto	l1945
  4656  08A5                     u2180:
  4657  08A5                     l1951:
  4658  08A5  3001               	movlw	1
  4659  08A6                     u2195:
  4660  08A6  35A2               	lslf	___awdiv@quotient,f
  4661  08A7  0DA3               	rlf	___awdiv@quotient+1,f
  4662  08A8  0B89               	decfsz	9,f
  4663  08A9  28A6               	goto	u2195
  4664  08AA  0878               	movf	___awdiv@divisor+1,w
  4665  08AB  027A               	subwf	___awdiv@dividend+1,w
  4666  08AC  1D03               	skipz
  4667  08AD  28B0               	goto	u2205
  4668  08AE  0877               	movf	___awdiv@divisor,w
  4669  08AF  0279               	subwf	___awdiv@dividend,w
  4670  08B0                     u2205:
  4671  08B0  1C03               	skipc
  4672  08B1  28B3               	goto	u2201
  4673  08B2  28B4               	goto	u2200
  4674  08B3                     u2201:
  4675  08B3  28B9               	goto	l1957
  4676  08B4                     u2200:
  4677  08B4                     l1953:
  4678  08B4  0877               	movf	___awdiv@divisor,w
  4679  08B5  02F9               	subwf	___awdiv@dividend,f
  4680  08B6  0878               	movf	___awdiv@divisor+1,w
  4681  08B7  3BFA               	subwfb	___awdiv@dividend+1,f
  4682  08B8                     l1955:
  4683  08B8  1422               	bsf	___awdiv@quotient,0
  4684  08B9                     l1957:
  4685  08B9  3001               	movlw	1
  4686  08BA                     u2215:
  4687  08BA  36F8               	lsrf	___awdiv@divisor+1,f
  4688  08BB  0CF7               	rrf	___awdiv@divisor,f
  4689  08BC  0B89               	decfsz	9,f
  4690  08BD  28BA               	goto	u2215
  4691  08BE                     l1959:
  4692  08BE  3001               	movlw	1
  4693  08BF  02A0               	subwf	___awdiv@counter,f
  4694  08C0  1D03               	btfss	3,2
  4695  08C1  28C3               	goto	u2221
  4696  08C2  28C4               	goto	u2220
  4697  08C3                     u2221:
  4698  08C3  28A5               	goto	l1951
  4699  08C4                     u2220:
  4700  08C4                     l1961:
  4701  08C4  0821               	movf	___awdiv@sign,w
  4702  08C5  1903               	btfsc	3,2
  4703  08C6  28C8               	goto	u2231
  4704  08C7  28C9               	goto	u2230
  4705  08C8                     u2231:
  4706  08C8  28CE               	goto	l1965
  4707  08C9                     u2230:
  4708  08C9                     l1963:
  4709  08C9  09A2               	comf	___awdiv@quotient,f
  4710  08CA  09A3               	comf	___awdiv@quotient+1,f
  4711  08CB  0AA2               	incf	___awdiv@quotient,f
  4712  08CC  1903               	skipnz
  4713  08CD  0AA3               	incf	___awdiv@quotient+1,f
  4714  08CE                     l1965:
  4715  08CE  0823               	movf	___awdiv@quotient+1,w
  4716  08CF  00F8               	movwf	?___awdiv+1
  4717  08D0  0822               	movf	___awdiv@quotient,w
  4718  08D1  00F7               	movwf	?___awdiv
  4719  08D2                     l512:
  4720  08D2  0008               	return
  4721  08D3                     __end_of___awdiv:
  4722                           
  4723                           	psect	text5
  4724  15B1                     __ptext5:	
  4725 ;; *************** function _isdigit *****************
  4726 ;; Defined at:
  4727 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  c               1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  c               1    1[COMMON] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;		None               void
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4741 ;;      Params:         0       0       0       0       0       0       0       0
  4742 ;;      Locals:         2       0       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0
  4744 ;;      Totals:         2       0       0       0       0       0       0       0
  4745 ;;Total ram usage:        2 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_sprintf
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754  15B1                     _isdigit:	
  4755                           ;psect for function _isdigit
  4756                           
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4760                           ;isdigit@c stored from wreg
  4761  15B1  00F1               	movwf	isdigit@c
  4762  15B2                     l2283:
  4763  15B2  01F0               	clrf	_isdigit$572
  4764  15B3                     l2285:
  4765  15B3  303A               	movlw	58
  4766  15B4  0271               	subwf	isdigit@c,w
  4767  15B5  1803               	skipnc
  4768  15B6  2DB8               	goto	u2901
  4769  15B7  2DB9               	goto	u2900
  4770  15B8                     u2901:
  4771  15B8  2DC1               	goto	l2291
  4772  15B9                     u2900:
  4773  15B9                     l2287:
  4774  15B9  3030               	movlw	48
  4775  15BA  0271               	subwf	isdigit@c,w
  4776  15BB  1C03               	skipc
  4777  15BC  2DBE               	goto	u2911
  4778  15BD  2DBF               	goto	u2910
  4779  15BE                     u2911:
  4780  15BE  2DC1               	goto	l2291
  4781  15BF                     u2910:
  4782  15BF                     l2289:
  4783  15BF  01F0               	clrf	_isdigit$572
  4784  15C0  0AF0               	incf	_isdigit$572,f
  4785  15C1                     l2291:
  4786  15C1  0C70               	rrf	_isdigit$572,w
  4787  15C2                     l791:
  4788  15C2  0008               	return
  4789  15C3                     __end_of_isdigit:
  4790                           
  4791                           	psect	text6
  4792  0E9A                     __ptext6:	
  4793 ;; *************** function _fround *****************
  4794 ;; Defined at:
  4795 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  prec            1    wreg     unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  prec            1   39[BANK0 ] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  3   26[BANK0 ] unsigned char 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4809 ;;      Params:         0       3       0       0       0       0       0       0
  4810 ;;      Locals:         0       7       0       0       0       0       0       0
  4811 ;;      Temps:          0       4       0       0       0       0       0       0
  4812 ;;      Totals:         0      14       0       0       0       0       0       0
  4813 ;;Total ram usage:       14 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 2
  4816 ;; This function calls:
  4817 ;;		___ftmul
  4818 ;;		___lwdiv
  4819 ;;		___lwmod
  4820 ;;		___wmul
  4821 ;; This function is called by:
  4822 ;;		_sprintf
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826  0E9A                     _fround:	
  4827                           ;psect for function _fround
  4828                           
  4829                           
  4830                           ;incstack = 0
  4831                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4832                           ;fround@prec stored from wreg
  4833  0E9A  0020               	movlb	0	; select bank0
  4834  0E9B  00C7               	movwf	fround@prec
  4835  0E9C                     l2221:
  4836                           
  4837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4838  0E9C  306E               	movlw	110
  4839  0E9D  0247               	subwf	fround@prec,w
  4840  0E9E  1C03               	skipc
  4841  0E9F  2EA1               	goto	u2831
  4842  0EA0  2EA2               	goto	u2830
  4843  0EA1                     u2831:
  4844  0EA1  2F59               	goto	l2231
  4845  0EA2                     u2830:
  4846  0EA2                     l2223:
  4847                           
  4848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4849  0EA2  300A               	movlw	10
  4850  0EA3  00F6               	movwf	___lwdiv@divisor
  4851  0EA4  3000               	movlw	0
  4852  0EA5  00F7               	movwf	___lwdiv@divisor+1
  4853  0EA6  0847               	movf	fround@prec,w
  4854  0EA7  00BD               	movwf	??_fround
  4855  0EA8  01BE               	clrf	??_fround+1
  4856  0EA9  083D               	movf	??_fround,w
  4857  0EAA  00F2               	movwf	___lwmod@dividend
  4858  0EAB  083E               	movf	??_fround+1,w
  4859  0EAC  00F3               	movwf	___lwmod@dividend+1
  4860  0EAD  3064               	movlw	100
  4861  0EAE  00F0               	movwf	___lwmod@divisor
  4862  0EAF  3000               	movlw	0
  4863  0EB0  00F1               	movwf	___lwmod@divisor+1
  4864  0EB1  3197  270E  318E   	fcall	___lwmod
  4865  0EB4  0871               	movf	?___lwmod+1,w
  4866  0EB5  00F9               	movwf	___lwdiv@dividend+1
  4867  0EB6  0870               	movf	?___lwmod,w
  4868  0EB7  00F8               	movwf	___lwdiv@dividend
  4869  0EB8  3197  277A  318E   	fcall	___lwdiv
  4870  0EBB  0877               	movf	?___lwdiv+1,w
  4871  0EBC  0020               	movlb	0	; select bank0
  4872  0EBD  00A5               	movwf	___wmul@multiplier+1
  4873  0EBE  0876               	movf	?___lwdiv,w
  4874  0EBF  00A4               	movwf	___wmul@multiplier
  4875  0EC0  3003               	movlw	3
  4876  0EC1  00A6               	movwf	___wmul@multiplicand
  4877  0EC2  3000               	movlw	0
  4878  0EC3  00A7               	movwf	___wmul@multiplicand+1
  4879  0EC4  3196  2633  318E   	fcall	___wmul
  4880  0EC7  0020               	movlb	0	; select bank0
  4881  0EC8  0825               	movf	?___wmul+1,w
  4882  0EC9  0085               	movwf	5
  4883  0ECA  0824               	movf	?___wmul,w
  4884  0ECB  0084               	movwf	4
  4885  0ECC  3077               	movlw	low ((__npowers_+27)| (0+32768))
  4886  0ECD  0784               	addwf	4,f
  4887  0ECE  3098               	movlw	high ((__npowers_+27)| (0+32768))
  4888  0ECF  3D85               	addwfc	5,f
  4889  0ED0  3F00               	moviw [0]fsr0
  4890  0ED1  00AA               	movwf	___ftmul@f1
  4891  0ED2  3F01               	moviw [1]fsr0
  4892  0ED3  00AB               	movwf	___ftmul@f1+1
  4893  0ED4  3F02               	moviw [2]fsr0
  4894  0ED5  00AC               	movwf	___ftmul@f1+2
  4895  0ED6  3064               	movlw	100
  4896  0ED7  00F6               	movwf	___lwdiv@divisor
  4897  0ED8  3000               	movlw	0
  4898  0ED9  00F7               	movwf	___lwdiv@divisor+1
  4899  0EDA  0847               	movf	fround@prec,w
  4900  0EDB  00BF               	movwf	??_fround+2
  4901  0EDC  01C0               	clrf	??_fround+3
  4902  0EDD  083F               	movf	??_fround+2,w
  4903  0EDE  00F8               	movwf	___lwdiv@dividend
  4904  0EDF  0840               	movf	??_fround+3,w
  4905  0EE0  00F9               	movwf	___lwdiv@dividend+1
  4906  0EE1  3197  277A  318E   	fcall	___lwdiv
  4907  0EE4  0877               	movf	?___lwdiv+1,w
  4908  0EE5  0020               	movlb	0	; select bank0
  4909  0EE6  00A5               	movwf	___wmul@multiplier+1
  4910  0EE7  0876               	movf	?___lwdiv,w
  4911  0EE8  00A4               	movwf	___wmul@multiplier
  4912  0EE9  3003               	movlw	3
  4913  0EEA  00A6               	movwf	___wmul@multiplicand
  4914  0EEB  3000               	movlw	0
  4915  0EEC  00A7               	movwf	___wmul@multiplicand+1
  4916  0EED  3196  2633  318E   	fcall	___wmul
  4917  0EF0  0020               	movlb	0	; select bank0
  4918  0EF1  0825               	movf	?___wmul+1,w
  4919  0EF2  0085               	movwf	5
  4920  0EF3  0824               	movf	?___wmul,w
  4921  0EF4  0084               	movwf	4
  4922  0EF5  3092               	movlw	low ((__npowers_+54)| (0+32768))
  4923  0EF6  0784               	addwf	4,f
  4924  0EF7  3098               	movlw	high ((__npowers_+54)| (0+32768))
  4925  0EF8  3D85               	addwfc	5,f
  4926  0EF9  3F00               	moviw [0]fsr0
  4927  0EFA  00AD               	movwf	___ftmul@f2
  4928  0EFB  3F01               	moviw [1]fsr0
  4929  0EFC  00AE               	movwf	___ftmul@f2+1
  4930  0EFD  3F02               	moviw [2]fsr0
  4931  0EFE  00AF               	movwf	___ftmul@f2+2
  4932  0EFF  318B  23A2  318E   	fcall	___ftmul
  4933  0F02  0020               	movlb	0	; select bank0
  4934  0F03  082A               	movf	?___ftmul,w
  4935  0F04  00C4               	movwf	_fround$734
  4936  0F05  082B               	movf	?___ftmul+1,w
  4937  0F06  00C5               	movwf	_fround$734+1
  4938  0F07  082C               	movf	?___ftmul+2,w
  4939  0F08  00C6               	movwf	_fround$734+2
  4940                           
  4941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4942  0F09  0847               	movf	fround@prec,w
  4943  0F0A  00BD               	movwf	??_fround
  4944  0F0B  01BE               	clrf	??_fround+1
  4945  0F0C  083D               	movf	??_fround,w
  4946  0F0D  00F2               	movwf	___lwmod@dividend
  4947  0F0E  083E               	movf	??_fround+1,w
  4948  0F0F  00F3               	movwf	___lwmod@dividend+1
  4949  0F10  300A               	movlw	10
  4950  0F11  00F0               	movwf	___lwmod@divisor
  4951  0F12  3000               	movlw	0
  4952  0F13  00F1               	movwf	___lwmod@divisor+1
  4953  0F14  3197  270E  318E   	fcall	___lwmod
  4954  0F17  0871               	movf	?___lwmod+1,w
  4955  0F18  0020               	movlb	0	; select bank0
  4956  0F19  00A5               	movwf	___wmul@multiplier+1
  4957  0F1A  0870               	movf	?___lwmod,w
  4958  0F1B  00A4               	movwf	___wmul@multiplier
  4959  0F1C  3003               	movlw	3
  4960  0F1D  00A6               	movwf	___wmul@multiplicand
  4961  0F1E  3000               	movlw	0
  4962  0F1F  00A7               	movwf	___wmul@multiplicand+1
  4963  0F20  3196  2633  318E   	fcall	___wmul
  4964  0F23  0020               	movlb	0	; select bank0
  4965  0F24  0825               	movf	?___wmul+1,w
  4966  0F25  0085               	movwf	5
  4967  0F26  0824               	movf	?___wmul,w
  4968  0F27  0084               	movwf	4
  4969  0F28  305C               	movlw	low (__npowers_| (0+32768))
  4970  0F29  0784               	addwf	4,f
  4971  0F2A  3098               	movlw	high (__npowers_| (0+32768))
  4972  0F2B  3D85               	addwfc	5,f
  4973  0F2C  3F00               	moviw [0]fsr0
  4974  0F2D  00AA               	movwf	___ftmul@f1
  4975  0F2E  3F01               	moviw [1]fsr0
  4976  0F2F  00AB               	movwf	___ftmul@f1+1
  4977  0F30  3F02               	moviw [2]fsr0
  4978  0F31  00AC               	movwf	___ftmul@f1+2
  4979  0F32  0844               	movf	_fround$734,w
  4980  0F33  00AD               	movwf	___ftmul@f2
  4981  0F34  0845               	movf	_fround$734+1,w
  4982  0F35  00AE               	movwf	___ftmul@f2+1
  4983  0F36  0846               	movf	_fround$734+2,w
  4984  0F37  00AF               	movwf	___ftmul@f2+2
  4985  0F38  318B  23A2  318E   	fcall	___ftmul
  4986  0F3B  0020               	movlb	0	; select bank0
  4987  0F3C  082A               	movf	?___ftmul,w
  4988  0F3D  00C1               	movwf	_fround$735
  4989  0F3E  082B               	movf	?___ftmul+1,w
  4990  0F3F  00C2               	movwf	_fround$735+1
  4991  0F40  082C               	movf	?___ftmul+2,w
  4992  0F41  00C3               	movwf	_fround$735+2
  4993  0F42                     l2225:
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4996  0F42  3000               	movlw	0
  4997  0F43  00AA               	movwf	___ftmul@f1
  4998  0F44  3000               	movlw	0
  4999  0F45  00AB               	movwf	___ftmul@f1+1
  5000  0F46  303F               	movlw	63
  5001  0F47  00AC               	movwf	___ftmul@f1+2
  5002  0F48  0841               	movf	_fround$735,w
  5003  0F49  00AD               	movwf	___ftmul@f2
  5004  0F4A  0842               	movf	_fround$735+1,w
  5005  0F4B  00AE               	movwf	___ftmul@f2+1
  5006  0F4C  0843               	movf	_fround$735+2,w
  5007  0F4D  00AF               	movwf	___ftmul@f2+2
  5008  0F4E  318B  23A2  318E   	fcall	___ftmul
  5009  0F51  0020               	movlb	0	; select bank0
  5010  0F52  082A               	movf	?___ftmul,w
  5011  0F53  00BA               	movwf	?_fround
  5012  0F54  082B               	movf	?___ftmul+1,w
  5013  0F55  00BB               	movwf	?_fround+1
  5014  0F56  082C               	movf	?___ftmul+2,w
  5015  0F57  00BC               	movwf	?_fround+2
  5016  0F58  2FFF               	goto	l252
  5017  0F59                     l2231:
  5018  0F59  300B               	movlw	11
  5019  0F5A  0247               	subwf	fround@prec,w
  5020  0F5B  1C03               	skipc
  5021  0F5C  2F5E               	goto	u2841
  5022  0F5D  2F5F               	goto	u2840
  5023  0F5E                     u2841:
  5024  0F5E  2FD2               	goto	l2239
  5025  0F5F                     u2840:
  5026  0F5F                     l2233:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5029  0F5F  0847               	movf	fround@prec,w
  5030  0F60  00BD               	movwf	??_fround
  5031  0F61  01BE               	clrf	??_fround+1
  5032  0F62  083D               	movf	??_fround,w
  5033  0F63  00F2               	movwf	___lwmod@dividend
  5034  0F64  083E               	movf	??_fround+1,w
  5035  0F65  00F3               	movwf	___lwmod@dividend+1
  5036  0F66  300A               	movlw	10
  5037  0F67  00F0               	movwf	___lwmod@divisor
  5038  0F68  3000               	movlw	0
  5039  0F69  00F1               	movwf	___lwmod@divisor+1
  5040  0F6A  3197  270E  318E   	fcall	___lwmod
  5041  0F6D  0871               	movf	?___lwmod+1,w
  5042  0F6E  0020               	movlb	0	; select bank0
  5043  0F6F  00A5               	movwf	___wmul@multiplier+1
  5044  0F70  0870               	movf	?___lwmod,w
  5045  0F71  00A4               	movwf	___wmul@multiplier
  5046  0F72  3003               	movlw	3
  5047  0F73  00A6               	movwf	___wmul@multiplicand
  5048  0F74  3000               	movlw	0
  5049  0F75  00A7               	movwf	___wmul@multiplicand+1
  5050  0F76  3196  2633  318E   	fcall	___wmul
  5051  0F79  0020               	movlb	0	; select bank0
  5052  0F7A  0825               	movf	?___wmul+1,w
  5053  0F7B  0085               	movwf	5
  5054  0F7C  0824               	movf	?___wmul,w
  5055  0F7D  0084               	movwf	4
  5056  0F7E  305C               	movlw	low (__npowers_| (0+32768))
  5057  0F7F  0784               	addwf	4,f
  5058  0F80  3098               	movlw	high (__npowers_| (0+32768))
  5059  0F81  3D85               	addwfc	5,f
  5060  0F82  3F00               	moviw [0]fsr0
  5061  0F83  00AA               	movwf	___ftmul@f1
  5062  0F84  3F01               	moviw [1]fsr0
  5063  0F85  00AB               	movwf	___ftmul@f1+1
  5064  0F86  3F02               	moviw [2]fsr0
  5065  0F87  00AC               	movwf	___ftmul@f1+2
  5066  0F88  300A               	movlw	10
  5067  0F89  00F6               	movwf	___lwdiv@divisor
  5068  0F8A  3000               	movlw	0
  5069  0F8B  00F7               	movwf	___lwdiv@divisor+1
  5070  0F8C  0847               	movf	fround@prec,w
  5071  0F8D  00BF               	movwf	??_fround+2
  5072  0F8E  01C0               	clrf	??_fround+3
  5073  0F8F  083F               	movf	??_fround+2,w
  5074  0F90  00F8               	movwf	___lwdiv@dividend
  5075  0F91  0840               	movf	??_fround+3,w
  5076  0F92  00F9               	movwf	___lwdiv@dividend+1
  5077  0F93  3197  277A  318E   	fcall	___lwdiv
  5078  0F96  0877               	movf	?___lwdiv+1,w
  5079  0F97  0020               	movlb	0	; select bank0
  5080  0F98  00A5               	movwf	___wmul@multiplier+1
  5081  0F99  0876               	movf	?___lwdiv,w
  5082  0F9A  00A4               	movwf	___wmul@multiplier
  5083  0F9B  3003               	movlw	3
  5084  0F9C  00A6               	movwf	___wmul@multiplicand
  5085  0F9D  3000               	movlw	0
  5086  0F9E  00A7               	movwf	___wmul@multiplicand+1
  5087  0F9F  3196  2633  318E   	fcall	___wmul
  5088  0FA2  0020               	movlb	0	; select bank0
  5089  0FA3  0825               	movf	?___wmul+1,w
  5090  0FA4  0085               	movwf	5
  5091  0FA5  0824               	movf	?___wmul,w
  5092  0FA6  0084               	movwf	4
  5093  0FA7  3077               	movlw	low ((__npowers_+27)| (0+32768))
  5094  0FA8  0784               	addwf	4,f
  5095  0FA9  3098               	movlw	high ((__npowers_+27)| (0+32768))
  5096  0FAA  3D85               	addwfc	5,f
  5097  0FAB  3F00               	moviw [0]fsr0
  5098  0FAC  00AD               	movwf	___ftmul@f2
  5099  0FAD  3F01               	moviw [1]fsr0
  5100  0FAE  00AE               	movwf	___ftmul@f2+1
  5101  0FAF  3F02               	moviw [2]fsr0
  5102  0FB0  00AF               	movwf	___ftmul@f2+2
  5103  0FB1  318B  23A2  318E   	fcall	___ftmul
  5104  0FB4  0020               	movlb	0	; select bank0
  5105  0FB5  082A               	movf	?___ftmul,w
  5106  0FB6  00C4               	movwf	_fround$734
  5107  0FB7  082B               	movf	?___ftmul+1,w
  5108  0FB8  00C5               	movwf	_fround$734+1
  5109  0FB9  082C               	movf	?___ftmul+2,w
  5110  0FBA  00C6               	movwf	_fround$734+2
  5111  0FBB                     l2235:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5114  0FBB  3000               	movlw	0
  5115  0FBC  00AA               	movwf	___ftmul@f1
  5116  0FBD  3000               	movlw	0
  5117  0FBE  00AB               	movwf	___ftmul@f1+1
  5118  0FBF  303F               	movlw	63
  5119  0FC0  00AC               	movwf	___ftmul@f1+2
  5120  0FC1  0844               	movf	_fround$734,w
  5121  0FC2  00AD               	movwf	___ftmul@f2
  5122  0FC3  0845               	movf	_fround$734+1,w
  5123  0FC4  00AE               	movwf	___ftmul@f2+1
  5124  0FC5  0846               	movf	_fround$734+2,w
  5125  0FC6  00AF               	movwf	___ftmul@f2+2
  5126  0FC7  318B  23A2  318E   	fcall	___ftmul
  5127  0FCA  0020               	movlb	0	; select bank0
  5128  0FCB  082A               	movf	?___ftmul,w
  5129  0FCC  00BA               	movwf	?_fround
  5130  0FCD  082B               	movf	?___ftmul+1,w
  5131  0FCE  00BB               	movwf	?_fround+1
  5132  0FCF  082C               	movf	?___ftmul+2,w
  5133  0FD0  00BC               	movwf	?_fround+2
  5134  0FD1  2FFF               	goto	l252
  5135  0FD2                     l2239:
  5136                           
  5137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5138  0FD2  3000               	movlw	0
  5139  0FD3  00AA               	movwf	___ftmul@f1
  5140  0FD4  3000               	movlw	0
  5141  0FD5  00AB               	movwf	___ftmul@f1+1
  5142  0FD6  303F               	movlw	63
  5143  0FD7  00AC               	movwf	___ftmul@f1+2
  5144  0FD8  0847               	movf	fround@prec,w
  5145  0FD9  00BD               	movwf	??_fround
  5146  0FDA  01BE               	clrf	??_fround+1
  5147  0FDB  083D               	movf	??_fround,w
  5148  0FDC  00A4               	movwf	___wmul@multiplier
  5149  0FDD  083E               	movf	??_fround+1,w
  5150  0FDE  00A5               	movwf	___wmul@multiplier+1
  5151  0FDF  3003               	movlw	3
  5152  0FE0  00A6               	movwf	___wmul@multiplicand
  5153  0FE1  3000               	movlw	0
  5154  0FE2  00A7               	movwf	___wmul@multiplicand+1
  5155  0FE3  3196  2633  318E   	fcall	___wmul
  5156  0FE6  0020               	movlb	0	; select bank0
  5157  0FE7  0825               	movf	?___wmul+1,w
  5158  0FE8  0085               	movwf	5
  5159  0FE9  0824               	movf	?___wmul,w
  5160  0FEA  0084               	movwf	4
  5161  0FEB  305C               	movlw	low (__npowers_| (0+32768))
  5162  0FEC  0784               	addwf	4,f
  5163  0FED  3098               	movlw	high (__npowers_| (0+32768))
  5164  0FEE  3D85               	addwfc	5,f
  5165  0FEF  3F00               	moviw [0]fsr0
  5166  0FF0  00AD               	movwf	___ftmul@f2
  5167  0FF1  3F01               	moviw [1]fsr0
  5168  0FF2  00AE               	movwf	___ftmul@f2+1
  5169  0FF3  3F02               	moviw [2]fsr0
  5170  0FF4  00AF               	movwf	___ftmul@f2+2
  5171  0FF5  318B  23A2  318E   	fcall	___ftmul
  5172  0FF8  0020               	movlb	0	; select bank0
  5173  0FF9  082A               	movf	?___ftmul,w
  5174  0FFA  00BA               	movwf	?_fround
  5175  0FFB  082B               	movf	?___ftmul+1,w
  5176  0FFC  00BB               	movwf	?_fround+1
  5177  0FFD  082C               	movf	?___ftmul+2,w
  5178  0FFE  00BC               	movwf	?_fround+2
  5179  0FFF                     l252:
  5180  0FFF  0008               	return
  5181  1000                     __end_of_fround:
  5182                           
  5183                           	psect	text7
  5184  1633                     __ptext7:	
  5185 ;; *************** function ___wmul *****************
  5186 ;; Defined at:
  5187 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5190 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  product         2    8[BANK0 ] unsigned int 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  2    4[BANK0 ] unsigned int 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5202 ;;      Params:         0       4       0       0       0       0       0       0
  5203 ;;      Locals:         0       2       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0
  5205 ;;      Totals:         0       6       0       0       0       0       0       0
  5206 ;;Total ram usage:        6 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_fround
  5212 ;;		_scale
  5213 ;;		_sprintf
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217  1633                     ___wmul:	
  5218                           ;psect for function ___wmul
  5219                           
  5220  1633                     l1911:	
  5221                           ;incstack = 0
  5222                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5223                           
  5224  1633  0020               	movlb	0	; select bank0
  5225  1634  01A8               	clrf	___wmul@product
  5226  1635  01A9               	clrf	___wmul@product+1
  5227  1636                     l1913:
  5228  1636  1C24               	btfss	___wmul@multiplier,0
  5229  1637  2E39               	goto	u2101
  5230  1638  2E3A               	goto	u2100
  5231  1639                     u2101:
  5232  1639  2E3E               	goto	l329
  5233  163A                     u2100:
  5234  163A                     l1915:
  5235  163A  0826               	movf	___wmul@multiplicand,w
  5236  163B  07A8               	addwf	___wmul@product,f
  5237  163C  0827               	movf	___wmul@multiplicand+1,w
  5238  163D  3DA9               	addwfc	___wmul@product+1,f
  5239  163E                     l329:
  5240  163E  3001               	movlw	1
  5241  163F                     u2115:
  5242  163F  35A6               	lslf	___wmul@multiplicand,f
  5243  1640  0DA7               	rlf	___wmul@multiplicand+1,f
  5244  1641  0B89               	decfsz	9,f
  5245  1642  2E3F               	goto	u2115
  5246  1643                     l1917:
  5247  1643  3001               	movlw	1
  5248  1644                     u2125:
  5249  1644  36A5               	lsrf	___wmul@multiplier+1,f
  5250  1645  0CA4               	rrf	___wmul@multiplier,f
  5251  1646  0B89               	decfsz	9,f
  5252  1647  2E44               	goto	u2125
  5253  1648                     l1919:
  5254  1648  0824               	movf	___wmul@multiplier,w
  5255  1649  0425               	iorwf	___wmul@multiplier+1,w
  5256  164A  1D03               	btfss	3,2
  5257  164B  2E4D               	goto	u2131
  5258  164C  2E4E               	goto	u2130
  5259  164D                     u2131:
  5260  164D  2E36               	goto	l1913
  5261  164E                     u2130:
  5262  164E                     l1921:
  5263  164E  0829               	movf	___wmul@product+1,w
  5264  164F  00A5               	movwf	?___wmul+1
  5265  1650  0828               	movf	___wmul@product,w
  5266  1651  00A4               	movwf	?___wmul
  5267  1652                     l331:
  5268  1652  0008               	return
  5269  1653                     __end_of___wmul:
  5270                           
  5271                           	psect	text8
  5272  170E                     __ptext8:	
  5273 ;; *************** function ___lwmod *****************
  5274 ;; Defined at:
  5275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  divisor         2    0[COMMON] unsigned int 
  5278 ;;  dividend        2    2[COMMON] unsigned int 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  counter         1    5[COMMON] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  2    0[COMMON] unsigned int 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5290 ;;      Params:         4       0       0       0       0       0       0       0
  5291 ;;      Locals:         1       0       0       0       0       0       0       0
  5292 ;;      Temps:          1       0       0       0       0       0       0       0
  5293 ;;      Totals:         6       0       0       0       0       0       0       0
  5294 ;;Total ram usage:        6 bytes
  5295 ;; Hardware stack levels used: 1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_fround
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303  170E                     ___lwmod:	
  5304                           ;psect for function ___lwmod
  5305                           
  5306  170E                     l2153:	
  5307                           ;incstack = 0
  5308                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5309                           
  5310  170E  0870               	movf	___lwmod@divisor,w
  5311  170F  0471               	iorwf	___lwmod@divisor+1,w
  5312  1710  1903               	btfsc	3,2
  5313  1711  2F13               	goto	u2751
  5314  1712  2F14               	goto	u2750
  5315  1713                     u2751:
  5316  1713  2F3D               	goto	l2171
  5317  1714                     u2750:
  5318  1714                     l2155:
  5319  1714  01F5               	clrf	___lwmod@counter
  5320  1715  0AF5               	incf	___lwmod@counter,f
  5321  1716  2F20               	goto	l2161
  5322  1717                     l2157:
  5323  1717  3001               	movlw	1
  5324  1718                     u2765:
  5325  1718  35F0               	lslf	___lwmod@divisor,f
  5326  1719  0DF1               	rlf	___lwmod@divisor+1,f
  5327  171A  0B89               	decfsz	9,f
  5328  171B  2F18               	goto	u2765
  5329  171C                     l2159:
  5330  171C  3001               	movlw	1
  5331  171D  00F4               	movwf	??___lwmod
  5332  171E  0874               	movf	??___lwmod,w
  5333  171F  07F5               	addwf	___lwmod@counter,f
  5334  1720                     l2161:
  5335  1720  1FF1               	btfss	___lwmod@divisor+1,7
  5336  1721  2F23               	goto	u2771
  5337  1722  2F24               	goto	u2770
  5338  1723                     u2771:
  5339  1723  2F17               	goto	l2157
  5340  1724                     u2770:
  5341  1724                     l2163:
  5342  1724  0871               	movf	___lwmod@divisor+1,w
  5343  1725  0273               	subwf	___lwmod@dividend+1,w
  5344  1726  1D03               	skipz
  5345  1727  2F2A               	goto	u2785
  5346  1728  0870               	movf	___lwmod@divisor,w
  5347  1729  0272               	subwf	___lwmod@dividend,w
  5348  172A                     u2785:
  5349  172A  1C03               	skipc
  5350  172B  2F2D               	goto	u2781
  5351  172C  2F2E               	goto	u2780
  5352  172D                     u2781:
  5353  172D  2F32               	goto	l2167
  5354  172E                     u2780:
  5355  172E                     l2165:
  5356  172E  0870               	movf	___lwmod@divisor,w
  5357  172F  02F2               	subwf	___lwmod@dividend,f
  5358  1730  0871               	movf	___lwmod@divisor+1,w
  5359  1731  3BF3               	subwfb	___lwmod@dividend+1,f
  5360  1732                     l2167:
  5361  1732  3001               	movlw	1
  5362  1733                     u2795:
  5363  1733  36F1               	lsrf	___lwmod@divisor+1,f
  5364  1734  0CF0               	rrf	___lwmod@divisor,f
  5365  1735  0B89               	decfsz	9,f
  5366  1736  2F33               	goto	u2795
  5367  1737                     l2169:
  5368  1737  3001               	movlw	1
  5369  1738  02F5               	subwf	___lwmod@counter,f
  5370  1739  1D03               	btfss	3,2
  5371  173A  2F3C               	goto	u2801
  5372  173B  2F3D               	goto	u2800
  5373  173C                     u2801:
  5374  173C  2F24               	goto	l2163
  5375  173D                     u2800:
  5376  173D                     l2171:
  5377  173D  0873               	movf	___lwmod@dividend+1,w
  5378  173E  00F1               	movwf	?___lwmod+1
  5379  173F  0872               	movf	___lwmod@dividend,w
  5380  1740  00F0               	movwf	?___lwmod
  5381  1741                     l781:
  5382  1741  0008               	return
  5383  1742                     __end_of___lwmod:
  5384                           
  5385                           	psect	text9
  5386  177A                     __ptext9:	
  5387 ;; *************** function ___lwdiv *****************
  5388 ;; Defined at:
  5389 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  divisor         2    6[COMMON] unsigned int 
  5392 ;;  dividend        2    8[COMMON] unsigned int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  quotient        2   11[COMMON] unsigned int 
  5395 ;;  counter         1   13[COMMON] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  2    6[COMMON] unsigned int 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5405 ;;      Params:         4       0       0       0       0       0       0       0
  5406 ;;      Locals:         3       0       0       0       0       0       0       0
  5407 ;;      Temps:          1       0       0       0       0       0       0       0
  5408 ;;      Totals:         8       0       0       0       0       0       0       0
  5409 ;;Total ram usage:        8 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_fround
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418  177A                     ___lwdiv:	
  5419                           ;psect for function ___lwdiv
  5420                           
  5421  177A                     l2127:	
  5422                           ;incstack = 0
  5423                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5424                           
  5425  177A  01FB               	clrf	___lwdiv@quotient
  5426  177B  01FC               	clrf	___lwdiv@quotient+1
  5427  177C                     l2129:
  5428  177C  0876               	movf	___lwdiv@divisor,w
  5429  177D  0477               	iorwf	___lwdiv@divisor+1,w
  5430  177E  1903               	btfsc	3,2
  5431  177F  2F81               	goto	u2681
  5432  1780  2F82               	goto	u2680
  5433  1781                     u2681:
  5434  1781  2FB1               	goto	l2149
  5435  1782                     u2680:
  5436  1782                     l2131:
  5437  1782  01FD               	clrf	___lwdiv@counter
  5438  1783  0AFD               	incf	___lwdiv@counter,f
  5439  1784  2F8E               	goto	l2137
  5440  1785                     l2133:
  5441  1785  3001               	movlw	1
  5442  1786                     u2695:
  5443  1786  35F6               	lslf	___lwdiv@divisor,f
  5444  1787  0DF7               	rlf	___lwdiv@divisor+1,f
  5445  1788  0B89               	decfsz	9,f
  5446  1789  2F86               	goto	u2695
  5447  178A                     l2135:
  5448  178A  3001               	movlw	1
  5449  178B  00FA               	movwf	??___lwdiv
  5450  178C  087A               	movf	??___lwdiv,w
  5451  178D  07FD               	addwf	___lwdiv@counter,f
  5452  178E                     l2137:
  5453  178E  1FF7               	btfss	___lwdiv@divisor+1,7
  5454  178F  2F91               	goto	u2701
  5455  1790  2F92               	goto	u2700
  5456  1791                     u2701:
  5457  1791  2F85               	goto	l2133
  5458  1792                     u2700:
  5459  1792                     l2139:
  5460  1792  3001               	movlw	1
  5461  1793                     u2715:
  5462  1793  35FB               	lslf	___lwdiv@quotient,f
  5463  1794  0DFC               	rlf	___lwdiv@quotient+1,f
  5464  1795  0B89               	decfsz	9,f
  5465  1796  2F93               	goto	u2715
  5466  1797  0877               	movf	___lwdiv@divisor+1,w
  5467  1798  0279               	subwf	___lwdiv@dividend+1,w
  5468  1799  1D03               	skipz
  5469  179A  2F9D               	goto	u2725
  5470  179B  0876               	movf	___lwdiv@divisor,w
  5471  179C  0278               	subwf	___lwdiv@dividend,w
  5472  179D                     u2725:
  5473  179D  1C03               	skipc
  5474  179E  2FA0               	goto	u2721
  5475  179F  2FA1               	goto	u2720
  5476  17A0                     u2721:
  5477  17A0  2FA6               	goto	l2145
  5478  17A1                     u2720:
  5479  17A1                     l2141:
  5480  17A1  0876               	movf	___lwdiv@divisor,w
  5481  17A2  02F8               	subwf	___lwdiv@dividend,f
  5482  17A3  0877               	movf	___lwdiv@divisor+1,w
  5483  17A4  3BF9               	subwfb	___lwdiv@dividend+1,f
  5484  17A5                     l2143:
  5485  17A5  147B               	bsf	___lwdiv@quotient,0
  5486  17A6                     l2145:
  5487  17A6  3001               	movlw	1
  5488  17A7                     u2735:
  5489  17A7  36F7               	lsrf	___lwdiv@divisor+1,f
  5490  17A8  0CF6               	rrf	___lwdiv@divisor,f
  5491  17A9  0B89               	decfsz	9,f
  5492  17AA  2FA7               	goto	u2735
  5493  17AB                     l2147:
  5494  17AB  3001               	movlw	1
  5495  17AC  02FD               	subwf	___lwdiv@counter,f
  5496  17AD  1D03               	btfss	3,2
  5497  17AE  2FB0               	goto	u2741
  5498  17AF  2FB1               	goto	u2740
  5499  17B0                     u2741:
  5500  17B0  2F92               	goto	l2139
  5501  17B1                     u2740:
  5502  17B1                     l2149:
  5503  17B1  087C               	movf	___lwdiv@quotient+1,w
  5504  17B2  00F7               	movwf	?___lwdiv+1
  5505  17B3  087B               	movf	___lwdiv@quotient,w
  5506  17B4  00F6               	movwf	?___lwdiv
  5507  17B5                     l771:
  5508  17B5  0008               	return
  5509  17B6                     __end_of___lwdiv:
  5510                           
  5511                           	psect	text10
  5512  0BA2                     __ptext10:	
  5513 ;; *************** function ___ftmul *****************
  5514 ;; Defined at:
  5515 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftmul.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  f1              3   10[BANK0 ] float 
  5518 ;;  f2              3   13[BANK0 ] float 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  5521 ;;  sign            1   25[BANK0 ] unsigned char 
  5522 ;;  cntr            1   24[BANK0 ] unsigned char 
  5523 ;;  exp             1   20[BANK0 ] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  3   10[BANK0 ] float 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0, pclath, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5533 ;;      Params:         0       6       0       0       0       0       0       0
  5534 ;;      Locals:         0       6       0       0       0       0       0       0
  5535 ;;      Temps:          0       4       0       0       0       0       0       0
  5536 ;;      Totals:         0      16       0       0       0       0       0       0
  5537 ;;Total ram usage:       16 bytes
  5538 ;; Hardware stack levels used: 1
  5539 ;; Hardware stack levels required when called: 1
  5540 ;; This function calls:
  5541 ;;		___ftpack
  5542 ;; This function is called by:
  5543 ;;		_main
  5544 ;;		_fround
  5545 ;;		_scale
  5546 ;;		_sprintf
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550  0BA2                     ___ftmul:	
  5551                           ;psect for function ___ftmul
  5552                           
  5553  0BA2                     l2077:	
  5554                           ;incstack = 0
  5555                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5556                           
  5557  0BA2  0020               	movlb	0	; select bank0
  5558  0BA3  082A               	movf	___ftmul@f1,w
  5559  0BA4  00B0               	movwf	??___ftmul
  5560  0BA5  082B               	movf	___ftmul@f1+1,w
  5561  0BA6  00B1               	movwf	??___ftmul+1
  5562  0BA7  082C               	movf	___ftmul@f1+2,w
  5563  0BA8  00B2               	movwf	??___ftmul+2
  5564  0BA9  1003               	clrc
  5565  0BAA  0D31               	rlf	??___ftmul+1,w
  5566  0BAB  0D32               	rlf	??___ftmul+2,w
  5567  0BAC  00B3               	movwf	??___ftmul+3
  5568  0BAD  0833               	movf	??___ftmul+3,w
  5569  0BAE  00B4               	movwf	___ftmul@exp
  5570  0BAF  0834               	movf	___ftmul@exp,w
  5571  0BB0  1D03               	btfss	3,2
  5572  0BB1  2BB3               	goto	u2561
  5573  0BB2  2BB4               	goto	u2560
  5574  0BB3                     u2561:
  5575  0BB3  2BBB               	goto	l2083
  5576  0BB4                     u2560:
  5577  0BB4                     l2079:
  5578  0BB4  3000               	movlw	0
  5579  0BB5  00AA               	movwf	?___ftmul
  5580  0BB6  3000               	movlw	0
  5581  0BB7  00AB               	movwf	?___ftmul+1
  5582  0BB8  3000               	movlw	0
  5583  0BB9  00AC               	movwf	?___ftmul+2
  5584  0BBA  2C62               	goto	l638
  5585  0BBB                     l2083:
  5586  0BBB  082D               	movf	___ftmul@f2,w
  5587  0BBC  00B0               	movwf	??___ftmul
  5588  0BBD  082E               	movf	___ftmul@f2+1,w
  5589  0BBE  00B1               	movwf	??___ftmul+1
  5590  0BBF  082F               	movf	___ftmul@f2+2,w
  5591  0BC0  00B2               	movwf	??___ftmul+2
  5592  0BC1  1003               	clrc
  5593  0BC2  0D31               	rlf	??___ftmul+1,w
  5594  0BC3  0D32               	rlf	??___ftmul+2,w
  5595  0BC4  00B3               	movwf	??___ftmul+3
  5596  0BC5  0833               	movf	??___ftmul+3,w
  5597  0BC6  00B9               	movwf	___ftmul@sign
  5598  0BC7  0839               	movf	___ftmul@sign,w
  5599  0BC8  1D03               	btfss	3,2
  5600  0BC9  2BCB               	goto	u2571
  5601  0BCA  2BCC               	goto	u2570
  5602  0BCB                     u2571:
  5603  0BCB  2BD3               	goto	l2089
  5604  0BCC                     u2570:
  5605  0BCC                     l2085:
  5606  0BCC  3000               	movlw	0
  5607  0BCD  00AA               	movwf	?___ftmul
  5608  0BCE  3000               	movlw	0
  5609  0BCF  00AB               	movwf	?___ftmul+1
  5610  0BD0  3000               	movlw	0
  5611  0BD1  00AC               	movwf	?___ftmul+2
  5612  0BD2  2C62               	goto	l638
  5613  0BD3                     l2089:
  5614  0BD3  0839               	movf	___ftmul@sign,w
  5615  0BD4  3E7B               	addlw	123
  5616  0BD5  00B0               	movwf	??___ftmul
  5617  0BD6  0830               	movf	??___ftmul,w
  5618  0BD7  07B4               	addwf	___ftmul@exp,f
  5619  0BD8  082A               	movf	___ftmul@f1,w
  5620  0BD9  00B0               	movwf	??___ftmul
  5621  0BDA  082B               	movf	___ftmul@f1+1,w
  5622  0BDB  00B1               	movwf	??___ftmul+1
  5623  0BDC  082C               	movf	___ftmul@f1+2,w
  5624  0BDD  00B2               	movwf	??___ftmul+2
  5625  0BDE  3010               	movlw	16
  5626  0BDF                     u2585:
  5627  0BDF  36B2               	lsrf	??___ftmul+2,f
  5628  0BE0  0CB1               	rrf	??___ftmul+1,f
  5629  0BE1  0CB0               	rrf	??___ftmul,f
  5630  0BE2                     u2580:
  5631  0BE2  0B89               	decfsz	9,f
  5632  0BE3  2BDF               	goto	u2585
  5633  0BE4  0830               	movf	??___ftmul,w
  5634  0BE5  00B3               	movwf	??___ftmul+3
  5635  0BE6  0833               	movf	??___ftmul+3,w
  5636  0BE7  00B9               	movwf	___ftmul@sign
  5637  0BE8  082D               	movf	___ftmul@f2,w
  5638  0BE9  00B0               	movwf	??___ftmul
  5639  0BEA  082E               	movf	___ftmul@f2+1,w
  5640  0BEB  00B1               	movwf	??___ftmul+1
  5641  0BEC  082F               	movf	___ftmul@f2+2,w
  5642  0BED  00B2               	movwf	??___ftmul+2
  5643  0BEE  3010               	movlw	16
  5644  0BEF                     u2595:
  5645  0BEF  36B2               	lsrf	??___ftmul+2,f
  5646  0BF0  0CB1               	rrf	??___ftmul+1,f
  5647  0BF1  0CB0               	rrf	??___ftmul,f
  5648  0BF2                     u2590:
  5649  0BF2  0B89               	decfsz	9,f
  5650  0BF3  2BEF               	goto	u2595
  5651  0BF4  0830               	movf	??___ftmul,w
  5652  0BF5  00B3               	movwf	??___ftmul+3
  5653  0BF6  0833               	movf	??___ftmul+3,w
  5654  0BF7  06B9               	xorwf	___ftmul@sign,f
  5655  0BF8  3080               	movlw	128
  5656  0BF9  00B0               	movwf	??___ftmul
  5657  0BFA  0830               	movf	??___ftmul,w
  5658  0BFB  05B9               	andwf	___ftmul@sign,f
  5659  0BFC                     l2091:
  5660  0BFC  17AB               	bsf	___ftmul@f1+1,7
  5661  0BFD                     l2093:
  5662  0BFD  17AE               	bsf	___ftmul@f2+1,7
  5663  0BFE                     l2095:
  5664  0BFE  30FF               	movlw	255
  5665  0BFF  05AD               	andwf	___ftmul@f2,f
  5666  0C00  30FF               	movlw	255
  5667  0C01  05AE               	andwf	___ftmul@f2+1,f
  5668  0C02  3000               	movlw	0
  5669  0C03  05AF               	andwf	___ftmul@f2+2,f
  5670  0C04                     l2097:
  5671  0C04  3000               	movlw	0
  5672  0C05  00B5               	movwf	___ftmul@f3_as_product
  5673  0C06  3000               	movlw	0
  5674  0C07  00B6               	movwf	___ftmul@f3_as_product+1
  5675  0C08  3000               	movlw	0
  5676  0C09  00B7               	movwf	___ftmul@f3_as_product+2
  5677  0C0A                     l2099:
  5678  0C0A  3007               	movlw	7
  5679  0C0B  00B0               	movwf	??___ftmul
  5680  0C0C  0830               	movf	??___ftmul,w
  5681  0C0D  00B8               	movwf	___ftmul@cntr
  5682  0C0E                     l2101:
  5683  0C0E  1C2A               	btfss	___ftmul@f1,0
  5684  0C0F  2C11               	goto	u2601
  5685  0C10  2C12               	goto	u2600
  5686  0C11                     u2601:
  5687  0C11  2C18               	goto	l2105
  5688  0C12                     u2600:
  5689  0C12                     l2103:
  5690  0C12  082D               	movf	___ftmul@f2,w
  5691  0C13  07B5               	addwf	___ftmul@f3_as_product,f
  5692  0C14  082E               	movf	___ftmul@f2+1,w
  5693  0C15  3DB6               	addwfc	___ftmul@f3_as_product+1,f
  5694  0C16  082F               	movf	___ftmul@f2+2,w
  5695  0C17  3DB7               	addwfc	___ftmul@f3_as_product+2,f
  5696  0C18                     l2105:
  5697  0C18  3001               	movlw	1
  5698  0C19                     u2615:
  5699  0C19  36AC               	lsrf	___ftmul@f1+2,f
  5700  0C1A  0CAB               	rrf	___ftmul@f1+1,f
  5701  0C1B  0CAA               	rrf	___ftmul@f1,f
  5702  0C1C  0B89               	decfsz	9,f
  5703  0C1D  2C19               	goto	u2615
  5704  0C1E                     l2107:
  5705  0C1E  3001               	movlw	1
  5706  0C1F                     u2625:
  5707  0C1F  35AD               	lslf	___ftmul@f2,f
  5708  0C20  0DAE               	rlf	___ftmul@f2+1,f
  5709  0C21  0DAF               	rlf	___ftmul@f2+2,f
  5710  0C22  0B89               	decfsz	9,f
  5711  0C23  2C1F               	goto	u2625
  5712  0C24                     l2109:
  5713  0C24  3001               	movlw	1
  5714  0C25  02B8               	subwf	___ftmul@cntr,f
  5715  0C26  1D03               	btfss	3,2
  5716  0C27  2C29               	goto	u2631
  5717  0C28  2C2A               	goto	u2630
  5718  0C29                     u2631:
  5719  0C29  2C0E               	goto	l2101
  5720  0C2A                     u2630:
  5721  0C2A                     l2111:
  5722  0C2A  3009               	movlw	9
  5723  0C2B  00B0               	movwf	??___ftmul
  5724  0C2C  0830               	movf	??___ftmul,w
  5725  0C2D  00B8               	movwf	___ftmul@cntr
  5726  0C2E                     l2113:
  5727  0C2E  1C2A               	btfss	___ftmul@f1,0
  5728  0C2F  2C31               	goto	u2641
  5729  0C30  2C32               	goto	u2640
  5730  0C31                     u2641:
  5731  0C31  2C38               	goto	l2117
  5732  0C32                     u2640:
  5733  0C32                     l2115:
  5734  0C32  082D               	movf	___ftmul@f2,w
  5735  0C33  07B5               	addwf	___ftmul@f3_as_product,f
  5736  0C34  082E               	movf	___ftmul@f2+1,w
  5737  0C35  3DB6               	addwfc	___ftmul@f3_as_product+1,f
  5738  0C36  082F               	movf	___ftmul@f2+2,w
  5739  0C37  3DB7               	addwfc	___ftmul@f3_as_product+2,f
  5740  0C38                     l2117:
  5741  0C38  3001               	movlw	1
  5742  0C39                     u2655:
  5743  0C39  36AC               	lsrf	___ftmul@f1+2,f
  5744  0C3A  0CAB               	rrf	___ftmul@f1+1,f
  5745  0C3B  0CAA               	rrf	___ftmul@f1,f
  5746  0C3C  0B89               	decfsz	9,f
  5747  0C3D  2C39               	goto	u2655
  5748  0C3E                     l2119:
  5749  0C3E  3001               	movlw	1
  5750  0C3F                     u2665:
  5751  0C3F  36B7               	lsrf	___ftmul@f3_as_product+2,f
  5752  0C40  0CB6               	rrf	___ftmul@f3_as_product+1,f
  5753  0C41  0CB5               	rrf	___ftmul@f3_as_product,f
  5754  0C42  0B89               	decfsz	9,f
  5755  0C43  2C3F               	goto	u2665
  5756  0C44                     l2121:
  5757  0C44  3001               	movlw	1
  5758  0C45  02B8               	subwf	___ftmul@cntr,f
  5759  0C46  1D03               	btfss	3,2
  5760  0C47  2C49               	goto	u2671
  5761  0C48  2C4A               	goto	u2670
  5762  0C49                     u2671:
  5763  0C49  2C2E               	goto	l2113
  5764  0C4A                     u2670:
  5765  0C4A                     l2123:
  5766  0C4A  0835               	movf	___ftmul@f3_as_product,w
  5767  0C4B  00F0               	movwf	___ftpack@arg
  5768  0C4C  0836               	movf	___ftmul@f3_as_product+1,w
  5769  0C4D  00F1               	movwf	___ftpack@arg+1
  5770  0C4E  0837               	movf	___ftmul@f3_as_product+2,w
  5771  0C4F  00F2               	movwf	___ftpack@arg+2
  5772  0C50  0834               	movf	___ftmul@exp,w
  5773  0C51  00B0               	movwf	??___ftmul
  5774  0C52  0830               	movf	??___ftmul,w
  5775  0C53  00F3               	movwf	___ftpack@exp
  5776  0C54  0839               	movf	___ftmul@sign,w
  5777  0C55  00B1               	movwf	??___ftmul+1
  5778  0C56  0831               	movf	??___ftmul+1,w
  5779  0C57  00F4               	movwf	___ftpack@sign
  5780  0C58  3188  20D3  318B   	fcall	___ftpack
  5781  0C5B  0870               	movf	?___ftpack,w
  5782  0C5C  0020               	movlb	0	; select bank0
  5783  0C5D  00AA               	movwf	?___ftmul
  5784  0C5E  0871               	movf	?___ftpack+1,w
  5785  0C5F  00AB               	movwf	?___ftmul+1
  5786  0C60  0872               	movf	?___ftpack+2,w
  5787  0C61  00AC               	movwf	?___ftmul+2
  5788  0C62                     l638:
  5789  0C62  0008               	return
  5790  0C63                     __end_of___ftmul:
  5791                           
  5792                           	psect	text11
  5793  0A40                     __ptext11:	
  5794 ;; *************** function __tdiv_to_l_ *****************
  5795 ;; Defined at:
  5796 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  f1              3    0[COMMON] float 
  5799 ;;  f2              3    3[COMMON] float 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  quot            4    0[BANK0 ] unsigned long 
  5802 ;;  exp1            1    5[BANK0 ] unsigned char 
  5803 ;;  cntr            1    4[BANK0 ] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  4    0[COMMON] unsigned long 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5813 ;;      Params:         6       0       0       0       0       0       0       0
  5814 ;;      Locals:         0       6       0       0       0       0       0       0
  5815 ;;      Temps:          4       0       0       0       0       0       0       0
  5816 ;;      Totals:        10       6       0       0       0       0       0       0
  5817 ;;Total ram usage:       16 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_sprintf
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826  0A40                     __tdiv_to_l_:	
  5827                           ;psect for function __tdiv_to_l_
  5828                           
  5829  0A40                     l2295:	
  5830                           ;incstack = 0
  5831                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5832                           
  5833  0A40  0870               	movf	__tdiv_to_l_@f1,w
  5834  0A41  00F6               	movwf	??__tdiv_to_l_
  5835  0A42  0871               	movf	__tdiv_to_l_@f1+1,w
  5836  0A43  00F7               	movwf	??__tdiv_to_l_+1
  5837  0A44  0872               	movf	__tdiv_to_l_@f1+2,w
  5838  0A45  00F8               	movwf	??__tdiv_to_l_+2
  5839  0A46  1003               	clrc
  5840  0A47  0D77               	rlf	??__tdiv_to_l_+1,w
  5841  0A48  0D78               	rlf	??__tdiv_to_l_+2,w
  5842  0A49  00F9               	movwf	??__tdiv_to_l_+3
  5843  0A4A  0879               	movf	??__tdiv_to_l_+3,w
  5844  0A4B  0020               	movlb	0	; select bank0
  5845  0A4C  00A5               	movwf	__tdiv_to_l_@exp1
  5846  0A4D  0825               	movf	__tdiv_to_l_@exp1,w
  5847  0A4E  1D03               	btfss	3,2
  5848  0A4F  2A51               	goto	u2921
  5849  0A50  2A52               	goto	u2920
  5850  0A51                     u2921:
  5851  0A51  2A5B               	goto	l2301
  5852  0A52                     u2920:
  5853  0A52                     l2297:
  5854  0A52  3000               	movlw	0
  5855  0A53  00F3               	movwf	?__tdiv_to_l_+3
  5856  0A54  3000               	movlw	0
  5857  0A55  00F2               	movwf	?__tdiv_to_l_+2
  5858  0A56  3000               	movlw	0
  5859  0A57  00F1               	movwf	?__tdiv_to_l_+1
  5860  0A58  3000               	movlw	0
  5861  0A59  00F0               	movwf	?__tdiv_to_l_
  5862  0A5A  2AEF               	goto	l614
  5863  0A5B                     l2301:
  5864  0A5B  0873               	movf	__tdiv_to_l_@f2,w
  5865  0A5C  00F6               	movwf	??__tdiv_to_l_
  5866  0A5D  0874               	movf	__tdiv_to_l_@f2+1,w
  5867  0A5E  00F7               	movwf	??__tdiv_to_l_+1
  5868  0A5F  0875               	movf	__tdiv_to_l_@f2+2,w
  5869  0A60  00F8               	movwf	??__tdiv_to_l_+2
  5870  0A61  1003               	clrc
  5871  0A62  0D77               	rlf	??__tdiv_to_l_+1,w
  5872  0A63  0D78               	rlf	??__tdiv_to_l_+2,w
  5873  0A64  00F9               	movwf	??__tdiv_to_l_+3
  5874  0A65  0879               	movf	??__tdiv_to_l_+3,w
  5875  0A66  00A4               	movwf	__tdiv_to_l_@cntr
  5876  0A67  0824               	movf	__tdiv_to_l_@cntr,w
  5877  0A68  1D03               	btfss	3,2
  5878  0A69  2A6B               	goto	u2931
  5879  0A6A  2A6C               	goto	u2930
  5880  0A6B                     u2931:
  5881  0A6B  2A6D               	goto	l615
  5882  0A6C                     u2930:
  5883  0A6C  2A52               	goto	l2297
  5884  0A6D                     l615:
  5885  0A6D  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5886  0A6E                     l2307:
  5887  0A6E  30FF               	movlw	255
  5888  0A6F  05F0               	andwf	__tdiv_to_l_@f1,f
  5889  0A70  30FF               	movlw	255
  5890  0A71  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5891  0A72  3000               	movlw	0
  5892  0A73  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5893  0A74                     l2309:
  5894  0A74  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5895  0A75  30FF               	movlw	255
  5896  0A76  05F3               	andwf	__tdiv_to_l_@f2,f
  5897  0A77  30FF               	movlw	255
  5898  0A78  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5899  0A79  3000               	movlw	0
  5900  0A7A  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5901  0A7B  3000               	movlw	0
  5902  0A7C  00A3               	movwf	__tdiv_to_l_@quot+3
  5903  0A7D  3000               	movlw	0
  5904  0A7E  00A2               	movwf	__tdiv_to_l_@quot+2
  5905  0A7F  3000               	movlw	0
  5906  0A80  00A1               	movwf	__tdiv_to_l_@quot+1
  5907  0A81  3000               	movlw	0
  5908  0A82  00A0               	movwf	__tdiv_to_l_@quot
  5909  0A83                     l2311:
  5910  0A83  307F               	movlw	127
  5911  0A84  02A5               	subwf	__tdiv_to_l_@exp1,f
  5912  0A85                     l2313:
  5913  0A85  3098               	movlw	152
  5914  0A86  0724               	addwf	__tdiv_to_l_@cntr,w
  5915  0A87  00F6               	movwf	??__tdiv_to_l_
  5916  0A88  0876               	movf	??__tdiv_to_l_,w
  5917  0A89  02A5               	subwf	__tdiv_to_l_@exp1,f
  5918  0A8A  3018               	movlw	24
  5919  0A8B  00F6               	movwf	??__tdiv_to_l_
  5920  0A8C  0876               	movf	??__tdiv_to_l_,w
  5921  0A8D  00A4               	movwf	__tdiv_to_l_@cntr
  5922  0A8E                     l2315:
  5923  0A8E  3001               	movlw	1
  5924  0A8F                     u2945:
  5925  0A8F  35A0               	lslf	__tdiv_to_l_@quot,f
  5926  0A90  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5927  0A91  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5928  0A92  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5929  0A93  0B89               	decfsz	9,f
  5930  0A94  2A8F               	goto	u2945
  5931  0A95                     l2317:
  5932  0A95  0875               	movf	__tdiv_to_l_@f2+2,w
  5933  0A96  0272               	subwf	__tdiv_to_l_@f1+2,w
  5934  0A97  1D03               	skipz
  5935  0A98  2A9F               	goto	u2955
  5936  0A99  0874               	movf	__tdiv_to_l_@f2+1,w
  5937  0A9A  0271               	subwf	__tdiv_to_l_@f1+1,w
  5938  0A9B  1D03               	skipz
  5939  0A9C  2A9F               	goto	u2955
  5940  0A9D  0873               	movf	__tdiv_to_l_@f2,w
  5941  0A9E  0270               	subwf	__tdiv_to_l_@f1,w
  5942  0A9F                     u2955:
  5943  0A9F  1C03               	skipc
  5944  0AA0  2AA2               	goto	u2951
  5945  0AA1  2AA3               	goto	u2950
  5946  0AA2                     u2951:
  5947  0AA2  2AAA               	goto	l2323
  5948  0AA3                     u2950:
  5949  0AA3                     l2319:
  5950  0AA3  0873               	movf	__tdiv_to_l_@f2,w
  5951  0AA4  02F0               	subwf	__tdiv_to_l_@f1,f
  5952  0AA5  0874               	movf	__tdiv_to_l_@f2+1,w
  5953  0AA6  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  5954  0AA7  0875               	movf	__tdiv_to_l_@f2+2,w
  5955  0AA8  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  5956  0AA9                     l2321:
  5957  0AA9  1420               	bsf	__tdiv_to_l_@quot,0
  5958  0AAA                     l2323:
  5959  0AAA  3001               	movlw	1
  5960  0AAB                     u2965:
  5961  0AAB  35F0               	lslf	__tdiv_to_l_@f1,f
  5962  0AAC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5963  0AAD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5964  0AAE  0B89               	decfsz	9,f
  5965  0AAF  2AAB               	goto	u2965
  5966  0AB0                     l2325:
  5967  0AB0  3001               	movlw	1
  5968  0AB1  02A4               	subwf	__tdiv_to_l_@cntr,f
  5969  0AB2  1D03               	btfss	3,2
  5970  0AB3  2AB5               	goto	u2971
  5971  0AB4  2AB6               	goto	u2970
  5972  0AB5                     u2971:
  5973  0AB5  2A8E               	goto	l2315
  5974  0AB6                     u2970:
  5975  0AB6                     l618:
  5976  0AB6  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5977  0AB7  2AB9               	goto	u2981
  5978  0AB8  2ABA               	goto	u2980
  5979  0AB9                     u2981:
  5980  0AB9  2AD2               	goto	l2335
  5981  0ABA                     u2980:
  5982  0ABA                     l2327:
  5983  0ABA  0825               	movf	__tdiv_to_l_@exp1,w
  5984  0ABB  3A80               	xorlw	128
  5985  0ABC  3E97               	addlw	151
  5986  0ABD  1803               	skipnc
  5987  0ABE  2AC0               	goto	u2991
  5988  0ABF  2AC1               	goto	u2990
  5989  0AC0                     u2991:
  5990  0AC0  2AC2               	goto	l2333
  5991  0AC1                     u2990:
  5992  0AC1  2A52               	goto	l2297
  5993  0AC2                     l2333:
  5994  0AC2  3001               	movlw	1
  5995  0AC3                     u3005:
  5996  0AC3  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  5997  0AC4  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5998  0AC5  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5999  0AC6  0CA0               	rrf	__tdiv_to_l_@quot,f
  6000  0AC7  0B89               	decfsz	9,f
  6001  0AC8  2AC3               	goto	u3005
  6002  0AC9  3001               	movlw	1
  6003  0ACA  00F6               	movwf	??__tdiv_to_l_
  6004  0ACB  0876               	movf	??__tdiv_to_l_,w
  6005  0ACC  07A5               	addwf	__tdiv_to_l_@exp1,f
  6006  0ACD  1D03               	btfss	3,2
  6007  0ACE  2AD0               	goto	u3011
  6008  0ACF  2AD1               	goto	u3010
  6009  0AD0                     u3011:
  6010  0AD0  2AC2               	goto	l2333
  6011  0AD1                     u3010:
  6012  0AD1  2AE7               	goto	l2343
  6013  0AD2                     l2335:
  6014  0AD2  3018               	movlw	24
  6015  0AD3  0225               	subwf	__tdiv_to_l_@exp1,w
  6016  0AD4  1C03               	skipc
  6017  0AD5  2AD7               	goto	u3021
  6018  0AD6  2AD8               	goto	u3020
  6019  0AD7                     u3021:
  6020  0AD7  2AE2               	goto	l625
  6021  0AD8                     u3020:
  6022  0AD8  2A52               	goto	l2297
  6023  0AD9                     l2341:
  6024  0AD9  3001               	movlw	1
  6025  0ADA                     u3035:
  6026  0ADA  35A0               	lslf	__tdiv_to_l_@quot,f
  6027  0ADB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6028  0ADC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6029  0ADD  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6030  0ADE  0B89               	decfsz	9,f
  6031  0ADF  2ADA               	goto	u3035
  6032  0AE0  3001               	movlw	1
  6033  0AE1  02A5               	subwf	__tdiv_to_l_@exp1,f
  6034  0AE2                     l625:
  6035  0AE2  0825               	movf	__tdiv_to_l_@exp1,w
  6036  0AE3  1D03               	btfss	3,2
  6037  0AE4  2AE6               	goto	u3041
  6038  0AE5  2AE7               	goto	u3040
  6039  0AE6                     u3041:
  6040  0AE6  2AD9               	goto	l2341
  6041  0AE7                     u3040:
  6042  0AE7                     l2343:
  6043  0AE7  0823               	movf	__tdiv_to_l_@quot+3,w
  6044  0AE8  00F3               	movwf	?__tdiv_to_l_+3
  6045  0AE9  0822               	movf	__tdiv_to_l_@quot+2,w
  6046  0AEA  00F2               	movwf	?__tdiv_to_l_+2
  6047  0AEB  0821               	movf	__tdiv_to_l_@quot+1,w
  6048  0AEC  00F1               	movwf	?__tdiv_to_l_+1
  6049  0AED  0820               	movf	__tdiv_to_l_@quot,w
  6050  0AEE  00F0               	movwf	?__tdiv_to_l_
  6051  0AEF                     l614:
  6052  0AEF  0008               	return
  6053  0AF0                     __end_of__tdiv_to_l_:
  6054                           
  6055                           	psect	text12
  6056  0C63                     __ptext12:	
  6057 ;; *************** function __div_to_l_ *****************
  6058 ;; Defined at:
  6059 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  f1              3    0[COMMON] unsigned long 
  6062 ;;  f2              3    3[COMMON] unsigned long 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  quot            4    0[BANK0 ] unsigned long 
  6065 ;;  exp1            1    5[BANK0 ] unsigned char 
  6066 ;;  cntr            1    4[BANK0 ] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  4    0[COMMON] unsigned long 
  6069 ;; Registers used:
  6070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6076 ;;      Params:         6       0       0       0       0       0       0       0
  6077 ;;      Locals:         0       6       0       0       0       0       0       0
  6078 ;;      Temps:          8       0       0       0       0       0       0       0
  6079 ;;      Totals:        14       6       0       0       0       0       0       0
  6080 ;;Total ram usage:       20 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_sprintf
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089  0C63                     __div_to_l_:	
  6090                           ;psect for function __div_to_l_
  6091                           
  6092  0C63                     l2347:	
  6093                           ;incstack = 0
  6094                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
  6095                           
  6096  0C63  3070               	movlw	low (__div_to_l_@f1| 0)
  6097  0C64  0086               	movwf	6
  6098  0C65  0187               	clrf	7
  6099  0C66  3F40               	moviw [0]fsr1
  6100  0C67  00F6               	movwf	??__div_to_l_
  6101  0C68  3F41               	moviw [1]fsr1
  6102  0C69  00F7               	movwf	??__div_to_l_+1
  6103  0C6A  3F42               	moviw [2]fsr1
  6104  0C6B  00F8               	movwf	??__div_to_l_+2
  6105  0C6C  3F43               	moviw [3]fsr1
  6106  0C6D  00F9               	movwf	??__div_to_l_+3
  6107  0C6E  1003               	clrc
  6108  0C6F  0D78               	rlf	??__div_to_l_+2,w
  6109  0C70  0D79               	rlf	??__div_to_l_+3,w
  6110  0C71  00FA               	movwf	??__div_to_l_+4
  6111  0C72  087A               	movf	??__div_to_l_+4,w
  6112  0C73  0020               	movlb	0	; select bank0
  6113  0C74  00A5               	movwf	__div_to_l_@exp1
  6114  0C75  0825               	movf	__div_to_l_@exp1,w
  6115  0C76  1D03               	btfss	3,2
  6116  0C77  2C79               	goto	u3051
  6117  0C78  2C7A               	goto	u3050
  6118  0C79                     u3051:
  6119  0C79  2C83               	goto	l2353
  6120  0C7A                     u3050:
  6121  0C7A                     l2349:
  6122  0C7A  3000               	movlw	0
  6123  0C7B  00F3               	movwf	?__div_to_l_+3
  6124  0C7C  3000               	movlw	0
  6125  0C7D  00F2               	movwf	?__div_to_l_+2
  6126  0C7E  3000               	movlw	0
  6127  0C7F  00F1               	movwf	?__div_to_l_+1
  6128  0C80  3000               	movlw	0
  6129  0C81  00F0               	movwf	?__div_to_l_
  6130  0C82  2D79               	goto	l535
  6131  0C83                     l2353:
  6132  0C83  3073               	movlw	low (__div_to_l_@f2| 0)
  6133  0C84  0086               	movwf	6
  6134  0C85  0187               	clrf	7
  6135  0C86  3F40               	moviw [0]fsr1
  6136  0C87  00F6               	movwf	??__div_to_l_
  6137  0C88  3F41               	moviw [1]fsr1
  6138  0C89  00F7               	movwf	??__div_to_l_+1
  6139  0C8A  3F42               	moviw [2]fsr1
  6140  0C8B  00F8               	movwf	??__div_to_l_+2
  6141  0C8C  3F43               	moviw [3]fsr1
  6142  0C8D  00F9               	movwf	??__div_to_l_+3
  6143  0C8E  1003               	clrc
  6144  0C8F  0D78               	rlf	??__div_to_l_+2,w
  6145  0C90  0D79               	rlf	??__div_to_l_+3,w
  6146  0C91  00FA               	movwf	??__div_to_l_+4
  6147  0C92  087A               	movf	??__div_to_l_+4,w
  6148  0C93  00A4               	movwf	__div_to_l_@cntr
  6149  0C94  0824               	movf	__div_to_l_@cntr,w
  6150  0C95  1D03               	btfss	3,2
  6151  0C96  2C98               	goto	u3061
  6152  0C97  2C99               	goto	u3060
  6153  0C98                     u3061:
  6154  0C98  2C9A               	goto	l2359
  6155  0C99                     u3060:
  6156  0C99  2C7A               	goto	l2349
  6157  0C9A                     l2359:
  6158  0C9A  3070               	movlw	low (__div_to_l_@f1| 0)
  6159  0C9B  0086               	movwf	6
  6160  0C9C  0187               	clrf	7
  6161  0C9D  3000               	movlw	0
  6162  0C9E  0481               	iorwf	1,f
  6163  0C9F  3141               	addfsr 1,1
  6164  0CA0  3000               	movlw	0
  6165  0CA1  0481               	iorwf	1,f
  6166  0CA2  3141               	addfsr 1,1
  6167  0CA3  3080               	movlw	128
  6168  0CA4  0481               	iorwf	1,f
  6169  0CA5  3141               	addfsr 1,1
  6170  0CA6  3000               	movlw	0
  6171  0CA7  0481               	iorwf	1,f
  6172  0CA8  3070               	movlw	low (__div_to_l_@f1| 0)
  6173  0CA9  0086               	movwf	6
  6174  0CAA  0187               	clrf	7
  6175  0CAB  30FF               	movlw	255
  6176  0CAC  0581               	andwf	1,f
  6177  0CAD  3141               	addfsr 1,1
  6178  0CAE  30FF               	movlw	255
  6179  0CAF  0581               	andwf	1,f
  6180  0CB0  3141               	addfsr 1,1
  6181  0CB1  30FF               	movlw	255
  6182  0CB2  0581               	andwf	1,f
  6183  0CB3  3141               	addfsr 1,1
  6184  0CB4  3000               	movlw	0
  6185  0CB5  0581               	andwf	1,f
  6186  0CB6  3073               	movlw	low (__div_to_l_@f2| 0)
  6187  0CB7  0086               	movwf	6
  6188  0CB8  0187               	clrf	7
  6189  0CB9  3000               	movlw	0
  6190  0CBA  0481               	iorwf	1,f
  6191  0CBB  3141               	addfsr 1,1
  6192  0CBC  3000               	movlw	0
  6193  0CBD  0481               	iorwf	1,f
  6194  0CBE  3141               	addfsr 1,1
  6195  0CBF  3080               	movlw	128
  6196  0CC0  0481               	iorwf	1,f
  6197  0CC1  3141               	addfsr 1,1
  6198  0CC2  3000               	movlw	0
  6199  0CC3  0481               	iorwf	1,f
  6200  0CC4  3073               	movlw	low (__div_to_l_@f2| 0)
  6201  0CC5  0086               	movwf	6
  6202  0CC6  0187               	clrf	7
  6203  0CC7  30FF               	movlw	255
  6204  0CC8  0581               	andwf	1,f
  6205  0CC9  3141               	addfsr 1,1
  6206  0CCA  30FF               	movlw	255
  6207  0CCB  0581               	andwf	1,f
  6208  0CCC  3141               	addfsr 1,1
  6209  0CCD  30FF               	movlw	255
  6210  0CCE  0581               	andwf	1,f
  6211  0CCF  3141               	addfsr 1,1
  6212  0CD0  3000               	movlw	0
  6213  0CD1  0581               	andwf	1,f
  6214  0CD2                     l2361:
  6215  0CD2  3000               	movlw	0
  6216  0CD3  00A3               	movwf	__div_to_l_@quot+3
  6217  0CD4  3000               	movlw	0
  6218  0CD5  00A2               	movwf	__div_to_l_@quot+2
  6219  0CD6  3000               	movlw	0
  6220  0CD7  00A1               	movwf	__div_to_l_@quot+1
  6221  0CD8  3000               	movlw	0
  6222  0CD9  00A0               	movwf	__div_to_l_@quot
  6223  0CDA                     l2363:
  6224  0CDA  307F               	movlw	127
  6225  0CDB  02A5               	subwf	__div_to_l_@exp1,f
  6226  0CDC                     l2365:
  6227  0CDC  30A0               	movlw	160
  6228  0CDD  0724               	addwf	__div_to_l_@cntr,w
  6229  0CDE  00F6               	movwf	??__div_to_l_
  6230  0CDF  0876               	movf	??__div_to_l_,w
  6231  0CE0  02A5               	subwf	__div_to_l_@exp1,f
  6232  0CE1                     l2367:
  6233  0CE1  3020               	movlw	32
  6234  0CE2  00F6               	movwf	??__div_to_l_
  6235  0CE3  0876               	movf	??__div_to_l_,w
  6236  0CE4  00A4               	movwf	__div_to_l_@cntr
  6237  0CE5                     l2369:
  6238  0CE5  3001               	movlw	1
  6239  0CE6                     u3075:
  6240  0CE6  35A0               	lslf	__div_to_l_@quot,f
  6241  0CE7  0DA1               	rlf	__div_to_l_@quot+1,f
  6242  0CE8  0DA2               	rlf	__div_to_l_@quot+2,f
  6243  0CE9  0DA3               	rlf	__div_to_l_@quot+3,f
  6244  0CEA  0B89               	decfsz	9,f
  6245  0CEB  2CE6               	goto	u3075
  6246  0CEC                     l2371:
  6247  0CEC  3073               	movlw	low (__div_to_l_@f2| 0)
  6248  0CED  0086               	movwf	6
  6249  0CEE  0187               	clrf	7
  6250  0CEF  3F40               	moviw [0]fsr1
  6251  0CF0  00F6               	movwf	??__div_to_l_
  6252  0CF1  3F41               	moviw [1]fsr1
  6253  0CF2  00F7               	movwf	??__div_to_l_+1
  6254  0CF3  3F42               	moviw [2]fsr1
  6255  0CF4  00F8               	movwf	??__div_to_l_+2
  6256  0CF5  3F43               	moviw [3]fsr1
  6257  0CF6  00F9               	movwf	??__div_to_l_+3
  6258  0CF7  3070               	movlw	low (__div_to_l_@f1| 0)
  6259  0CF8  0086               	movwf	6
  6260  0CF9  0187               	clrf	7
  6261  0CFA  3F40               	moviw [0]fsr1
  6262  0CFB  00FA               	movwf	??__div_to_l_+4
  6263  0CFC  3F41               	moviw [1]fsr1
  6264  0CFD  00FB               	movwf	??__div_to_l_+5
  6265  0CFE  3F42               	moviw [2]fsr1
  6266  0CFF  00FC               	movwf	??__div_to_l_+6
  6267  0D00  3F43               	moviw [3]fsr1
  6268  0D01  00FD               	movwf	??__div_to_l_+7
  6269  0D02  0879               	movf	??__div_to_l_+3,w
  6270  0D03  027D               	subwf	??__div_to_l_+7,w
  6271  0D04  1D03               	skipz
  6272  0D05  2D10               	goto	u3085
  6273  0D06  0878               	movf	??__div_to_l_+2,w
  6274  0D07  027C               	subwf	??__div_to_l_+6,w
  6275  0D08  1D03               	skipz
  6276  0D09  2D10               	goto	u3085
  6277  0D0A  0877               	movf	??__div_to_l_+1,w
  6278  0D0B  027B               	subwf	??__div_to_l_+5,w
  6279  0D0C  1D03               	skipz
  6280  0D0D  2D10               	goto	u3085
  6281  0D0E  0876               	movf	??__div_to_l_,w
  6282  0D0F  027A               	subwf	??__div_to_l_+4,w
  6283  0D10                     u3085:
  6284  0D10  1C03               	skipc
  6285  0D11  2D13               	goto	u3081
  6286  0D12  2D14               	goto	u3080
  6287  0D13                     u3081:
  6288  0D13  2D2F               	goto	l2377
  6289  0D14                     u3080:
  6290  0D14                     l2373:
  6291  0D14  3073               	movlw	low (__div_to_l_@f2| 0)
  6292  0D15  0086               	movwf	6
  6293  0D16  0187               	clrf	7
  6294  0D17  3F40               	moviw [0]fsr1
  6295  0D18  00F6               	movwf	??__div_to_l_
  6296  0D19  3F41               	moviw [1]fsr1
  6297  0D1A  00F7               	movwf	??__div_to_l_+1
  6298  0D1B  3F42               	moviw [2]fsr1
  6299  0D1C  00F8               	movwf	??__div_to_l_+2
  6300  0D1D  3F43               	moviw [3]fsr1
  6301  0D1E  00F9               	movwf	??__div_to_l_+3
  6302  0D1F  3070               	movlw	low (__div_to_l_@f1| 0)
  6303  0D20  0086               	movwf	6
  6304  0D21  0187               	clrf	7
  6305  0D22  0876               	movf	??__div_to_l_,w
  6306  0D23  0281               	subwf	1,f
  6307  0D24  3141               	addfsr 1,1
  6308  0D25  0877               	movf	??__div_to_l_+1,w
  6309  0D26  3B81               	subwfb	1,f
  6310  0D27  3141               	addfsr 1,1
  6311  0D28  0878               	movf	??__div_to_l_+2,w
  6312  0D29  3B81               	subwfb	1,f
  6313  0D2A  3141               	addfsr 1,1
  6314  0D2B  0879               	movf	??__div_to_l_+3,w
  6315  0D2C  3B81               	subwfb	1,f
  6316  0D2D  317D               	addfsr 1,-3
  6317  0D2E                     l2375:
  6318  0D2E  1420               	bsf	__div_to_l_@quot,0
  6319  0D2F                     l2377:
  6320  0D2F  3070               	movlw	low (__div_to_l_@f1| 0)
  6321  0D30  0086               	movwf	6
  6322  0D31  0187               	clrf	7
  6323  0D32  3581               	lslf	1,f
  6324  0D33  3141               	addfsr 1,1
  6325  0D34  0D81               	rlf	1,f
  6326  0D35  3141               	addfsr 1,1
  6327  0D36  0D81               	rlf	1,f
  6328  0D37  3141               	addfsr 1,1
  6329  0D38  0D81               	rlf	1,f
  6330  0D39  317D               	addfsr 1,-3
  6331  0D3A                     l2379:
  6332  0D3A  3001               	movlw	1
  6333  0D3B  02A4               	subwf	__div_to_l_@cntr,f
  6334  0D3C  1D03               	btfss	3,2
  6335  0D3D  2D3F               	goto	u3091
  6336  0D3E  2D40               	goto	u3090
  6337  0D3F                     u3091:
  6338  0D3F  2CE5               	goto	l2369
  6339  0D40                     u3090:
  6340  0D40                     l539:
  6341  0D40  1FA5               	btfss	__div_to_l_@exp1,7
  6342  0D41  2D43               	goto	u3101
  6343  0D42  2D44               	goto	u3100
  6344  0D43                     u3101:
  6345  0D43  2D5C               	goto	l2389
  6346  0D44                     u3100:
  6347  0D44                     l2381:
  6348  0D44  0825               	movf	__div_to_l_@exp1,w
  6349  0D45  3A80               	xorlw	128
  6350  0D46  3E9F               	addlw	159
  6351  0D47  1803               	skipnc
  6352  0D48  2D4A               	goto	u3111
  6353  0D49  2D4B               	goto	u3110
  6354  0D4A                     u3111:
  6355  0D4A  2D4C               	goto	l2387
  6356  0D4B                     u3110:
  6357  0D4B  2C7A               	goto	l2349
  6358  0D4C                     l2387:
  6359  0D4C  3001               	movlw	1
  6360  0D4D                     u3125:
  6361  0D4D  36A3               	lsrf	__div_to_l_@quot+3,f
  6362  0D4E  0CA2               	rrf	__div_to_l_@quot+2,f
  6363  0D4F  0CA1               	rrf	__div_to_l_@quot+1,f
  6364  0D50  0CA0               	rrf	__div_to_l_@quot,f
  6365  0D51  0B89               	decfsz	9,f
  6366  0D52  2D4D               	goto	u3125
  6367  0D53  3001               	movlw	1
  6368  0D54  00F6               	movwf	??__div_to_l_
  6369  0D55  0876               	movf	??__div_to_l_,w
  6370  0D56  07A5               	addwf	__div_to_l_@exp1,f
  6371  0D57  1D03               	btfss	3,2
  6372  0D58  2D5A               	goto	u3131
  6373  0D59  2D5B               	goto	u3130
  6374  0D5A                     u3131:
  6375  0D5A  2D4C               	goto	l2387
  6376  0D5B                     u3130:
  6377  0D5B  2D71               	goto	l2397
  6378  0D5C                     l2389:
  6379  0D5C  3020               	movlw	32
  6380  0D5D  0225               	subwf	__div_to_l_@exp1,w
  6381  0D5E  1C03               	skipc
  6382  0D5F  2D61               	goto	u3141
  6383  0D60  2D62               	goto	u3140
  6384  0D61                     u3141:
  6385  0D61  2D6C               	goto	l546
  6386  0D62                     u3140:
  6387  0D62  2C7A               	goto	l2349
  6388  0D63                     l2395:
  6389  0D63  3001               	movlw	1
  6390  0D64                     u3155:
  6391  0D64  35A0               	lslf	__div_to_l_@quot,f
  6392  0D65  0DA1               	rlf	__div_to_l_@quot+1,f
  6393  0D66  0DA2               	rlf	__div_to_l_@quot+2,f
  6394  0D67  0DA3               	rlf	__div_to_l_@quot+3,f
  6395  0D68  0B89               	decfsz	9,f
  6396  0D69  2D64               	goto	u3155
  6397  0D6A  3001               	movlw	1
  6398  0D6B  02A5               	subwf	__div_to_l_@exp1,f
  6399  0D6C                     l546:
  6400  0D6C  0825               	movf	__div_to_l_@exp1,w
  6401  0D6D  1D03               	btfss	3,2
  6402  0D6E  2D70               	goto	u3161
  6403  0D6F  2D71               	goto	u3160
  6404  0D70                     u3161:
  6405  0D70  2D63               	goto	l2395
  6406  0D71                     u3160:
  6407  0D71                     l2397:
  6408  0D71  0823               	movf	__div_to_l_@quot+3,w
  6409  0D72  00F3               	movwf	?__div_to_l_+3
  6410  0D73  0822               	movf	__div_to_l_@quot+2,w
  6411  0D74  00F2               	movwf	?__div_to_l_+2
  6412  0D75  0821               	movf	__div_to_l_@quot+1,w
  6413  0D76  00F1               	movwf	?__div_to_l_+1
  6414  0D77  0820               	movf	__div_to_l_@quot,w
  6415  0D78  00F0               	movwf	?__div_to_l_
  6416  0D79                     l535:
  6417  0D79  0008               	return
  6418  0D7A                     __end_of__div_to_l_:
  6419                           
  6420                           	psect	text13
  6421  16E3                     __ptext13:	
  6422 ;; *************** function ___lltoft *****************
  6423 ;; Defined at:
  6424 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lltoft.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  c               4    8[COMMON] unsigned long 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  exp             1   13[COMMON] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  3    8[COMMON] float 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0, pclath, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6438 ;;      Params:         4       0       0       0       0       0       0       0
  6439 ;;      Locals:         1       0       0       0       0       0       0       0
  6440 ;;      Temps:          1       0       0       0       0       0       0       0
  6441 ;;      Totals:         6       0       0       0       0       0       0       0
  6442 ;;Total ram usage:        6 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; Hardware stack levels required when called: 1
  6445 ;; This function calls:
  6446 ;;		___ftpack
  6447 ;; This function is called by:
  6448 ;;		_sprintf
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452  16E3                     ___lltoft:	
  6453                           ;psect for function ___lltoft
  6454                           
  6455  16E3                     l2523:	
  6456                           ;incstack = 0
  6457                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6458                           
  6459  16E3  308E               	movlw	142
  6460  16E4  00FC               	movwf	??___lltoft
  6461  16E5  087C               	movf	??___lltoft,w
  6462  16E6  00FD               	movwf	___lltoft@exp
  6463  16E7  2EF3               	goto	l2527
  6464  16E8                     l2525:
  6465  16E8  3001               	movlw	1
  6466  16E9                     u3455:
  6467  16E9  36FB               	lsrf	___lltoft@c+3,f
  6468  16EA  0CFA               	rrf	___lltoft@c+2,f
  6469  16EB  0CF9               	rrf	___lltoft@c+1,f
  6470  16EC  0CF8               	rrf	___lltoft@c,f
  6471  16ED  0B89               	decfsz	9,f
  6472  16EE  2EE9               	goto	u3455
  6473  16EF  3001               	movlw	1
  6474  16F0  00FC               	movwf	??___lltoft
  6475  16F1  087C               	movf	??___lltoft,w
  6476  16F2  07FD               	addwf	___lltoft@exp,f
  6477  16F3                     l2527:
  6478  16F3  30FF               	movlw	255
  6479  16F4  057B               	andwf	___lltoft@c+3,w
  6480  16F5  1D03               	btfss	3,2
  6481  16F6  2EF8               	goto	u3461
  6482  16F7  2EF9               	goto	u3460
  6483  16F8                     u3461:
  6484  16F8  2EE8               	goto	l2525
  6485  16F9                     u3460:
  6486  16F9                     l2529:
  6487  16F9  0878               	movf	___lltoft@c,w
  6488  16FA  00F0               	movwf	___ftpack@arg
  6489  16FB  0879               	movf	___lltoft@c+1,w
  6490  16FC  00F1               	movwf	___ftpack@arg+1
  6491  16FD  087A               	movf	___lltoft@c+2,w
  6492  16FE  00F2               	movwf	___ftpack@arg+2
  6493  16FF  087D               	movf	___lltoft@exp,w
  6494  1700  00FC               	movwf	??___lltoft
  6495  1701  087C               	movf	??___lltoft,w
  6496  1702  00F3               	movwf	___ftpack@exp
  6497  1703  01F4               	clrf	___ftpack@sign
  6498  1704  3188  20D3  3196   	fcall	___ftpack
  6499  1707  0870               	movf	?___ftpack,w
  6500  1708  00F8               	movwf	?___lltoft
  6501  1709  0871               	movf	?___ftpack+1,w
  6502  170A  00F9               	movwf	?___lltoft+1
  6503  170B  0872               	movf	?___ftpack+2,w
  6504  170C  00FA               	movwf	?___lltoft+2
  6505  170D                     l708:
  6506  170D  0008               	return
  6507  170E                     __end_of___lltoft:
  6508                           
  6509                           	psect	text14
  6510  17B6                     __ptext14:	
  6511 ;; *************** function ___llmod *****************
  6512 ;; Defined at:
  6513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  divisor         4    0[COMMON] unsigned long 
  6516 ;;  dividend        4    4[COMMON] unsigned long 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  counter         1    9[COMMON] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  4    0[COMMON] unsigned long 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6528 ;;      Params:         8       0       0       0       0       0       0       0
  6529 ;;      Locals:         1       0       0       0       0       0       0       0
  6530 ;;      Temps:          1       0       0       0       0       0       0       0
  6531 ;;      Totals:        10       0       0       0       0       0       0       0
  6532 ;;Total ram usage:       10 bytes
  6533 ;; Hardware stack levels used: 1
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_sprintf
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541  17B6                     ___llmod:	
  6542                           ;psect for function ___llmod
  6543                           
  6544  17B6                     l2503:	
  6545                           ;incstack = 0
  6546                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6547                           
  6548  17B6  0873               	movf	___llmod@divisor+3,w
  6549  17B7  0472               	iorwf	___llmod@divisor+2,w
  6550  17B8  0471               	iorwf	___llmod@divisor+1,w
  6551  17B9  0470               	iorwf	___llmod@divisor,w
  6552  17BA  1903               	skipnz
  6553  17BB  2FBD               	goto	u3391
  6554  17BC  2FBE               	goto	u3390
  6555  17BD                     u3391:
  6556  17BD  2FF7               	goto	l2519
  6557  17BE                     u3390:
  6558  17BE                     l2505:
  6559  17BE  01F9               	clrf	___llmod@counter
  6560  17BF  0AF9               	incf	___llmod@counter,f
  6561  17C0  2FCC               	goto	l2509
  6562  17C1                     l2507:
  6563  17C1  3001               	movlw	1
  6564  17C2                     u3405:
  6565  17C2  35F0               	lslf	___llmod@divisor,f
  6566  17C3  0DF1               	rlf	___llmod@divisor+1,f
  6567  17C4  0DF2               	rlf	___llmod@divisor+2,f
  6568  17C5  0DF3               	rlf	___llmod@divisor+3,f
  6569  17C6  0B89               	decfsz	9,f
  6570  17C7  2FC2               	goto	u3405
  6571  17C8  3001               	movlw	1
  6572  17C9  00F8               	movwf	??___llmod
  6573  17CA  0878               	movf	??___llmod,w
  6574  17CB  07F9               	addwf	___llmod@counter,f
  6575  17CC                     l2509:
  6576  17CC  1FF3               	btfss	___llmod@divisor+3,7
  6577  17CD  2FCF               	goto	u3411
  6578  17CE  2FD0               	goto	u3410
  6579  17CF                     u3411:
  6580  17CF  2FC1               	goto	l2507
  6581  17D0                     u3410:
  6582  17D0                     l2511:
  6583  17D0  0873               	movf	___llmod@divisor+3,w
  6584  17D1  0277               	subwf	___llmod@dividend+3,w
  6585  17D2  1D03               	skipz
  6586  17D3  2FDE               	goto	u3425
  6587  17D4  0872               	movf	___llmod@divisor+2,w
  6588  17D5  0276               	subwf	___llmod@dividend+2,w
  6589  17D6  1D03               	skipz
  6590  17D7  2FDE               	goto	u3425
  6591  17D8  0871               	movf	___llmod@divisor+1,w
  6592  17D9  0275               	subwf	___llmod@dividend+1,w
  6593  17DA  1D03               	skipz
  6594  17DB  2FDE               	goto	u3425
  6595  17DC  0870               	movf	___llmod@divisor,w
  6596  17DD  0274               	subwf	___llmod@dividend,w
  6597  17DE                     u3425:
  6598  17DE  1C03               	skipc
  6599  17DF  2FE1               	goto	u3421
  6600  17E0  2FE2               	goto	u3420
  6601  17E1                     u3421:
  6602  17E1  2FEA               	goto	l2515
  6603  17E2                     u3420:
  6604  17E2                     l2513:
  6605  17E2  0870               	movf	___llmod@divisor,w
  6606  17E3  02F4               	subwf	___llmod@dividend,f
  6607  17E4  0871               	movf	___llmod@divisor+1,w
  6608  17E5  3BF5               	subwfb	___llmod@dividend+1,f
  6609  17E6  0872               	movf	___llmod@divisor+2,w
  6610  17E7  3BF6               	subwfb	___llmod@dividend+2,f
  6611  17E8  0873               	movf	___llmod@divisor+3,w
  6612  17E9  3BF7               	subwfb	___llmod@dividend+3,f
  6613  17EA                     l2515:
  6614  17EA  3001               	movlw	1
  6615  17EB                     u3435:
  6616  17EB  36F3               	lsrf	___llmod@divisor+3,f
  6617  17EC  0CF2               	rrf	___llmod@divisor+2,f
  6618  17ED  0CF1               	rrf	___llmod@divisor+1,f
  6619  17EE  0CF0               	rrf	___llmod@divisor,f
  6620  17EF  0B89               	decfsz	9,f
  6621  17F0  2FEB               	goto	u3435
  6622  17F1                     l2517:
  6623  17F1  3001               	movlw	1
  6624  17F2  02F9               	subwf	___llmod@counter,f
  6625  17F3  1D03               	btfss	3,2
  6626  17F4  2FF6               	goto	u3441
  6627  17F5  2FF7               	goto	u3440
  6628  17F6                     u3441:
  6629  17F6  2FD0               	goto	l2511
  6630  17F7                     u3440:
  6631  17F7                     l2519:
  6632  17F7  0877               	movf	___llmod@dividend+3,w
  6633  17F8  00F3               	movwf	?___llmod+3
  6634  17F9  0876               	movf	___llmod@dividend+2,w
  6635  17FA  00F2               	movwf	?___llmod+2
  6636  17FB  0875               	movf	___llmod@dividend+1,w
  6637  17FC  00F1               	movwf	?___llmod+1
  6638  17FD  0874               	movf	___llmod@dividend,w
  6639  17FE  00F0               	movwf	?___llmod
  6640  17FF                     l700:
  6641  17FF  0008               	return
  6642  1800                     __end_of___llmod:
  6643                           
  6644                           	psect	text15
  6645  0819                     __ptext15:	
  6646 ;; *************** function ___lldiv *****************
  6647 ;; Defined at:
  6648 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  divisor         4    0[COMMON] unsigned long 
  6651 ;;  dividend        4    4[COMMON] unsigned long 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  quotient        4    9[COMMON] unsigned long 
  6654 ;;  counter         1   13[COMMON] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  4    0[COMMON] unsigned long 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2, status,0
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6664 ;;      Params:         8       0       0       0       0       0       0       0
  6665 ;;      Locals:         5       0       0       0       0       0       0       0
  6666 ;;      Temps:          1       0       0       0       0       0       0       0
  6667 ;;      Totals:        14       0       0       0       0       0       0       0
  6668 ;;Total ram usage:       14 bytes
  6669 ;; Hardware stack levels used: 1
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_sprintf
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677  0819                     ___lldiv:	
  6678                           ;psect for function ___lldiv
  6679                           
  6680  0819                     l2401:	
  6681                           ;incstack = 0
  6682                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6683                           
  6684  0819  3000               	movlw	0
  6685  081A  00FC               	movwf	___lldiv@quotient+3
  6686  081B  3000               	movlw	0
  6687  081C  00FB               	movwf	___lldiv@quotient+2
  6688  081D  3000               	movlw	0
  6689  081E  00FA               	movwf	___lldiv@quotient+1
  6690  081F  3000               	movlw	0
  6691  0820  00F9               	movwf	___lldiv@quotient
  6692  0821  0873               	movf	___lldiv@divisor+3,w
  6693  0822  0472               	iorwf	___lldiv@divisor+2,w
  6694  0823  0471               	iorwf	___lldiv@divisor+1,w
  6695  0824  0470               	iorwf	___lldiv@divisor,w
  6696  0825  1903               	skipnz
  6697  0826  2828               	goto	u3171
  6698  0827  2829               	goto	u3170
  6699  0828                     u3171:
  6700  0828  286A               	goto	l2421
  6701  0829                     u3170:
  6702  0829                     l2403:
  6703  0829  01FD               	clrf	___lldiv@counter
  6704  082A  0AFD               	incf	___lldiv@counter,f
  6705  082B  2837               	goto	l2407
  6706  082C                     l2405:
  6707  082C  3001               	movlw	1
  6708  082D                     u3185:
  6709  082D  35F0               	lslf	___lldiv@divisor,f
  6710  082E  0DF1               	rlf	___lldiv@divisor+1,f
  6711  082F  0DF2               	rlf	___lldiv@divisor+2,f
  6712  0830  0DF3               	rlf	___lldiv@divisor+3,f
  6713  0831  0B89               	decfsz	9,f
  6714  0832  282D               	goto	u3185
  6715  0833  3001               	movlw	1
  6716  0834  00F8               	movwf	??___lldiv
  6717  0835  0878               	movf	??___lldiv,w
  6718  0836  07FD               	addwf	___lldiv@counter,f
  6719  0837                     l2407:
  6720  0837  1FF3               	btfss	___lldiv@divisor+3,7
  6721  0838  283A               	goto	u3191
  6722  0839  283B               	goto	u3190
  6723  083A                     u3191:
  6724  083A  282C               	goto	l2405
  6725  083B                     u3190:
  6726  083B                     l2409:
  6727  083B  3001               	movlw	1
  6728  083C                     u3205:
  6729  083C  35F9               	lslf	___lldiv@quotient,f
  6730  083D  0DFA               	rlf	___lldiv@quotient+1,f
  6731  083E  0DFB               	rlf	___lldiv@quotient+2,f
  6732  083F  0DFC               	rlf	___lldiv@quotient+3,f
  6733  0840  0B89               	decfsz	9,f
  6734  0841  283C               	goto	u3205
  6735  0842                     l2411:
  6736  0842  0873               	movf	___lldiv@divisor+3,w
  6737  0843  0277               	subwf	___lldiv@dividend+3,w
  6738  0844  1D03               	skipz
  6739  0845  2850               	goto	u3215
  6740  0846  0872               	movf	___lldiv@divisor+2,w
  6741  0847  0276               	subwf	___lldiv@dividend+2,w
  6742  0848  1D03               	skipz
  6743  0849  2850               	goto	u3215
  6744  084A  0871               	movf	___lldiv@divisor+1,w
  6745  084B  0275               	subwf	___lldiv@dividend+1,w
  6746  084C  1D03               	skipz
  6747  084D  2850               	goto	u3215
  6748  084E  0870               	movf	___lldiv@divisor,w
  6749  084F  0274               	subwf	___lldiv@dividend,w
  6750  0850                     u3215:
  6751  0850  1C03               	skipc
  6752  0851  2853               	goto	u3211
  6753  0852  2854               	goto	u3210
  6754  0853                     u3211:
  6755  0853  285D               	goto	l2417
  6756  0854                     u3210:
  6757  0854                     l2413:
  6758  0854  0870               	movf	___lldiv@divisor,w
  6759  0855  02F4               	subwf	___lldiv@dividend,f
  6760  0856  0871               	movf	___lldiv@divisor+1,w
  6761  0857  3BF5               	subwfb	___lldiv@dividend+1,f
  6762  0858  0872               	movf	___lldiv@divisor+2,w
  6763  0859  3BF6               	subwfb	___lldiv@dividend+2,f
  6764  085A  0873               	movf	___lldiv@divisor+3,w
  6765  085B  3BF7               	subwfb	___lldiv@dividend+3,f
  6766  085C                     l2415:
  6767  085C  1479               	bsf	___lldiv@quotient,0
  6768  085D                     l2417:
  6769  085D  3001               	movlw	1
  6770  085E                     u3225:
  6771  085E  36F3               	lsrf	___lldiv@divisor+3,f
  6772  085F  0CF2               	rrf	___lldiv@divisor+2,f
  6773  0860  0CF1               	rrf	___lldiv@divisor+1,f
  6774  0861  0CF0               	rrf	___lldiv@divisor,f
  6775  0862  0B89               	decfsz	9,f
  6776  0863  285E               	goto	u3225
  6777  0864                     l2419:
  6778  0864  3001               	movlw	1
  6779  0865  02FD               	subwf	___lldiv@counter,f
  6780  0866  1D03               	btfss	3,2
  6781  0867  2869               	goto	u3231
  6782  0868  286A               	goto	u3230
  6783  0869                     u3231:
  6784  0869  283B               	goto	l2409
  6785  086A                     u3230:
  6786  086A                     l2421:
  6787  086A  087C               	movf	___lldiv@quotient+3,w
  6788  086B  00F3               	movwf	?___lldiv+3
  6789  086C  087B               	movf	___lldiv@quotient+2,w
  6790  086D  00F2               	movwf	?___lldiv+2
  6791  086E  087A               	movf	___lldiv@quotient+1,w
  6792  086F  00F1               	movwf	?___lldiv+1
  6793  0870  0879               	movf	___lldiv@quotient,w
  6794  0871  00F0               	movwf	?___lldiv
  6795  0872                     l365:
  6796  0872  0008               	return
  6797  0873                     __end_of___lldiv:
  6798                           
  6799                           	psect	text16
  6800  09BB                     __ptext16:	
  6801 ;; *************** function ___fttol *****************
  6802 ;; Defined at:
  6803 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  f1              3   37[BANK0 ] float 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  lval            4   46[BANK0 ] unsigned long 
  6808 ;;  exp1            1   50[BANK0 ] unsigned char 
  6809 ;;  sign1           1   45[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  4   37[BANK0 ] long 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6819 ;;      Params:         0       4       0       0       0       0       0       0
  6820 ;;      Locals:         0       6       0       0       0       0       0       0
  6821 ;;      Temps:          0       4       0       0       0       0       0       0
  6822 ;;      Totals:         0      14       0       0       0       0       0       0
  6823 ;;Total ram usage:       14 bytes
  6824 ;; Hardware stack levels used: 1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_sprintf
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832  09BB                     ___fttol:	
  6833                           ;psect for function ___fttol
  6834                           
  6835  09BB                     l2461:	
  6836                           ;incstack = 0
  6837                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6838                           
  6839  09BB  0020               	movlb	0	; select bank0
  6840  09BC  0845               	movf	___fttol@f1,w
  6841  09BD  00C9               	movwf	??___fttol
  6842  09BE  0846               	movf	___fttol@f1+1,w
  6843  09BF  00CA               	movwf	??___fttol+1
  6844  09C0  0847               	movf	___fttol@f1+2,w
  6845  09C1  00CB               	movwf	??___fttol+2
  6846  09C2  1003               	clrc
  6847  09C3  0D4A               	rlf	??___fttol+1,w
  6848  09C4  0D4B               	rlf	??___fttol+2,w
  6849  09C5  00CC               	movwf	??___fttol+3
  6850  09C6  084C               	movf	??___fttol+3,w
  6851  09C7  00D2               	movwf	___fttol@exp1
  6852  09C8  0852               	movf	___fttol@exp1,w
  6853  09C9  1D03               	btfss	3,2
  6854  09CA  29CC               	goto	u3291
  6855  09CB  29CD               	goto	u3290
  6856  09CC                     u3291:
  6857  09CC  29D6               	goto	l2467
  6858  09CD                     u3290:
  6859  09CD                     l2463:
  6860  09CD  3000               	movlw	0
  6861  09CE  00C8               	movwf	?___fttol+3
  6862  09CF  3000               	movlw	0
  6863  09D0  00C7               	movwf	?___fttol+2
  6864  09D1  3000               	movlw	0
  6865  09D2  00C6               	movwf	?___fttol+1
  6866  09D3  3000               	movlw	0
  6867  09D4  00C5               	movwf	?___fttol
  6868  09D5  2A3F               	goto	l659
  6869  09D6                     l2467:
  6870  09D6  0845               	movf	___fttol@f1,w
  6871  09D7  00C9               	movwf	??___fttol
  6872  09D8  0846               	movf	___fttol@f1+1,w
  6873  09D9  00CA               	movwf	??___fttol+1
  6874  09DA  0847               	movf	___fttol@f1+2,w
  6875  09DB  00CB               	movwf	??___fttol+2
  6876  09DC  3017               	movlw	23
  6877  09DD                     u3305:
  6878  09DD  36CB               	lsrf	??___fttol+2,f
  6879  09DE  0CCA               	rrf	??___fttol+1,f
  6880  09DF  0CC9               	rrf	??___fttol,f
  6881  09E0                     u3300:
  6882  09E0  0B89               	decfsz	9,f
  6883  09E1  29DD               	goto	u3305
  6884  09E2  0849               	movf	??___fttol,w
  6885  09E3  00CC               	movwf	??___fttol+3
  6886  09E4  084C               	movf	??___fttol+3,w
  6887  09E5  00CD               	movwf	___fttol@sign1
  6888  09E6                     l2469:
  6889  09E6  17C6               	bsf	___fttol@f1+1,7
  6890  09E7                     l2471:
  6891  09E7  30FF               	movlw	255
  6892  09E8  05C5               	andwf	___fttol@f1,f
  6893  09E9  30FF               	movlw	255
  6894  09EA  05C6               	andwf	___fttol@f1+1,f
  6895  09EB  3000               	movlw	0
  6896  09EC  05C7               	andwf	___fttol@f1+2,f
  6897  09ED                     l2473:
  6898  09ED  0845               	movf	___fttol@f1,w
  6899  09EE  00CE               	movwf	___fttol@lval
  6900  09EF  0846               	movf	___fttol@f1+1,w
  6901  09F0  00CF               	movwf	___fttol@lval+1
  6902  09F1  0847               	movf	___fttol@f1+2,w
  6903  09F2  00D0               	movwf	___fttol@lval+2
  6904  09F3  01D1               	clrf	___fttol@lval+3
  6905  09F4                     l2475:
  6906  09F4  308E               	movlw	142
  6907  09F5  02D2               	subwf	___fttol@exp1,f
  6908  09F6                     l2477:
  6909  09F6  1FD2               	btfss	___fttol@exp1,7
  6910  09F7  29F9               	goto	u3311
  6911  09F8  29FA               	goto	u3310
  6912  09F9                     u3311:
  6913  09F9  2A12               	goto	l2487
  6914  09FA                     u3310:
  6915  09FA                     l2479:
  6916  09FA  0852               	movf	___fttol@exp1,w
  6917  09FB  3A80               	xorlw	128
  6918  09FC  3E8F               	addlw	143
  6919  09FD  1803               	skipnc
  6920  09FE  2A00               	goto	u3321
  6921  09FF  2A01               	goto	u3320
  6922  0A00                     u3321:
  6923  0A00  2A02               	goto	l2485
  6924  0A01                     u3320:
  6925  0A01  29CD               	goto	l2463
  6926  0A02                     l2485:
  6927  0A02  3001               	movlw	1
  6928  0A03                     u3335:
  6929  0A03  36D1               	lsrf	___fttol@lval+3,f
  6930  0A04  0CD0               	rrf	___fttol@lval+2,f
  6931  0A05  0CCF               	rrf	___fttol@lval+1,f
  6932  0A06  0CCE               	rrf	___fttol@lval,f
  6933  0A07  0B89               	decfsz	9,f
  6934  0A08  2A03               	goto	u3335
  6935  0A09  3001               	movlw	1
  6936  0A0A  00C9               	movwf	??___fttol
  6937  0A0B  0849               	movf	??___fttol,w
  6938  0A0C  07D2               	addwf	___fttol@exp1,f
  6939  0A0D  1D03               	btfss	3,2
  6940  0A0E  2A10               	goto	u3341
  6941  0A0F  2A11               	goto	u3340
  6942  0A10                     u3341:
  6943  0A10  2A02               	goto	l2485
  6944  0A11                     u3340:
  6945  0A11  2A27               	goto	l2495
  6946  0A12                     l2487:
  6947  0A12  3018               	movlw	24
  6948  0A13  0252               	subwf	___fttol@exp1,w
  6949  0A14  1C03               	skipc
  6950  0A15  2A17               	goto	u3351
  6951  0A16  2A18               	goto	u3350
  6952  0A17                     u3351:
  6953  0A17  2A22               	goto	l666
  6954  0A18                     u3350:
  6955  0A18  29CD               	goto	l2463
  6956  0A19                     l2493:
  6957  0A19  3001               	movlw	1
  6958  0A1A                     u3365:
  6959  0A1A  35CE               	lslf	___fttol@lval,f
  6960  0A1B  0DCF               	rlf	___fttol@lval+1,f
  6961  0A1C  0DD0               	rlf	___fttol@lval+2,f
  6962  0A1D  0DD1               	rlf	___fttol@lval+3,f
  6963  0A1E  0B89               	decfsz	9,f
  6964  0A1F  2A1A               	goto	u3365
  6965  0A20  3001               	movlw	1
  6966  0A21  02D2               	subwf	___fttol@exp1,f
  6967  0A22                     l666:
  6968  0A22  0852               	movf	___fttol@exp1,w
  6969  0A23  1D03               	btfss	3,2
  6970  0A24  2A26               	goto	u3371
  6971  0A25  2A27               	goto	u3370
  6972  0A26                     u3371:
  6973  0A26  2A19               	goto	l2493
  6974  0A27                     u3370:
  6975  0A27                     l2495:
  6976  0A27  084D               	movf	___fttol@sign1,w
  6977  0A28  1903               	btfsc	3,2
  6978  0A29  2A2B               	goto	u3381
  6979  0A2A  2A2C               	goto	u3380
  6980  0A2B                     u3381:
  6981  0A2B  2A37               	goto	l2499
  6982  0A2C                     u3380:
  6983  0A2C                     l2497:
  6984  0A2C  09CE               	comf	___fttol@lval,f
  6985  0A2D  09CF               	comf	___fttol@lval+1,f
  6986  0A2E  09D0               	comf	___fttol@lval+2,f
  6987  0A2F  09D1               	comf	___fttol@lval+3,f
  6988  0A30  0ACE               	incf	___fttol@lval,f
  6989  0A31  1903               	skipnz
  6990  0A32  0ACF               	incf	___fttol@lval+1,f
  6991  0A33  1903               	skipnz
  6992  0A34  0AD0               	incf	___fttol@lval+2,f
  6993  0A35  1903               	skipnz
  6994  0A36  0AD1               	incf	___fttol@lval+3,f
  6995  0A37                     l2499:
  6996  0A37  0851               	movf	___fttol@lval+3,w
  6997  0A38  00C8               	movwf	?___fttol+3
  6998  0A39  0850               	movf	___fttol@lval+2,w
  6999  0A3A  00C7               	movwf	?___fttol+2
  7000  0A3B  084F               	movf	___fttol@lval+1,w
  7001  0A3C  00C6               	movwf	?___fttol+1
  7002  0A3D  084E               	movf	___fttol@lval,w
  7003  0A3E  00C5               	movwf	?___fttol
  7004  0A3F                     l659:
  7005  0A3F  0008               	return
  7006  0A40                     __end_of___fttol:
  7007                           
  7008                           	psect	text17
  7009  1653                     __ptext17:	
  7010 ;; *************** function ___ftsub *****************
  7011 ;; Defined at:
  7012 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftsub.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  f2              3   53[BANK0 ] float 
  7015 ;;  f1              3   56[BANK0 ] float 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  3   53[BANK0 ] float 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7027 ;;      Params:         0       6       0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0
  7030 ;;      Totals:         0       6       0       0       0       0       0       0
  7031 ;;Total ram usage:        6 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 2
  7034 ;; This function calls:
  7035 ;;		___ftadd
  7036 ;; This function is called by:
  7037 ;;		_sprintf
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041  1653                     ___ftsub:	
  7042                           ;psect for function ___ftsub
  7043                           
  7044  1653                     l2453:	
  7045                           ;incstack = 0
  7046                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7047                           
  7048  1653  0020               	movlb	0	; select bank0
  7049  1654  0857               	movf	___ftsub@f2+2,w
  7050  1655  0456               	iorwf	___ftsub@f2+1,w
  7051  1656  0455               	iorwf	___ftsub@f2,w
  7052  1657  1903               	skipnz
  7053  1658  2E5A               	goto	u3281
  7054  1659  2E5B               	goto	u3280
  7055  165A                     u3281:
  7056  165A  2E5D               	goto	l2457
  7057  165B                     u3280:
  7058  165B                     l2455:
  7059  165B  3080               	movlw	128
  7060  165C  06D7               	xorwf	___ftsub@f2+2,f
  7061  165D                     l2457:
  7062  165D  0858               	movf	___ftsub@f1,w
  7063  165E  00C8               	movwf	___ftadd@f1
  7064  165F  0859               	movf	___ftsub@f1+1,w
  7065  1660  00C9               	movwf	___ftadd@f1+1
  7066  1661  085A               	movf	___ftsub@f1+2,w
  7067  1662  00CA               	movwf	___ftadd@f1+2
  7068  1663  0855               	movf	___ftsub@f2,w
  7069  1664  00CB               	movwf	___ftadd@f2
  7070  1665  0856               	movf	___ftsub@f2+1,w
  7071  1666  00CC               	movwf	___ftadd@f2+1
  7072  1667  0857               	movf	___ftsub@f2+2,w
  7073  1668  00CD               	movwf	___ftadd@f2+2
  7074  1669  318D  257A  3196   	fcall	___ftadd
  7075  166C  0020               	movlb	0	; select bank0
  7076  166D  0848               	movf	?___ftadd,w
  7077  166E  00D5               	movwf	?___ftsub
  7078  166F  0849               	movf	?___ftadd+1,w
  7079  1670  00D6               	movwf	?___ftsub+1
  7080  1671  084A               	movf	?___ftadd+2,w
  7081  1672  00D7               	movwf	?___ftsub+2
  7082  1673                     l655:
  7083  1673  0008               	return
  7084  1674                     __end_of___ftsub:
  7085                           
  7086                           	psect	text18
  7087  0D7A                     __ptext18:	
  7088 ;; *************** function ___ftadd *****************
  7089 ;; Defined at:
  7090 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftadd.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;  f1              3   40[BANK0 ] float 
  7093 ;;  f2              3   43[BANK0 ] float 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  exp1            1   52[BANK0 ] unsigned char 
  7096 ;;  exp2            1   51[BANK0 ] unsigned char 
  7097 ;;  sign            1   50[BANK0 ] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  3   40[BANK0 ] float 
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0, pclath, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7107 ;;      Params:         0       6       0       0       0       0       0       0
  7108 ;;      Locals:         0       3       0       0       0       0       0       0
  7109 ;;      Temps:          0       4       0       0       0       0       0       0
  7110 ;;      Totals:         0      13       0       0       0       0       0       0
  7111 ;;Total ram usage:       13 bytes
  7112 ;; Hardware stack levels used: 1
  7113 ;; Hardware stack levels required when called: 1
  7114 ;; This function calls:
  7115 ;;		___ftpack
  7116 ;; This function is called by:
  7117 ;;		_sprintf
  7118 ;;		___ftsub
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122  0D7A                     ___ftadd:	
  7123                           ;psect for function ___ftadd
  7124                           
  7125  0D7A                     l2007:	
  7126                           ;incstack = 0
  7127                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7128                           
  7129  0D7A  0020               	movlb	0	; select bank0
  7130  0D7B  0848               	movf	___ftadd@f1,w
  7131  0D7C  00CE               	movwf	??___ftadd
  7132  0D7D  0849               	movf	___ftadd@f1+1,w
  7133  0D7E  00CF               	movwf	??___ftadd+1
  7134  0D7F  084A               	movf	___ftadd@f1+2,w
  7135  0D80  00D0               	movwf	??___ftadd+2
  7136  0D81  1003               	clrc
  7137  0D82  0D4F               	rlf	??___ftadd+1,w
  7138  0D83  0D50               	rlf	??___ftadd+2,w
  7139  0D84  00D1               	movwf	??___ftadd+3
  7140  0D85  0851               	movf	??___ftadd+3,w
  7141  0D86  00D4               	movwf	___ftadd@exp1
  7142  0D87  084B               	movf	___ftadd@f2,w
  7143  0D88  00CE               	movwf	??___ftadd
  7144  0D89  084C               	movf	___ftadd@f2+1,w
  7145  0D8A  00CF               	movwf	??___ftadd+1
  7146  0D8B  084D               	movf	___ftadd@f2+2,w
  7147  0D8C  00D0               	movwf	??___ftadd+2
  7148  0D8D  1003               	clrc
  7149  0D8E  0D4F               	rlf	??___ftadd+1,w
  7150  0D8F  0D50               	rlf	??___ftadd+2,w
  7151  0D90  00D1               	movwf	??___ftadd+3
  7152  0D91  0851               	movf	??___ftadd+3,w
  7153  0D92  00D3               	movwf	___ftadd@exp2
  7154  0D93  0854               	movf	___ftadd@exp1,w
  7155  0D94  1903               	btfsc	3,2
  7156  0D95  2D97               	goto	u2331
  7157  0D96  2D98               	goto	u2330
  7158  0D97                     u2331:
  7159  0D97  2DA8               	goto	l2013
  7160  0D98                     u2330:
  7161  0D98                     l2009:
  7162  0D98  0853               	movf	___ftadd@exp2,w
  7163  0D99  0254               	subwf	___ftadd@exp1,w
  7164  0D9A  1803               	skipnc
  7165  0D9B  2D9D               	goto	u2341
  7166  0D9C  2D9E               	goto	u2340
  7167  0D9D                     u2341:
  7168  0D9D  2DAF               	goto	l2017
  7169  0D9E                     u2340:
  7170  0D9E                     l2011:
  7171  0D9E  0853               	movf	___ftadd@exp2,w
  7172  0D9F  00CE               	movwf	??___ftadd
  7173  0DA0  0854               	movf	___ftadd@exp1,w
  7174  0DA1  02CE               	subwf	??___ftadd,f
  7175  0DA2  3019               	movlw	25
  7176  0DA3  024E               	subwf	??___ftadd,w
  7177  0DA4  1C03               	skipc
  7178  0DA5  2DA7               	goto	u2351
  7179  0DA6  2DA8               	goto	u2350
  7180  0DA7                     u2351:
  7181  0DA7  2DAF               	goto	l2017
  7182  0DA8                     u2350:
  7183  0DA8                     l2013:
  7184  0DA8  084B               	movf	___ftadd@f2,w
  7185  0DA9  00C8               	movwf	?___ftadd
  7186  0DAA  084C               	movf	___ftadd@f2+1,w
  7187  0DAB  00C9               	movwf	?___ftadd+1
  7188  0DAC  084D               	movf	___ftadd@f2+2,w
  7189  0DAD  00CA               	movwf	?___ftadd+2
  7190  0DAE  2E99               	goto	l575
  7191  0DAF                     l2017:
  7192  0DAF  0853               	movf	___ftadd@exp2,w
  7193  0DB0  1903               	btfsc	3,2
  7194  0DB1  2DB3               	goto	u2361
  7195  0DB2  2DB4               	goto	u2360
  7196  0DB3                     u2361:
  7197  0DB3  2DC4               	goto	l578
  7198  0DB4                     u2360:
  7199  0DB4                     l2019:
  7200  0DB4  0854               	movf	___ftadd@exp1,w
  7201  0DB5  0253               	subwf	___ftadd@exp2,w
  7202  0DB6  1803               	skipnc
  7203  0DB7  2DB9               	goto	u2371
  7204  0DB8  2DBA               	goto	u2370
  7205  0DB9                     u2371:
  7206  0DB9  2DC5               	goto	l2023
  7207  0DBA                     u2370:
  7208  0DBA                     l2021:
  7209  0DBA  0854               	movf	___ftadd@exp1,w
  7210  0DBB  00CE               	movwf	??___ftadd
  7211  0DBC  0853               	movf	___ftadd@exp2,w
  7212  0DBD  02CE               	subwf	??___ftadd,f
  7213  0DBE  3019               	movlw	25
  7214  0DBF  024E               	subwf	??___ftadd,w
  7215  0DC0  1C03               	skipc
  7216  0DC1  2DC3               	goto	u2381
  7217  0DC2  2DC4               	goto	u2380
  7218  0DC3                     u2381:
  7219  0DC3  2DC5               	goto	l2023
  7220  0DC4                     u2380:
  7221  0DC4                     l578:
  7222  0DC4  2E99               	goto	l575
  7223  0DC5                     l2023:
  7224  0DC5  3006               	movlw	6
  7225  0DC6  00CE               	movwf	??___ftadd
  7226  0DC7  084E               	movf	??___ftadd,w
  7227  0DC8  00D2               	movwf	___ftadd@sign
  7228  0DC9                     l2025:
  7229  0DC9  1FCA               	btfss	___ftadd@f1+2,7
  7230  0DCA  2DCC               	goto	u2391
  7231  0DCB  2DCD               	goto	u2390
  7232  0DCC                     u2391:
  7233  0DCC  2DCE               	goto	l579
  7234  0DCD                     u2390:
  7235  0DCD                     l2027:
  7236  0DCD  17D2               	bsf	___ftadd@sign,7
  7237  0DCE                     l579:
  7238  0DCE  1FCD               	btfss	___ftadd@f2+2,7
  7239  0DCF  2DD1               	goto	u2401
  7240  0DD0  2DD2               	goto	u2400
  7241  0DD1                     u2401:
  7242  0DD1  2DD3               	goto	l580
  7243  0DD2                     u2400:
  7244  0DD2                     l2029:
  7245  0DD2  1752               	bsf	___ftadd@sign,6
  7246  0DD3                     l580:
  7247  0DD3  17C9               	bsf	___ftadd@f1+1,7
  7248  0DD4                     l2031:
  7249  0DD4  30FF               	movlw	255
  7250  0DD5  05C8               	andwf	___ftadd@f1,f
  7251  0DD6  30FF               	movlw	255
  7252  0DD7  05C9               	andwf	___ftadd@f1+1,f
  7253  0DD8  3000               	movlw	0
  7254  0DD9  05CA               	andwf	___ftadd@f1+2,f
  7255  0DDA                     l2033:
  7256  0DDA  17CC               	bsf	___ftadd@f2+1,7
  7257  0DDB  30FF               	movlw	255
  7258  0DDC  05CB               	andwf	___ftadd@f2,f
  7259  0DDD  30FF               	movlw	255
  7260  0DDE  05CC               	andwf	___ftadd@f2+1,f
  7261  0DDF  3000               	movlw	0
  7262  0DE0  05CD               	andwf	___ftadd@f2+2,f
  7263  0DE1  0853               	movf	___ftadd@exp2,w
  7264  0DE2  0254               	subwf	___ftadd@exp1,w
  7265  0DE3  1803               	skipnc
  7266  0DE4  2DE6               	goto	u2411
  7267  0DE5  2DE7               	goto	u2410
  7268  0DE6                     u2411:
  7269  0DE6  2E0F               	goto	l2045
  7270  0DE7                     u2410:
  7271  0DE7                     l2035:
  7272  0DE7  3001               	movlw	1
  7273  0DE8                     u2425:
  7274  0DE8  35CB               	lslf	___ftadd@f2,f
  7275  0DE9  0DCC               	rlf	___ftadd@f2+1,f
  7276  0DEA  0DCD               	rlf	___ftadd@f2+2,f
  7277  0DEB  0B89               	decfsz	9,f
  7278  0DEC  2DE8               	goto	u2425
  7279  0DED  3001               	movlw	1
  7280  0DEE  02D3               	subwf	___ftadd@exp2,f
  7281  0DEF                     l2037:
  7282  0DEF  0853               	movf	___ftadd@exp2,w
  7283  0DF0  0654               	xorwf	___ftadd@exp1,w
  7284  0DF1  1903               	skipnz
  7285  0DF2  2DF4               	goto	u2431
  7286  0DF3  2DF5               	goto	u2430
  7287  0DF4                     u2431:
  7288  0DF4  2E08               	goto	l2043
  7289  0DF5                     u2430:
  7290  0DF5                     l2039:
  7291  0DF5  3001               	movlw	1
  7292  0DF6  02D2               	subwf	___ftadd@sign,f
  7293  0DF7  0852               	movf	___ftadd@sign,w
  7294  0DF8  3907               	andlw	7
  7295  0DF9  1D03               	btfss	3,2
  7296  0DFA  2DFC               	goto	u2441
  7297  0DFB  2DFD               	goto	u2440
  7298  0DFC                     u2441:
  7299  0DFC  2DE7               	goto	l2035
  7300  0DFD                     u2440:
  7301  0DFD  2E08               	goto	l2043
  7302  0DFE                     l2041:
  7303  0DFE  3001               	movlw	1
  7304  0DFF                     u2455:
  7305  0DFF  36CA               	lsrf	___ftadd@f1+2,f
  7306  0E00  0CC9               	rrf	___ftadd@f1+1,f
  7307  0E01  0CC8               	rrf	___ftadd@f1,f
  7308  0E02  0B89               	decfsz	9,f
  7309  0E03  2DFF               	goto	u2455
  7310  0E04  3001               	movlw	1
  7311  0E05  00CE               	movwf	??___ftadd
  7312  0E06  084E               	movf	??___ftadd,w
  7313  0E07  07D4               	addwf	___ftadd@exp1,f
  7314  0E08                     l2043:
  7315  0E08  0854               	movf	___ftadd@exp1,w
  7316  0E09  0653               	xorwf	___ftadd@exp2,w
  7317  0E0A  1D03               	skipz
  7318  0E0B  2E0D               	goto	u2461
  7319  0E0C  2E0E               	goto	u2460
  7320  0E0D                     u2461:
  7321  0E0D  2DFE               	goto	l2041
  7322  0E0E                     u2460:
  7323  0E0E  2E3C               	goto	l589
  7324  0E0F                     l2045:
  7325  0E0F  0854               	movf	___ftadd@exp1,w
  7326  0E10  0253               	subwf	___ftadd@exp2,w
  7327  0E11  1803               	skipnc
  7328  0E12  2E14               	goto	u2471
  7329  0E13  2E15               	goto	u2470
  7330  0E14                     u2471:
  7331  0E14  2E3C               	goto	l589
  7332  0E15                     u2470:
  7333  0E15                     l2047:
  7334  0E15  3001               	movlw	1
  7335  0E16                     u2485:
  7336  0E16  35C8               	lslf	___ftadd@f1,f
  7337  0E17  0DC9               	rlf	___ftadd@f1+1,f
  7338  0E18  0DCA               	rlf	___ftadd@f1+2,f
  7339  0E19  0B89               	decfsz	9,f
  7340  0E1A  2E16               	goto	u2485
  7341  0E1B  3001               	movlw	1
  7342  0E1C  02D4               	subwf	___ftadd@exp1,f
  7343  0E1D                     l2049:
  7344  0E1D  0853               	movf	___ftadd@exp2,w
  7345  0E1E  0654               	xorwf	___ftadd@exp1,w
  7346  0E1F  1903               	skipnz
  7347  0E20  2E22               	goto	u2491
  7348  0E21  2E23               	goto	u2490
  7349  0E22                     u2491:
  7350  0E22  2E36               	goto	l2055
  7351  0E23                     u2490:
  7352  0E23                     l2051:
  7353  0E23  3001               	movlw	1
  7354  0E24  02D2               	subwf	___ftadd@sign,f
  7355  0E25  0852               	movf	___ftadd@sign,w
  7356  0E26  3907               	andlw	7
  7357  0E27  1D03               	btfss	3,2
  7358  0E28  2E2A               	goto	u2501
  7359  0E29  2E2B               	goto	u2500
  7360  0E2A                     u2501:
  7361  0E2A  2E15               	goto	l2047
  7362  0E2B                     u2500:
  7363  0E2B  2E36               	goto	l2055
  7364  0E2C                     l2053:
  7365  0E2C  3001               	movlw	1
  7366  0E2D                     u2515:
  7367  0E2D  36CD               	lsrf	___ftadd@f2+2,f
  7368  0E2E  0CCC               	rrf	___ftadd@f2+1,f
  7369  0E2F  0CCB               	rrf	___ftadd@f2,f
  7370  0E30  0B89               	decfsz	9,f
  7371  0E31  2E2D               	goto	u2515
  7372  0E32  3001               	movlw	1
  7373  0E33  00CE               	movwf	??___ftadd
  7374  0E34  084E               	movf	??___ftadd,w
  7375  0E35  07D3               	addwf	___ftadd@exp2,f
  7376  0E36                     l2055:
  7377  0E36  0854               	movf	___ftadd@exp1,w
  7378  0E37  0653               	xorwf	___ftadd@exp2,w
  7379  0E38  1D03               	skipz
  7380  0E39  2E3B               	goto	u2521
  7381  0E3A  2E3C               	goto	u2520
  7382  0E3B                     u2521:
  7383  0E3B  2E2C               	goto	l2053
  7384  0E3C                     u2520:
  7385  0E3C                     l589:
  7386  0E3C  1FD2               	btfss	___ftadd@sign,7
  7387  0E3D  2E3F               	goto	u2531
  7388  0E3E  2E40               	goto	u2530
  7389  0E3F                     u2531:
  7390  0E3F  2E50               	goto	l2059
  7391  0E40                     u2530:
  7392  0E40                     l2057:
  7393  0E40  30FF               	movlw	255
  7394  0E41  06C8               	xorwf	___ftadd@f1,f
  7395  0E42  30FF               	movlw	255
  7396  0E43  06C9               	xorwf	___ftadd@f1+1,f
  7397  0E44  30FF               	movlw	255
  7398  0E45  06CA               	xorwf	___ftadd@f1+2,f
  7399  0E46  3001               	movlw	1
  7400  0E47  07C8               	addwf	___ftadd@f1,f
  7401  0E48  3000               	movlw	0
  7402  0E49  1803               	skipnc
  7403  0E4A  3001               	movlw	1
  7404  0E4B  07C9               	addwf	___ftadd@f1+1,f
  7405  0E4C  3000               	movlw	0
  7406  0E4D  1803               	skipnc
  7407  0E4E  3001               	movlw	1
  7408  0E4F  07CA               	addwf	___ftadd@f1+2,f
  7409  0E50                     l2059:
  7410  0E50  1F52               	btfss	___ftadd@sign,6
  7411  0E51  2E53               	goto	u2541
  7412  0E52  2E54               	goto	u2540
  7413  0E53                     u2541:
  7414  0E53  2E64               	goto	l2063
  7415  0E54                     u2540:
  7416  0E54                     l2061:
  7417  0E54  30FF               	movlw	255
  7418  0E55  06CB               	xorwf	___ftadd@f2,f
  7419  0E56  30FF               	movlw	255
  7420  0E57  06CC               	xorwf	___ftadd@f2+1,f
  7421  0E58  30FF               	movlw	255
  7422  0E59  06CD               	xorwf	___ftadd@f2+2,f
  7423  0E5A  3001               	movlw	1
  7424  0E5B  07CB               	addwf	___ftadd@f2,f
  7425  0E5C  3000               	movlw	0
  7426  0E5D  1803               	skipnc
  7427  0E5E  3001               	movlw	1
  7428  0E5F  07CC               	addwf	___ftadd@f2+1,f
  7429  0E60  3000               	movlw	0
  7430  0E61  1803               	skipnc
  7431  0E62  3001               	movlw	1
  7432  0E63  07CD               	addwf	___ftadd@f2+2,f
  7433  0E64                     l2063:
  7434  0E64  01D2               	clrf	___ftadd@sign
  7435  0E65                     l2065:
  7436  0E65  0848               	movf	___ftadd@f1,w
  7437  0E66  07CB               	addwf	___ftadd@f2,f
  7438  0E67  0849               	movf	___ftadd@f1+1,w
  7439  0E68  3DCC               	addwfc	___ftadd@f2+1,f
  7440  0E69  084A               	movf	___ftadd@f1+2,w
  7441  0E6A  3DCD               	addwfc	___ftadd@f2+2,f
  7442  0E6B                     l2067:
  7443  0E6B  1FCD               	btfss	___ftadd@f2+2,7
  7444  0E6C  2E6E               	goto	u2551
  7445  0E6D  2E6F               	goto	u2550
  7446  0E6E                     u2551:
  7447  0E6E  2E81               	goto	l2073
  7448  0E6F                     u2550:
  7449  0E6F                     l2069:
  7450  0E6F  30FF               	movlw	255
  7451  0E70  06CB               	xorwf	___ftadd@f2,f
  7452  0E71  30FF               	movlw	255
  7453  0E72  06CC               	xorwf	___ftadd@f2+1,f
  7454  0E73  30FF               	movlw	255
  7455  0E74  06CD               	xorwf	___ftadd@f2+2,f
  7456  0E75  3001               	movlw	1
  7457  0E76  07CB               	addwf	___ftadd@f2,f
  7458  0E77  3000               	movlw	0
  7459  0E78  1803               	skipnc
  7460  0E79  3001               	movlw	1
  7461  0E7A  07CC               	addwf	___ftadd@f2+1,f
  7462  0E7B  3000               	movlw	0
  7463  0E7C  1803               	skipnc
  7464  0E7D  3001               	movlw	1
  7465  0E7E  07CD               	addwf	___ftadd@f2+2,f
  7466  0E7F                     l2071:
  7467  0E7F  01D2               	clrf	___ftadd@sign
  7468  0E80  0AD2               	incf	___ftadd@sign,f
  7469  0E81                     l2073:
  7470  0E81  084B               	movf	___ftadd@f2,w
  7471  0E82  00F0               	movwf	___ftpack@arg
  7472  0E83  084C               	movf	___ftadd@f2+1,w
  7473  0E84  00F1               	movwf	___ftpack@arg+1
  7474  0E85  084D               	movf	___ftadd@f2+2,w
  7475  0E86  00F2               	movwf	___ftpack@arg+2
  7476  0E87  0854               	movf	___ftadd@exp1,w
  7477  0E88  00CE               	movwf	??___ftadd
  7478  0E89  084E               	movf	??___ftadd,w
  7479  0E8A  00F3               	movwf	___ftpack@exp
  7480  0E8B  0852               	movf	___ftadd@sign,w
  7481  0E8C  00CF               	movwf	??___ftadd+1
  7482  0E8D  084F               	movf	??___ftadd+1,w
  7483  0E8E  00F4               	movwf	___ftpack@sign
  7484  0E8F  3188  20D3  318D   	fcall	___ftpack
  7485  0E92  0870               	movf	?___ftpack,w
  7486  0E93  0020               	movlb	0	; select bank0
  7487  0E94  00C8               	movwf	?___ftadd
  7488  0E95  0871               	movf	?___ftpack+1,w
  7489  0E96  00C9               	movwf	?___ftadd+1
  7490  0E97  0872               	movf	?___ftpack+2,w
  7491  0E98  00CA               	movwf	?___ftadd+2
  7492  0E99                     l575:
  7493  0E99  0008               	return
  7494  0E9A                     __end_of___ftadd:
  7495                           
  7496                           	psect	text19
  7497  158D                     __ptext19:	
  7498 ;; *************** function ___ftneg *****************
  7499 ;; Defined at:
  7500 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftneg.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  f1              3    0[COMMON] float 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;		None
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  3    0[COMMON] float 
  7507 ;; Registers used:
  7508 ;;		wreg
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7514 ;;      Params:         3       0       0       0       0       0       0       0
  7515 ;;      Locals:         0       0       0       0       0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0
  7517 ;;      Totals:         3       0       0       0       0       0       0       0
  7518 ;;Total ram usage:        3 bytes
  7519 ;; Hardware stack levels used: 1
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_sprintf
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527  158D                     ___ftneg:	
  7528                           ;psect for function ___ftneg
  7529                           
  7530  158D                     l2445:	
  7531                           ;incstack = 0
  7532                           ; Regs used in ___ftneg: [wreg]
  7533                           
  7534  158D  0872               	movf	___ftneg@f1+2,w
  7535  158E  0471               	iorwf	___ftneg@f1+1,w
  7536  158F  0470               	iorwf	___ftneg@f1,w
  7537  1590  1903               	skipnz
  7538  1591  2D93               	goto	u3271
  7539  1592  2D94               	goto	u3270
  7540  1593                     u3271:
  7541  1593  2D96               	goto	l2449
  7542  1594                     u3270:
  7543  1594                     l2447:
  7544  1594  3080               	movlw	128
  7545  1595  06F2               	xorwf	___ftneg@f1+2,f
  7546  1596                     l2449:
  7547  1596                     l649:
  7548  1596  0008               	return
  7549  1597                     __end_of___ftneg:
  7550                           
  7551                           	psect	text20
  7552  1742                     __ptext20:	
  7553 ;; *************** function ___ftge *****************
  7554 ;; Defined at:
  7555 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftge.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  ff1             3    0[COMMON] float 
  7558 ;;  ff2             3    3[COMMON] float 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;		None               void
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7570 ;;      Params:         6       0       0       0       0       0       0       0
  7571 ;;      Locals:         0       0       0       0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0       0       0       0
  7573 ;;      Totals:         6       0       0       0       0       0       0       0
  7574 ;;Total ram usage:        6 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_sprintf
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583  1742                     ___ftge:	
  7584                           ;psect for function ___ftge
  7585                           
  7586  1742                     l2425:	
  7587                           ;incstack = 0
  7588                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7589                           
  7590  1742  1FF2               	btfss	___ftge@ff1+2,7
  7591  1743  2F45               	goto	u3241
  7592  1744  2F46               	goto	u3240
  7593  1745                     u3241:
  7594  1745  2F53               	goto	l2429
  7595  1746                     u3240:
  7596  1746                     l2427:
  7597  1746  0870               	movf	___ftge@ff1,w
  7598  1747  3C00               	sublw	0
  7599  1748  00F0               	movwf	___ftge@ff1
  7600  1749  0871               	movf	___ftge@ff1+1,w
  7601  174A  1C03               	skipc
  7602  174B  0F71               	incfsz	___ftge@ff1+1,w
  7603  174C  3C00               	sublw	0
  7604  174D  00F1               	movwf	___ftge@ff1+1
  7605  174E  0872               	movf	___ftge@ff1+2,w
  7606  174F  1C03               	skipc
  7607  1750  0F72               	incfsz	___ftge@ff1+2,w
  7608  1751  3C80               	sublw	128
  7609  1752  00F2               	movwf	___ftge@ff1+2
  7610  1753                     l2429:
  7611  1753  1FF5               	btfss	___ftge@ff2+2,7
  7612  1754  2F56               	goto	u3251
  7613  1755  2F57               	goto	u3250
  7614  1756                     u3251:
  7615  1756  2F64               	goto	l2433
  7616  1757                     u3250:
  7617  1757                     l2431:
  7618  1757  0873               	movf	___ftge@ff2,w
  7619  1758  3C00               	sublw	0
  7620  1759  00F3               	movwf	___ftge@ff2
  7621  175A  0874               	movf	___ftge@ff2+1,w
  7622  175B  1C03               	skipc
  7623  175C  0F74               	incfsz	___ftge@ff2+1,w
  7624  175D  3C00               	sublw	0
  7625  175E  00F4               	movwf	___ftge@ff2+1
  7626  175F  0875               	movf	___ftge@ff2+2,w
  7627  1760  1C03               	skipc
  7628  1761  0F75               	incfsz	___ftge@ff2+2,w
  7629  1762  3C80               	sublw	128
  7630  1763  00F5               	movwf	___ftge@ff2+2
  7631  1764                     l2433:
  7632  1764  3080               	movlw	128
  7633  1765  06F2               	xorwf	___ftge@ff1+2,f
  7634  1766                     l2435:
  7635  1766  3080               	movlw	128
  7636  1767  06F5               	xorwf	___ftge@ff2+2,f
  7637  1768                     l2437:
  7638  1768  0875               	movf	___ftge@ff2+2,w
  7639  1769  0272               	subwf	___ftge@ff1+2,w
  7640  176A  1D03               	skipz
  7641  176B  2F72               	goto	u3265
  7642  176C  0874               	movf	___ftge@ff2+1,w
  7643  176D  0271               	subwf	___ftge@ff1+1,w
  7644  176E  1D03               	skipz
  7645  176F  2F72               	goto	u3265
  7646  1770  0873               	movf	___ftge@ff2,w
  7647  1771  0270               	subwf	___ftge@ff1,w
  7648  1772                     u3265:
  7649  1772  1803               	skipnc
  7650  1773  2F75               	goto	u3261
  7651  1774  2F76               	goto	u3260
  7652  1775                     u3261:
  7653  1775  2F78               	goto	l2441
  7654  1776                     u3260:
  7655  1776                     l2439:
  7656  1776  1003               	clrc
  7657  1777  2F79               	goto	l632
  7658  1778                     l2441:
  7659  1778  1403               	setc
  7660  1779                     l632:
  7661  1779  0008               	return
  7662  177A                     __end_of___ftge:
  7663                           
  7664                           	psect	text21
  7665  15C3                     __ptext21:	
  7666 ;; *************** function ___lwtoft *****************
  7667 ;; Defined at:
  7668 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwtoft.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  c               2    8[COMMON] unsigned int 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  3    8[COMMON] float 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0, pclath, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7682 ;;      Params:         3       0       0       0       0       0       0       0
  7683 ;;      Locals:         0       0       0       0       0       0       0       0
  7684 ;;      Temps:          1       0       0       0       0       0       0       0
  7685 ;;      Totals:         4       0       0       0       0       0       0       0
  7686 ;;Total ram usage:        4 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; Hardware stack levels required when called: 1
  7689 ;; This function calls:
  7690 ;;		___ftpack
  7691 ;; This function is called by:
  7692 ;;		_main
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696  15C3                     ___lwtoft:	
  7697                           ;psect for function ___lwtoft
  7698                           
  7699  15C3                     l2835:	
  7700                           ;incstack = 0
  7701                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7702                           
  7703  15C3  0878               	movf	___lwtoft@c,w
  7704  15C4  00F0               	movwf	___ftpack@arg
  7705  15C5  0879               	movf	___lwtoft@c+1,w
  7706  15C6  00F1               	movwf	___ftpack@arg+1
  7707  15C7  01F2               	clrf	___ftpack@arg+2
  7708  15C8  308E               	movlw	142
  7709  15C9  00FB               	movwf	??___lwtoft
  7710  15CA  087B               	movf	??___lwtoft,w
  7711  15CB  00F3               	movwf	___ftpack@exp
  7712  15CC  01F4               	clrf	___ftpack@sign
  7713  15CD  3188  20D3  3195   	fcall	___ftpack
  7714  15D0  0870               	movf	?___ftpack,w
  7715  15D1  00F8               	movwf	?___lwtoft
  7716  15D2  0871               	movf	?___ftpack+1,w
  7717  15D3  00F9               	movwf	?___lwtoft+1
  7718  15D4  0872               	movf	?___ftpack+2,w
  7719  15D5  00FA               	movwf	?___lwtoft+2
  7720  15D6                     l786:
  7721  15D6  0008               	return
  7722  15D7                     __end_of___lwtoft:
  7723                           
  7724                           	psect	text22
  7725  0AF0                     __ptext22:	
  7726 ;; *************** function ___ftdiv *****************
  7727 ;; Defined at:
  7728 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdiv.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  f2              3   26[BANK0 ] float 
  7731 ;;  f1              3   29[BANK0 ] float 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  f3              3   37[BANK0 ] float 
  7734 ;;  sign            1   41[BANK0 ] unsigned char 
  7735 ;;  exp             1   40[BANK0 ] unsigned char 
  7736 ;;  cntr            1   36[BANK0 ] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  3   26[BANK0 ] float 
  7739 ;; Registers used:
  7740 ;;		wreg, status,2, status,0, pclath, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7746 ;;      Params:         0       6       0       0       0       0       0       0
  7747 ;;      Locals:         0       6       0       0       0       0       0       0
  7748 ;;      Temps:          0       4       0       0       0       0       0       0
  7749 ;;      Totals:         0      16       0       0       0       0       0       0
  7750 ;;Total ram usage:       16 bytes
  7751 ;; Hardware stack levels used: 1
  7752 ;; Hardware stack levels required when called: 1
  7753 ;; This function calls:
  7754 ;;		___ftpack
  7755 ;; This function is called by:
  7756 ;;		_main
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760  0AF0                     ___ftdiv:	
  7761                           ;psect for function ___ftdiv
  7762                           
  7763  0AF0                     l2793:	
  7764                           ;incstack = 0
  7765                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7766                           
  7767  0AF0  0020               	movlb	0	; select bank0
  7768  0AF1  083D               	movf	___ftdiv@f1,w
  7769  0AF2  00C0               	movwf	??___ftdiv
  7770  0AF3  083E               	movf	___ftdiv@f1+1,w
  7771  0AF4  00C1               	movwf	??___ftdiv+1
  7772  0AF5  083F               	movf	___ftdiv@f1+2,w
  7773  0AF6  00C2               	movwf	??___ftdiv+2
  7774  0AF7  1003               	clrc
  7775  0AF8  0D41               	rlf	??___ftdiv+1,w
  7776  0AF9  0D42               	rlf	??___ftdiv+2,w
  7777  0AFA  00C3               	movwf	??___ftdiv+3
  7778  0AFB  0843               	movf	??___ftdiv+3,w
  7779  0AFC  00C8               	movwf	___ftdiv@exp
  7780  0AFD  0848               	movf	___ftdiv@exp,w
  7781  0AFE  1D03               	btfss	3,2
  7782  0AFF  2B01               	goto	u3831
  7783  0B00  2B02               	goto	u3830
  7784  0B01                     u3831:
  7785  0B01  2B09               	goto	l2799
  7786  0B02                     u3830:
  7787  0B02                     l2795:
  7788  0B02  3000               	movlw	0
  7789  0B03  00BA               	movwf	?___ftdiv
  7790  0B04  3000               	movlw	0
  7791  0B05  00BB               	movwf	?___ftdiv+1
  7792  0B06  3000               	movlw	0
  7793  0B07  00BC               	movwf	?___ftdiv+2
  7794  0B08  2BA1               	goto	l606
  7795  0B09                     l2799:
  7796  0B09  083A               	movf	___ftdiv@f2,w
  7797  0B0A  00C0               	movwf	??___ftdiv
  7798  0B0B  083B               	movf	___ftdiv@f2+1,w
  7799  0B0C  00C1               	movwf	??___ftdiv+1
  7800  0B0D  083C               	movf	___ftdiv@f2+2,w
  7801  0B0E  00C2               	movwf	??___ftdiv+2
  7802  0B0F  1003               	clrc
  7803  0B10  0D41               	rlf	??___ftdiv+1,w
  7804  0B11  0D42               	rlf	??___ftdiv+2,w
  7805  0B12  00C3               	movwf	??___ftdiv+3
  7806  0B13  0843               	movf	??___ftdiv+3,w
  7807  0B14  00C9               	movwf	___ftdiv@sign
  7808  0B15  0849               	movf	___ftdiv@sign,w
  7809  0B16  1D03               	btfss	3,2
  7810  0B17  2B19               	goto	u3841
  7811  0B18  2B1A               	goto	u3840
  7812  0B19                     u3841:
  7813  0B19  2B21               	goto	l2805
  7814  0B1A                     u3840:
  7815  0B1A                     l2801:
  7816  0B1A  3000               	movlw	0
  7817  0B1B  00BA               	movwf	?___ftdiv
  7818  0B1C  3000               	movlw	0
  7819  0B1D  00BB               	movwf	?___ftdiv+1
  7820  0B1E  3000               	movlw	0
  7821  0B1F  00BC               	movwf	?___ftdiv+2
  7822  0B20  2BA1               	goto	l606
  7823  0B21                     l2805:
  7824  0B21  3000               	movlw	0
  7825  0B22  00C5               	movwf	___ftdiv@f3
  7826  0B23  3000               	movlw	0
  7827  0B24  00C6               	movwf	___ftdiv@f3+1
  7828  0B25  3000               	movlw	0
  7829  0B26  00C7               	movwf	___ftdiv@f3+2
  7830  0B27                     l2807:
  7831  0B27  3089               	movlw	137
  7832  0B28  0749               	addwf	___ftdiv@sign,w
  7833  0B29  00C0               	movwf	??___ftdiv
  7834  0B2A  0840               	movf	??___ftdiv,w
  7835  0B2B  02C8               	subwf	___ftdiv@exp,f
  7836  0B2C                     l2809:
  7837  0B2C  083D               	movf	___ftdiv@f1,w
  7838  0B2D  00C0               	movwf	??___ftdiv
  7839  0B2E  083E               	movf	___ftdiv@f1+1,w
  7840  0B2F  00C1               	movwf	??___ftdiv+1
  7841  0B30  083F               	movf	___ftdiv@f1+2,w
  7842  0B31  00C2               	movwf	??___ftdiv+2
  7843  0B32  3010               	movlw	16
  7844  0B33                     u3855:
  7845  0B33  36C2               	lsrf	??___ftdiv+2,f
  7846  0B34  0CC1               	rrf	??___ftdiv+1,f
  7847  0B35  0CC0               	rrf	??___ftdiv,f
  7848  0B36                     u3850:
  7849  0B36  0B89               	decfsz	9,f
  7850  0B37  2B33               	goto	u3855
  7851  0B38  0840               	movf	??___ftdiv,w
  7852  0B39  00C3               	movwf	??___ftdiv+3
  7853  0B3A  0843               	movf	??___ftdiv+3,w
  7854  0B3B  00C9               	movwf	___ftdiv@sign
  7855  0B3C                     l2811:
  7856  0B3C  083A               	movf	___ftdiv@f2,w
  7857  0B3D  00C0               	movwf	??___ftdiv
  7858  0B3E  083B               	movf	___ftdiv@f2+1,w
  7859  0B3F  00C1               	movwf	??___ftdiv+1
  7860  0B40  083C               	movf	___ftdiv@f2+2,w
  7861  0B41  00C2               	movwf	??___ftdiv+2
  7862  0B42  3010               	movlw	16
  7863  0B43                     u3865:
  7864  0B43  36C2               	lsrf	??___ftdiv+2,f
  7865  0B44  0CC1               	rrf	??___ftdiv+1,f
  7866  0B45  0CC0               	rrf	??___ftdiv,f
  7867  0B46                     u3860:
  7868  0B46  0B89               	decfsz	9,f
  7869  0B47  2B43               	goto	u3865
  7870  0B48  0840               	movf	??___ftdiv,w
  7871  0B49  00C3               	movwf	??___ftdiv+3
  7872  0B4A  0843               	movf	??___ftdiv+3,w
  7873  0B4B  06C9               	xorwf	___ftdiv@sign,f
  7874  0B4C                     l2813:
  7875  0B4C  3080               	movlw	128
  7876  0B4D  00C0               	movwf	??___ftdiv
  7877  0B4E  0840               	movf	??___ftdiv,w
  7878  0B4F  05C9               	andwf	___ftdiv@sign,f
  7879  0B50                     l2815:
  7880  0B50  17BE               	bsf	___ftdiv@f1+1,7
  7881  0B51  30FF               	movlw	255
  7882  0B52  05BD               	andwf	___ftdiv@f1,f
  7883  0B53  30FF               	movlw	255
  7884  0B54  05BE               	andwf	___ftdiv@f1+1,f
  7885  0B55  3000               	movlw	0
  7886  0B56  05BF               	andwf	___ftdiv@f1+2,f
  7887  0B57                     l2817:
  7888  0B57  17BB               	bsf	___ftdiv@f2+1,7
  7889  0B58  30FF               	movlw	255
  7890  0B59  05BA               	andwf	___ftdiv@f2,f
  7891  0B5A  30FF               	movlw	255
  7892  0B5B  05BB               	andwf	___ftdiv@f2+1,f
  7893  0B5C  3000               	movlw	0
  7894  0B5D  05BC               	andwf	___ftdiv@f2+2,f
  7895  0B5E  3018               	movlw	24
  7896  0B5F  00C0               	movwf	??___ftdiv
  7897  0B60  0840               	movf	??___ftdiv,w
  7898  0B61  00C4               	movwf	___ftdiv@cntr
  7899  0B62                     l2819:
  7900  0B62  3001               	movlw	1
  7901  0B63                     u3875:
  7902  0B63  35C5               	lslf	___ftdiv@f3,f
  7903  0B64  0DC6               	rlf	___ftdiv@f3+1,f
  7904  0B65  0DC7               	rlf	___ftdiv@f3+2,f
  7905  0B66  0B89               	decfsz	9,f
  7906  0B67  2B63               	goto	u3875
  7907  0B68                     l2821:
  7908  0B68  083C               	movf	___ftdiv@f2+2,w
  7909  0B69  023F               	subwf	___ftdiv@f1+2,w
  7910  0B6A  1D03               	skipz
  7911  0B6B  2B72               	goto	u3885
  7912  0B6C  083B               	movf	___ftdiv@f2+1,w
  7913  0B6D  023E               	subwf	___ftdiv@f1+1,w
  7914  0B6E  1D03               	skipz
  7915  0B6F  2B72               	goto	u3885
  7916  0B70  083A               	movf	___ftdiv@f2,w
  7917  0B71  023D               	subwf	___ftdiv@f1,w
  7918  0B72                     u3885:
  7919  0B72  1C03               	skipc
  7920  0B73  2B75               	goto	u3881
  7921  0B74  2B76               	goto	u3880
  7922  0B75                     u3881:
  7923  0B75  2B7D               	goto	l2827
  7924  0B76                     u3880:
  7925  0B76                     l2823:
  7926  0B76  083A               	movf	___ftdiv@f2,w
  7927  0B77  02BD               	subwf	___ftdiv@f1,f
  7928  0B78  083B               	movf	___ftdiv@f2+1,w
  7929  0B79  3BBE               	subwfb	___ftdiv@f1+1,f
  7930  0B7A  083C               	movf	___ftdiv@f2+2,w
  7931  0B7B  3BBF               	subwfb	___ftdiv@f1+2,f
  7932  0B7C                     l2825:
  7933  0B7C  1445               	bsf	___ftdiv@f3,0
  7934  0B7D                     l2827:
  7935  0B7D  3001               	movlw	1
  7936  0B7E                     u3895:
  7937  0B7E  35BD               	lslf	___ftdiv@f1,f
  7938  0B7F  0DBE               	rlf	___ftdiv@f1+1,f
  7939  0B80  0DBF               	rlf	___ftdiv@f1+2,f
  7940  0B81  0B89               	decfsz	9,f
  7941  0B82  2B7E               	goto	u3895
  7942  0B83                     l2829:
  7943  0B83  3001               	movlw	1
  7944  0B84  02C4               	subwf	___ftdiv@cntr,f
  7945  0B85  1D03               	btfss	3,2
  7946  0B86  2B88               	goto	u3901
  7947  0B87  2B89               	goto	u3900
  7948  0B88                     u3901:
  7949  0B88  2B62               	goto	l2819
  7950  0B89                     u3900:
  7951  0B89                     l2831:
  7952  0B89  0845               	movf	___ftdiv@f3,w
  7953  0B8A  00F0               	movwf	___ftpack@arg
  7954  0B8B  0846               	movf	___ftdiv@f3+1,w
  7955  0B8C  00F1               	movwf	___ftpack@arg+1
  7956  0B8D  0847               	movf	___ftdiv@f3+2,w
  7957  0B8E  00F2               	movwf	___ftpack@arg+2
  7958  0B8F  0848               	movf	___ftdiv@exp,w
  7959  0B90  00C0               	movwf	??___ftdiv
  7960  0B91  0840               	movf	??___ftdiv,w
  7961  0B92  00F3               	movwf	___ftpack@exp
  7962  0B93  0849               	movf	___ftdiv@sign,w
  7963  0B94  00C1               	movwf	??___ftdiv+1
  7964  0B95  0841               	movf	??___ftdiv+1,w
  7965  0B96  00F4               	movwf	___ftpack@sign
  7966  0B97  3188  20D3  318A   	fcall	___ftpack
  7967  0B9A  0870               	movf	?___ftpack,w
  7968  0B9B  0020               	movlb	0	; select bank0
  7969  0B9C  00BA               	movwf	?___ftdiv
  7970  0B9D  0871               	movf	?___ftpack+1,w
  7971  0B9E  00BB               	movwf	?___ftdiv+1
  7972  0B9F  0872               	movf	?___ftpack+2,w
  7973  0BA0  00BC               	movwf	?___ftdiv+2
  7974  0BA1                     l606:
  7975  0BA1  0008               	return
  7976  0BA2                     __end_of___ftdiv:
  7977                           
  7978                           	psect	text23
  7979  08D3                     __ptext23:	
  7980 ;; *************** function ___ftpack *****************
  7981 ;; Defined at:
  7982 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  arg             3    0[COMMON] unsigned um
  7985 ;;  exp             1    3[COMMON] unsigned char 
  7986 ;;  sign            1    4[COMMON] unsigned char 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  3    0[COMMON] float 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2, status,0
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7998 ;;      Params:         5       0       0       0       0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0
  8000 ;;      Temps:          3       0       0       0       0       0       0       0
  8001 ;;      Totals:         8       0       0       0       0       0       0       0
  8002 ;;Total ram usage:        8 bytes
  8003 ;; Hardware stack levels used: 1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		___ftadd
  8008 ;;		___ftdiv
  8009 ;;		___ftmul
  8010 ;;		___lltoft
  8011 ;;		___lwtoft
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015  08D3                     ___ftpack:	
  8016                           ;psect for function ___ftpack
  8017                           
  8018  08D3                     l1865:	
  8019                           ;incstack = 0
  8020                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8021                           
  8022  08D3  0873               	movf	___ftpack@exp,w
  8023  08D4  1903               	btfsc	3,2
  8024  08D5  28D7               	goto	u1971
  8025  08D6  28D8               	goto	u1970
  8026  08D7                     u1971:
  8027  08D7  28DF               	goto	l1869
  8028  08D8                     u1970:
  8029  08D8                     l1867:
  8030  08D8  0872               	movf	___ftpack@arg+2,w
  8031  08D9  0471               	iorwf	___ftpack@arg+1,w
  8032  08DA  0470               	iorwf	___ftpack@arg,w
  8033  08DB  1D03               	skipz
  8034  08DC  28DE               	goto	u1981
  8035  08DD  28DF               	goto	u1980
  8036  08DE                     u1981:
  8037  08DE  28F0               	goto	l1875
  8038  08DF                     u1980:
  8039  08DF                     l1869:
  8040  08DF  3000               	movlw	0
  8041  08E0  00F0               	movwf	?___ftpack
  8042  08E1  3000               	movlw	0
  8043  08E2  00F1               	movwf	?___ftpack+1
  8044  08E3  3000               	movlw	0
  8045  08E4  00F2               	movwf	?___ftpack+2
  8046  08E5  2946               	goto	l554
  8047  08E6                     l1873:
  8048  08E6  3001               	movlw	1
  8049  08E7  00F5               	movwf	??___ftpack
  8050  08E8  0875               	movf	??___ftpack,w
  8051  08E9  07F3               	addwf	___ftpack@exp,f
  8052  08EA  3001               	movlw	1
  8053  08EB                     u1995:
  8054  08EB  36F2               	lsrf	___ftpack@arg+2,f
  8055  08EC  0CF1               	rrf	___ftpack@arg+1,f
  8056  08ED  0CF0               	rrf	___ftpack@arg,f
  8057  08EE  0B89               	decfsz	9,f
  8058  08EF  28EB               	goto	u1995
  8059  08F0                     l1875:
  8060  08F0  30FE               	movlw	254
  8061  08F1  0572               	andwf	___ftpack@arg+2,w
  8062  08F2  1D03               	btfss	3,2
  8063  08F3  28F5               	goto	u2001
  8064  08F4  28F6               	goto	u2000
  8065  08F5                     u2001:
  8066  08F5  28E6               	goto	l1873
  8067  08F6                     u2000:
  8068  08F6  290B               	goto	l558
  8069  08F7                     l1877:
  8070  08F7  3001               	movlw	1
  8071  08F8  00F5               	movwf	??___ftpack
  8072  08F9  0875               	movf	??___ftpack,w
  8073  08FA  07F3               	addwf	___ftpack@exp,f
  8074  08FB                     l1879:
  8075  08FB  3001               	movlw	1
  8076  08FC  07F0               	addwf	___ftpack@arg,f
  8077  08FD  3000               	movlw	0
  8078  08FE  1803               	skipnc
  8079  08FF  3001               	movlw	1
  8080  0900  07F1               	addwf	___ftpack@arg+1,f
  8081  0901  3000               	movlw	0
  8082  0902  1803               	skipnc
  8083  0903  3001               	movlw	1
  8084  0904  07F2               	addwf	___ftpack@arg+2,f
  8085  0905                     l1881:
  8086  0905  3001               	movlw	1
  8087  0906                     u2015:
  8088  0906  36F2               	lsrf	___ftpack@arg+2,f
  8089  0907  0CF1               	rrf	___ftpack@arg+1,f
  8090  0908  0CF0               	rrf	___ftpack@arg,f
  8091  0909  0B89               	decfsz	9,f
  8092  090A  2906               	goto	u2015
  8093  090B                     l558:
  8094  090B  30FF               	movlw	255
  8095  090C  0572               	andwf	___ftpack@arg+2,w
  8096  090D  1D03               	btfss	3,2
  8097  090E  2910               	goto	u2021
  8098  090F  2911               	goto	u2020
  8099  0910                     u2021:
  8100  0910  28F7               	goto	l1877
  8101  0911                     u2020:
  8102  0911  291A               	goto	l1885
  8103  0912                     l1883:
  8104  0912  3001               	movlw	1
  8105  0913  02F3               	subwf	___ftpack@exp,f
  8106  0914  3001               	movlw	1
  8107  0915                     u2035:
  8108  0915  35F0               	lslf	___ftpack@arg,f
  8109  0916  0DF1               	rlf	___ftpack@arg+1,f
  8110  0917  0DF2               	rlf	___ftpack@arg+2,f
  8111  0918  0B89               	decfsz	9,f
  8112  0919  2915               	goto	u2035
  8113  091A                     l1885:
  8114  091A  1BF1               	btfsc	___ftpack@arg+1,7
  8115  091B  291D               	goto	u2041
  8116  091C  291E               	goto	u2040
  8117  091D                     u2041:
  8118  091D  2924               	goto	l565
  8119  091E                     u2040:
  8120  091E                     l1887:
  8121  091E  3002               	movlw	2
  8122  091F  0273               	subwf	___ftpack@exp,w
  8123  0920  1803               	skipnc
  8124  0921  2923               	goto	u2051
  8125  0922  2924               	goto	u2050
  8126  0923                     u2051:
  8127  0923  2912               	goto	l1883
  8128  0924                     u2050:
  8129  0924                     l565:
  8130  0924  1873               	btfsc	___ftpack@exp,0
  8131  0925  2927               	goto	u2061
  8132  0926  2928               	goto	u2060
  8133  0927                     u2061:
  8134  0927  292E               	goto	l566
  8135  0928                     u2060:
  8136  0928                     l1889:
  8137  0928  30FF               	movlw	255
  8138  0929  05F0               	andwf	___ftpack@arg,f
  8139  092A  307F               	movlw	127
  8140  092B  05F1               	andwf	___ftpack@arg+1,f
  8141  092C  30FF               	movlw	255
  8142  092D  05F2               	andwf	___ftpack@arg+2,f
  8143  092E                     l566:
  8144  092E  1003               	clrc
  8145  092F  0CF3               	rrf	___ftpack@exp,f
  8146  0930                     l1891:
  8147  0930  0873               	movf	___ftpack@exp,w
  8148  0931  00F5               	movwf	??___ftpack
  8149  0932  01F6               	clrf	??___ftpack+1
  8150  0933  01F7               	clrf	??___ftpack+2
  8151  0934  3010               	movlw	16
  8152  0935                     u2075:
  8153  0935  35F5               	lslf	??___ftpack,f
  8154  0936  0DF6               	rlf	??___ftpack+1,f
  8155  0937  0DF7               	rlf	??___ftpack+2,f
  8156  0938                     u2070:
  8157  0938  0B89               	decfsz	9,f
  8158  0939  2935               	goto	u2075
  8159  093A  0875               	movf	??___ftpack,w
  8160  093B  04F0               	iorwf	___ftpack@arg,f
  8161  093C  0876               	movf	??___ftpack+1,w
  8162  093D  04F1               	iorwf	___ftpack@arg+1,f
  8163  093E  0877               	movf	??___ftpack+2,w
  8164  093F  04F2               	iorwf	___ftpack@arg+2,f
  8165  0940                     l1893:
  8166  0940  0874               	movf	___ftpack@sign,w
  8167  0941  1903               	btfsc	3,2
  8168  0942  2944               	goto	u2081
  8169  0943  2945               	goto	u2080
  8170  0944                     u2081:
  8171  0944  2946               	goto	l567
  8172  0945                     u2080:
  8173  0945                     l1895:
  8174  0945  17F2               	bsf	___ftpack@arg+2,7
  8175  0946                     l567:
  8176  0946                     l554:
  8177  0946  0008               	return
  8178  0947                     __end_of___ftpack:
  8179                           
  8180                           	psect	text24
  8181  15A4                     __ptext24:	
  8182 ;; *************** function _SYSTEM_Initialize *****************
  8183 ;; Defined at:
  8184 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;		None
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;		None
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2, status,0, pclath, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8198 ;;      Params:         0       0       0       0       0       0       0       0
  8199 ;;      Locals:         0       0       0       0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0
  8201 ;;      Totals:         0       0       0       0       0       0       0       0
  8202 ;;Total ram usage:        0 bytes
  8203 ;; Hardware stack levels used: 1
  8204 ;; Hardware stack levels required when called: 1
  8205 ;; This function calls:
  8206 ;;		_ADC_Initialize
  8207 ;;		_OSCILLATOR_Initialize
  8208 ;;		_PIN_MANAGER_Initialize
  8209 ;;		_WDT_Initialize
  8210 ;; This function is called by:
  8211 ;;		_main
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215  15A4                     _SYSTEM_Initialize:	
  8216                           ;psect for function _SYSTEM_Initialize
  8217                           
  8218  15A4                     l2533:	
  8219                           ;incstack = 0
  8220                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8221                           
  8222                           
  8223                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8224  15A4  3188  2001  3195   	fcall	_PIN_MANAGER_Initialize
  8225                           
  8226                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8227  15A7  3195  2571  3195   	fcall	_OSCILLATOR_Initialize
  8228                           
  8229                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  8230  15AA  3195  2567  3195   	fcall	_WDT_Initialize
  8231                           
  8232                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  8233  15AD  3195  2584  3195   	fcall	_ADC_Initialize
  8234  15B0                     l17:
  8235  15B0  0008               	return
  8236  15B1                     __end_of_SYSTEM_Initialize:
  8237                           
  8238                           	psect	text25
  8239  1567                     __ptext25:	
  8240 ;; *************** function _WDT_Initialize *****************
  8241 ;; Defined at:
  8242 ;;		line 67 in file "mcc_generated_files/mcc.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;		None
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		wreg
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8256 ;;      Params:         0       0       0       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       0       0       0       0
  8259 ;;      Totals:         0       0       0       0       0       0       0       0
  8260 ;;Total ram usage:        0 bytes
  8261 ;; Hardware stack levels used: 1
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		_SYSTEM_Initialize
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269  1567                     _WDT_Initialize:	
  8270                           ;psect for function _WDT_Initialize
  8271                           
  8272  1567                     l2191:	
  8273                           ;incstack = 0
  8274                           ; Regs used in _WDT_Initialize: [wreg]
  8275                           
  8276                           
  8277                           ;mcc_generated_files/mcc.c: 70:     WDTCON = 0x16;
  8278  1567  3016               	movlw	22
  8279  1568  0021               	movlb	1	; select bank1
  8280  1569  0097               	movwf	23	;volatile
  8281  156A                     l23:
  8282  156A  0008               	return
  8283  156B                     __end_of_WDT_Initialize:
  8284                           
  8285                           	psect	text26
  8286  0801                     __ptext26:	
  8287 ;; *************** function _PIN_MANAGER_Initialize *****************
  8288 ;; Defined at:
  8289 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;		None
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8303 ;;      Params:         0       0       0       0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0
  8306 ;;      Totals:         0       0       0       0       0       0       0       0
  8307 ;;Total ram usage:        0 bytes
  8308 ;; Hardware stack levels used: 1
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_SYSTEM_Initialize
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316  0801                     _PIN_MANAGER_Initialize:	
  8317                           ;psect for function _PIN_MANAGER_Initialize
  8318                           
  8319  0801                     l2175:	
  8320                           ;incstack = 0
  8321                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8322                           
  8323                           
  8324                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8325  0801  0022               	movlb	2	; select bank2
  8326  0802  018C               	clrf	12	;volatile
  8327                           
  8328                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8329  0803  018D               	clrf	13	;volatile
  8330                           
  8331                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8332  0804  018E               	clrf	14	;volatile
  8333  0805                     l2177:
  8334                           
  8335                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8336  0805  303F               	movlw	63
  8337  0806  0021               	movlb	1	; select bank1
  8338  0807  008C               	movwf	12	;volatile
  8339  0808                     l2179:
  8340                           
  8341                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8342  0808  30F0               	movlw	240
  8343  0809  008D               	movwf	13	;volatile
  8344                           
  8345                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  8346  080A  018E               	clrf	14	;volatile
  8347                           
  8348                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  8349  080B  0023               	movlb	3	; select bank3
  8350  080C  018E               	clrf	14	;volatile
  8351  080D                     l2181:
  8352                           
  8353                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
  8354  080D  3030               	movlw	48
  8355  080E  008D               	movwf	13	;volatile
  8356  080F                     l2183:
  8357                           
  8358                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  8359  080F  3017               	movlw	23
  8360  0810  008C               	movwf	12	;volatile
  8361                           
  8362                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8363  0811  0024               	movlb	4	; select bank4
  8364  0812  018D               	clrf	13	;volatile
  8365                           
  8366                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8367  0813  018C               	clrf	12	;volatile
  8368  0814                     l2185:
  8369                           
  8370                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  8371  0814  0021               	movlb	1	; select bank1
  8372  0815  1795               	bsf	21,7	;volatile
  8373                           
  8374                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  8375  0816  0022               	movlb	2	; select bank2
  8376  0817  019D               	clrf	29	;volatile
  8377  0818                     l52:
  8378  0818  0008               	return
  8379  0819                     __end_of_PIN_MANAGER_Initialize:
  8380                           
  8381                           	psect	text27
  8382  1571                     __ptext27:	
  8383 ;; *************** function _OSCILLATOR_Initialize *****************
  8384 ;; Defined at:
  8385 ;;		line 59 in file "mcc_generated_files/mcc.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8399 ;;      Params:         0       0       0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_SYSTEM_Initialize
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412  1571                     _OSCILLATOR_Initialize:	
  8413                           ;psect for function _OSCILLATOR_Initialize
  8414                           
  8415  1571                     l2187:	
  8416                           ;incstack = 0
  8417                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8418                           
  8419                           
  8420                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x5A;
  8421  1571  305A               	movlw	90
  8422  1572  0021               	movlb	1	; select bank1
  8423  1573  0099               	movwf	25	;volatile
  8424  1574                     l2189:
  8425                           
  8426                           ;mcc_generated_files/mcc.c: 64:     BORCON = 0x00;
  8427  1574  0022               	movlb	2	; select bank2
  8428  1575  0196               	clrf	22	;volatile
  8429  1576                     l20:
  8430  1576  0008               	return
  8431  1577                     __end_of_OSCILLATOR_Initialize:
  8432                           
  8433                           	psect	text28
  8434  1584                     __ptext28:	
  8435 ;; *************** function _ADC_Initialize *****************
  8436 ;; Defined at:
  8437 ;;		line 67 in file "mcc_generated_files/adc.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8451 ;;      Params:         0       0       0       0       0       0       0       0
  8452 ;;      Locals:         0       0       0       0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0
  8454 ;;      Totals:         0       0       0       0       0       0       0       0
  8455 ;;Total ram usage:        0 bytes
  8456 ;; Hardware stack levels used: 1
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_SYSTEM_Initialize
  8461 ;;		_main
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465  1584                     _ADC_Initialize:	
  8466                           ;psect for function _ADC_Initialize
  8467                           
  8468  1584                     l2193:	
  8469                           ;incstack = 0
  8470                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8471                           
  8472                           
  8473                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x80;
  8474  1584  3080               	movlw	128
  8475  1585  0021               	movlb	1	; select bank1
  8476  1586  009E               	movwf	30	;volatile
  8477  1587                     l2195:
  8478                           
  8479                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  8480  1587  019F               	clrf	31	;volatile
  8481  1588                     l2197:
  8482                           
  8483                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  8484  1588  019B               	clrf	27	;volatile
  8485  1589                     l2199:
  8486                           
  8487                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  8488  1589  019C               	clrf	28	;volatile
  8489  158A                     l2201:
  8490                           
  8491                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  8492  158A  3001               	movlw	1
  8493  158B  009D               	movwf	29	;volatile
  8494  158C                     l74:
  8495  158C  0008               	return
  8496  158D                     __end_of_ADC_Initialize:
  8497                           
  8498                           	psect	text29
  8499  1674                     __ptext29:	
  8500 ;; *************** function _LCD_Initialize *****************
  8501 ;; Defined at:
  8502 ;;		line 46 in file "lcd.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;		None
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;		None
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1    wreg      void 
  8509 ;; Registers used:
  8510 ;;		wreg, status,2, status,0, pclath, cstack
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8516 ;;      Params:         0       0       0       0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0       0       0       0
  8518 ;;      Temps:          1       0       0       0       0       0       0       0
  8519 ;;      Totals:         1       0       0       0       0       0       0       0
  8520 ;;Total ram usage:        1 bytes
  8521 ;; Hardware stack levels used: 1
  8522 ;; Hardware stack levels required when called: 2
  8523 ;; This function calls:
  8524 ;;		_LCDPutCmd
  8525 ;; This function is called by:
  8526 ;;		_main
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530  1674                     _LCD_Initialize:	
  8531                           ;psect for function _LCD_Initialize
  8532                           
  8533  1674                     l2549:	
  8534                           ;incstack = 0
  8535                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8536                           
  8537                           
  8538                           ;lcd.c: 49:     PORTC = 0;
  8539  1674  0020               	movlb	0	; select bank0
  8540  1675  018E               	clrf	14	;volatile
  8541                           
  8542                           ;lcd.c: 51:     TRISC = 0x00;
  8543  1676  0021               	movlb	1	; select bank1
  8544  1677  018E               	clrf	14	;volatile
  8545  1678                     l2551:
  8546                           
  8547                           ;lcd.c: 54:     PORTCbits.RC7 = 1;
  8548  1678  0020               	movlb	0	; select bank0
  8549  1679  178E               	bsf	14,7	;volatile
  8550  167A                     l2553:
  8551                           
  8552                           ;lcd.c: 57:     _delay((unsigned long)((15)*(1000000/4000.0)));
  8553  167A  3005               	movlw	5
  8554  167B  00F7               	movwf	??_LCD_Initialize
  8555  167C  30DE               	movlw	222
  8556  167D                     u3927:
  8557  167D  0B89               	decfsz	9,f
  8558  167E  2E7D               	goto	u3927
  8559  167F  0BF7               	decfsz	??_LCD_Initialize,f
  8560  1680  2E7D               	goto	u3927
  8561  1681                     l2555:
  8562                           
  8563                           ;lcd.c: 60:     LCDPutCmd(0x32);
  8564  1681  3032               	movlw	50
  8565  1682  3195  25F4  3196   	fcall	_LCDPutCmd
  8566  1685                     l2557:
  8567                           
  8568                           ;lcd.c: 63:     LCDPutCmd(0x28);
  8569  1685  3028               	movlw	40
  8570  1686  3195  25F4  3196   	fcall	_LCDPutCmd
  8571  1689                     l2559:
  8572                           
  8573                           ;lcd.c: 66:     LCDPutCmd(0x0C);
  8574  1689  300C               	movlw	12
  8575  168A  3195  25F4  3196   	fcall	_LCDPutCmd
  8576  168D                     l2561:
  8577                           
  8578                           ;lcd.c: 68:     LCDPutCmd(0x01);
  8579  168D  3001               	movlw	1
  8580  168E  3195  25F4  3196   	fcall	_LCDPutCmd
  8581  1691                     l2563:
  8582                           
  8583                           ;lcd.c: 71:     LCDPutCmd(0x06);
  8584  1691  3006               	movlw	6
  8585  1692  3195  25F4  3196   	fcall	_LCDPutCmd
  8586  1695                     l143:
  8587  1695  0008               	return
  8588  1696                     __end_of_LCD_Initialize:
  8589                           
  8590                           	psect	text30
  8591  1696                     __ptext30:	
  8592 ;; *************** function _LCDPutStr *****************
  8593 ;; Defined at:
  8594 ;;		line 135 in file "lcd.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  str             2    7[COMMON] PTR const unsigned char 
  8597 ;;		 -> x(20), STR_1(9), 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  i               1   12[COMMON] unsigned char 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8609 ;;      Params:         2       0       0       0       0       0       0       0
  8610 ;;      Locals:         1       0       0       0       0       0       0       0
  8611 ;;      Temps:          3       0       0       0       0       0       0       0
  8612 ;;      Totals:         6       0       0       0       0       0       0       0
  8613 ;;Total ram usage:        6 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 2
  8616 ;; This function calls:
  8617 ;;		_LCDPutChar
  8618 ;; This function is called by:
  8619 ;;		_main
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623  1696                     _LCDPutStr:	
  8624                           ;psect for function _LCDPutStr
  8625                           
  8626  1696                     l2579:	
  8627                           ;incstack = 0
  8628                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8629                           
  8630                           
  8631                           ;lcd.c: 135: void LCDPutStr(const char *str);lcd.c: 136: {;lcd.c: 137:     uint8_t i=0;
  8632  1696  01FC               	clrf	LCDPutStr@i
  8633                           
  8634                           ;lcd.c: 140:     while (str[i])
  8635  1697  2EAB               	goto	l2585
  8636  1698                     l2581:
  8637                           
  8638                           ;lcd.c: 141:     {;lcd.c: 143:         LCDPutChar(str[i++]);
  8639  1698  0878               	movf	LCDPutStr@str+1,w
  8640  1699  00FA               	movwf	??_LCDPutStr+1
  8641  169A  0877               	movf	LCDPutStr@str,w
  8642  169B  00F9               	movwf	??_LCDPutStr
  8643  169C  087C               	movf	LCDPutStr@i,w
  8644  169D  0779               	addwf	??_LCDPutStr,w
  8645  169E  0084               	movwf	4
  8646  169F  087A               	movf	??_LCDPutStr+1,w
  8647  16A0  1803               	skipnc
  8648  16A1  0A7A               	incf	??_LCDPutStr+1,w
  8649  16A2  0085               	movwf	5
  8650  16A3  0800               	movf	0,w	;code access
  8651  16A4  3195  25D7  3196   	fcall	_LCDPutChar
  8652  16A7                     l2583:
  8653  16A7  3001               	movlw	1
  8654  16A8  00F9               	movwf	??_LCDPutStr
  8655  16A9  0879               	movf	??_LCDPutStr,w
  8656  16AA  07FC               	addwf	LCDPutStr@i,f
  8657  16AB                     l2585:
  8658                           
  8659                           ;lcd.c: 140:     while (str[i])
  8660  16AB  0878               	movf	LCDPutStr@str+1,w
  8661  16AC  00FA               	movwf	??_LCDPutStr+1
  8662  16AD  0877               	movf	LCDPutStr@str,w
  8663  16AE  00F9               	movwf	??_LCDPutStr
  8664  16AF  087C               	movf	LCDPutStr@i,w
  8665  16B0  0779               	addwf	??_LCDPutStr,w
  8666  16B1  0084               	movwf	4
  8667  16B2  087A               	movf	??_LCDPutStr+1,w
  8668  16B3  1803               	skipnc
  8669  16B4  0A7A               	incf	??_LCDPutStr+1,w
  8670  16B5  0085               	movwf	5
  8671  16B6  0012               	moviw fsr0++
  8672  16B7  1D03               	btfss	3,2
  8673  16B8  2EBA               	goto	u3501
  8674  16B9  2EBB               	goto	u3500
  8675  16BA                     u3501:
  8676  16BA  2E98               	goto	l2581
  8677  16BB                     u3500:
  8678  16BB                     l158:
  8679  16BB  0008               	return
  8680  16BC                     __end_of_LCDPutStr:
  8681                           
  8682                           	psect	text31
  8683  15D7                     __ptext31:	
  8684 ;; *************** function _LCDPutChar *****************
  8685 ;; Defined at:
  8686 ;;		line 103 in file "lcd.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  ch              1    wreg     unsigned char 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  ch              1    6[COMMON] unsigned char 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0, pclath, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8700 ;;      Params:         0       0       0       0       0       0       0       0
  8701 ;;      Locals:         1       0       0       0       0       0       0       0
  8702 ;;      Temps:          2       0       0       0       0       0       0       0
  8703 ;;      Totals:         3       0       0       0       0       0       0       0
  8704 ;;Total ram usage:        3 bytes
  8705 ;; Hardware stack levels used: 1
  8706 ;; Hardware stack levels required when called: 1
  8707 ;; This function calls:
  8708 ;;		_LCDWriteNibble
  8709 ;; This function is called by:
  8710 ;;		_LCDPutStr
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714  15D7                     _LCDPutChar:	
  8715                           ;psect for function _LCDPutChar
  8716                           
  8717                           
  8718                           ;incstack = 0
  8719                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  8720                           ;LCDPutChar@ch stored from wreg
  8721  15D7  00F6               	movwf	LCDPutChar@ch
  8722  15D8                     l2213:
  8723                           
  8724                           ;lcd.c: 103: void LCDPutChar(uint8_t ch);lcd.c: 104: {;lcd.c: 105:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
  8725  15D8  30FA               	movlw	250
  8726  15D9                     u3937:
  8727  15D9  3200               	nop2
  8728  15DA  0B89               	decfsz	9,f
  8729  15DB  2DD9               	goto	u3937
  8730  15DC                     l2215:
  8731                           
  8732                           ;lcd.c: 108:     LCDWriteNibble(ch,1);
  8733  15DC  01F0               	clrf	LCDWriteNibble@rs
  8734  15DD  0AF0               	incf	LCDWriteNibble@rs,f
  8735  15DE  0876               	movf	LCDPutChar@ch,w
  8736  15DF  3196  2613  3195   	fcall	_LCDWriteNibble
  8737  15E2                     l2217:
  8738                           
  8739                           ;lcd.c: 111:     ch = (ch << 4);
  8740  15E2  0876               	movf	LCDPutChar@ch,w
  8741  15E3  00F4               	movwf	??_LCDPutChar
  8742  15E4  3003               	movlw	3
  8743  15E5                     u2825:
  8744  15E5  35F4               	lslf	??_LCDPutChar,f
  8745  15E6  3EFF               	addlw	-1
  8746  15E7  1D03               	skipz
  8747  15E8  2DE5               	goto	u2825
  8748  15E9  3574               	lslf	??_LCDPutChar,w
  8749  15EA  00F5               	movwf	??_LCDPutChar+1
  8750  15EB  0875               	movf	??_LCDPutChar+1,w
  8751  15EC  00F6               	movwf	LCDPutChar@ch
  8752  15ED                     l2219:
  8753                           
  8754                           ;lcd.c: 114:     LCDWriteNibble(ch,1);
  8755  15ED  01F0               	clrf	LCDWriteNibble@rs
  8756  15EE  0AF0               	incf	LCDWriteNibble@rs,f
  8757  15EF  0876               	movf	LCDPutChar@ch,w
  8758  15F0  3196  2613  3195   	fcall	_LCDWriteNibble
  8759  15F3                     l149:
  8760  15F3  0008               	return
  8761  15F4                     __end_of_LCDPutChar:
  8762                           
  8763                           	psect	text32
  8764  16BC                     __ptext32:	
  8765 ;; *************** function _LCDGoto *****************
  8766 ;; Defined at:
  8767 ;;		line 148 in file "lcd.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  pos             1    wreg     unsigned char 
  8770 ;;  ln              1    7[COMMON] unsigned char 
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;  pos             1   10[COMMON] unsigned char 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      void 
  8775 ;; Registers used:
  8776 ;;		wreg, status,2, status,0, pclath, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8782 ;;      Params:         1       0       0       0       0       0       0       0
  8783 ;;      Locals:         3       0       0       0       0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0       0       0       0
  8785 ;;      Totals:         4       0       0       0       0       0       0       0
  8786 ;;Total ram usage:        4 bytes
  8787 ;; Hardware stack levels used: 1
  8788 ;; Hardware stack levels required when called: 2
  8789 ;; This function calls:
  8790 ;;		_LCDPutCmd
  8791 ;; This function is called by:
  8792 ;;		_main
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796  16BC                     _LCDGoto:	
  8797                           ;psect for function _LCDGoto
  8798                           
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  8802                           ;LCDGoto@pos stored from wreg
  8803  16BC  00FA               	movwf	LCDGoto@pos
  8804  16BD                     l2565:
  8805                           
  8806                           ;lcd.c: 148: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 149: {;lcd.c: 151:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  8807  16BD  3002               	movlw	2
  8808  16BE  0277               	subwf	LCDGoto@ln,w
  8809  16BF  1803               	skipnc
  8810  16C0  2EC2               	goto	u3471
  8811  16C1  2EC3               	goto	u3470
  8812  16C2                     u3471:
  8813  16C2  2EE2               	goto	l164
  8814  16C3                     u3470:
  8815  16C3                     l2567:
  8816  16C3  3010               	movlw	16
  8817  16C4  027A               	subwf	LCDGoto@pos,w
  8818  16C5  1C03               	skipc
  8819  16C6  2EC8               	goto	u3481
  8820  16C7  2EC9               	goto	u3480
  8821  16C8                     u3481:
  8822  16C8  2ECA               	goto	l2569
  8823  16C9                     u3480:
  8824  16C9  2EE2               	goto	l164
  8825  16CA                     l2569:
  8826                           
  8827                           ;lcd.c: 158:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  8828  16CA  0377               	decf	LCDGoto@ln,w
  8829  16CB  1903               	btfsc	3,2
  8830  16CC  2ECE               	goto	u3491
  8831  16CD  2ECF               	goto	u3490
  8832  16CE                     u3491:
  8833  16CE  2ED5               	goto	l2573
  8834  16CF                     u3490:
  8835  16CF                     l2571:
  8836  16CF  3080               	movlw	128
  8837  16D0  047A               	iorwf	LCDGoto@pos,w
  8838  16D1  00F8               	movwf	_LCDGoto$261
  8839  16D2  3000               	movlw	0
  8840  16D3  00F9               	movwf	_LCDGoto$261+1
  8841  16D4  2EDA               	goto	l2575
  8842  16D5                     l2573:
  8843  16D5  30C0               	movlw	192
  8844  16D6  047A               	iorwf	LCDGoto@pos,w
  8845  16D7  00F8               	movwf	_LCDGoto$261
  8846  16D8  3000               	movlw	0
  8847  16D9  00F9               	movwf	_LCDGoto$261+1
  8848  16DA                     l2575:
  8849  16DA  0878               	movf	_LCDGoto$261,w
  8850  16DB  3195  25F4  3196   	fcall	_LCDPutCmd
  8851  16DE                     l2577:
  8852                           
  8853                           ;lcd.c: 161:     _delay((unsigned long)((5)*(1000000/4000.0)));
  8854  16DE  30FA               	movlw	250
  8855  16DF                     u3947:
  8856  16DF  3200               	nop2
  8857  16E0  0B89               	decfsz	9,f
  8858  16E1  2EDF               	goto	u3947
  8859  16E2                     l164:
  8860  16E2  0008               	return
  8861  16E3                     __end_of_LCDGoto:
  8862                           
  8863                           	psect	text33
  8864  15F4                     __ptext33:	
  8865 ;; *************** function _LCDPutCmd *****************
  8866 ;; Defined at:
  8867 ;;		line 118 in file "lcd.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;  ch              1    wreg     unsigned char 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  ch              1    6[COMMON] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg, status,2, status,0, pclath, cstack
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8881 ;;      Params:         0       0       0       0       0       0       0       0
  8882 ;;      Locals:         1       0       0       0       0       0       0       0
  8883 ;;      Temps:          2       0       0       0       0       0       0       0
  8884 ;;      Totals:         3       0       0       0       0       0       0       0
  8885 ;;Total ram usage:        3 bytes
  8886 ;; Hardware stack levels used: 1
  8887 ;; Hardware stack levels required when called: 1
  8888 ;; This function calls:
  8889 ;;		_LCDWriteNibble
  8890 ;; This function is called by:
  8891 ;;		_LCD_Initialize
  8892 ;;		_LCDGoto
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896  15F4                     _LCDPutCmd:	
  8897                           ;psect for function _LCDPutCmd
  8898                           
  8899                           
  8900                           ;incstack = 0
  8901                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  8902                           ;LCDPutCmd@ch stored from wreg
  8903  15F4  00F6               	movwf	LCDPutCmd@ch
  8904  15F5                     l2203:
  8905                           
  8906                           ;lcd.c: 118: void LCDPutCmd(uint8_t ch);lcd.c: 119: {;lcd.c: 120:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  8907  15F5  30FA               	movlw	250
  8908  15F6                     u3957:
  8909  15F6  3200               	nop2
  8910  15F7  0B89               	decfsz	9,f
  8911  15F8  2DF6               	goto	u3957
  8912  15F9                     l2205:
  8913                           
  8914                           ;lcd.c: 123:     LCDWriteNibble(ch,0);
  8915  15F9  01F0               	clrf	LCDWriteNibble@rs
  8916  15FA  0876               	movf	LCDPutCmd@ch,w
  8917  15FB  3196  2613  3195   	fcall	_LCDWriteNibble
  8918  15FE                     l2207:
  8919                           
  8920                           ;lcd.c: 126:     ch = (ch << 4);
  8921  15FE  0876               	movf	LCDPutCmd@ch,w
  8922  15FF  00F4               	movwf	??_LCDPutCmd
  8923  1600  3003               	movlw	3
  8924  1601                     u2815:
  8925  1601  35F4               	lslf	??_LCDPutCmd,f
  8926  1602  3EFF               	addlw	-1
  8927  1603  1D03               	skipz
  8928  1604  2E01               	goto	u2815
  8929  1605  3574               	lslf	??_LCDPutCmd,w
  8930  1606  00F5               	movwf	??_LCDPutCmd+1
  8931  1607  0875               	movf	??_LCDPutCmd+1,w
  8932  1608  00F6               	movwf	LCDPutCmd@ch
  8933  1609                     l2209:
  8934                           
  8935                           ;lcd.c: 128:     _delay((unsigned long)((1)*(1000000/4000.0)));
  8936  1609  3053               	movlw	83
  8937  160A                     u3967:
  8938  160A  0B89               	decfsz	9,f
  8939  160B  2E0A               	goto	u3967
  8940  160C  0000               	nop
  8941  160D                     l2211:
  8942                           
  8943                           ;lcd.c: 131:     LCDWriteNibble(ch,0);
  8944  160D  01F0               	clrf	LCDWriteNibble@rs
  8945  160E  0876               	movf	LCDPutCmd@ch,w
  8946  160F  3196  2613  3195   	fcall	_LCDWriteNibble
  8947  1612                     l152:
  8948  1612  0008               	return
  8949  1613                     __end_of_LCDPutCmd:
  8950                           
  8951                           	psect	text34
  8952  1613                     __ptext34:	
  8953 ;; *************** function _LCDWriteNibble *****************
  8954 ;; Defined at:
  8955 ;;		line 76 in file "lcd.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  ch              1    wreg     unsigned char 
  8958 ;;  rs              1    0[COMMON] unsigned char 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  ch              1    3[COMMON] unsigned char 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		wreg, status,2, status,0
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8970 ;;      Params:         1       0       0       0       0       0       0       0
  8971 ;;      Locals:         1       0       0       0       0       0       0       0
  8972 ;;      Temps:          2       0       0       0       0       0       0       0
  8973 ;;      Totals:         4       0       0       0       0       0       0       0
  8974 ;;Total ram usage:        4 bytes
  8975 ;; Hardware stack levels used: 1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_LCDPutChar
  8980 ;;		_LCDPutCmd
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984  1613                     _LCDWriteNibble:	
  8985                           ;psect for function _LCDWriteNibble
  8986                           
  8987                           
  8988                           ;incstack = 0
  8989                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  8990                           ;LCDWriteNibble@ch stored from wreg
  8991  1613  00F3               	movwf	LCDWriteNibble@ch
  8992  1614                     l1897:
  8993                           
  8994                           ;lcd.c: 76: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 77: {;lcd.c: 79:     ch = 
      +                          (ch >> 4);
  8995  1614  0873               	movf	LCDWriteNibble@ch,w
  8996  1615  00F1               	movwf	??_LCDWriteNibble
  8997  1616  3004               	movlw	4
  8998  1617                     u2095:
  8999  1617  36F1               	lsrf	??_LCDWriteNibble,f
  9000  1618  0B89               	decfsz	9,f
  9001  1619  2E17               	goto	u2095
  9002  161A  0871               	movf	??_LCDWriteNibble,w
  9003  161B  00F2               	movwf	??_LCDWriteNibble+1
  9004  161C  0872               	movf	??_LCDWriteNibble+1,w
  9005  161D  00F3               	movwf	LCDWriteNibble@ch
  9006  161E                     l1899:
  9007                           
  9008                           ;lcd.c: 82:     ch = (ch & 0x0F);
  9009  161E  0873               	movf	LCDWriteNibble@ch,w
  9010  161F  390F               	andlw	15
  9011  1620  00F1               	movwf	??_LCDWriteNibble
  9012  1621  0871               	movf	??_LCDWriteNibble,w
  9013  1622  00F3               	movwf	LCDWriteNibble@ch
  9014  1623                     l1901:
  9015                           
  9016                           ;lcd.c: 85:     PORTC = (PORTC & 0xF0);
  9017  1623  0020               	movlb	0	; select bank0
  9018  1624  080E               	movf	14,w	;volatile
  9019  1625  39F0               	andlw	240
  9020  1626  008E               	movwf	14	;volatile
  9021                           
  9022                           ;lcd.c: 88:     PORTC = (PORTC | ch);
  9023  1627  080E               	movf	14,w	;volatile
  9024  1628  0473               	iorwf	LCDWriteNibble@ch,w
  9025  1629  008E               	movwf	14	;volatile
  9026  162A                     l1903:
  9027                           
  9028                           ;lcd.c: 91:     PORTCbits.RC4 = rs;
  9029  162A  0C70               	rrf	LCDWriteNibble@rs,w
  9030  162B  1C03               	skipc
  9031  162C  120E               	bcf	14,4	;volatile
  9032  162D  1803               	skipnc
  9033  162E  160E               	bsf	14,4	;volatile
  9034  162F                     l1905:
  9035                           
  9036                           ;lcd.c: 94:     PORTCbits.RC5 = 0;
  9037  162F  128E               	bcf	14,5	;volatile
  9038  1630                     l1907:
  9039                           
  9040                           ;lcd.c: 97:     PORTCbits.RC6 = 1;
  9041  1630  170E               	bsf	14,6	;volatile
  9042  1631                     l1909:
  9043                           
  9044                           ;lcd.c: 100:     PORTCbits.RC6 = 0;
  9045  1631  130E               	bcf	14,6	;volatile
  9046  1632                     l146:
  9047  1632  0008               	return
  9048  1633                     __end_of_LCDWriteNibble:
  9049                           
  9050                           	psect	text35
  9051  1564                     __ptext35:	
  9052 ;; *************** function _ADC_StartConversion *****************
  9053 ;; Defined at:
  9054 ;;		line 96 in file "mcc_generated_files/adc.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		None
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9068 ;;      Params:         0       0       0       0       0       0       0       0
  9069 ;;      Locals:         0       0       0       0       0       0       0       0
  9070 ;;      Temps:          0       0       0       0       0       0       0       0
  9071 ;;      Totals:         0       0       0       0       0       0       0       0
  9072 ;;Total ram usage:        0 bytes
  9073 ;; Hardware stack levels used: 1
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		_main
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081  1564                     _ADC_StartConversion:	
  9082                           ;psect for function _ADC_StartConversion
  9083                           
  9084  1564                     l2539:	
  9085                           ;incstack = 0
  9086                           ; Regs used in _ADC_StartConversion: []
  9087                           
  9088                           
  9089                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GO_nDONE = 1;
  9090  1564  0021               	movlb	1	; select bank1
  9091  1565  149D               	bsf	29,1	;volatile
  9092  1566                     l80:
  9093  1566  0008               	return
  9094  1567                     __end_of_ADC_StartConversion:
  9095                           
  9096                           	psect	text36
  9097  1597                     __ptext36:	
  9098 ;; *************** function _ADC_SelectChannel *****************
  9099 ;; Defined at:
  9100 ;;		line 88 in file "mcc_generated_files/adc.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  channel         1    wreg     enum E3350
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  channel         1    1[COMMON] enum E3350
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  1    wreg      void 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9114 ;;      Params:         0       0       0       0       0       0       0       0
  9115 ;;      Locals:         1       0       0       0       0       0       0       0
  9116 ;;      Temps:          1       0       0       0       0       0       0       0
  9117 ;;      Totals:         2       0       0       0       0       0       0       0
  9118 ;;Total ram usage:        2 bytes
  9119 ;; Hardware stack levels used: 1
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		_main
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127  1597                     _ADC_SelectChannel:	
  9128                           ;psect for function _ADC_SelectChannel
  9129                           
  9130                           
  9131                           ;incstack = 0
  9132                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  9133                           ;ADC_SelectChannel@channel stored from wreg
  9134  1597  00F1               	movwf	ADC_SelectChannel@channel
  9135  1598                     l2535:
  9136                           
  9137                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  9138  1598  0871               	movf	ADC_SelectChannel@channel,w
  9139  1599  00F0               	movwf	??_ADC_SelectChannel
  9140  159A  0DF0               	rlf	??_ADC_SelectChannel,f
  9141  159B  0DF0               	rlf	??_ADC_SelectChannel,f
  9142  159C  0021               	movlb	1	; select bank1
  9143  159D  081D               	movf	29,w	;volatile
  9144  159E  0670               	xorwf	??_ADC_SelectChannel,w
  9145  159F  3983               	andlw	-125
  9146  15A0  0670               	xorwf	??_ADC_SelectChannel,w
  9147  15A1  009D               	movwf	29	;volatile
  9148  15A2                     l2537:
  9149                           
  9150                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  9151  15A2  141D               	bsf	29,0	;volatile
  9152  15A3                     l77:
  9153  15A3  0008               	return
  9154  15A4                     __end_of_ADC_SelectChannel:
  9155                           
  9156                           	psect	text37
  9157  157D                     __ptext37:	
  9158 ;; *************** function _ADC_IsConversionDone *****************
  9159 ;; Defined at:
  9160 ;;		line 103 in file "mcc_generated_files/adc.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;		None
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;		None
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      _Bool 
  9167 ;; Registers used:
  9168 ;;		wreg, status,0
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9174 ;;      Params:         0       0       0       0       0       0       0       0
  9175 ;;      Locals:         0       0       0       0       0       0       0       0
  9176 ;;      Temps:          0       0       0       0       0       0       0       0
  9177 ;;      Totals:         0       0       0       0       0       0       0       0
  9178 ;;Total ram usage:        0 bytes
  9179 ;; Hardware stack levels used: 1
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_main
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187  157D                     _ADC_IsConversionDone:	
  9188                           ;psect for function _ADC_IsConversionDone
  9189                           
  9190  157D                     l2541:	
  9191                           ;incstack = 0
  9192                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  9193                           
  9194                           
  9195                           ;mcc_generated_files/adc.c: 106:    return ((_Bool)(!ADCON0bits.GO_nDONE));
  9196  157D  1003               	clrc
  9197  157E  0021               	movlb	1	; select bank1
  9198  157F  1C9D               	btfss	29,1	;volatile
  9199  1580  1403               	setc
  9200  1581  3000               	movlw	0
  9201  1582  3D09               	addwfc	9,w
  9202  1583                     l83:
  9203  1583  0008               	return
  9204  1584                     __end_of_ADC_IsConversionDone:
  9205                           
  9206                           	psect	text38
  9207  156B                     __ptext38:	
  9208 ;; *************** function _ADC_GetConversionResult *****************
  9209 ;; Defined at:
  9210 ;;		line 109 in file "mcc_generated_files/adc.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  2    0[COMMON] unsigned int 
  9217 ;; Registers used:
  9218 ;;		wreg
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9224 ;;      Params:         2       0       0       0       0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0
  9227 ;;      Totals:         2       0       0       0       0       0       0       0
  9228 ;;Total ram usage:        2 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; This function calls:
  9231 ;;		Nothing
  9232 ;; This function is called by:
  9233 ;;		_main
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237  156B                     _ADC_GetConversionResult:	
  9238                           ;psect for function _ADC_GetConversionResult
  9239                           
  9240  156B                     l2545:	
  9241                           ;incstack = 0
  9242                           ; Regs used in _ADC_GetConversionResult: [wreg]
  9243                           
  9244                           
  9245                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9246  156B  0021               	movlb	1	; select bank1
  9247  156C  081C               	movf	28,w	;volatile
  9248  156D  00F1               	movwf	?_ADC_GetConversionResult+1
  9249  156E  081B               	movf	27,w	;volatile
  9250  156F  00F0               	movwf	?_ADC_GetConversionResult
  9251  1570                     l86:
  9252  1570  0008               	return
  9253  1571                     __end_of_ADC_GetConversionResult:
  9254  007E                     btemp	set	126	;btemp
  9255  007E                     wtemp0	set	126
  9256                           
  9257                           	psect	idloc
  9258                           
  9259                           ;Config register IDLOC0 @ 0x8000
  9260                           ;	unspecified, using default values
  9261  8000                     	org	32768
  9262  8000  3FFF               	dw	16383
  9263                           
  9264                           ;Config register IDLOC1 @ 0x8001
  9265                           ;	unspecified, using default values
  9266  8001                     	org	32769
  9267  8001  3FFF               	dw	16383
  9268                           
  9269                           ;Config register IDLOC2 @ 0x8002
  9270                           ;	unspecified, using default values
  9271  8002                     	org	32770
  9272  8002  3FFF               	dw	16383
  9273                           
  9274                           ;Config register IDLOC3 @ 0x8003
  9275                           ;	unspecified, using default values
  9276  8003                     	org	32771
  9277  8003  3FFF               	dw	16383
  9278                           
  9279                           	psect	config
  9280                           
  9281                           ;Config register CONFIG1 @ 0x8007
  9282                           ;	Oscillator Selection Bits
  9283                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9284                           ;	Watchdog Timer Enable
  9285                           ;	WDTE = OFF, WDT disabled
  9286                           ;	Power-up Timer Enable
  9287                           ;	PWRTE = OFF, PWRT disabled
  9288                           ;	MCLR Pin Function Select
  9289                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9290                           ;	Flash Program Memory Code Protection
  9291                           ;	CP = OFF, Program memory code protection is disabled
  9292                           ;	Brown-out Reset Enable
  9293                           ;	BOREN = OFF, Brown-out Reset disabled
  9294                           ;	Clock Out Enable
  9295                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9296                           ;	Internal/External Switchover Mode
  9297                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  9298                           ;	Fail-Safe Clock Monitor Enable
  9299                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9300  8007                     	org	32775
  9301  8007  19E4               	dw	6628
  9302                           
  9303                           ;Config register CONFIG2 @ 0x8008
  9304                           ;	Flash Memory Self-Write Protection
  9305                           ;	WRT = OFF, Write protection off
  9306                           ;	Stack Overflow/Underflow Reset Enable
  9307                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9308                           ;	Brown-out Reset Voltage Selection
  9309                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9310                           ;	Low-Power Brown Out Reset
  9311                           ;	LPBOR = OFF, Low-Power BOR is disabled
  9312                           ;	Low-Voltage Programming Enable
  9313                           ;	LVP = ON, Low-voltage programming enabled
  9314  8008                     	org	32776
  9315  8008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    118
    Data        0
    BSS         25
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      75
    BANK1            80     23      43
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> x(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 20
		 -> x(BANK1[20]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _fround->___lwdiv
    ___wmul->___lwdiv
    ___lwdiv->___lwmod
    ___ftmul->___lwdiv
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    ___lwtoft->___ftpack
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   53882
            _ADC_GetConversionResult
                     _ADC_Initialize
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             41    36      5   42156
                                             59 BANK0     11     6      5
                                              0 BANK1     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               11     8      3   10016
                                             26 BANK0     11     8      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1064
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1196
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3    8647
                                             26 BANK0     14    11      3
                            ___ftmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2652
                                              4 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     543
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     546
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4661
                                             10 BANK0     16    10      6
            _ADC_GetConversionResult (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     574
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2548
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     543
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                             37 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3706
                                             53 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3511
                                             40 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     648
                                              0 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2501
                                              8 COMMON     4     1      3
            _ADC_GetConversionResult (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2823
                                             26 BANK0     16    10      6
            _ADC_GetConversionResult (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2415
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     413
                                              7 COMMON     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            6     4      2     631
                                              7 COMMON     6     4      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     413
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1     675
                                              7 COMMON     4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     413
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     346
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_Initialize
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___ftdiv
     _ADC_GetConversionResult (ARG)
     ___ftmul (ARG)
       _ADC_GetConversionResult (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversionResult (ARG)
         ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
   ___ftmul
   ___lwtoft
   _sprintf
     ___awdiv
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___ftmul
         ___lwdiv
         ___lwmod
         ___wmul
     ___ftge
     ___ftmul
     ___ftneg
     ___ftsub
       ___ftadd
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___ftmul
         ___wmul
     ___lldiv
     ___llmod
     ___lltoft
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      84       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     17      2B       8       53.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      84      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 06 10:58:25 2022

                              _x 00B7                   _LCD_Initialize 1674                               l20 1576  
                             l23 156A                               l17 15B0                      ?_LCDPutChar 0070  
                             l52 0818                               l80 1566                               l74 158C  
                             l83 1583                               l77 15A3                               l86 1570  
                   ___awdiv@sign 0021              ___wmul@multiplicand 0026                     ___ftadd@exp1 0054  
                   ___ftadd@exp2 0053                     ___ftadd@sign 0052                              l143 1695  
                            l311 0682                              l152 1612                              l146 1632  
                            l331 1652                              l164 16E2                              l252 0FFF  
                            l149 15F3                              l325 07EE                              l158 16BB  
                            l319 079D                              l512 08D2                              l329 163E  
                            l259 02C3                              l700 17FF                              l284 0478  
                            l365 0872                              l525 0057                              l606 0BA1  
                            l614 0AEF                              l278 033E                              l535 0D79  
                            l615 0A6D                              l632 1779                              l625 0AE2  
                            l554 0946                              l546 0D6C                              l618 0AB6  
                            l539 0D40                              l580 0DD3                              l708 170D  
                            l565 0924                              l566 092E                              l558 090B  
                            l638 0C62                              l567 0946                              l575 0E99  
                            l655 1673                              l649 1596                              l578 0DC4  
                            l666 0A22                              l579 0DCE                              l659 0A3F  
                            l771 17B5                              l589 0E3C                              l781 1741  
                            l791 15C2                              l786 15D6                     ___awmod@sign 0076  
                            wreg 0009                      _sprintf$737 00A0                  __end_of_LCDGoto 16E3  
                   ___ftdiv@cntr 0044                     ___ftdiv@sign 0049                             l2001 004E  
                           l2011 0D9E                             l2003 0053                             l2021 0DBA  
                           l2013 0DA8                             l2101 0C0E                             l2031 0DD4  
                           l2023 0DC5                             l2007 0D7A                             l2111 0C2A  
                           l2103 0C12                             l2201 158A                             l2041 0DFE  
                           l2033 0DDA                             l2025 0DC9                             l2017 0DAF  
                           l2009 0D98                             l2121 0C44                             l2113 0C2E  
                           l2105 0C18                             l2211 160D                             l2203 15F5  
                           l2051 0E23                             l2043 0E08                             l2035 0DE7  
                           l2027 0DCD                             l2019 0DB4                             l2123 0C4A  
                           l2115 0C32                             l2107 0C1E                             l2131 1782  
                           l2205 15F9                             l2213 15D8                             l2061 0E54  
                           l2053 0E2C                             l2037 0DEF                             l2045 0E0F  
                           l2029 0DD2                             l2301 0A5B                             l2117 0C38  
                           l2109 0C24                             l2141 17A1                             l2133 1785  
                           l2221 0E9C                             l2207 15FE                             l2215 15DC  
                           l2071 0E7F                             l2063 0E64                             l2055 0E36  
                           l2047 0E15                             l2039 0DF5                             l2311 0A83  
                           l2119 0C3E                             l2143 17A5                             l2135 178A  
                           l2127 177A                             l2223 0EA2                             l2231 0F59  
                           l2209 1609                             l2217 15E2                             l2073 0E81  
                           l2065 0E65                             l2057 0E40                             l2049 0E1D  
                           l2401 0819                             l2321 0AA9                             l2313 0A85  
                           l2145 17A6                             l2137 178E                             l2129 177C  
                           l2161 1720                             l2153 170E                             l2233 0F5F  
                           l2225 0F42                             l2219 15ED                             l2067 0E6B  
                           l2059 0E50                             l2411 0842                             l2403 0829  
                           l2323 0AAA                             l2315 0A8E                             l2307 0A6E  
                           l2091 0BFC                             l2083 0BBB                             l2147 17AB  
                           l2139 1792                             l2163 1724                             l2155 1714  
                           l2171 173D                             l2235 0FBB                             l2243 005A  
                           l2181 080D                             l2069 0E6F                             l2413 0854  
                           l2405 082C                             l2421 086A                             l2341 0AD9  
                           l2333 0AC2                             l2325 0AB0                             l2317 0A95  
                           l2309 0A74                             l2093 0BFD                             l2085 0BCC  
                           l2077 0BA2                             l2149 17B1                             l2165 172E  
                           l2157 1717                             l2261 0174                             l2245 005E  
                           l2183 080F                             l2175 0801                             l2191 1567  
                           l2431 1757                             l2415 085C                             l2407 0837  
                           l2511 17D0                             l2503 17B6                             l2343 0AE7  
                           l2327 0ABA                             l2335 0AD2                             l2319 0AA3  
                           l2095 0BFE                             l2079 0BB4                             l2167 1732  
                           l2159 171C                             l2239 0FD2                             l2255 010D  
                           l2247 0060                             l2193 1584                             l2185 0814  
                           l2177 0805                             l2441 1778                             l2433 1764  
                           l2425 1742                             l2417 085D                             l2409 083B  
                           l2513 17E2                             l2505 17BE                             l2361 0CD2  
                           l2353 0C83                             l2097 0C04                             l2089 0BD3  
                           l2169 1737                             l2273 023F                             l2257 0114  
                           l2249 0067                             l2265 0192                             l2601 02F2  
                           l2195 1587                             l2187 1571                             l2179 0808  
                           l2435 1766                             l2427 1746                             l2419 0864  
                           l2515 17EA                             l2507 17C1                             l2523 16E3  
                           l2371 0CEC                             l2363 0CDA                             l2347 0C63  
                           l2099 0C0A                             l2291 15C1                             l2283 15B2  
                           l2275 0246                             l2267 0199                             l2611 032B  
                           l2603 02F7                             l2541 157D                             l1901 1623  
                           l2197 1588                             l2189 1574                             l2533 15A4  
                           l2437 1768                             l2429 1753                             l2445 158D  
                           l2453 1653                             l2461 09BB                             l2517 17F1  
                           l2509 17CC                             l2525 16E8                             l2381 0D44  
                           l2373 0D14                             l2365 0CDC                             l2349 0C7A  
                           l2285 15B3                             l2621 0360                             l2605 02FB  
                           l2613 0339                             l2535 1598                             l1903 162A  
                           l2551 1678                             l2199 1589                             l2439 1776  
                           l2447 1594                             l2455 165B                             l2471 09E7  
                           l2463 09CD                             l2519 17F7                             l2527 16F3  
                           l2375 0D2E                             l2367 0CE1                             l2359 0C9A  
                           l2295 0A40                             l1911 1633                             l2287 15B9  
                           l2279 02A6                             l2711 05E6                             l2703 05BC  
                           l2631 0387                             l2623 036F                             l2615 033C  
                           l2607 0313                             l2545 156B                             l2537 15A2  
                           l1905 162F                             l2561 168D                             l2553 167A  
                           l2801 0B1A                             l2449 1596                             l2457 165D  
                           l2473 09ED                             l2529 16F9                             l2377 0D2F  
                           l2369 0CE5                             l2297 0A52                             l1921 164E  
                           l1913 1636                             l2289 15BF                             l2721 0642  
                           l2713 0611                             l2705 05C8                             l2641 03B9  
                           l2633 039A                             l2625 0374                             l2609 0326  
                           l2539 1564                             l1907 1630                             l2571 16CF  
                           l2563 1691                             l2555 1681                             l2811 0B3C  
                           l2475 09F4                             l2467 09D6                             l2395 0D63  
                           l2387 0D4C                             l2379 0D3A                             l1915 163A  
                           l1931 087E                             l2731 0674                             l2723 064C  
                           l2715 062D                             l2707 05D7                             l2651 040B  
                           l2643 03DB                             l2635 03AB                             l2627 0378  
                           l2619 0341                             l1909 1631                             l2573 16D5  
                           l2565 16BD                             l2581 1698                             l2557 1685  
                           l2549 1674                             l2821 0B68                             l2813 0B4C  
                           l2805 0B21                             l2493 0A19                             l2485 0A02  
                           l2477 09F6                             l2469 09E6                             l2397 0D71  
                           l2389 0D5C                             l1917 1643                             l1941 088F  
                           l1933 0880                             l1925 0873                             l2741 06A1  
                           l2733 067B                             l2725 0651                             l2709 05E0  
                           l2661 045F                             l2653 040F                             l2645 03DF  
                           l2637 03AF                             l2629 0381                             l2575 16DA  
                           l2567 16C3                             l2583 16A7                             l2559 1689  
                           l2831 0B89                             l2823 0B76                             l2815 0B50  
                           l2807 0B27                             l2495 0A27                             l2479 09FA  
                           l2487 0A12                             l1919 1648                             l1951 08A5  
                           l1943 0895                             l1935 0884                             l1927 0875  
                           l2751 0738                             l2743 06B1                             l2735 068D  
                           l2727 0655                             l2719 0639                             l2671 04C7  
                           l2663 0473                             l2655 0420                             l2647 03F7  
                           l2639 03B2                             l2591 02D3                             l2577 16DE  
                           l2569 16CA                             l2585 16AB                             l1881 0905  
                           l1873 08E6                             l1865 08D3                             l2825 0B7C  
                           l2817 0B57                             l2809 0B2C                             l2497 0A2C  
                           l1953 08B4                             l1945 0898                             l1961 08C4  
                           l1937 0889                             l1929 0879                             l2761 077F  
                           l2753 073D                             l2745 06E6                             l2737 0692  
                           l2729 0664                             l2681 050D                             l2673 04DE  
                           l2665 0488                             l2657 0446                             l2649 0407  
                           l2593 02DD                             l2841 0952                             l2579 1696  
                           l1891 0930                             l1883 0912                             l1875 08F0  
                           l1867 08D8                             l2827 0B7D                             l2819 0B62  
                           l2835 15C3                             l2499 0A37                             l1963 08C9  
                           l1955 08B8                             l1947 089D                             l1939 088D  
                           l1971 0006                             l2771 07A8                             l2763 0783  
                           l2747 0711                             l2755 0768                             l2739 069C  
                           l2691 0588                             l2675 04EE                             l2667 04AF  
                           l2659 0459                             l2595 02E3                             l2587 02C6  
                           l2851 096B                             l2843 0959                             l1893 0940  
                           l1885 091A                             l1877 08F7                             l1869 08DF  
                           l2829 0B83                             l1965 08CE                             l1957 08B9  
                           l1949 08A1                             l1981 001A                             l1973 000A  
                           l2773 07A9                             l2757 0770                             l2749 072D  
                           l2693 058A                             l2685 051D                             l2677 0502  
                           l2669 04BF                             l2765 078A                             l2597 02E5  
                           l2589 02CD                             l2853 099D                             l2845 095C  
                           l1895 0945                             l1887 091E                             l1879 08FB  
                           l1959 08BE                             l1991 0030                             l1983 0020  
                           l1975 000F                             l2775 07B9                             l2767 0791  
                           l2759 077A                             l2687 0535                             l2679 0508  
                           l2599 02F0                             l2783 07D3                             l2855 09AB  
                           l2847 0960                             l2839 0947                             l1897 1614  
                           l1889 0928                             l2793 0AF0                             l1993 003A  
                           l1985 0023                             l1977 0011                             l1969 0005  
                           l2777 07B9                             l2769 0799                             l2689 053C  
                           l2785 07E9                             l2857 09B1                             l2849 0963  
                           l1899 161E                             l2795 0B02                             l1995 003E  
                           l1987 0028                             l1979 0015                             l2779 07C9  
                           l2699 058C                             l1997 0043                             l1989 002C  
                           l2799 0B09                             l1999 0049                             l2879 0358  
                           STR_1 1883                             STR_2 1828                             u2000 08F6  
                           u2001 08F5                             u2020 0911                             u2100 163A  
                           u2021 0910                             u2101 1639                             u2015 0906  
                           u2040 091E                             u2200 08B4                             u2041 091D  
                           u2201 08B3                             u2050 0924                             u3010 0AD1  
                           u2130 164E                             u2051 0923                             u2035 0915  
                           u3011 0AD0                             u2131 164D                             u2115 163F  
                           u2060 0928                             u3100 0D44                             u3020 0AD8  
                           u2220 08C4                             u2140 0879                             u2061 0927  
                           u3101 0D43                             u3021 0AD7                             u3005 0AC3  
                           u2125 1644                             u2221 08C3                             u2205 08B0  
                           u2141 0878                             _LATA 010C                             u2070 0938  
                           u3110 0D4B                             u2230 08C9                             u2150 0884  
                           u2310 0049                             _LATB 010D                             u3111 0D4A  
                           u2231 08C8                             u2215 08BA                             u2151 0883  
                           u2311 0048                             _LATC 010E                             u2080 0945  
                           u2400 0DD2                             u3040 0AE7                             u2160 0895  
                           u2320 004E                             u2240 000A                             u2081 0944  
                           u2401 0DD1                             u3041 0AE6                             u2161 0894  
                           u2321 004D                             u2305 003F                             u2241 0009  
                           u2410 0DE7                             u2330 0D98                             u3210 0854  
                           u3130 0D5B                             u3050 0C7A                             u2250 0015  
                           u2075 0935                             u2411 0DE6                             u2331 0D97  
                           u3211 0853                             u3131 0D5A                             u3051 0C79  
                           u3035 0ADA                             u2251 0014                             u2500 0E2B  
                           u2340 0D9E                             u3300 09E0                             u3140 0D62  
                           u3060 0C99                             u2180 08A5                             u2260 0020  
                           u2501 0E2A                             u2341 0D9D                             u3205 083C  
                           u3141 0D61                             u3125 0D4D                             u3061 0C98  
                           u2181 08A4                             u2261 001F                             u2430 0DF5  
                           u2350 0DA8                             u3310 09FA                             u3230 086A  
                           u2095 1617                             u2431 0DF4                             u2351 0DA7  
                           u3311 09F9                             u3231 0869                             u3215 0850  
                           u2175 0899                             u3240 1746                             u2520 0E3C  
                           u2440 0DFD                             u2360 0DB4                             u3320 0A01  
                           u3160 0D71                             u3080 0D14                             u2600 0C12  
                           u2280 0030                             u3241 1745                             u2521 0E3B  
                           u2441 0DFC                             u2425 0DE8                             u2361 0DB3  
                           u3321 0A00                             u3305 09DD                             u3225 085E  
                           u3161 0D70                             u3081 0D13                             u2601 0C11  
                           u2281 002F                             u3250 1757                             u2530 0E40  
                           u2370 0DBA                             u3170 0829                             u3410 17D0  
                           u3090 0D40                             u2290 003A                             u3251 1756  
                           u2531 0E3F                             u2515 0E2D                             u2371 0DB9  
                           u3171 0828                             u3411 17CF                             u3155 0D64  
                           u3091 0D3F                             u3075 0CE6                             u2195 08A6  
                           u2291 0039                             u2275 0024                             u3500 16BB  
                           u3260 1776                             u2540 0E54                             u2460 0E0E  
                           u2380 0DC4                             u3340 0A11                             u3420 17E2  
                           u2700 1792                             u3501 16BA                             u3261 1775  
                           u2541 0E53                             u2461 0E0D                             u2381 0DC3  
                           u3341 0A10                             u3421 17E1                             u3405 17C2  
                           u3085 0D10                             u2701 1791                             u3270 1594  
                           u2550 0E6F                             u2470 0E15                             u2390 0DCD  
                           u3350 0A18                             u3190 083B                             u2630 0C2A  
                           u3510 02D3                             u3271 1593                             u2551 0E6E  
                           u2471 0E14                             u2455 0DFF                             u2391 0DCC  
                           u3351 0A17                             u3335 0A03                             u3191 083A  
                           u2631 0C29                             u2615 0C19                             u2295 0036  
                           u3511 02D2                             u3280 165B                             u3440 17F7  
                           u2640 0C32                             u2560 0BB4                             u2720 17A1  
                           u2800 173D                             u3600 0459                             u3520 02F0  
                           u3265 1772                             u3281 165A                             u3185 082D  
                           u3441 17F6                             u3425 17DE                             u2641 0C31  
                           u2625 0C1F                             u2561 0BB3                             u2721 17A0  
                           u2801 173C                             u3601 0458                             u3521 02EF  
                           u2490 0E23                             u3370 0A27                             u3290 09CD  
                           u2570 0BCC                             u3610 0473                             u3530 0338  
                           u2491 0E22                             u3371 0A26                             u3291 09CC  
                           u3435 17EB                             u2571 0BCB                             u2715 1793  
                           u3611 0472                             u3531 0337                             u3380 0A2C  
                           u3460 16F9                             u2580 0BE2                             u2740 17B1  
                           u2900 15B9                             u3700 05D7                             u3620 0488  
                           u3540 036F                             u2485 0E16                             u3381 0A2B  
                           u3365 0A1A                             u3461 16F8                             u2741 17B0  
                           u2725 179D                             u2901 15B8                             u3701 05D6  
                           u3621 0487                             u3541 036E                             u3470 16C3  
                           u3390 17BE                             u2670 0C4A                             u2590 0BF2  
                           u2750 1714                             u2830 0EA2                             u2910 15BF  
                           u3710 0641                             u3630 04BF                             u3550 0374  
                           u2815 1601                             u3471 16C2                             u3391 17BD  
                           u3455 16E9                             u2671 0C49                             u2655 0C39  
                           u2735 17A7                             u2751 1713                             u2831 0EA1  
                           u2911 15BE                             u3711 0640                             u3631 04BE  
                           u3551 0373                             u3480 16C9                             u2920 0A52  
                           u2680 1782                             u2840 0F5F                             u3800 07B9  
                           u3720 0664                             u3640 04C7                             u3560 039A  
                           u3481 16C8                             u2825 15E5                             u2921 0A51  
                           u2665 0C3F                             u2585 0BDF                             u2681 1781  
                           u2841 0F5E                             u3801 07B8                             u3721 0663  
                           u3641 04C6                             u3625 0484                             u3561 0399  
                           u3490 16CF                             u1970 08D8                             u2930 0A6C  
                           u2770 1724                             u2850 005E                             u3810 07C9  
                           u3730 0674                             u3650 04DE                             u3570 03B9  
                           u3491 16CE                             u1971 08D7                             u2931 0A6B  
                           u2595 0BEF                             u2771 1723                             u2851 005D  
                           u3811 07C8                             u3731 0673                             u3651 04DD  
                           u3635 04BB                             u3571 03B8                             u1980 08DF  
                           u3900 0B89                             u2780 172E                             u2860 0067  
                           u3820 07E9                             u3740 0692                             u3660 04EE  
                           u3580 03CA                             u1981 08DE                             u3901 0B88  
                           u2781 172D                             u2765 1718                             u2861 0066  
                           u3821 07E8                             u3805 07B5                             u3741 0691  
                           u3725 0660                             u3661 04ED                             u3830 0B02  
                           u2950 0AA3                             u2870 0114                             u3750 076F  
                           u3670 0502                             u3590 040B                             u3910 096B  
                           u3831 0B01                             u2951 0AA2                             u2695 1786  
                           u2871 0113                             u3751 076E                             u3735 0670  
                           u3671 0501                             u3591 040A                             u3911 096A  
                           u3840 0B1A                             u2880 0199                             u3760 0789  
                           u3680 05BB                             u3841 0B19                             u2945 0A8F  
                           u2785 172A                             u2881 0198                             u3761 0788  
                           u3681 05BA                             u3665 04EA                             u3585 03C6  
                           u3850 0B36                             u2970 0AB6                             u2890 0246  
                           u3770 0791                             u3690 05C8                             u1995 08EB  
                           u2971 0AB5                             u2955 0A9F                             u2795 1733  
                           u2891 0245                             u3771 0790                             u3691 05C7  
                           u3860 0B46                             u2980 0ABA                             u3780 0799  
                           u2981 0AB9                             u2965 0AAB                             u3781 0798  
                           u3685 05B7                             u2990 0AC1                             u3790 07A8  
                           u3927 167D                             u3855 0B33                             u2991 0AC0  
                           u3791 07A7                             u3880 0B76                             u3937 15D9  
                           u3881 0B75                             u3865 0B43                             u3947 16DF  
                           u3875 0B63                             u3795 07A4                             u3957 15F6  
                           u3885 0B72                             u3967 160A                             u3895 0B7E  
                           _WPUA 020C                             _WPUB 020D                             _main 0947  
                   ___ftpack@arg 0070                     ___ftpack@exp 0073                             _temp 0066  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             start 0002           __end_of_LCD_Initialize 1696  
                   ___ftmul@cntr 0038                     ___ftmul@sign 0039                     ___fttol@exp1 0052  
                   ___fttol@lval 004E                      LCDPutCmd@ch 0076    __end_of_OSCILLATOR_Initialize 1577  
                          ?_main 0070                  __end_of___awdiv 08D3                  __end_of___ftadd 0E9A  
                __end_of___awmod 0058                  __end_of___ftdiv 0BA2                  __end_of___ftneg 1597  
                __end_of___lldiv 0873                  __end_of___ftmul 0C63                  ___awdiv@divisor 0077  
                __end_of___llmod 1800                  __end_of___ftsub 1674                  __end_of___fttol 0A40  
                __end_of___lwdiv 17B6                  __end_of___lwmod 1742                  ___awdiv@counter 0020  
                          _PORTC 000E                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                     ___lltoft@exp 007D                  __end_of_dpowers 1828  
                 _WDT_Initialize 1567                            _scale 0058                  __end_of_isdigit 15C3  
                  ___ftpack@sign 0074                            status 0003                            wtemp0 007E  
                __end_of_sprintf 07EF                  ?_LCD_Initialize 0070                  __initialization 07EF  
                   __end_of_main 09BB                           ??_main 007E                    ___fttol@sign1 004D  
                      ??_LCDGoto 0078                __end_of_LCDPutCmd 1613                     LCDPutChar@ch 0076  
              __end_of_LCDPutStr 16BC           __end_of_WDT_Initialize 156B                           _ADCON0 009D  
                         _ADCON1 009E                           _ADCON2 009F                 ___llmod@dividend 0074  
                         ?_scale 003A                           _ADRESH 009C                           _ADRESL 009B  
               ___awdiv@dividend 0079                           _APFCON 011D                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                 __end_of___ftpack 0947  
                         _BORCON 0116                 __end_of___lltoft 170E                 __end_of___lwtoft 15D7  
                         _OSCCON 0099                           _WDTCON 0097                     LCDPutStr@str 0077  
                 _LCDWriteNibble 1613                 __end_of__powers_ 185C                           ___ftge 1742  
                         ___wmul 1633                        ??___awdiv 007B                        ??___ftadd 004E  
                      ??___awmod 0074                        ??___ftdiv 0040                        ??___ftneg 0073  
                      ??___lldiv 0078                        ??___ftmul 0030                        ??___llmod 0078  
                      ??___ftsub 007E                        ??___fttol 0049                        ??___lwdiv 007A  
                      ??___lwmod 0074                           _fround 0E9A                 ___awdiv@quotient 0022  
                ___awmod@divisor 0070                  ___awmod@counter 0075            ___ftmul@f3_as_product 0035  
                      ??_isdigit 0070                  ?_WDT_Initialize 0070                        ??_sprintf 0060  
              _SYSTEM_Initialize 15A4           __end_of_LCDWriteNibble 1633          __end_of__initialization 07FD  
                     ___ftadd@f1 0048                       ___ftadd@f2 004B                       ___ftge@ff1 0070  
                     ___ftge@ff2 0073               ?_SYSTEM_Initialize 0070                       ___ftdiv@f1 003D  
                     ___ftdiv@f2 003A                       ___ftdiv@f3 0045                        LCDGoto@ln 0077  
                     ___ftneg@f1 0070                       ___ftmul@f1 002A                       ___ftmul@f2 002D  
                     ___ftsub@f1 0058                       ___ftsub@f2 0055                       ___fttol@f1 0045  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0070                       ___lltoft@c 0078  
                  __end_of_scale 02C4                     ??_LCDPutChar 0074                       ___lwtoft@c 0078  
        _ADC_GetConversionResult 156B                       __div_to_l_ 0C63                   _OPTION_REGbits 0095  
                __div_to_l_@exp1 0025                  __div_to_l_@cntr 0024                          ??_scale 003D  
      __end_of_SYSTEM_Initialize 15B1                  __div_to_l_@quot 0020                       __pbssBANK0 0066  
                     __pbssBANK1 00B7                  ?_LCDWriteNibble 0070               __end_of_LCDPutChar 15F4  
                  __div_to_l_@f1 0070                    __div_to_l_@f2 0073                       __pmaintext 0947  
                        ?___ftge 0070                          ?___wmul 0024                          ?_fround 003A  
                      ?___ftpack 0070                        ?___lltoft 0078                        ?___lwtoft 0078  
                        _LCDGoto 16BC                 ??_LCD_Initialize 0077                __end_of__npowers_ 1883  
           _ADC_InterruptHandler 0069                          ___awdiv 0873                          ___ftadd 0D7A  
                        ___awmod 0005                          ___ftdiv 0AF0                          ___ftneg 158D  
                        ___lldiv 0819                          ___ftmul 0BA2                          ___llmod 17B6  
                        ___ftsub 1653                          ___fttol 09BB                       _fround$734 0044  
                     _fround$735 0041                          ___lwdiv 177A                          ___lwmod 170E  
      ??_ADC_GetConversionResult 0072                       ??___ftpack 0075                       ??___lltoft 007C  
                        __ptext1 02C4                          __ptext2 0058                          __ptext3 0005  
                        __ptext4 0873                          __ptext5 15B1                          __ptext6 0E9A  
                        __ptext7 1633                          __ptext8 170E                          __ptext9 177A  
                     ??___lwtoft 007B                      ?__div_to_l_ 0070                          _dpowers 1800  
          _OSCILLATOR_Initialize 1571                          _isdigit 15B1                 ___awmod@dividend 0072  
       ??_PIN_MANAGER_Initialize 0070                        _LCDPutCmd 15F4                          _sprintf 02C4  
                        clrloop0 1578                        _LCDPutStr 1696             end_of_initialization 07FD  
                ___lldiv@divisor 0070     __end_of_ADC_IsConversionDone 1584                  ___lldiv@counter 007D  
                 __tdiv_to_l_@f1 0070                   __tdiv_to_l_@f2 0073                    ??__tdiv_to_l_ 0076  
               ??_WDT_Initialize 0070                        _PORTCbits 000E              _ADC_StartConversion 1564  
                     ?_LCDPutCmd 0070                       ?_LCDPutStr 0077                      ___ftdiv@exp 0048  
                     LCDGoto@pos 007A                      ___ftmul@exp 0034             ?_ADC_StartConversion 0070  
                 __end_of___ftge 177A                       LCDPutStr@i 007C                   __end_of___wmul 1653  
                 _ADC_Initialize 1584           ?_OSCILLATOR_Initialize 0070                   __end_of_fround 1000  
            start_initialization 07EF              __end_of__tdiv_to_l_ 0AF0                 ??_LCDWriteNibble 0071  
                ___llmod@divisor 0070                  ___llmod@counter 0079            ??_ADC_StartConversion 0070  
                       ??___ftge 0076                         ??___wmul 007E           __end_of_ADC_Initialize 158D  
                       ??_fround 003D                    sprintf@tmpval 00AC                       fround@prec 0047  
                       ?_LCDGoto 0077                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0             _ADC_IsConversionDone 157D                      ??_LCDPutCmd 0074  
                    ??_LCDPutStr 0079                      sprintf@flag 00A4                      sprintf@eexp 00AA  
                    sprintf@fval 00B3                      sprintf@prec 00B1                 ___lwdiv@dividend 0078  
         _PIN_MANAGER_Initialize 0801                _ADC_SelectChannel 1597                         ?___awdiv 0077  
                       ?___ftadd 0048                         ?___awmod 0070                         ?___ftdiv 003A  
                       ?___ftneg 0070                         ?___lldiv 0070                         ?___ftmul 002A  
                       ?___llmod 0070                         ?___ftsub 0055                        __npowers_ 185C  
                       ?___fttol 0045                         ?___lwdiv 0076                         ?___lwmod 0070  
                ?_ADC_Initialize 0070               ?_ADC_SelectChannel 0070                 LCDWriteNibble@ch 0073  
               LCDWriteNibble@rs 0070                      __tdiv_to_l_ 0A40                     ??__div_to_l_ 0076  
                       ?_isdigit 0070              ??_ADC_SelectChannel 0070            ?_ADC_IsConversionDone 0070  
                      _scale$736 0041                 ___lwdiv@quotient 007B                         ?_sprintf 005B  
                 ___wmul@product 0028                        clear_ram0 1577                      _LCDGoto$261 0078  
      __end_of_ADC_SelectChannel 15A4               __end_of__div_to_l_ 0D7A                       _ADCON0bits 009D  
              ___wmul@multiplier 0024         ADC_SelectChannel@channel 0071         ?_ADC_GetConversionResult 0070  
        ??_OSCILLATOR_Initialize 0070                         ___ftpack 08D3                         ___lltoft 16E3  
                    _isdigit$572 0070                         ___lwtoft 15C3           ??_ADC_IsConversionDone 0070  
                     sprintf@val 00A6                  ___lwdiv@divisor 0076                  ___lwdiv@counter 007D  
                       __ptext10 0BA2                         __ptext11 0A40                         __ptext20 1742  
                       __ptext12 0C63                         __ptext21 15C3                         __ptext13 16E3  
                       __ptext30 1696                         __ptext22 0AF0                         __ptext14 17B6  
                       __ptext31 15D7                         __ptext23 08D3                         __ptext15 0819  
                       __ptext32 16BC                         __ptext24 15A4                         __ptext16 09BB  
                       __ptext33 15F4                         __ptext25 1567                         __ptext17 1653  
                       __ptext34 1613                         __ptext26 0801                         __ptext18 0D7A  
                       __ptext35 1564                         __ptext27 1571                         __ptext19 158D  
                       __ptext36 1597                         __ptext28 1584                         __ptext37 157D  
                       __ptext29 1674                         __ptext38 156B                         __powers_ 1835  
                     _LCDPutChar 15D7                         isdigit@c 0071                         scale@scl 0044  
                      sprintf@ap 00A3                 __tdiv_to_l_@exp1 0025                 __tdiv_to_l_@cntr 0024  
                      sprintf@sp 00B0                 __tdiv_to_l_@quot 0020      __end_of_ADC_StartConversion 1567  
               ___lwmod@dividend 0072                 ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070  
__end_of_ADC_GetConversionResult 1571                 ??_ADC_Initialize 0070                     ?__tdiv_to_l_ 0070  
                  __pstringtext1 1835                    __pstringtext2 185C                    __pstringtext3 1800  
                  __pstringtext4 1883                    __pstringtext5 0000                         sprintf@c 00B6  
                       sprintf@f 005B                 ___lldiv@quotient 0079                  ___lwmod@divisor 0070  
                ___lwmod@counter 0075   __end_of_PIN_MANAGER_Initialize 0819  
