

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Apr 01 23:15:42 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  0664                     __pidataBANK0:
   214                           
   215                           ;initializer for _maLed
   216  0664  3440               	retlw	64
   217  0665  3479               	retlw	121
   218  0666  3424               	retlw	36
   219  0667  3430               	retlw	48
   220  0668  3419               	retlw	25
   221  0669  3412               	retlw	18
   222  066A  3402               	retlw	2
   223  066B  3478               	retlw	120
   224  066C  3400               	retlw	0
   225  066D  3410               	retlw	16
   226  0008                     _PORTDbits	set	8
   227  0088                     _TRISD	set	136
   228                           
   229                           	psect	cinit
   230  07EE                     start_initialization:	
   231                           ; #config settings
   232                           
   233  07EE                     __initialization:
   234                           
   235                           ; Initialize objects allocated to BANK0
   236  07EE  1383               	bcf	3,7	;select IRP bank0
   237  07EF  302A               	movlw	low (__pdataBANK0+10)
   238  07F0  00FD               	movwf	btemp+-1
   239  07F1  3006               	movlw	high __pidataBANK0
   240  07F2  00FE               	movwf	btemp
   241  07F3  3064               	movlw	low __pidataBANK0
   242  07F4  00FF               	movwf	btemp+1
   243  07F5  3020               	movlw	low __pdataBANK0
   244  07F6  0084               	movwf	4
   245  07F7  120A  118A  2672  120A  118A  	fcall	init_ram0
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2EE1   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	dataBANK0
   254  0020                     __pdataBANK0:
   255  0020                     _maLed:
   256  0020                     	ds	10
   257                           
   258                           	psect	inittext
   259  066E                     init_fetch0:	
   260                           ;	Called with low address in FSR and high address in W
   261                           
   262  066E  087E               	movf	btemp,w
   263  066F  008A               	movwf	10
   264  0670  087F               	movf	btemp+1,w
   265  0671  0082               	movwf	2
   266  0672                     init_ram0:	
   267                           ;Called with:
   268                           ;	high address of idata address in btemp 
   269                           ;	low address of idata address in btemp+1 
   270                           ;	low address of data in FSR
   271                           ;	high address + 1 of data in btemp-1
   272                           
   273  0672  120A  118A  266E  120A  118A  	fcall	init_fetch0
   274  0677  0080               	movwf	0
   275  0678  0A84               	incf	4,f
   276  0679  0804               	movf	4,w
   277  067A  067D               	xorwf	btemp+-1,w
   278  067B  1903               	btfsc	3,2
   279  067C  3400               	retlw	0
   280  067D  0AFF               	incf	btemp+1,f
   281  067E  1903               	btfsc	3,2
   282  067F  0AFE               	incf	btemp,f
   283  0680  2E72               	goto	init_ram0
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:
   287  0070                     ?_laybit7:
   288  0070                     ??_laybit7:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_xuat_1byte:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?___lwmod:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     laybit7@x:	
   301                           ; 2 bytes @ 0x0
   302                           
   303  0070                     ___lwmod@divisor:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 2 bytes @ 0x0
   308  0070                     	ds	1
   309  0071                     ??_xuat_1byte:
   310                           
   311                           ; 1 bytes @ 0x1
   312  0071                     	ds	1
   313  0072                     xuat_1byte@xuatbyte:
   314  0072                     ___lwmod@dividend:	
   315                           ; 1 bytes @ 0x2
   316                           
   317                           
   318                           ; 2 bytes @ 0x2
   319  0072                     	ds	1
   320  0073                     xuat_1byte@xuat:
   321                           
   322                           ; 1 bytes @ 0x3
   323  0073                     	ds	1
   324  0074                     ??___lwmod:
   325  0074                     xuat_1byte@b:	
   326                           ; 1 bytes @ 0x4
   327                           
   328                           
   329                           ; 1 bytes @ 0x4
   330  0074                     	ds	1
   331  0075                     xuat_1byte@i:
   332  0075                     ___lwmod@counter:	
   333                           ; 1 bytes @ 0x5
   334                           
   335                           
   336                           ; 1 bytes @ 0x5
   337  0075                     	ds	1
   338  0076                     ?___lwdiv:
   339  0076                     ___lwdiv@divisor:	
   340                           ; 2 bytes @ 0x6
   341                           
   342                           
   343                           ; 2 bytes @ 0x6
   344  0076                     	ds	2
   345  0078                     ___lwdiv@dividend:
   346                           
   347                           ; 2 bytes @ 0x8
   348  0078                     	ds	2
   349  007A                     ??___lwdiv:
   350                           
   351                           ; 1 bytes @ 0xA
   352  007A                     	ds	1
   353  007B                     ___lwdiv@quotient:
   354                           
   355                           ; 2 bytes @ 0xB
   356  007B                     	ds	2
   357  007D                     ___lwdiv@counter:
   358                           
   359                           ; 1 bytes @ 0xD
   360  007D                     	ds	1
   361                           
   362                           	psect	cstackBANK0
   363  002A                     __pcstackBANK0:
   364  002A                     ?_hienthi:
   365  002A                     hienthi@n:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 2 bytes @ 0x0
   370  002A                     	ds	2
   371  002C                     ??_hienthi:
   372                           
   373                           ; 1 bytes @ 0x2
   374  002C                     	ds	2
   375  002E                     ??_main:
   376                           
   377                           ; 1 bytes @ 0x4
   378  002E                     	ds	3
   379  0031                     main@i:
   380                           
   381                           ; 2 bytes @ 0x7
   382  0031                     	ds	2
   383                           
   384                           	psect	maintext
   385  06E1                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 58 in file "newmain.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  i               2    7[BANK0 ] unsigned int 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       2       0       0       0
   407 ;;      Temps:          0       3       0       0       0
   408 ;;      Totals:         0       5       0       0       0
   409 ;;Total ram usage:        5 bytes
   410 ;; Hardware stack levels required when called: 3
   411 ;; This function calls:
   412 ;;		_hienthi
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418  06E1                     _main:	
   419                           ;psect for function _main
   420                           
   421  06E1                     l817:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   424                           
   425                           
   426                           ;newmain.c: 59:     TRISD = 0;
   427  06E1  1683               	bsf	3,5	;RP0=1, select bank1
   428  06E2  1303               	bcf	3,6	;RP1=0, select bank1
   429  06E3  0188               	clrf	8	;volatile
   430  06E4                     l26:	
   431                           ;newmain.c: 60:     while(1)
   432                           
   433                           
   434                           ;newmain.c: 61:     {;newmain.c: 62:         for(unsigned int i = 0; i <= 9999; i++)
   435  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   436  06E5  01B1               	clrf	main@i
   437  06E6  01B2               	clrf	main@i+1
   438  06E7                     l823:
   439                           
   440                           ;newmain.c: 63:         {;newmain.c: 64:             hienthi(9999 - i);
   441  06E7  300F               	movlw	15
   442  06E8  00AE               	movwf	??_main
   443  06E9  3027               	movlw	39
   444  06EA  00AF               	movwf	??_main+1
   445  06EB  0831               	movf	main@i,w
   446  06EC  022E               	subwf	??_main,w
   447  06ED  00AA               	movwf	hienthi@n
   448  06EE  0832               	movf	main@i+1,w
   449  06EF  1C03               	skipc
   450  06F0  0A32               	incf	main@i+1,w
   451  06F1  022F               	subwf	??_main+1,w
   452  06F2  00AB               	movwf	hienthi@n+1
   453  06F3  120A  118A  2760  120A  118A  	fcall	_hienthi
   454  06F8                     l825:
   455                           
   456                           ;newmain.c: 65:             _delay((unsigned long)((100)*(8000000/4000.0)));
   457  06F8  3002               	movlw	2
   458  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   459  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   460  06FB  00B0               	movwf	??_main+2
   461  06FC  3004               	movlw	4
   462  06FD  00AF               	movwf	??_main+1
   463  06FE  30B9               	movlw	185
   464  06FF  00AE               	movwf	??_main
   465  0700                     u337:
   466  0700  0BAE               	decfsz	??_main,f
   467  0701  2F00               	goto	u337
   468  0702  0BAF               	decfsz	??_main+1,f
   469  0703  2F00               	goto	u337
   470  0704  0BB0               	decfsz	??_main+2,f
   471  0705  2F00               	goto	u337
   472  0706  2F07               	nop2
   473  0707                     l827:
   474                           
   475                           ;newmain.c: 66:         }
   476  0707  3001               	movlw	1
   477  0708  1283               	bcf	3,5	;RP0=0, select bank0
   478  0709  1303               	bcf	3,6	;RP1=0, select bank0
   479  070A  07B1               	addwf	main@i,f
   480  070B  1803               	skipnc
   481  070C  0AB2               	incf	main@i+1,f
   482  070D  3000               	movlw	0
   483  070E  07B2               	addwf	main@i+1,f
   484  070F                     l829:
   485  070F  3027               	movlw	39
   486  0710  0232               	subwf	main@i+1,w
   487  0711  3010               	movlw	16
   488  0712  1903               	skipnz
   489  0713  0231               	subwf	main@i,w
   490  0714  1C03               	skipc
   491  0715  2F17               	goto	u321
   492  0716  2F18               	goto	u320
   493  0717                     u321:
   494  0717  2EE7               	goto	l823
   495  0718                     u320:
   496  0718  2EE4               	goto	l26
   497  0719  120A  118A  2800   	ljmp	start
   498  071C                     __end_of_main:
   499                           
   500                           	psect	text1
   501  0760                     __ptext1:	
   502 ;; *************** function _hienthi *****************
   503 ;; Defined at:
   504 ;;		line 49 in file "newmain.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  n               2    0[BANK0 ] unsigned int 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       2       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       2       0       0       0
   521 ;;      Totals:         0       4       0       0       0
   522 ;;Total ram usage:        4 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 2
   525 ;; This function calls:
   526 ;;		___lwdiv
   527 ;;		___lwmod
   528 ;;		_xuat_1byte
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534  0760                     _hienthi:	
   535                           ;psect for function _hienthi
   536                           
   537  0760                     l809:	
   538                           ;incstack = 0
   539                           ; Regs used in _hienthi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   540                           
   541                           
   542                           ;newmain.c: 49: void hienthi(unsigned int n);newmain.c: 50: {;newmain.c: 51:     xuat_1b
      +                          yte(maLed[n % 10]);
   543  0760  300A               	movlw	10
   544  0761  00F0               	movwf	___lwmod@divisor
   545  0762  3000               	movlw	0
   546  0763  00F1               	movwf	___lwmod@divisor+1
   547  0764  1283               	bcf	3,5	;RP0=0, select bank0
   548  0765  1303               	bcf	3,6	;RP1=0, select bank0
   549  0766  082B               	movf	hienthi@n+1,w
   550  0767  00F3               	movwf	___lwmod@dividend+1
   551  0768  082A               	movf	hienthi@n,w
   552  0769  00F2               	movwf	___lwmod@dividend
   553  076A  120A  118A  26A7  120A  118A  	fcall	___lwmod
   554  076F  0870               	movf	?___lwmod,w
   555  0770  3E20               	addlw	(low (_maLed| 0))& (0+255)
   556  0771  0084               	movwf	4
   557  0772  1383               	bcf	3,7	;select IRP bank0
   558  0773  0800               	movf	0,w
   559  0774  120A  118A  2681  120A  118A  	fcall	_xuat_1byte
   560                           
   561                           ;newmain.c: 52:     xuat_1byte(maLed[n % 100 / 10]);
   562  0779  300A               	movlw	10
   563  077A  00F6               	movwf	___lwdiv@divisor
   564  077B  3000               	movlw	0
   565  077C  00F7               	movwf	___lwdiv@divisor+1
   566  077D  1283               	bcf	3,5	;RP0=0, select bank0
   567  077E  1303               	bcf	3,6	;RP1=0, select bank0
   568  077F  082B               	movf	hienthi@n+1,w
   569  0780  00F3               	movwf	___lwmod@dividend+1
   570  0781  082A               	movf	hienthi@n,w
   571  0782  00F2               	movwf	___lwmod@dividend
   572  0783  3064               	movlw	100
   573  0784  00F0               	movwf	___lwmod@divisor
   574  0785  3000               	movlw	0
   575  0786  00F1               	movwf	___lwmod@divisor+1
   576  0787  120A  118A  26A7  120A  118A  	fcall	___lwmod
   577  078C  0871               	movf	?___lwmod+1,w
   578  078D  00F9               	movwf	___lwdiv@dividend+1
   579  078E  0870               	movf	?___lwmod,w
   580  078F  00F8               	movwf	___lwdiv@dividend
   581  0790  120A  118A  271C  120A  118A  	fcall	___lwdiv
   582  0795  0876               	movf	?___lwdiv,w
   583  0796  3E20               	addlw	(low (_maLed| 0))& (0+255)
   584  0797  0084               	movwf	4
   585  0798  1383               	bcf	3,7	;select IRP bank0
   586  0799  0800               	movf	0,w
   587  079A  120A  118A  2681  120A  118A  	fcall	_xuat_1byte
   588                           
   589                           ;newmain.c: 53:     xuat_1byte(maLed[n / 100 % 10]);
   590  079F  300A               	movlw	10
   591  07A0  00F0               	movwf	___lwmod@divisor
   592  07A1  3000               	movlw	0
   593  07A2  00F1               	movwf	___lwmod@divisor+1
   594  07A3  3064               	movlw	100
   595  07A4  00F6               	movwf	___lwdiv@divisor
   596  07A5  3000               	movlw	0
   597  07A6  00F7               	movwf	___lwdiv@divisor+1
   598  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   599  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   600  07A9  082B               	movf	hienthi@n+1,w
   601  07AA  00F9               	movwf	___lwdiv@dividend+1
   602  07AB  082A               	movf	hienthi@n,w
   603  07AC  00F8               	movwf	___lwdiv@dividend
   604  07AD  120A  118A  271C  120A  118A  	fcall	___lwdiv
   605  07B2  0877               	movf	?___lwdiv+1,w
   606  07B3  00F3               	movwf	___lwmod@dividend+1
   607  07B4  0876               	movf	?___lwdiv,w
   608  07B5  00F2               	movwf	___lwmod@dividend
   609  07B6  120A  118A  26A7  120A  118A  	fcall	___lwmod
   610  07BB  0870               	movf	?___lwmod,w
   611  07BC  3E20               	addlw	(low (_maLed| 0))& (0+255)
   612  07BD  0084               	movwf	4
   613  07BE  1383               	bcf	3,7	;select IRP bank0
   614  07BF  0800               	movf	0,w
   615  07C0  120A  118A  2681  120A  118A  	fcall	_xuat_1byte
   616                           
   617                           ;newmain.c: 54:     xuat_1byte(maLed[n / 1000]);
   618  07C5  30E8               	movlw	232
   619  07C6  00F6               	movwf	___lwdiv@divisor
   620  07C7  3003               	movlw	3
   621  07C8  00F7               	movwf	___lwdiv@divisor+1
   622  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   623  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   624  07CB  082B               	movf	hienthi@n+1,w
   625  07CC  00F9               	movwf	___lwdiv@dividend+1
   626  07CD  082A               	movf	hienthi@n,w
   627  07CE  00F8               	movwf	___lwdiv@dividend
   628  07CF  120A  118A  271C  120A  118A  	fcall	___lwdiv
   629  07D4  0876               	movf	?___lwdiv,w
   630  07D5  3E20               	addlw	(low (_maLed| 0))& (0+255)
   631  07D6  0084               	movwf	4
   632  07D7  1383               	bcf	3,7	;select IRP bank0
   633  07D8  0800               	movf	0,w
   634  07D9  120A  118A  2681  120A  118A  	fcall	_xuat_1byte
   635  07DE                     l811:
   636                           
   637                           ;newmain.c: 55:     PORTDbits.RD2 = 0; PORTDbits.RD2 = 1;
   638  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   639  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   640  07E0  1108               	bcf	8,2	;volatile
   641  07E1                     l813:
   642  07E1  1508               	bsf	8,2	;volatile
   643  07E2                     l815:
   644                           
   645                           ;newmain.c: 56:     _delay((unsigned long)((10)*(8000000/4000.0)));
   646  07E2  301A               	movlw	26
   647  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   648  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   649  07E5  00AD               	movwf	??_hienthi+1
   650  07E6  30F7               	movlw	247
   651  07E7  00AC               	movwf	??_hienthi
   652  07E8                     u347:
   653  07E8  0BAC               	decfsz	??_hienthi,f
   654  07E9  2FE8               	goto	u347
   655  07EA  0BAD               	decfsz	??_hienthi+1,f
   656  07EB  2FE8               	goto	u347
   657  07EC  2FED               	nop2
   658  07ED                     l21:
   659  07ED  0008               	return
   660  07EE                     __end_of_hienthi:
   661                           
   662                           	psect	text2
   663  0681                     __ptext2:	
   664 ;; *************** function _xuat_1byte *****************
   665 ;; Defined at:
   666 ;;		line 37 in file "newmain.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  xuatbyte        1    wreg     unsigned char 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  xuatbyte        1    2[COMMON] unsigned char 
   671 ;;  i               1    5[COMMON] unsigned char 
   672 ;;  b               1    4[COMMON] unsigned char 
   673 ;;  xuat            1    3[COMMON] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, pclath, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         4       0       0       0       0
   685 ;;      Temps:          1       0       0       0       0
   686 ;;      Totals:         5       0       0       0       0
   687 ;;Total ram usage:        5 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; Hardware stack levels required when called: 1
   690 ;; This function calls:
   691 ;;		_laybit7
   692 ;; This function is called by:
   693 ;;		_hienthi
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697  0681                     _xuat_1byte:	
   698                           ;psect for function _xuat_1byte
   699                           
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _xuat_1byte: [wreg+status,2+status,0+pclath+cstack]
   703                           ;xuat_1byte@xuatbyte stored from wreg
   704  0681  00F2               	movwf	xuat_1byte@xuatbyte
   705  0682                     l739:
   706                           
   707                           ;newmain.c: 37: void xuat_1byte(unsigned char xuatbyte);newmain.c: 38: {;newmain.c: 39: 
      +                              unsigned char b = 0x80, xuat;
   708  0682  3080               	movlw	128
   709  0683  00F1               	movwf	??_xuat_1byte
   710  0684  0871               	movf	??_xuat_1byte,w
   711  0685  00F4               	movwf	xuat_1byte@b
   712  0686                     l741:
   713                           
   714                           ;newmain.c: 40:     for(unsigned char i = 0; i < 8; i++)
   715  0686  01F5               	clrf	xuat_1byte@i
   716  0687                     l747:
   717                           
   718                           ;newmain.c: 41:     {;newmain.c: 43:         xuat = laybit7(xuatbyte & b);
   719  0687  0872               	movf	xuat_1byte@xuatbyte,w
   720  0688  0574               	andwf	xuat_1byte@b,w
   721  0689  120A  118A  265A  120A  118A  	fcall	_laybit7
   722  068E  00F1               	movwf	??_xuat_1byte
   723  068F  0871               	movf	??_xuat_1byte,w
   724  0690  00F3               	movwf	xuat_1byte@xuat
   725  0691                     l749:
   726                           
   727                           ;newmain.c: 44:         PORTDbits.RD0 = xuat;
   728  0691  0C73               	rrf	xuat_1byte@xuat,w
   729  0692  1283               	bcf	3,5	;RP0=0, select bank0
   730  0693  1303               	bcf	3,6	;RP1=0, select bank0
   731  0694  1C03               	skipc
   732  0695  1008               	bcf	8,0	;volatile
   733  0696  1803               	skipnc
   734  0697  1408               	bsf	8,0	;volatile
   735  0698                     l751:
   736                           
   737                           ;newmain.c: 45:         PORTDbits.RD1 = 0; PORTDbits.RD1 = 1;
   738  0698  1088               	bcf	8,1	;volatile
   739  0699                     l753:
   740  0699  1488               	bsf	8,1	;volatile
   741  069A                     l755:
   742                           
   743                           ;newmain.c: 46:         b >>= 1;
   744  069A  1003               	clrc
   745  069B  0CF4               	rrf	xuat_1byte@b,f
   746  069C                     l757:
   747                           
   748                           ;newmain.c: 47:     }
   749  069C  3001               	movlw	1
   750  069D  00F1               	movwf	??_xuat_1byte
   751  069E  0871               	movf	??_xuat_1byte,w
   752  069F  07F5               	addwf	xuat_1byte@i,f
   753  06A0                     l759:
   754  06A0  3008               	movlw	8
   755  06A1  0275               	subwf	xuat_1byte@i,w
   756  06A2  1C03               	skipc
   757  06A3  2EA5               	goto	u181
   758  06A4  2EA6               	goto	u180
   759  06A5                     u181:
   760  06A5  2E87               	goto	l747
   761  06A6                     u180:
   762  06A6                     l18:
   763  06A6  0008               	return
   764  06A7                     __end_of_xuat_1byte:
   765                           
   766                           	psect	text3
   767  065A                     __ptext3:	
   768 ;; *************** function _laybit7 *****************
   769 ;; Defined at:
   770 ;;		line 30 in file "newmain.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  x               1    wreg     unsigned char 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  x               1    0[COMMON] unsigned char 
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      unsigned char 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         1       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         1       0       0       0       0
   788 ;;Total ram usage:        1 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_xuat_1byte
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797  065A                     _laybit7:	
   798                           ;psect for function _laybit7
   799                           
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _laybit7: [wreg+status,2+status,0]
   803                           ;laybit7@x stored from wreg
   804  065A  00F0               	movwf	laybit7@x
   805  065B                     l727:
   806                           
   807                           ;newmain.c: 30: char laybit7(unsigned char x);newmain.c: 31: {;newmain.c: 32:     if(x =
      +                          = 0)
   808  065B  0870               	movf	laybit7@x,w
   809  065C  1D03               	btfss	3,2
   810  065D  2E5F               	goto	u171
   811  065E  2E60               	goto	u170
   812  065F                     u171:
   813  065F  2E62               	goto	l735
   814  0660                     u170:
   815  0660                     l729:
   816                           
   817                           ;newmain.c: 33:         return 0;
   818  0660  3000               	movlw	0
   819  0661  2E63               	goto	l12
   820  0662                     l735:
   821                           
   822                           ;newmain.c: 35:         return 1;
   823  0662  3001               	movlw	1
   824  0663                     l12:
   825  0663  0008               	return
   826  0664                     __end_of_laybit7:
   827                           
   828                           	psect	text4
   829  06A7                     __ptext4:	
   830 ;; *************** function ___lwmod *****************
   831 ;; Defined at:
   832 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  divisor         2    0[COMMON] unsigned int 
   835 ;;  dividend        2    2[COMMON] unsigned int 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  counter         1    5[COMMON] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  2    0[COMMON] unsigned int 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   847 ;;      Params:         4       0       0       0       0
   848 ;;      Locals:         1       0       0       0       0
   849 ;;      Temps:          1       0       0       0       0
   850 ;;      Totals:         6       0       0       0       0
   851 ;;Total ram usage:        6 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_hienthi
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860  06A7                     ___lwmod:	
   861                           ;psect for function ___lwmod
   862                           
   863  06A7                     l787:	
   864                           ;incstack = 0
   865                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   866                           
   867  06A7  0870               	movf	___lwmod@divisor,w
   868  06A8  0471               	iorwf	___lwmod@divisor+1,w
   869  06A9  1903               	btfsc	3,2
   870  06AA  2EAC               	goto	u261
   871  06AB  2EAD               	goto	u260
   872  06AC                     u261:
   873  06AC  2EDC               	goto	l805
   874  06AD                     u260:
   875  06AD                     l789:
   876  06AD  01F5               	clrf	___lwmod@counter
   877  06AE  0AF5               	incf	___lwmod@counter,f
   878  06AF  2EBB               	goto	l795
   879  06B0                     l791:
   880  06B0  3001               	movlw	1
   881  06B1                     u275:
   882  06B1  1003               	clrc
   883  06B2  0DF0               	rlf	___lwmod@divisor,f
   884  06B3  0DF1               	rlf	___lwmod@divisor+1,f
   885  06B4  3EFF               	addlw	-1
   886  06B5  1D03               	skipz
   887  06B6  2EB1               	goto	u275
   888  06B7                     l793:
   889  06B7  3001               	movlw	1
   890  06B8  00F4               	movwf	??___lwmod
   891  06B9  0874               	movf	??___lwmod,w
   892  06BA  07F5               	addwf	___lwmod@counter,f
   893  06BB                     l795:
   894  06BB  1FF1               	btfss	___lwmod@divisor+1,7
   895  06BC  2EBE               	goto	u281
   896  06BD  2EBF               	goto	u280
   897  06BE                     u281:
   898  06BE  2EB0               	goto	l791
   899  06BF                     u280:
   900  06BF                     l797:
   901  06BF  0871               	movf	___lwmod@divisor+1,w
   902  06C0  0273               	subwf	___lwmod@dividend+1,w
   903  06C1  1D03               	skipz
   904  06C2  2EC5               	goto	u295
   905  06C3  0870               	movf	___lwmod@divisor,w
   906  06C4  0272               	subwf	___lwmod@dividend,w
   907  06C5                     u295:
   908  06C5  1C03               	skipc
   909  06C6  2EC8               	goto	u291
   910  06C7  2EC9               	goto	u290
   911  06C8                     u291:
   912  06C8  2ECF               	goto	l801
   913  06C9                     u290:
   914  06C9                     l799:
   915  06C9  0870               	movf	___lwmod@divisor,w
   916  06CA  02F2               	subwf	___lwmod@dividend,f
   917  06CB  0871               	movf	___lwmod@divisor+1,w
   918  06CC  1C03               	skipc
   919  06CD  03F3               	decf	___lwmod@dividend+1,f
   920  06CE  02F3               	subwf	___lwmod@dividend+1,f
   921  06CF                     l801:
   922  06CF  3001               	movlw	1
   923  06D0                     u305:
   924  06D0  1003               	clrc
   925  06D1  0CF1               	rrf	___lwmod@divisor+1,f
   926  06D2  0CF0               	rrf	___lwmod@divisor,f
   927  06D3  3EFF               	addlw	-1
   928  06D4  1D03               	skipz
   929  06D5  2ED0               	goto	u305
   930  06D6                     l803:
   931  06D6  3001               	movlw	1
   932  06D7  02F5               	subwf	___lwmod@counter,f
   933  06D8  1D03               	btfss	3,2
   934  06D9  2EDB               	goto	u311
   935  06DA  2EDC               	goto	u310
   936  06DB                     u311:
   937  06DB  2EBF               	goto	l797
   938  06DC                     u310:
   939  06DC                     l805:
   940  06DC  0873               	movf	___lwmod@dividend+1,w
   941  06DD  00F1               	movwf	?___lwmod+1
   942  06DE  0872               	movf	___lwmod@dividend,w
   943  06DF  00F0               	movwf	?___lwmod
   944  06E0                     l399:
   945  06E0  0008               	return
   946  06E1                     __end_of___lwmod:
   947                           
   948                           	psect	text5
   949  071C                     __ptext5:	
   950 ;; *************** function ___lwdiv *****************
   951 ;; Defined at:
   952 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  divisor         2    6[COMMON] unsigned int 
   955 ;;  dividend        2    8[COMMON] unsigned int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  quotient        2   11[COMMON] unsigned int 
   958 ;;  counter         1   13[COMMON] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  2    6[COMMON] unsigned int 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         4       0       0       0       0
   969 ;;      Locals:         3       0       0       0       0
   970 ;;      Temps:          1       0       0       0       0
   971 ;;      Totals:         8       0       0       0       0
   972 ;;Total ram usage:        8 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_hienthi
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981  071C                     ___lwdiv:	
   982                           ;psect for function ___lwdiv
   983                           
   984  071C                     l761:	
   985                           ;incstack = 0
   986                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   987                           
   988  071C  01FB               	clrf	___lwdiv@quotient
   989  071D  01FC               	clrf	___lwdiv@quotient+1
   990  071E                     l763:
   991  071E  0876               	movf	___lwdiv@divisor,w
   992  071F  0477               	iorwf	___lwdiv@divisor+1,w
   993  0720  1903               	btfsc	3,2
   994  0721  2F23               	goto	u191
   995  0722  2F24               	goto	u190
   996  0723                     u191:
   997  0723  2F5B               	goto	l783
   998  0724                     u190:
   999  0724                     l765:
  1000  0724  01FD               	clrf	___lwdiv@counter
  1001  0725  0AFD               	incf	___lwdiv@counter,f
  1002  0726  2F32               	goto	l771
  1003  0727                     l767:
  1004  0727  3001               	movlw	1
  1005  0728                     u205:
  1006  0728  1003               	clrc
  1007  0729  0DF6               	rlf	___lwdiv@divisor,f
  1008  072A  0DF7               	rlf	___lwdiv@divisor+1,f
  1009  072B  3EFF               	addlw	-1
  1010  072C  1D03               	skipz
  1011  072D  2F28               	goto	u205
  1012  072E                     l769:
  1013  072E  3001               	movlw	1
  1014  072F  00FA               	movwf	??___lwdiv
  1015  0730  087A               	movf	??___lwdiv,w
  1016  0731  07FD               	addwf	___lwdiv@counter,f
  1017  0732                     l771:
  1018  0732  1FF7               	btfss	___lwdiv@divisor+1,7
  1019  0733  2F35               	goto	u211
  1020  0734  2F36               	goto	u210
  1021  0735                     u211:
  1022  0735  2F27               	goto	l767
  1023  0736                     u210:
  1024  0736                     l773:
  1025  0736  3001               	movlw	1
  1026  0737                     u225:
  1027  0737  1003               	clrc
  1028  0738  0DFB               	rlf	___lwdiv@quotient,f
  1029  0739  0DFC               	rlf	___lwdiv@quotient+1,f
  1030  073A  3EFF               	addlw	-1
  1031  073B  1D03               	skipz
  1032  073C  2F37               	goto	u225
  1033  073D  0877               	movf	___lwdiv@divisor+1,w
  1034  073E  0279               	subwf	___lwdiv@dividend+1,w
  1035  073F  1D03               	skipz
  1036  0740  2F43               	goto	u235
  1037  0741  0876               	movf	___lwdiv@divisor,w
  1038  0742  0278               	subwf	___lwdiv@dividend,w
  1039  0743                     u235:
  1040  0743  1C03               	skipc
  1041  0744  2F46               	goto	u231
  1042  0745  2F47               	goto	u230
  1043  0746                     u231:
  1044  0746  2F4E               	goto	l779
  1045  0747                     u230:
  1046  0747                     l775:
  1047  0747  0876               	movf	___lwdiv@divisor,w
  1048  0748  02F8               	subwf	___lwdiv@dividend,f
  1049  0749  0877               	movf	___lwdiv@divisor+1,w
  1050  074A  1C03               	skipc
  1051  074B  03F9               	decf	___lwdiv@dividend+1,f
  1052  074C  02F9               	subwf	___lwdiv@dividend+1,f
  1053  074D                     l777:
  1054  074D  147B               	bsf	___lwdiv@quotient,0
  1055  074E                     l779:
  1056  074E  3001               	movlw	1
  1057  074F                     u245:
  1058  074F  1003               	clrc
  1059  0750  0CF7               	rrf	___lwdiv@divisor+1,f
  1060  0751  0CF6               	rrf	___lwdiv@divisor,f
  1061  0752  3EFF               	addlw	-1
  1062  0753  1D03               	skipz
  1063  0754  2F4F               	goto	u245
  1064  0755                     l781:
  1065  0755  3001               	movlw	1
  1066  0756  02FD               	subwf	___lwdiv@counter,f
  1067  0757  1D03               	btfss	3,2
  1068  0758  2F5A               	goto	u251
  1069  0759  2F5B               	goto	u250
  1070  075A                     u251:
  1071  075A  2F36               	goto	l773
  1072  075B                     u250:
  1073  075B                     l783:
  1074  075B  087C               	movf	___lwdiv@quotient+1,w
  1075  075C  00F7               	movwf	?___lwdiv+1
  1076  075D  087B               	movf	___lwdiv@quotient,w
  1077  075E  00F6               	movwf	?___lwdiv
  1078  075F                     l389:
  1079  075F  0008               	return
  1080  0760                     __end_of___lwdiv:
  1081  007E                     btemp	set	126	;btemp
  1082  007E                     wtemp0	set	126
  1083                           
  1084                           	psect	idloc
  1085                           
  1086                           ;Config register IDLOC0 @ 0x2000
  1087                           ;	unspecified, using default values
  1088  2000                     	org	8192
  1089  2000  3FFF               	dw	16383
  1090                           
  1091                           ;Config register IDLOC1 @ 0x2001
  1092                           ;	unspecified, using default values
  1093  2001                     	org	8193
  1094  2001  3FFF               	dw	16383
  1095                           
  1096                           ;Config register IDLOC2 @ 0x2002
  1097                           ;	unspecified, using default values
  1098  2002                     	org	8194
  1099  2002  3FFF               	dw	16383
  1100                           
  1101                           ;Config register IDLOC3 @ 0x2003
  1102                           ;	unspecified, using default values
  1103  2003                     	org	8195
  1104  2003  3FFF               	dw	16383
  1105                           
  1106                           	psect	config
  1107                           
  1108                           ;Config register CONFIG1 @ 0x2007
  1109                           ;	Oscillator Selection bits
  1110                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1111                           ;	Watchdog Timer Enable bit
  1112                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1113                           ;	Power-up Timer Enable bit
  1114                           ;	PWRTE = OFF, PWRT disabled
  1115                           ;	RE3/MCLR pin function select bit
  1116                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1117                           ;	Code Protection bit
  1118                           ;	CP = OFF, Program memory code protection is disabled
  1119                           ;	Data Code Protection bit
  1120                           ;	CPD = OFF, Data memory code protection is disabled
  1121                           ;	Brown Out Reset Selection bits
  1122                           ;	BOREN = OFF, BOR disabled
  1123                           ;	Internal External Switchover bit
  1124                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1125                           ;	Fail-Safe Clock Monitor Enabled bit
  1126                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1127                           ;	Low Voltage Programming Enable bit
  1128                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1129                           ;	In-Circuit Debugger Mode bit
  1130                           ;	DEBUG = 0x1, unprogrammed default
  1131  2007                     	org	8199
  1132  2007  30F4               	dw	12532
  1133                           
  1134                           ;Config register CONFIG2 @ 0x2008
  1135                           ;	Brown-out Reset Selection bit
  1136                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1137                           ;	Flash Program Memory Self Write Enable bits
  1138                           ;	WRT = OFF, Write protection off
  1139  2008                     	org	8200
  1140  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _hienthi->___lwdiv
    _xuat_1byte->_laybit7
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_hienthi

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1602
                                              4 BANK0      5     5      0
                            _hienthi
 ---------------------------------------------------------------------------------
 (1) _hienthi                                              4     2      2    1534
                                              0 BANK0      4     2      2
                            ___lwdiv
                            ___lwmod
                         _xuat_1byte
 ---------------------------------------------------------------------------------
 (2) _xuat_1byte                                           5     5      0     137
                                              1 COMMON     5     5      0
                            _laybit7
 ---------------------------------------------------------------------------------
 (3) _laybit7                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hienthi
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _xuat_1byte
       _laybit7

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Apr 01 23:15:42 2022

                      pc 0002                       l12 0663                       l21 07ED  
                     l18 06A6                       l26 06E4                       fsr 0004  
                    l801 06CF                      l803 06D6                      l811 07DE  
                    l389 075F                      l805 06DC                      l741 0686  
                    l813 07E1                      l399 06E0                      l735 0662  
                    l727 065B                      l751 0698                      l815 07E2  
                    l823 06E7                      l761 071C                      l729 0660  
                    l753 0699                      l809 0760                      l825 06F8  
                    l817 06E1                      l771 0732                      l763 071E  
                    l755 069A                      l747 0687                      l739 0682  
                    l827 0707                      l781 0755                      l773 0736  
                    l765 0724                      l757 069C                      l749 0691  
                    l829 070F                      l775 0747                      l767 0727  
                    l783 075B                      l791 06B0                      l759 06A0  
                    l777 074D                      l769 072E                      l793 06B7  
                    l779 074E                      l795 06BB                      l787 06A7  
                    l797 06BF                      l789 06AD                      l799 06C9  
                    u210 0736                      u211 0735                      u205 0728  
                    u230 0747                      u310 06DC                      u231 0746  
                    u311 06DB                      u320 0718                      u225 0737  
                    u305 06D0                      u321 0717                      u250 075B  
                    u170 0660                      u251 075A                      u235 0743  
                    u171 065F                      u260 06AD                      u180 06A6  
                    u245 074F                      u261 06AC                      u181 06A5  
                    u190 0724                      u191 0723                      u280 06BF  
                    u281 06BE                      u337 0700                      u290 06C9  
                    u291 06C8                      u275 06B1                      u347 07E8  
                    u295 06C5                      fsr0 0004                      indf 0000  
                   _main 06E1                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___lwdiv 0760          __end_of___lwmod 06E1  
                  _TRISD 0088          __end_of_hienthi 07EE                    _maLed 0020  
        __end_of_laybit7 0664                    main@i 0031                    pclath 000A  
     xuat_1byte@xuatbyte 0072                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 071C                   ??_main 002E  
              ??___lwdiv 007A                ??___lwmod 0074                ??_hienthi 002C  
              ??_laybit7 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0664               __pmaintext 06E1                  ___lwdiv 071C  
                ___lwmod 06A7                  __ptext1 0760                  __ptext2 0681  
                __ptext3 065A                  __ptext4 06A7                  __ptext5 071C  
                _hienthi 0760                  _laybit7 065A     end_of_initialization 07FC  
              _PORTDbits 0008               _xuat_1byte 0681      start_initialization 07EE  
             init_fetch0 066E              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A         ___lwdiv@dividend 0078              ?_xuat_1byte 0070  
               ?___lwdiv 0076                 ?___lwmod 0070                 ?_hienthi 002A  
               ?_laybit7 0070         ___lwdiv@quotient 007B              xuat_1byte@b 0074  
            xuat_1byte@i 0075           xuat_1byte@xuat 0073          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 hienthi@n 002A                 laybit7@x 0070  
               init_ram0 0672         ___lwmod@dividend 0072             ??_xuat_1byte 0071  
        ___lwmod@divisor 0070          ___lwmod@counter 0075       __end_of_xuat_1byte 06A7  
