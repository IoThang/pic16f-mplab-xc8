

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 23 16:29:10 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  0638                     __pidataBANK0:
   214                           
   215                           ;initializer for _maLed
   216  0638  3440               	retlw	64
   217  0639  3479               	retlw	121
   218  063A  3424               	retlw	36
   219  063B  3430               	retlw	48
   220  063C  3419               	retlw	25
   221  063D  3412               	retlw	18
   222  063E  3402               	retlw	2
   223  063F  3478               	retlw	120
   224  0640  3400               	retlw	0
   225  0641  3410               	retlw	16
   226  0008                     _PORTDbits	set	8
   227  0088                     _TRISD	set	136
   228                           
   229                           	psect	cinit
   230  07EE                     start_initialization:	
   231                           ; #config settings
   232                           
   233  07EE                     __initialization:
   234                           
   235                           ; Initialize objects allocated to BANK0
   236  07EE  1383               	bcf	3,7	;select IRP bank0
   237  07EF  302A               	movlw	low (__pdataBANK0+10)
   238  07F0  00FD               	movwf	btemp+-1
   239  07F1  3006               	movlw	high __pidataBANK0
   240  07F2  00FE               	movwf	btemp
   241  07F3  3038               	movlw	low __pidataBANK0
   242  07F4  00FF               	movwf	btemp+1
   243  07F5  3020               	movlw	low __pdataBANK0
   244  07F6  0084               	movwf	4
   245  07F7  120A  118A  2646  120A  118A  	fcall	init_ram0
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2E7B   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	dataBANK0
   254  0020                     __pdataBANK0:
   255  0020                     _maLed:
   256  0020                     	ds	10
   257                           
   258                           	psect	inittext
   259  0642                     init_fetch0:	
   260                           ;	Called with low address in FSR and high address in W
   261                           
   262  0642  087E               	movf	btemp,w
   263  0643  008A               	movwf	10
   264  0644  087F               	movf	btemp+1,w
   265  0645  0082               	movwf	2
   266  0646                     init_ram0:	
   267                           ;Called with:
   268                           ;	high address of idata address in btemp 
   269                           ;	low address of idata address in btemp+1 
   270                           ;	low address of data in FSR
   271                           ;	high address + 1 of data in btemp-1
   272                           
   273  0646  120A  118A  2642  120A  118A  	fcall	init_fetch0
   274  064B  0080               	movwf	0
   275  064C  0A84               	incf	4,f
   276  064D  0804               	movf	4,w
   277  064E  067D               	xorwf	btemp+-1,w
   278  064F  1903               	btfsc	3,2
   279  0650  3400               	retlw	0
   280  0651  0AFF               	incf	btemp+1,f
   281  0652  1903               	btfsc	3,2
   282  0653  0AFE               	incf	btemp,f
   283  0654  2E46               	goto	init_ram0
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:
   287  0070                     ?_laybit7:
   288  0070                     ??_laybit7:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_xuat_1byte:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?___awdiv:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?___awmod:	
   301                           ; 2 bytes @ 0x0
   302                           
   303  0070                     laybit7@x:	
   304                           ; 2 bytes @ 0x0
   305                           
   306  0070                     ___awdiv@divisor:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ___awmod@divisor:	
   310                           ; 2 bytes @ 0x0
   311                           
   312                           
   313                           ; 2 bytes @ 0x0
   314  0070                     	ds	1
   315  0071                     ??_xuat_1byte:
   316                           
   317                           ; 1 bytes @ 0x1
   318  0071                     	ds	1
   319  0072                     xuat_1byte@xuatbyte:
   320  0072                     ___awdiv@dividend:	
   321                           ; 1 bytes @ 0x2
   322                           
   323  0072                     ___awmod@dividend:	
   324                           ; 2 bytes @ 0x2
   325                           
   326                           
   327                           ; 2 bytes @ 0x2
   328  0072                     	ds	1
   329  0073                     xuat_1byte@xuat:
   330                           
   331                           ; 1 bytes @ 0x3
   332  0073                     	ds	1
   333  0074                     ??___awdiv:
   334  0074                     ??___awmod:	
   335                           ; 1 bytes @ 0x4
   336                           
   337  0074                     xuat_1byte@b:	
   338                           ; 1 bytes @ 0x4
   339                           
   340                           
   341                           ; 1 bytes @ 0x4
   342  0074                     	ds	1
   343  0075                     xuat_1byte@i:
   344  0075                     ___awdiv@counter:	
   345                           ; 1 bytes @ 0x5
   346                           
   347  0075                     ___awmod@counter:	
   348                           ; 1 bytes @ 0x5
   349                           
   350                           
   351                           ; 1 bytes @ 0x5
   352  0075                     	ds	1
   353  0076                     ___awdiv@sign:
   354  0076                     ___awmod@sign:	
   355                           ; 1 bytes @ 0x6
   356                           
   357                           
   358                           ; 1 bytes @ 0x6
   359  0076                     	ds	1
   360  0077                     ___awdiv@quotient:
   361                           
   362                           ; 2 bytes @ 0x7
   363  0077                     	ds	2
   364  0079                     ?_hienthi:
   365  0079                     hienthi@j:	
   366                           ; 1 bytes @ 0x9
   367                           
   368                           
   369                           ; 1 bytes @ 0x9
   370  0079                     	ds	1
   371  007A                     ??_hienthi:
   372                           
   373                           ; 1 bytes @ 0xA
   374  007A                     	ds	2
   375  007C                     hienthi@i:
   376                           
   377                           ; 1 bytes @ 0xC
   378  007C                     	ds	1
   379                           
   380                           	psect	cstackBANK0
   381  002A                     __pcstackBANK0:
   382  002A                     ??_main:
   383                           
   384                           ; 1 bytes @ 0x0
   385  002A                     	ds	2
   386  002C                     main@i:
   387                           
   388                           ; 2 bytes @ 0x2
   389  002C                     	ds	2
   390  002E                     main@j:
   391                           
   392                           ; 1 bytes @ 0x4
   393  002E                     	ds	1
   394                           
   395                           	psect	maintext
   396  067B                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 50 in file "newmain.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  j               1    4[BANK0 ] unsigned char 
   407 ;;  i               2    2[BANK0 ] unsigned int 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       3       0       0       0
   419 ;;      Temps:          0       2       0       0       0
   420 ;;      Totals:         0       5       0       0       0
   421 ;;Total ram usage:        5 bytes
   422 ;; Hardware stack levels required when called: 3
   423 ;; This function calls:
   424 ;;		_hienthi
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430  067B                     _main:	
   431                           ;psect for function _main
   432                           
   433  067B                     l895:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436                           
   437                           
   438                           ;newmain.c: 51:     TRISD = 0;
   439  067B  1683               	bsf	3,5	;RP0=1, select bank1
   440  067C  1303               	bcf	3,6	;RP1=0, select bank1
   441  067D  0188               	clrf	8	;volatile
   442  067E                     l26:	
   443                           ;newmain.c: 52:     while(1)
   444                           
   445                           
   446                           ;newmain.c: 53:     {;newmain.c: 54:         for(unsigned int i = 0; i <= 59; i++)
   447  067E  1283               	bcf	3,5	;RP0=0, select bank0
   448  067F  01AC               	clrf	main@i
   449  0680  01AD               	clrf	main@i+1
   450  0681                     l901:
   451                           
   452                           ;newmain.c: 55:         {;newmain.c: 56:             for(unsigned char j = 0; j <= 59; j
      +                          ++)
   453  0681  01AE               	clrf	main@j
   454  0682                     l907:
   455                           
   456                           ;newmain.c: 57:             {;newmain.c: 58:                 hienthi(59 - i,59 - j);
   457  0682  082E               	movf	main@j,w
   458  0683  3C3B               	sublw	59
   459  0684  00AA               	movwf	??_main
   460  0685  082A               	movf	??_main,w
   461  0686  00F9               	movwf	hienthi@j
   462  0687  082C               	movf	main@i,w
   463  0688  3C3B               	sublw	59
   464  0689  120A  118A  2777  120A  118A  	fcall	_hienthi
   465  068E                     l909:
   466                           
   467                           ;newmain.c: 59:                 _delay((unsigned long)((50)*(8000000/4000.0)));
   468  068E  3082               	movlw	130
   469  068F  1283               	bcf	3,5	;RP0=0, select bank0
   470  0690  1303               	bcf	3,6	;RP1=0, select bank0
   471  0691  00AB               	movwf	??_main+1
   472  0692  30DD               	movlw	221
   473  0693  00AA               	movwf	??_main
   474  0694                     u477:
   475  0694  0BAA               	decfsz	??_main,f
   476  0695  2E94               	goto	u477
   477  0696  0BAB               	decfsz	??_main+1,f
   478  0697  2E94               	goto	u477
   479  0698                     l911:
   480                           
   481                           ;newmain.c: 60:             }
   482  0698  3001               	movlw	1
   483  0699  1283               	bcf	3,5	;RP0=0, select bank0
   484  069A  1303               	bcf	3,6	;RP1=0, select bank0
   485  069B  00AA               	movwf	??_main
   486  069C  082A               	movf	??_main,w
   487  069D  07AE               	addwf	main@j,f
   488  069E                     l913:
   489  069E  303C               	movlw	60
   490  069F  022E               	subwf	main@j,w
   491  06A0  1C03               	skipc
   492  06A1  2EA3               	goto	u451
   493  06A2  2EA4               	goto	u450
   494  06A3                     u451:
   495  06A3  2E82               	goto	l907
   496  06A4                     u450:
   497  06A4                     l915:
   498                           
   499                           ;newmain.c: 61:         }
   500  06A4  3001               	movlw	1
   501  06A5  07AC               	addwf	main@i,f
   502  06A6  1803               	skipnc
   503  06A7  0AAD               	incf	main@i+1,f
   504  06A8  3000               	movlw	0
   505  06A9  07AD               	addwf	main@i+1,f
   506  06AA  3000               	movlw	0
   507  06AB  022D               	subwf	main@i+1,w
   508  06AC  303C               	movlw	60
   509  06AD  1903               	skipnz
   510  06AE  022C               	subwf	main@i,w
   511  06AF  1C03               	skipc
   512  06B0  2EB2               	goto	u461
   513  06B1  2EB3               	goto	u460
   514  06B2                     u461:
   515  06B2  2E81               	goto	l901
   516  06B3                     u460:
   517  06B3  2E7E               	goto	l26
   518  06B4  120A  118A  2800   	ljmp	start
   519  06B7                     __end_of_main:
   520                           
   521                           	psect	text1
   522  0777                     __ptext1:	
   523 ;; *************** function _hienthi *****************
   524 ;; Defined at:
   525 ;;		line 41 in file "newmain.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  i               1    wreg     unsigned char 
   528 ;;  j               1    9[COMMON] unsigned char 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  i               1   12[COMMON] unsigned char 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         1       0       0       0       0
   541 ;;      Locals:         1       0       0       0       0
   542 ;;      Temps:          2       0       0       0       0
   543 ;;      Totals:         4       0       0       0       0
   544 ;;Total ram usage:        4 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; Hardware stack levels required when called: 2
   547 ;; This function calls:
   548 ;;		___awdiv
   549 ;;		___awmod
   550 ;;		_xuat_1byte
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556  0777                     _hienthi:	
   557                           ;psect for function _hienthi
   558                           
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _hienthi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   562                           ;hienthi@i stored from wreg
   563  0777  00FC               	movwf	hienthi@i
   564  0778                     l887:
   565                           
   566                           ;newmain.c: 41: void hienthi(unsigned char i, unsigned char j);newmain.c: 42: {;newmain.
      +                          c: 43:     xuat_1byte(maLed[j % 10]);
   567  0778  300A               	movlw	10
   568  0779  00F0               	movwf	___awmod@divisor
   569  077A  3000               	movlw	0
   570  077B  00F1               	movwf	___awmod@divisor+1
   571  077C  0879               	movf	hienthi@j,w
   572  077D  00FA               	movwf	??_hienthi
   573  077E  01FB               	clrf	??_hienthi+1
   574  077F  087A               	movf	??_hienthi,w
   575  0780  00F2               	movwf	___awmod@dividend
   576  0781  087B               	movf	??_hienthi+1,w
   577  0782  00F3               	movwf	___awmod@dividend+1
   578  0783  120A  118A  26B7  120A  118A  	fcall	___awmod
   579  0788  0870               	movf	?___awmod,w
   580  0789  3E20               	addlw	(low (_maLed| 0))& (0+255)
   581  078A  0084               	movwf	4
   582  078B  1383               	bcf	3,7	;select IRP bank0
   583  078C  0800               	movf	0,w
   584  078D  120A  118A  2655  120A  118A  	fcall	_xuat_1byte
   585                           
   586                           ;newmain.c: 44:     xuat_1byte(maLed[j / 10]);
   587  0792  300A               	movlw	10
   588  0793  00F0               	movwf	___awdiv@divisor
   589  0794  3000               	movlw	0
   590  0795  00F1               	movwf	___awdiv@divisor+1
   591  0796  0879               	movf	hienthi@j,w
   592  0797  00FA               	movwf	??_hienthi
   593  0798  01FB               	clrf	??_hienthi+1
   594  0799  087A               	movf	??_hienthi,w
   595  079A  00F2               	movwf	___awdiv@dividend
   596  079B  087B               	movf	??_hienthi+1,w
   597  079C  00F3               	movwf	___awdiv@dividend+1
   598  079D  120A  118A  2710  120A  118A  	fcall	___awdiv
   599  07A2  0870               	movf	?___awdiv,w
   600  07A3  3E20               	addlw	(low (_maLed| 0))& (0+255)
   601  07A4  0084               	movwf	4
   602  07A5  1383               	bcf	3,7	;select IRP bank0
   603  07A6  0800               	movf	0,w
   604  07A7  120A  118A  2655  120A  118A  	fcall	_xuat_1byte
   605                           
   606                           ;newmain.c: 45:     xuat_1byte(maLed[i % 10]);
   607  07AC  300A               	movlw	10
   608  07AD  00F0               	movwf	___awmod@divisor
   609  07AE  3000               	movlw	0
   610  07AF  00F1               	movwf	___awmod@divisor+1
   611  07B0  087C               	movf	hienthi@i,w
   612  07B1  00FA               	movwf	??_hienthi
   613  07B2  01FB               	clrf	??_hienthi+1
   614  07B3  087A               	movf	??_hienthi,w
   615  07B4  00F2               	movwf	___awmod@dividend
   616  07B5  087B               	movf	??_hienthi+1,w
   617  07B6  00F3               	movwf	___awmod@dividend+1
   618  07B7  120A  118A  26B7  120A  118A  	fcall	___awmod
   619  07BC  0870               	movf	?___awmod,w
   620  07BD  3E20               	addlw	(low (_maLed| 0))& (0+255)
   621  07BE  0084               	movwf	4
   622  07BF  1383               	bcf	3,7	;select IRP bank0
   623  07C0  0800               	movf	0,w
   624  07C1  120A  118A  2655  120A  118A  	fcall	_xuat_1byte
   625                           
   626                           ;newmain.c: 46:     xuat_1byte(maLed[i / 10]);
   627  07C6  300A               	movlw	10
   628  07C7  00F0               	movwf	___awdiv@divisor
   629  07C8  3000               	movlw	0
   630  07C9  00F1               	movwf	___awdiv@divisor+1
   631  07CA  087C               	movf	hienthi@i,w
   632  07CB  00FA               	movwf	??_hienthi
   633  07CC  01FB               	clrf	??_hienthi+1
   634  07CD  087A               	movf	??_hienthi,w
   635  07CE  00F2               	movwf	___awdiv@dividend
   636  07CF  087B               	movf	??_hienthi+1,w
   637  07D0  00F3               	movwf	___awdiv@dividend+1
   638  07D1  120A  118A  2710  120A  118A  	fcall	___awdiv
   639  07D6  0870               	movf	?___awdiv,w
   640  07D7  3E20               	addlw	(low (_maLed| 0))& (0+255)
   641  07D8  0084               	movwf	4
   642  07D9  1383               	bcf	3,7	;select IRP bank0
   643  07DA  0800               	movf	0,w
   644  07DB  120A  118A  2655  120A  118A  	fcall	_xuat_1byte
   645  07E0                     l889:
   646                           
   647                           ;newmain.c: 47:     PORTDbits.RD2 = 0; PORTDbits.RD2 = 1;
   648  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   649  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   650  07E2  1108               	bcf	8,2	;volatile
   651  07E3                     l891:
   652  07E3  1508               	bsf	8,2	;volatile
   653  07E4                     l893:
   654                           
   655                           ;newmain.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
   656  07E4  301A               	movlw	26
   657  07E5  00FB               	movwf	??_hienthi+1
   658  07E6  30F8               	movlw	248
   659  07E7  00FA               	movwf	??_hienthi
   660  07E8                     u487:
   661  07E8  0BFA               	decfsz	??_hienthi,f
   662  07E9  2FE8               	goto	u487
   663  07EA  0BFB               	decfsz	??_hienthi+1,f
   664  07EB  2FE8               	goto	u487
   665  07EC  0000               	nop
   666  07ED                     l21:
   667  07ED  0008               	return
   668  07EE                     __end_of_hienthi:
   669                           
   670                           	psect	text2
   671  0655                     __ptext2:	
   672 ;; *************** function _xuat_1byte *****************
   673 ;; Defined at:
   674 ;;		line 29 in file "newmain.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  xuatbyte        1    wreg     unsigned char 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  xuatbyte        1    2[COMMON] unsigned char 
   679 ;;  i               1    5[COMMON] unsigned char 
   680 ;;  b               1    4[COMMON] unsigned char 
   681 ;;  xuat            1    3[COMMON] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       0       0       0       0
   692 ;;      Locals:         4       0       0       0       0
   693 ;;      Temps:          1       0       0       0       0
   694 ;;      Totals:         5       0       0       0       0
   695 ;;Total ram usage:        5 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 1
   698 ;; This function calls:
   699 ;;		_laybit7
   700 ;; This function is called by:
   701 ;;		_hienthi
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705  0655                     _xuat_1byte:	
   706                           ;psect for function _xuat_1byte
   707                           
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _xuat_1byte: [wreg+status,2+status,0+pclath+cstack]
   711                           ;xuat_1byte@xuatbyte stored from wreg
   712  0655  00F2               	movwf	xuat_1byte@xuatbyte
   713  0656                     l783:
   714                           
   715                           ;newmain.c: 29: void xuat_1byte(unsigned char xuatbyte);newmain.c: 30: {;newmain.c: 31: 
      +                              unsigned char b = 0x80, xuat;
   716  0656  3080               	movlw	128
   717  0657  00F1               	movwf	??_xuat_1byte
   718  0658  0871               	movf	??_xuat_1byte,w
   719  0659  00F4               	movwf	xuat_1byte@b
   720  065A                     l785:
   721                           
   722                           ;newmain.c: 32:     for(unsigned char i = 0; i < 8; i++)
   723  065A  01F5               	clrf	xuat_1byte@i
   724  065B                     l791:
   725                           
   726                           ;newmain.c: 33:     {;newmain.c: 35:         xuat = laybit7(xuatbyte & b);
   727  065B  0872               	movf	xuat_1byte@xuatbyte,w
   728  065C  0574               	andwf	xuat_1byte@b,w
   729  065D  120A  118A  262E  120A  118A  	fcall	_laybit7
   730  0662  00F1               	movwf	??_xuat_1byte
   731  0663  0871               	movf	??_xuat_1byte,w
   732  0664  00F3               	movwf	xuat_1byte@xuat
   733  0665                     l793:
   734                           
   735                           ;newmain.c: 36:         PORTDbits.RD0 = xuat;
   736  0665  0C73               	rrf	xuat_1byte@xuat,w
   737  0666  1283               	bcf	3,5	;RP0=0, select bank0
   738  0667  1303               	bcf	3,6	;RP1=0, select bank0
   739  0668  1C03               	skipc
   740  0669  1008               	bcf	8,0	;volatile
   741  066A  1803               	skipnc
   742  066B  1408               	bsf	8,0	;volatile
   743  066C                     l795:
   744                           
   745                           ;newmain.c: 37:         PORTDbits.RD1 = 0; PORTDbits.RD1 = 1;
   746  066C  1088               	bcf	8,1	;volatile
   747  066D                     l797:
   748  066D  1488               	bsf	8,1	;volatile
   749  066E                     l799:
   750                           
   751                           ;newmain.c: 38:         b >>= 1;
   752  066E  1003               	clrc
   753  066F  0CF4               	rrf	xuat_1byte@b,f
   754  0670                     l801:
   755                           
   756                           ;newmain.c: 39:     }
   757  0670  3001               	movlw	1
   758  0671  00F1               	movwf	??_xuat_1byte
   759  0672  0871               	movf	??_xuat_1byte,w
   760  0673  07F5               	addwf	xuat_1byte@i,f
   761  0674                     l803:
   762  0674  3008               	movlw	8
   763  0675  0275               	subwf	xuat_1byte@i,w
   764  0676  1C03               	skipc
   765  0677  2E79               	goto	u251
   766  0678  2E7A               	goto	u250
   767  0679                     u251:
   768  0679  2E5B               	goto	l791
   769  067A                     u250:
   770  067A                     l18:
   771  067A  0008               	return
   772  067B                     __end_of_xuat_1byte:
   773                           
   774                           	psect	text3
   775  062E                     __ptext3:	
   776 ;; *************** function _laybit7 *****************
   777 ;; Defined at:
   778 ;;		line 22 in file "newmain.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  x               1    wreg     unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  x               1    0[COMMON] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      unsigned char 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0
   795 ;;      Totals:         1       0       0       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_xuat_1byte
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805  062E                     _laybit7:	
   806                           ;psect for function _laybit7
   807                           
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _laybit7: [wreg+status,2+status,0]
   811                           ;laybit7@x stored from wreg
   812  062E  00F0               	movwf	laybit7@x
   813  062F                     l771:
   814                           
   815                           ;newmain.c: 22: char laybit7(unsigned char x);newmain.c: 23: {;newmain.c: 24:     if(x =
      +                          = 0)
   816  062F  0870               	movf	laybit7@x,w
   817  0630  1D03               	btfss	3,2
   818  0631  2E33               	goto	u241
   819  0632  2E34               	goto	u240
   820  0633                     u241:
   821  0633  2E36               	goto	l779
   822  0634                     u240:
   823  0634                     l773:
   824                           
   825                           ;newmain.c: 25:         return 0;
   826  0634  3000               	movlw	0
   827  0635  2E37               	goto	l12
   828  0636                     l779:
   829                           
   830                           ;newmain.c: 27:         return 1;
   831  0636  3001               	movlw	1
   832  0637                     l12:
   833  0637  0008               	return
   834  0638                     __end_of_laybit7:
   835                           
   836                           	psect	text4
   837  06B7                     __ptext4:	
   838 ;; *************** function ___awmod *****************
   839 ;; Defined at:
   840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  divisor         2    0[COMMON] int 
   843 ;;  dividend        2    2[COMMON] int 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  sign            1    6[COMMON] unsigned char 
   846 ;;  counter         1    5[COMMON] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2    0[COMMON] int 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         4       0       0       0       0
   857 ;;      Locals:         2       0       0       0       0
   858 ;;      Temps:          1       0       0       0       0
   859 ;;      Totals:         7       0       0       0       0
   860 ;;Total ram usage:        7 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_hienthi
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869  06B7                     ___awmod:	
   870                           ;psect for function ___awmod
   871                           
   872  06B7                     l849:	
   873                           ;incstack = 0
   874                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   875                           
   876  06B7  01F6               	clrf	___awmod@sign
   877  06B8                     l851:
   878  06B8  1FF3               	btfss	___awmod@dividend+1,7
   879  06B9  2EBB               	goto	u361
   880  06BA  2EBC               	goto	u360
   881  06BB                     u361:
   882  06BB  2EC3               	goto	l857
   883  06BC                     u360:
   884  06BC                     l853:
   885  06BC  09F2               	comf	___awmod@dividend,f
   886  06BD  09F3               	comf	___awmod@dividend+1,f
   887  06BE  0AF2               	incf	___awmod@dividend,f
   888  06BF  1903               	skipnz
   889  06C0  0AF3               	incf	___awmod@dividend+1,f
   890  06C1                     l855:
   891  06C1  01F6               	clrf	___awmod@sign
   892  06C2  0AF6               	incf	___awmod@sign,f
   893  06C3                     l857:
   894  06C3  1FF1               	btfss	___awmod@divisor+1,7
   895  06C4  2EC6               	goto	u371
   896  06C5  2EC7               	goto	u370
   897  06C6                     u371:
   898  06C6  2ECC               	goto	l861
   899  06C7                     u370:
   900  06C7                     l859:
   901  06C7  09F0               	comf	___awmod@divisor,f
   902  06C8  09F1               	comf	___awmod@divisor+1,f
   903  06C9  0AF0               	incf	___awmod@divisor,f
   904  06CA  1903               	skipnz
   905  06CB  0AF1               	incf	___awmod@divisor+1,f
   906  06CC                     l861:
   907  06CC  0870               	movf	___awmod@divisor,w
   908  06CD  0471               	iorwf	___awmod@divisor+1,w
   909  06CE  1903               	btfsc	3,2
   910  06CF  2ED1               	goto	u381
   911  06D0  2ED2               	goto	u380
   912  06D1                     u381:
   913  06D1  2F01               	goto	l879
   914  06D2                     u380:
   915  06D2                     l863:
   916  06D2  01F5               	clrf	___awmod@counter
   917  06D3  0AF5               	incf	___awmod@counter,f
   918  06D4  2EE0               	goto	l869
   919  06D5                     l865:
   920  06D5  3001               	movlw	1
   921  06D6                     u395:
   922  06D6  1003               	clrc
   923  06D7  0DF0               	rlf	___awmod@divisor,f
   924  06D8  0DF1               	rlf	___awmod@divisor+1,f
   925  06D9  3EFF               	addlw	-1
   926  06DA  1D03               	skipz
   927  06DB  2ED6               	goto	u395
   928  06DC                     l867:
   929  06DC  3001               	movlw	1
   930  06DD  00F4               	movwf	??___awmod
   931  06DE  0874               	movf	??___awmod,w
   932  06DF  07F5               	addwf	___awmod@counter,f
   933  06E0                     l869:
   934  06E0  1FF1               	btfss	___awmod@divisor+1,7
   935  06E1  2EE3               	goto	u401
   936  06E2  2EE4               	goto	u400
   937  06E3                     u401:
   938  06E3  2ED5               	goto	l865
   939  06E4                     u400:
   940  06E4                     l871:
   941  06E4  0871               	movf	___awmod@divisor+1,w
   942  06E5  0273               	subwf	___awmod@dividend+1,w
   943  06E6  1D03               	skipz
   944  06E7  2EEA               	goto	u415
   945  06E8  0870               	movf	___awmod@divisor,w
   946  06E9  0272               	subwf	___awmod@dividend,w
   947  06EA                     u415:
   948  06EA  1C03               	skipc
   949  06EB  2EED               	goto	u411
   950  06EC  2EEE               	goto	u410
   951  06ED                     u411:
   952  06ED  2EF4               	goto	l875
   953  06EE                     u410:
   954  06EE                     l873:
   955  06EE  0870               	movf	___awmod@divisor,w
   956  06EF  02F2               	subwf	___awmod@dividend,f
   957  06F0  0871               	movf	___awmod@divisor+1,w
   958  06F1  1C03               	skipc
   959  06F2  03F3               	decf	___awmod@dividend+1,f
   960  06F3  02F3               	subwf	___awmod@dividend+1,f
   961  06F4                     l875:
   962  06F4  3001               	movlw	1
   963  06F5                     u425:
   964  06F5  1003               	clrc
   965  06F6  0CF1               	rrf	___awmod@divisor+1,f
   966  06F7  0CF0               	rrf	___awmod@divisor,f
   967  06F8  3EFF               	addlw	-1
   968  06F9  1D03               	skipz
   969  06FA  2EF5               	goto	u425
   970  06FB                     l877:
   971  06FB  3001               	movlw	1
   972  06FC  02F5               	subwf	___awmod@counter,f
   973  06FD  1D03               	btfss	3,2
   974  06FE  2F00               	goto	u431
   975  06FF  2F01               	goto	u430
   976  0700                     u431:
   977  0700  2EE4               	goto	l871
   978  0701                     u430:
   979  0701                     l879:
   980  0701  0876               	movf	___awmod@sign,w
   981  0702  1903               	btfsc	3,2
   982  0703  2F05               	goto	u441
   983  0704  2F06               	goto	u440
   984  0705                     u441:
   985  0705  2F0B               	goto	l883
   986  0706                     u440:
   987  0706                     l881:
   988  0706  09F2               	comf	___awmod@dividend,f
   989  0707  09F3               	comf	___awmod@dividend+1,f
   990  0708  0AF2               	incf	___awmod@dividend,f
   991  0709  1903               	skipnz
   992  070A  0AF3               	incf	___awmod@dividend+1,f
   993  070B                     l883:
   994  070B  0873               	movf	___awmod@dividend+1,w
   995  070C  00F1               	movwf	?___awmod+1
   996  070D  0872               	movf	___awmod@dividend,w
   997  070E  00F0               	movwf	?___awmod
   998  070F                     l285:
   999  070F  0008               	return
  1000  0710                     __end_of___awmod:
  1001                           
  1002                           	psect	text5
  1003  0710                     __ptext5:	
  1004 ;; *************** function ___awdiv *****************
  1005 ;; Defined at:
  1006 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  divisor         2    0[COMMON] int 
  1009 ;;  dividend        2    2[COMMON] int 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  quotient        2    7[COMMON] int 
  1012 ;;  sign            1    6[COMMON] unsigned char 
  1013 ;;  counter         1    5[COMMON] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2    0[COMMON] int 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1023 ;;      Params:         4       0       0       0       0
  1024 ;;      Locals:         4       0       0       0       0
  1025 ;;      Temps:          1       0       0       0       0
  1026 ;;      Totals:         9       0       0       0       0
  1027 ;;Total ram usage:        9 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_hienthi
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036  0710                     ___awdiv:	
  1037                           ;psect for function ___awdiv
  1038                           
  1039  0710                     l805:	
  1040                           ;incstack = 0
  1041                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1042                           
  1043  0710  01F6               	clrf	___awdiv@sign
  1044  0711                     l807:
  1045  0711  1FF1               	btfss	___awdiv@divisor+1,7
  1046  0712  2F14               	goto	u261
  1047  0713  2F15               	goto	u260
  1048  0714                     u261:
  1049  0714  2F1C               	goto	l813
  1050  0715                     u260:
  1051  0715                     l809:
  1052  0715  09F0               	comf	___awdiv@divisor,f
  1053  0716  09F1               	comf	___awdiv@divisor+1,f
  1054  0717  0AF0               	incf	___awdiv@divisor,f
  1055  0718  1903               	skipnz
  1056  0719  0AF1               	incf	___awdiv@divisor+1,f
  1057  071A                     l811:
  1058  071A  01F6               	clrf	___awdiv@sign
  1059  071B  0AF6               	incf	___awdiv@sign,f
  1060  071C                     l813:
  1061  071C  1FF3               	btfss	___awdiv@dividend+1,7
  1062  071D  2F1F               	goto	u271
  1063  071E  2F20               	goto	u270
  1064  071F                     u271:
  1065  071F  2F29               	goto	l819
  1066  0720                     u270:
  1067  0720                     l815:
  1068  0720  09F2               	comf	___awdiv@dividend,f
  1069  0721  09F3               	comf	___awdiv@dividend+1,f
  1070  0722  0AF2               	incf	___awdiv@dividend,f
  1071  0723  1903               	skipnz
  1072  0724  0AF3               	incf	___awdiv@dividend+1,f
  1073  0725                     l817:
  1074  0725  3001               	movlw	1
  1075  0726  00F4               	movwf	??___awdiv
  1076  0727  0874               	movf	??___awdiv,w
  1077  0728  06F6               	xorwf	___awdiv@sign,f
  1078  0729                     l819:
  1079  0729  01F7               	clrf	___awdiv@quotient
  1080  072A  01F8               	clrf	___awdiv@quotient+1
  1081  072B                     l821:
  1082  072B  0870               	movf	___awdiv@divisor,w
  1083  072C  0471               	iorwf	___awdiv@divisor+1,w
  1084  072D  1903               	btfsc	3,2
  1085  072E  2F30               	goto	u281
  1086  072F  2F31               	goto	u280
  1087  0730                     u281:
  1088  0730  2F68               	goto	l841
  1089  0731                     u280:
  1090  0731                     l823:
  1091  0731  01F5               	clrf	___awdiv@counter
  1092  0732  0AF5               	incf	___awdiv@counter,f
  1093  0733  2F3F               	goto	l829
  1094  0734                     l825:
  1095  0734  3001               	movlw	1
  1096  0735                     u295:
  1097  0735  1003               	clrc
  1098  0736  0DF0               	rlf	___awdiv@divisor,f
  1099  0737  0DF1               	rlf	___awdiv@divisor+1,f
  1100  0738  3EFF               	addlw	-1
  1101  0739  1D03               	skipz
  1102  073A  2F35               	goto	u295
  1103  073B                     l827:
  1104  073B  3001               	movlw	1
  1105  073C  00F4               	movwf	??___awdiv
  1106  073D  0874               	movf	??___awdiv,w
  1107  073E  07F5               	addwf	___awdiv@counter,f
  1108  073F                     l829:
  1109  073F  1FF1               	btfss	___awdiv@divisor+1,7
  1110  0740  2F42               	goto	u301
  1111  0741  2F43               	goto	u300
  1112  0742                     u301:
  1113  0742  2F34               	goto	l825
  1114  0743                     u300:
  1115  0743                     l831:
  1116  0743  3001               	movlw	1
  1117  0744                     u315:
  1118  0744  1003               	clrc
  1119  0745  0DF7               	rlf	___awdiv@quotient,f
  1120  0746  0DF8               	rlf	___awdiv@quotient+1,f
  1121  0747  3EFF               	addlw	-1
  1122  0748  1D03               	skipz
  1123  0749  2F44               	goto	u315
  1124  074A  0871               	movf	___awdiv@divisor+1,w
  1125  074B  0273               	subwf	___awdiv@dividend+1,w
  1126  074C  1D03               	skipz
  1127  074D  2F50               	goto	u325
  1128  074E  0870               	movf	___awdiv@divisor,w
  1129  074F  0272               	subwf	___awdiv@dividend,w
  1130  0750                     u325:
  1131  0750  1C03               	skipc
  1132  0751  2F53               	goto	u321
  1133  0752  2F54               	goto	u320
  1134  0753                     u321:
  1135  0753  2F5B               	goto	l837
  1136  0754                     u320:
  1137  0754                     l833:
  1138  0754  0870               	movf	___awdiv@divisor,w
  1139  0755  02F2               	subwf	___awdiv@dividend,f
  1140  0756  0871               	movf	___awdiv@divisor+1,w
  1141  0757  1C03               	skipc
  1142  0758  03F3               	decf	___awdiv@dividend+1,f
  1143  0759  02F3               	subwf	___awdiv@dividend+1,f
  1144  075A                     l835:
  1145  075A  1477               	bsf	___awdiv@quotient,0
  1146  075B                     l837:
  1147  075B  3001               	movlw	1
  1148  075C                     u335:
  1149  075C  1003               	clrc
  1150  075D  0CF1               	rrf	___awdiv@divisor+1,f
  1151  075E  0CF0               	rrf	___awdiv@divisor,f
  1152  075F  3EFF               	addlw	-1
  1153  0760  1D03               	skipz
  1154  0761  2F5C               	goto	u335
  1155  0762                     l839:
  1156  0762  3001               	movlw	1
  1157  0763  02F5               	subwf	___awdiv@counter,f
  1158  0764  1D03               	btfss	3,2
  1159  0765  2F67               	goto	u341
  1160  0766  2F68               	goto	u340
  1161  0767                     u341:
  1162  0767  2F43               	goto	l831
  1163  0768                     u340:
  1164  0768                     l841:
  1165  0768  0876               	movf	___awdiv@sign,w
  1166  0769  1903               	btfsc	3,2
  1167  076A  2F6C               	goto	u351
  1168  076B  2F6D               	goto	u350
  1169  076C                     u351:
  1170  076C  2F72               	goto	l845
  1171  076D                     u350:
  1172  076D                     l843:
  1173  076D  09F7               	comf	___awdiv@quotient,f
  1174  076E  09F8               	comf	___awdiv@quotient+1,f
  1175  076F  0AF7               	incf	___awdiv@quotient,f
  1176  0770  1903               	skipnz
  1177  0771  0AF8               	incf	___awdiv@quotient+1,f
  1178  0772                     l845:
  1179  0772  0878               	movf	___awdiv@quotient+1,w
  1180  0773  00F1               	movwf	?___awdiv+1
  1181  0774  0877               	movf	___awdiv@quotient,w
  1182  0775  00F0               	movwf	?___awdiv
  1183  0776                     l272:
  1184  0776  0008               	return
  1185  0777                     __end_of___awdiv:
  1186  007E                     btemp	set	126	;btemp
  1187  007E                     wtemp0	set	126
  1188                           
  1189                           	psect	idloc
  1190                           
  1191                           ;Config register IDLOC0 @ 0x2000
  1192                           ;	unspecified, using default values
  1193  2000                     	org	8192
  1194  2000  3FFF               	dw	16383
  1195                           
  1196                           ;Config register IDLOC1 @ 0x2001
  1197                           ;	unspecified, using default values
  1198  2001                     	org	8193
  1199  2001  3FFF               	dw	16383
  1200                           
  1201                           ;Config register IDLOC2 @ 0x2002
  1202                           ;	unspecified, using default values
  1203  2002                     	org	8194
  1204  2002  3FFF               	dw	16383
  1205                           
  1206                           ;Config register IDLOC3 @ 0x2003
  1207                           ;	unspecified, using default values
  1208  2003                     	org	8195
  1209  2003  3FFF               	dw	16383
  1210                           
  1211                           	psect	config
  1212                           
  1213                           ;Config register CONFIG1 @ 0x2007
  1214                           ;	Oscillator Selection bits
  1215                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1216                           ;	Watchdog Timer Enable bit
  1217                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1218                           ;	Power-up Timer Enable bit
  1219                           ;	PWRTE = OFF, PWRT disabled
  1220                           ;	RE3/MCLR pin function select bit
  1221                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1222                           ;	Code Protection bit
  1223                           ;	CP = OFF, Program memory code protection is disabled
  1224                           ;	Data Code Protection bit
  1225                           ;	CPD = OFF, Data memory code protection is disabled
  1226                           ;	Brown Out Reset Selection bits
  1227                           ;	BOREN = OFF, BOR disabled
  1228                           ;	Internal External Switchover bit
  1229                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1230                           ;	Fail-Safe Clock Monitor Enabled bit
  1231                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1232                           ;	Low Voltage Programming Enable bit
  1233                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1234                           ;	In-Circuit Debugger Mode bit
  1235                           ;	DEBUG = 0x1, unprogrammed default
  1236  2007                     	org	8199
  1237  2007  30F4               	dw	12532
  1238                           
  1239                           ;Config register CONFIG2 @ 0x2008
  1240                           ;	Brown-out Reset Selection bit
  1241                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1242                           ;	Flash Program Memory Self Write Enable bits
  1243                           ;	WRT = OFF, Write protection off
  1244  2008                     	org	8200
  1245  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      5      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_hienthi
    _hienthi->___awdiv
    _xuat_1byte->_laybit7

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1641
                                              0 BANK0      5     5      0
                            _hienthi
 ---------------------------------------------------------------------------------
 (1) _hienthi                                              4     3      1    1505
                                              9 COMMON     4     3      1
                            ___awdiv
                            ___awmod
                         _xuat_1byte
 ---------------------------------------------------------------------------------
 (2) _xuat_1byte                                           5     5      0     137
                                              1 COMMON     5     5      0
                            _laybit7
 ---------------------------------------------------------------------------------
 (3) _laybit7                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hienthi
     ___awdiv
     ___awmod
     _xuat_1byte
       _laybit7

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 23 16:29:10 2022

                      pc 0002                       l12 0637                       l21 07ED  
                     l18 067A                       l26 067E             ___awdiv@sign 0076  
                     fsr 0004                      l272 0776                      l285 070F  
                    l801 0670                      l811 071A                      l803 0674  
                    l821 072B                      l813 071C                      l805 0710  
                    l901 0681                      l831 0743                      l823 0731  
                    l815 0720                      l807 0711                      l911 0698  
                    l833 0754                      l825 0734                      l841 0768  
                    l817 0725                      l809 0715                      l913 069E  
                    l843 076D                      l835 075A                      l827 073B  
                    l819 0729                      l851 06B8                      l771 062F  
                    l915 06A4                      l907 0682                      l845 0772  
                    l837 075B                      l829 073F                      l861 06CC  
                    l853 06BC                      l773 0634                      l909 068E  
                    l839 0762                      l871 06E4                      l863 06D2  
                    l855 06C1                      l791 065B                      l783 0656  
                    l881 0706                      l873 06EE                      l865 06D5  
                    l857 06C3                      l849 06B7                      l793 0665  
                    l785 065A                      l883 070B                      l875 06F4  
                    l867 06DC                      l859 06C7                      l779 0636  
                    l795 066C                      l891 07E3                      l877 06FB  
                    l869 06E0                      l797 066D                      l893 07E4  
                    l879 0701                      l799 066E                      l887 0778  
                    l895 067B                      l889 07E0                      u300 0743  
                    u301 0742                      u320 0754                      u400 06E4  
                    u240 0634                      u321 0753                      u401 06E3  
                    u241 0633                      u410 06EE                      u250 067A  
                    u315 0744                      u411 06ED                      u251 0679  
                    u340 0768                      u260 0715                      u341 0767  
                    u325 0750                      u261 0714                      u350 076D  
                    u270 0720                      u430 0701                      u351 076C  
                    u335 075C                      u271 071F                      u431 0700  
                    u415 06EA                      u280 0731                      u440 0706  
                    u360 06BC                      u281 0730                      u441 0705  
                    u425 06F5                      u361 06BB                      u370 06C7  
                    u450 06A4                      u371 06C6                      u451 06A3  
                    u380 06D2                      u460 06B3                      u381 06D1  
                    u461 06B2                      u295 0735                      u395 06D6  
                    u477 0694                      u487 07E8                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076                     _main 067B  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 0777          __end_of___awmod 0710          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _TRISD 0088          __end_of_hienthi 07EE  
                  _maLed 0020          __end_of_laybit7 0638                    main@i 002C  
                  main@j 002E                    pclath 000A       xuat_1byte@xuatbyte 0072  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 06B7                   ??_main 002A         ___awdiv@dividend 0072  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_hienthi 007A  
              ??_laybit7 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0638               __pmaintext 067B                  ___awdiv 0710  
                ___awmod 06B7                  __ptext1 0777                  __ptext2 0655  
                __ptext3 062E                  __ptext4 06B7                  __ptext5 0710  
                _hienthi 0777                  _laybit7 062E         ___awmod@dividend 0072  
   end_of_initialization 07FC                _PORTDbits 0008               _xuat_1byte 0655  
    start_initialization 07EE               init_fetch0 0642              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 002A              ?_xuat_1byte 0070  
               ?___awdiv 0070                 ?___awmod 0070                 ?_hienthi 0079  
               ?_laybit7 0070              xuat_1byte@b 0074              xuat_1byte@i 0075  
         xuat_1byte@xuat 0073                 hienthi@i 007C                 hienthi@j 0079  
               laybit7@x 0070                 init_ram0 0646             ??_xuat_1byte 0071  
     __end_of_xuat_1byte 067B  
