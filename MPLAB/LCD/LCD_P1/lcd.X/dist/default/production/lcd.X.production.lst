

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 15 08:26:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297                           
   298                           	psect	idataBANK1
   299  0409                     __pidataBANK1:
   300                           
   301                           ;initializer for _chu
   302  0409  340B               	retlw	low ((STR_1-__stringbase)| (0+32768))
   303  040A  3400               	retlw	0
   304  040B  3400               	retlw	0
   305  040C  3400               	retlw	0
   306  040D  3400               	retlw	0
   307  040E  3400               	retlw	0
   308  040F  3400               	retlw	0
   309  0410  3400               	retlw	0
   310  0411  3400               	retlw	0
   311  0412  3400               	retlw	0
   312  0413  3400               	retlw	0
   313  0414  3400               	retlw	0
   314  0415  3400               	retlw	0
   315  0416  3400               	retlw	0
   316  0417  3400               	retlw	0
   317  0418  3400               	retlw	0
   318  0419  3400               	retlw	0
   319  041A  3400               	retlw	0
   320  041B  3400               	retlw	0
   321  041C  3400               	retlw	0
   322  041D  3400               	retlw	0
   323  041E  3400               	retlw	0
   324  041F  3400               	retlw	0
   325  0420  3400               	retlw	0
   326  0421  3400               	retlw	0
   327  0422  3400               	retlw	0
   328  0423  3400               	retlw	0
   329  0424  3400               	retlw	0
   330  0425  3400               	retlw	0
   331  0426  3400               	retlw	0
   332  0427  3400               	retlw	0
   333  0428  3400               	retlw	0
   334  0429  3400               	retlw	0
   335  042A  3400               	retlw	0
   336  042B  3400               	retlw	0
   337  042C  3400               	retlw	0
   338  042D  3400               	retlw	0
   339  042E  3400               	retlw	0
   340  042F  3400               	retlw	0
   341                           
   342                           	psect	idataBANK3
   343  049F                     __pidataBANK3:
   344                           
   345                           ;initializer for ___cgram
   346  049F  340C               	retlw	12
   347  04A0  3412               	retlw	18
   348  04A1  3412               	retlw	18
   349  04A2  340C               	retlw	12
   350  04A3  3400               	retlw	0
   351  04A4  3400               	retlw	0
   352  04A5  3400               	retlw	0
   353  04A6  3400               	retlw	0
   354  04A7  3400               	retlw	0
   355  04A8  3404               	retlw	4
   356  04A9  340E               	retlw	14
   357  04AA  341F               	retlw	31
   358  04AB  340E               	retlw	14
   359  04AC  3404               	retlw	4
   360  04AD  3400               	retlw	0
   361  04AE  3400               	retlw	0
   362  04AF  3404               	retlw	4
   363  04B0  3404               	retlw	4
   364  04B1  3404               	retlw	4
   365  04B2  3404               	retlw	4
   366  04B3  341F               	retlw	31
   367  04B4  340E               	retlw	14
   368  04B5  3404               	retlw	4
   369  04B6  3400               	retlw	0
   370  04B7  340A               	retlw	10
   371  04B8  3415               	retlw	21
   372  04B9  3411               	retlw	17
   373  04BA  340A               	retlw	10
   374  04BB  3404               	retlw	4
   375  04BC  3400               	retlw	0
   376  04BD  3400               	retlw	0
   377  04BE  3400               	retlw	0
   378  04BF  340A               	retlw	10
   379  04C0  341F               	retlw	31
   380  04C1  341F               	retlw	31
   381  04C2  340E               	retlw	14
   382  04C3  3404               	retlw	4
   383  04C4  3400               	retlw	0
   384  04C5  3400               	retlw	0
   385  04C6  3400               	retlw	0
   386  04C7  3400               	retlw	0
   387  04C8  3400               	retlw	0
   388  04C9  3400               	retlw	0
   389  04CA  3400               	retlw	0
   390  04CB  3400               	retlw	0
   391  04CC  3400               	retlw	0
   392  04CD  3400               	retlw	0
   393  04CE  3400               	retlw	0
   394  04CF  3400               	retlw	0
   395  04D0  3400               	retlw	0
   396  04D1  3400               	retlw	0
   397  04D2  3400               	retlw	0
   398  04D3  3400               	retlw	0
   399  04D4  3400               	retlw	0
   400  04D5  3400               	retlw	0
   401  04D6  3400               	retlw	0
   402  04D7  3400               	retlw	0
   403  04D8  3400               	retlw	0
   404  04D9  3400               	retlw	0
   405  04DA  3400               	retlw	0
   406  04DB  3400               	retlw	0
   407  04DC  3400               	retlw	0
   408  04DD  3400               	retlw	0
   409  04DE  3400               	retlw	0
   410                           
   411                           	psect	strings
   412  0003                     __pstrings:
   413  0003                     stringtab:
   414  0003                     __stringtab:
   415                           
   416                           ;	String table - string pointers are 1 byte each
   417  0003  1BFF               	btfsc	btemp+1,7
   418  0004  280D               	ljmp	stringcode
   419  0005  1383               	bcf	3,7
   420  0006  187F               	btfsc	btemp+1,0
   421  0007  1783               	bsf	3,7
   422  0008  0800               	movf	0,w
   423  0009  0A84               	incf	4,f
   424  000A  1903               	skipnz
   425  000B  0AFF               	incf	btemp+1,f
   426  000C  0008               	return
   427  000D                     stringcode:
   428  000D                     stringdir:
   429  000D  3000               	movlw	high stringdir
   430  000E  008A               	movwf	10
   431  000F  0804               	movf	4,w
   432  0010  0A84               	incf	4,f
   433  0011  0782               	addwf	2,f
   434  0012                     __stringbase:
   435  0012  3400               	retlw	0
   436  0013                     __end_of__stringtab:
   437  0013                     _dpowers:
   438  0013  3401               	retlw	1
   439  0014  3400               	retlw	0
   440  0015  340A               	retlw	10
   441  0016  3400               	retlw	0
   442  0017  3464               	retlw	100
   443  0018  3400               	retlw	0
   444  0019  34E8               	retlw	232
   445  001A  3403               	retlw	3
   446  001B  3410               	retlw	16
   447  001C  3427               	retlw	39
   448  001D                     __end_of_dpowers:
   449  0008                     _PORTD	set	8
   450  0045                     _RD5	set	69
   451  0046                     _RD6	set	70
   452  0044                     _RD4	set	68
   453  0088                     _TRISDbits	set	136
   454  0088                     _TRISD	set	136
   455  001D                     STR_1:
   456  001D  3420               	retlw	32	;' '
   457  001E  3420               	retlw	32	;' '
   458  001F  3420               	retlw	32	;' '
   459  0020  3420               	retlw	32	;' '
   460  0021  3420               	retlw	32	;' '
   461  0022  3420               	retlw	32	;' '
   462  0023  3420               	retlw	32	;' '
   463  0024  3420               	retlw	32	;' '
   464  0025  3420               	retlw	32	;' '
   465  0026  3420               	retlw	32	;' '
   466  0027  3420               	retlw	32	;' '
   467  0028  3420               	retlw	32	;' '
   468  0029  3420               	retlw	32	;' '
   469  002A  3420               	retlw	32	;' '
   470  002B  3420               	retlw	32	;' '
   471  002C  3420               	retlw	32	;' '
   472  002D  3456               	retlw	86	;'V'
   473  002E  3449               	retlw	73	;'I'
   474  002F  3420               	retlw	32	;' '
   475  0030  3458               	retlw	88	;'X'
   476  0031  3455               	retlw	85	;'U'
   477  0032  3420               	retlw	32	;' '
   478  0033  344C               	retlw	76	;'L'
   479  0034  3459               	retlw	89	;'Y'
   480  0035  3420               	retlw	32	;' '
   481  0036  3420               	retlw	32	;' '
   482  0037  3420               	retlw	32	;' '
   483  0038  3420               	retlw	32	;' '
   484  0039  3420               	retlw	32	;' '
   485  003A  3420               	retlw	32	;' '
   486  003B  3420               	retlw	32	;' '
   487  003C  3420               	retlw	32	;' '
   488  003D  3420               	retlw	32	;' '
   489  003E  3420               	retlw	32	;' '
   490  003F  3420               	retlw	32	;' '
   491  0040  3420               	retlw	32	;' '
   492  0041  3420               	retlw	32	;' '
   493  0042  3420               	retlw	32	;' '
   494  0043  3420               	retlw	32	;' '
   495  0044  3420               	retlw	32	;' '
   496  0045  3400               	retlw	0
   497  0046                     STR_3:
   498  0046  3454               	retlw	84	;'T'
   499  0047  3452               	retlw	82	;'R'
   500  0048  3455               	retlw	85	;'U'
   501  0049  344F               	retlw	79	;'O'
   502  004A  344E               	retlw	78	;'N'
   503  004B  3447               	retlw	71	;'G'
   504  004C  3420               	retlw	32	;' '
   505  004D  3444               	retlw	68	;'D'
   506  004E  3455               	retlw	85	;'U'
   507  004F  3443               	retlw	67	;'C'
   508  0050  3420               	retlw	32	;' '
   509  0051  3454               	retlw	84	;'T'
   510  0052  3448               	retlw	72	;'H'
   511  0053  3441               	retlw	65	;'A'
   512  0054  344E               	retlw	78	;'N'
   513  0055  3447               	retlw	71	;'G'
   514  0056  3400               	retlw	0
   515  0057                     STR_2:
   516  0057  3425               	retlw	37	;'%'
   517  0058  3463               	retlw	99	;'c'
   518  0059  3400               	retlw	0
   519  005A                     STR_4:
   520  005A  3425               	retlw	37	;'%'
   521  005B  3475               	retlw	117	;'u'
   522  005C  3400               	retlw	0
   523                           
   524                           	psect	cinit
   525  07D8                     start_initialization:	
   526                           ; #config settings
   527                           
   528  07D8                     __initialization:
   529                           
   530                           ; Initialize objects allocated to BANK3
   531  07D8  1783               	bsf	3,7	;select IRP bank2
   532  07D9  30D0               	movlw	low (__pdataBANK3+64)
   533  07DA  00FD               	movwf	btemp+-1
   534  07DB  3004               	movlw	high __pidataBANK3
   535  07DC  00FE               	movwf	btemp
   536  07DD  309F               	movlw	low __pidataBANK3
   537  07DE  00FF               	movwf	btemp+1
   538  07DF  3090               	movlw	low __pdataBANK3
   539  07E0  0084               	movwf	4
   540  07E1  120A  118A  23FA  120A  118A  	fcall	init_ram0
   541                           
   542                           ; Initialize objects allocated to BANK1
   543  07E6  1383               	bcf	3,7	;select IRP bank0
   544  07E7  30C7               	movlw	low (__pdataBANK1+39)
   545  07E8  00FD               	movwf	btemp+-1
   546  07E9  3004               	movlw	high __pidataBANK1
   547  07EA  00FE               	movwf	btemp
   548  07EB  3009               	movlw	low __pidataBANK1
   549  07EC  00FF               	movwf	btemp+1
   550  07ED  30A0               	movlw	low __pdataBANK1
   551  07EE  0084               	movwf	4
   552  07EF  120A  118A  23FA  120A  118A  	fcall	init_ram0
   553                           
   554                           ; Clear objects allocated to BANK0
   555  07F4  3020               	movlw	low __pbssBANK0
   556  07F5  0084               	movwf	4
   557  07F6  3039               	movlw	low (__pbssBANK0+25)
   558  07F7  120A  118A  23EE  120A  118A  	fcall	clear_ram0
   559  07FC                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  07FC                     __end_of__initialization:
   563  07FC  0183               	clrf	3
   564  07FD  120A  118A  2E14   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssBANK0
   567  0020                     __pbssBANK0:
   568  0020                     LCDWriteInt@F1326:
   569  0020                     	ds	5
   570  0025                     _p:
   571  0025                     	ds	20
   572                           
   573                           	psect	dataBANK1
   574  00A0                     __pdataBANK1:
   575  00A0                     _chu:
   576  00A0                     	ds	39
   577                           
   578                           	psect	dataBANK3
   579  0190                     __pdataBANK3:
   580  0190                     ___cgram:
   581  0190                     	ds	64
   582                           
   583                           	psect	inittext
   584  03F6                     init_fetch0:	
   585                           ;	Called with low address in FSR and high address in W
   586                           
   587  03F6  087E               	movf	btemp,w
   588  03F7  008A               	movwf	10
   589  03F8  087F               	movf	btemp+1,w
   590  03F9  0082               	movwf	2
   591  03FA                     init_ram0:	
   592                           ;Called with:
   593                           ;	high address of idata address in btemp 
   594                           ;	low address of idata address in btemp+1 
   595                           ;	low address of data in FSR
   596                           ;	high address + 1 of data in btemp-1
   597                           
   598  03FA  120A  118A  23F6  120A  118A  	fcall	init_fetch0
   599  03FF  0080               	movwf	0
   600  0400  0A84               	incf	4,f
   601  0401  0804               	movf	4,w
   602  0402  067D               	xorwf	btemp+-1,w
   603  0403  1903               	btfsc	3,2
   604  0404  3400               	retlw	0
   605  0405  0AFF               	incf	btemp+1,f
   606  0406  1903               	btfsc	3,2
   607  0407  0AFE               	incf	btemp,f
   608  0408  2BFA               	goto	init_ram0
   609                           
   610                           	psect	clrtext
   611  03EE                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615  03EE  0064               	clrwdt	;clear the watchdog before getting into this loop
   616  03EF                     clrloop0:
   617  03EF  0180               	clrf	0	;clear RAM location pointed to by FSR
   618  03F0  0A84               	incf	4,f	;increment pointer
   619  03F1  0604               	xorwf	4,w	;XOR with final address
   620  03F2  1903               	btfsc	3,2	;have we reached the end yet?
   621  03F3  3400               	retlw	0	;all done for this memory range, return
   622  03F4  0604               	xorwf	4,w	;XOR again to restore value
   623  03F5  2BEF               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackCOMMON
   626  0070                     __pcstackCOMMON:
   627  0070                     ?_LCDBusyLoop:
   628  0070                     ??_LCDBusyLoop:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_LCDInit:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_main:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?___lwdiv:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ___lwdiv@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0070                     	ds	2
   646  0072                     LCDBusyLoop@busy:
   647  0072                     ___lwdiv@dividend:	
   648                           ; 1 bytes @ 0x2
   649                           
   650                           
   651                           ; 2 bytes @ 0x2
   652  0072                     	ds	1
   653  0073                     LCDBusyLoop@temp:
   654                           
   655                           ; 1 bytes @ 0x3
   656  0073                     	ds	1
   657  0074                     ??___lwdiv:
   658  0074                     LCDBusyLoop@status:	
   659                           ; 1 bytes @ 0x4
   660                           
   661                           
   662                           ; 1 bytes @ 0x4
   663  0074                     	ds	1
   664  0075                     ?_LCDByte:
   665  0075                     LCDByte@isdata:	
   666                           ; 1 bytes @ 0x5
   667                           
   668  0075                     ___lwdiv@quotient:	
   669                           ; 1 bytes @ 0x5
   670                           
   671                           
   672                           ; 2 bytes @ 0x5
   673  0075                     	ds	1
   674  0076                     ??_LCDByte:
   675                           
   676                           ; 1 bytes @ 0x6
   677  0076                     	ds	1
   678  0077                     ___lwdiv@counter:
   679                           
   680                           ; 1 bytes @ 0x7
   681  0077                     	ds	1
   682  0078                     ?___lwmod:
   683  0078                     LCDByte@hn:	
   684                           ; 2 bytes @ 0x8
   685                           
   686  0078                     ___lwmod@divisor:	
   687                           ; 1 bytes @ 0x8
   688                           
   689                           
   690                           ; 2 bytes @ 0x8
   691  0078                     	ds	1
   692  0079                     LCDByte@ln:
   693                           
   694                           ; 1 bytes @ 0x9
   695  0079                     	ds	1
   696  007A                     LCDByte@c:
   697  007A                     ___lwmod@dividend:	
   698                           ; 1 bytes @ 0xA
   699                           
   700                           
   701                           ; 2 bytes @ 0xA
   702  007A                     	ds	1
   703  007B                     LCDByte@temp:
   704                           
   705                           ; 1 bytes @ 0xB
   706  007B                     	ds	1
   707  007C                     ??_LCDInit:
   708  007C                     ?_LCDWriteString:	
   709                           ; 1 bytes @ 0xC
   710                           
   711  007C                     ?_LCDGotoXY:	
   712                           ; 1 bytes @ 0xC
   713                           
   714  007C                     ??___lwmod:	
   715                           ; 1 bytes @ 0xC
   716                           
   717  007C                     LCDGotoXY@y:	
   718                           ; 1 bytes @ 0xC
   719                           
   720  007C                     LCDWriteString@msg:	
   721                           ; 1 bytes @ 0xC
   722                           
   723                           
   724                           ; 2 bytes @ 0xC
   725  007C                     	ds	1
   726  007D                     LCDGotoXY@x:
   727  007D                     ___lwmod@counter:	
   728                           ; 1 bytes @ 0xD
   729                           
   730                           
   731                           ; 1 bytes @ 0xD
   732  007D                     	ds	1
   733                           
   734                           	psect	cstackBANK0
   735  0039                     __pcstackBANK0:
   736  0039                     ??_LCDWriteString:
   737  0039                     ??_LCDGotoXY:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0039                     ?_sprintf:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0039                     LCDInit@style:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0039                     sprintf@f:	
   747                           ; 1 bytes @ 0x0
   748                           
   749                           
   750                           ; 1 bytes @ 0x0
   751  0039                     	ds	1
   752  003A                     LCDInit@__i:
   753  003A                     LCDWriteString@cc:	
   754                           ; 1 bytes @ 0x1
   755                           
   756                           
   757                           ; 1 bytes @ 0x1
   758  003A                     	ds	2
   759  003C                     ??_sprintf:
   760                           
   761                           ; 1 bytes @ 0x3
   762  003C                     	ds	3
   763  003F                     sprintf@flag:
   764                           
   765                           ; 1 bytes @ 0x6
   766  003F                     	ds	1
   767  0040                     sprintf@val:
   768                           
   769                           ; 2 bytes @ 0x7
   770  0040                     	ds	2
   771  0042                     sprintf@prec:
   772                           
   773                           ; 1 bytes @ 0x9
   774  0042                     	ds	1
   775  0043                     sprintf@ap:
   776                           
   777                           ; 1 bytes @ 0xA
   778  0043                     	ds	1
   779  0044                     sprintf@sp:
   780                           
   781                           ; 1 bytes @ 0xB
   782  0044                     	ds	1
   783  0045                     sprintf@c:
   784                           
   785                           ; 1 bytes @ 0xC
   786  0045                     	ds	1
   787  0046                     ??_main:
   788                           
   789                           ; 1 bytes @ 0xD
   790  0046                     	ds	3
   791  0049                     main@i:
   792                           
   793                           ; 1 bytes @ 0x10
   794  0049                     	ds	1
   795                           
   796                           	psect	maintext
   797  0614                     __pmaintext:	
   798 ;;
   799 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   800 ;;
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 32 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  i               1   16[BANK0 ] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : B00/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0       1       0       0       0
   819 ;;      Temps:          0       3       0       0       0
   820 ;;      Totals:         0       4       0       0       0
   821 ;;Total ram usage:        4 bytes
   822 ;; Hardware stack levels required when called: 3
   823 ;; This function calls:
   824 ;;		_LCDByte
   825 ;;		_LCDGotoXY
   826 ;;		_LCDInit
   827 ;;		_LCDWriteString
   828 ;;		_sprintf
   829 ;; This function is called by:
   830 ;;		Startup code after reset
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834  0614                     _main:	
   835                           ;psect for function _main
   836                           
   837  0614                     l1464:	
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   840                           
   841                           
   842                           ;main.c: 37: 
   843  0614  3000               	movlw	0
   844  0615  120A  118A  25B5  120A  118A  	fcall	_LCDInit
   845  061A                     l1466:
   846  061A  1283               	bcf	3,5	;RP0=0, select bank0
   847  061B  1303               	bcf	3,6	;RP1=0, select bank0
   848  061C  01C9               	clrf	main@i
   849  061D                     l1472:
   850  061D  01FC               	clrf	LCDGotoXY@y
   851  061E  3000               	movlw	0
   852  061F  120A  118A  2430  120A  118A  	fcall	_LCDGotoXY
   853  0624                     l1474:
   854  0624  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   855  0625  00FC               	movwf	LCDWriteString@msg
   856  0626  3080               	movlw	128
   857  0627  00FD               	movwf	LCDWriteString@msg+1
   858  0628  120A  118A  2679  120A  118A  	fcall	_LCDWriteString
   859  062D                     l1476:
   860  062D  01FC               	clrf	LCDGotoXY@y
   861  062E  0AFC               	incf	LCDGotoXY@y,f
   862  062F  1283               	bcf	3,5	;RP0=0, select bank0
   863  0630  1303               	bcf	3,6	;RP1=0, select bank0
   864  0631  0849               	movf	main@i,w
   865  0632  120A  118A  2430  120A  118A  	fcall	_LCDGotoXY
   866  0637  3048               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   867  0638  1283               	bcf	3,5	;RP0=0, select bank0
   868  0639  1303               	bcf	3,6	;RP1=0, select bank0
   869  063A  00C6               	movwf	??_main
   870  063B  0846               	movf	??_main,w
   871  063C  00B9               	movwf	sprintf@f
   872  063D  0849               	movf	main@i,w
   873  063E  00C7               	movwf	??_main+1
   874  063F  01C8               	clrf	??_main+2
   875  0640  0847               	movf	??_main+1,w
   876  0641  00BA               	movwf	?_sprintf+1
   877  0642  0848               	movf	??_main+2,w
   878  0643  00BB               	movwf	?_sprintf+2
   879  0644  3025               	movlw	(low (_p| 0))& (0+255)
   880  0645  120A  118A  26F1  120A  118A  	fcall	_sprintf
   881  064A  3025               	movlw	(low (_p| 0))& (0+255)
   882  064B  00FC               	movwf	LCDWriteString@msg
   883  064C  3000               	movlw	0
   884  064D  00FD               	movwf	LCDWriteString@msg+1
   885  064E  120A  118A  2679  120A  118A  	fcall	_LCDWriteString
   886  0653                     l1478:
   887  0653  3002               	movlw	2
   888  0654  1283               	bcf	3,5	;RP0=0, select bank0
   889  0655  1303               	bcf	3,6	;RP1=0, select bank0
   890  0656  00C8               	movwf	??_main+2
   891  0657  3004               	movlw	4
   892  0658  00C7               	movwf	??_main+1
   893  0659  30B9               	movlw	185
   894  065A  00C6               	movwf	??_main
   895  065B                     u947:
   896  065B  0BC6               	decfsz	??_main,f
   897  065C  2E5B               	goto	u947
   898  065D  0BC7               	decfsz	??_main+1,f
   899  065E  2E5B               	goto	u947
   900  065F  0BC8               	decfsz	??_main+2,f
   901  0660  2E5B               	goto	u947
   902  0661  2E62               	nop2
   903  0662                     l1480:
   904  0662  01F5               	clrf	LCDByte@isdata
   905  0663  3001               	movlw	1
   906  0664  120A  118A  24DF  120A  118A  	fcall	_LCDByte
   907  0669                     l1482:
   908  0669  3001               	movlw	1
   909  066A  1283               	bcf	3,5	;RP0=0, select bank0
   910  066B  1303               	bcf	3,6	;RP1=0, select bank0
   911  066C  00C6               	movwf	??_main
   912  066D  0846               	movf	??_main,w
   913  066E  07C9               	addwf	main@i,f
   914  066F                     l1484:
   915  066F  300A               	movlw	10
   916  0670  0249               	subwf	main@i,w
   917  0671  1C03               	skipc
   918  0672  2E74               	goto	u741
   919  0673  2E75               	goto	u740
   920  0674                     u741:
   921  0674  2E1D               	goto	l1472
   922  0675                     u740:
   923  0675  2E1A               	goto	l1466
   924  0676  120A  118A  2800   	ljmp	start
   925  0679                     __end_of_main:
   926                           
   927                           	psect	text1
   928  06F1                     __ptext1:	
   929 ;; *************** function _sprintf *****************
   930 ;; Defined at:
   931 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  sp              1    wreg     PTR unsigned char 
   934 ;;		 -> p(20), 
   935 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   936 ;;		 -> STR_4(3), STR_2(3), 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   939 ;;		 -> p(20), 
   940 ;;  tmpval          4    0        struct .
   941 ;;  val             2    7[BANK0 ] unsigned int 
   942 ;;  cp              2    0        PTR const unsigned char 
   943 ;;  len             2    0        unsigned int 
   944 ;;  c               1   12[BANK0 ] unsigned char 
   945 ;;  ap              1   10[BANK0 ] PTR void [1]
   946 ;;		 -> ?_sprintf(2), 
   947 ;;  prec            1    9[BANK0 ] char 
   948 ;;  flag            1    6[BANK0 ] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  2    0[BANK0 ] int 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       3       0       0       0
   959 ;;      Locals:         0       7       0       0       0
   960 ;;      Temps:          0       3       0       0       0
   961 ;;      Totals:         0      13       0       0       0
   962 ;;Total ram usage:       13 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 1
   965 ;; This function calls:
   966 ;;		___lwdiv
   967 ;;		___lwmod
   968 ;; This function is called by:
   969 ;;		_main
   970 ;;		_leftToRight
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974  06F1                     _sprintf:	
   975                           ;psect for function _sprintf
   976                           
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   980                           ;sprintf@sp stored from wreg
   981  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   982  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   983  06F3  00C4               	movwf	sprintf@sp
   984  06F4                     l1340:
   985                           
   986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   987  06F4  303A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   988  06F5  00BC               	movwf	??_sprintf
   989  06F6  083C               	movf	??_sprintf,w
   990  06F7  00C3               	movwf	sprintf@ap
   991                           
   992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   993  06F8  2FC1               	goto	l1388
   994  06F9                     l1342:
   995                           
   996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   997  06F9  3025               	movlw	37
   998  06FA  0645               	xorwf	sprintf@c,w
   999  06FB  1903               	btfsc	3,2
  1000  06FC  2EFE               	goto	u611
  1001  06FD  2EFF               	goto	u610
  1002  06FE                     u611:
  1003  06FE  2F0B               	goto	l1348
  1004  06FF                     u610:
  1005  06FF                     l1344:
  1006                           
  1007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1008  06FF  0845               	movf	sprintf@c,w
  1009  0700  00BC               	movwf	??_sprintf
  1010  0701  0844               	movf	sprintf@sp,w
  1011  0702  0084               	movwf	4
  1012  0703  083C               	movf	??_sprintf,w
  1013  0704  1383               	bcf	3,7	;select IRP bank0
  1014  0705  0080               	movwf	0
  1015  0706                     l1346:
  1016  0706  3001               	movlw	1
  1017  0707  00BC               	movwf	??_sprintf
  1018  0708  083C               	movf	??_sprintf,w
  1019  0709  07C4               	addwf	sprintf@sp,f
  1020                           
  1021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1022  070A  2FC1               	goto	l1388
  1023  070B                     l1348:
  1024                           
  1025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1026  070B  01BF               	clrf	sprintf@flag
  1027                           
  1028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1029  070C  2F29               	goto	l1360
  1030  070D                     l1350:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1033  070D  0843               	movf	sprintf@ap,w
  1034  070E  0084               	movwf	4
  1035  070F  1383               	bcf	3,7	;select IRP bank0
  1036  0710  0800               	movf	0,w
  1037  0711  00BC               	movwf	??_sprintf
  1038  0712  083C               	movf	??_sprintf,w
  1039  0713  00C5               	movwf	sprintf@c
  1040  0714                     l1352:
  1041  0714  3002               	movlw	2
  1042  0715  00BC               	movwf	??_sprintf
  1043  0716  083C               	movf	??_sprintf,w
  1044  0717  07C3               	addwf	sprintf@ap,f
  1045  0718                     l1354:
  1046                           
  1047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 835:    ((*sp++ =
      +                           (c)));
  1048  0718  0845               	movf	sprintf@c,w
  1049  0719  00BC               	movwf	??_sprintf
  1050  071A  0844               	movf	sprintf@sp,w
  1051  071B  0084               	movwf	4
  1052  071C  083C               	movf	??_sprintf,w
  1053  071D  1383               	bcf	3,7	;select IRP bank0
  1054  071E  0080               	movwf	0
  1055  071F  3001               	movlw	1
  1056  0720  00BC               	movwf	??_sprintf
  1057  0721  083C               	movf	??_sprintf,w
  1058  0722  07C4               	addwf	sprintf@sp,f
  1059                           
  1060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 836:    continue;
  1061  0723  2FC1               	goto	l1388
  1062  0724                     l1356:
  1063                           
  1064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1065  0724  30C0               	movlw	192
  1066  0725  00BC               	movwf	??_sprintf
  1067  0726  083C               	movf	??_sprintf,w
  1068  0727  04BF               	iorwf	sprintf@flag,f
  1069                           
  1070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 845:    break;
  1071  0728  2F46               	goto	l1362
  1072  0729                     l1360:
  1073  0729  3001               	movlw	1
  1074  072A  07B9               	addwf	sprintf@f,f
  1075  072B  30FF               	movlw	-1
  1076  072C  0739               	addwf	sprintf@f,w
  1077  072D  0084               	movwf	4
  1078  072E  120A  118A  200D  120A  118A  	fcall	stringdir
  1079  0733  00C5               	movwf	sprintf@c
  1080  0734  00BC               	movwf	??_sprintf
  1081  0735  01BD               	clrf	??_sprintf+1
  1082                           
  1083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 1, Range of values is 0 to 0
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte            4     3 (average)
  1089                           ; direct_byte           11     8 (fixed)
  1090                           ; jumptable            260     6 (fixed)
  1091                           ;	Chosen strategy is simple_byte
  1092  0736  083D               	movf	??_sprintf+1,w
  1093  0737  3A00               	xorlw	0	; case 0
  1094  0738  1903               	skipnz
  1095  0739  2F3B               	goto	l1618
  1096  073A  2F18               	goto	l1354
  1097  073B                     l1618:
  1098                           
  1099                           ; Switch size 1, requested type "simple"
  1100                           ; Number of cases is 3, Range of values is 0 to 117
  1101                           ; switch strategies available:
  1102                           ; Name         Instructions Cycles
  1103                           ; simple_byte           10     6 (average)
  1104                           ; jumptable            260     6 (fixed)
  1105                           ;	Chosen strategy is simple_byte
  1106  073B  083C               	movf	??_sprintf,w
  1107  073C  3A00               	xorlw	0	; case 0
  1108  073D  1903               	skipnz
  1109  073E  2FD3               	goto	l1390
  1110  073F  3A63               	xorlw	99	; case 99
  1111  0740  1903               	skipnz
  1112  0741  2F0D               	goto	l1350
  1113  0742  3A16               	xorlw	22	; case 117
  1114  0743  1903               	skipnz
  1115  0744  2F24               	goto	l1356
  1116  0745  2F18               	goto	l1354
  1117  0746                     l1362:
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1120  0746  0843               	movf	sprintf@ap,w
  1121  0747  0084               	movwf	4
  1122  0748  1383               	bcf	3,7	;select IRP bank0
  1123  0749  0800               	movf	0,w
  1124  074A  00C0               	movwf	sprintf@val
  1125  074B  0A84               	incf	4,f
  1126  074C  0800               	movf	0,w
  1127  074D  00C1               	movwf	sprintf@val+1
  1128  074E                     l1364:
  1129  074E  3002               	movlw	2
  1130  074F  00BC               	movwf	??_sprintf
  1131  0750  083C               	movf	??_sprintf,w
  1132  0751  07C3               	addwf	sprintf@ap,f
  1133  0752                     l1366:
  1134                           
  1135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1136  0752  01C5               	clrf	sprintf@c
  1137  0753  0AC5               	incf	sprintf@c,f
  1138  0754                     l1372:
  1139                           
  1140                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1141  0754  0845               	movf	sprintf@c,w
  1142  0755  00BC               	movwf	??_sprintf
  1143  0756  073C               	addwf	??_sprintf,w
  1144  0757  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1145  0758  0084               	movwf	4
  1146  0759  120A  118A  200D  120A  118A  	fcall	stringdir
  1147  075E  00BD               	movwf	??_sprintf+1
  1148  075F  120A  118A  200D  120A  118A  	fcall	stringdir
  1149  0764  00BE               	movwf	??_sprintf+2
  1150  0765  083E               	movf	??_sprintf+2,w
  1151  0766  0241               	subwf	sprintf@val+1,w
  1152  0767  1D03               	skipz
  1153  0768  2F6B               	goto	u625
  1154  0769  083D               	movf	??_sprintf+1,w
  1155  076A  0240               	subwf	sprintf@val,w
  1156  076B                     u625:
  1157  076B  1803               	skipnc
  1158  076C  2F6E               	goto	u621
  1159  076D  2F6F               	goto	u620
  1160  076E                     u621:
  1161  076E  2F70               	goto	l1376
  1162  076F                     u620:
  1163  076F  2F7A               	goto	l1378
  1164  0770                     l1376:
  1165  0770  3001               	movlw	1
  1166  0771  00BC               	movwf	??_sprintf
  1167  0772  083C               	movf	??_sprintf,w
  1168  0773  07C5               	addwf	sprintf@c,f
  1169  0774  3005               	movlw	5
  1170  0775  0645               	xorwf	sprintf@c,w
  1171  0776  1D03               	btfss	3,2
  1172  0777  2F79               	goto	u631
  1173  0778  2F7A               	goto	u630
  1174  0779                     u631:
  1175  0779  2F54               	goto	l1372
  1176  077A                     u630:
  1177  077A                     l1378:
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1180  077A  0845               	movf	sprintf@c,w
  1181  077B  00BC               	movwf	??_sprintf
  1182  077C  083C               	movf	??_sprintf,w
  1183  077D  00C2               	movwf	sprintf@prec
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1186  077E  2FB8               	goto	l1386
  1187  077F                     l1380:
  1188                           
  1189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1190  077F  300A               	movlw	10
  1191  0780  00F8               	movwf	___lwmod@divisor
  1192  0781  3000               	movlw	0
  1193  0782  00F9               	movwf	___lwmod@divisor+1
  1194  0783  0842               	movf	sprintf@prec,w
  1195  0784  00BC               	movwf	??_sprintf
  1196  0785  073C               	addwf	??_sprintf,w
  1197  0786  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1198  0787  0084               	movwf	4
  1199  0788  120A  118A  200D  120A  118A  	fcall	stringdir
  1200  078D  00F0               	movwf	___lwdiv@divisor
  1201  078E  120A  118A  200D  120A  118A  	fcall	stringdir
  1202  0793  00F1               	movwf	___lwdiv@divisor+1
  1203  0794  0841               	movf	sprintf@val+1,w
  1204  0795  00F3               	movwf	___lwdiv@dividend+1
  1205  0796  0840               	movf	sprintf@val,w
  1206  0797  00F2               	movwf	___lwdiv@dividend
  1207  0798  120A  118A  2523  120A  118A  	fcall	___lwdiv
  1208  079D  0871               	movf	?___lwdiv+1,w
  1209  079E  00FB               	movwf	___lwmod@dividend+1
  1210  079F  0870               	movf	?___lwdiv,w
  1211  07A0  00FA               	movwf	___lwmod@dividend
  1212  07A1  120A  118A  2465  120A  118A  	fcall	___lwmod
  1213  07A6  0878               	movf	?___lwmod,w
  1214  07A7  3E30               	addlw	48
  1215  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1216  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1217  07AA  00BD               	movwf	??_sprintf+1
  1218  07AB  083D               	movf	??_sprintf+1,w
  1219  07AC  00C5               	movwf	sprintf@c
  1220  07AD                     l1382:
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1223  07AD  0845               	movf	sprintf@c,w
  1224  07AE  00BC               	movwf	??_sprintf
  1225  07AF  0844               	movf	sprintf@sp,w
  1226  07B0  0084               	movwf	4
  1227  07B1  083C               	movf	??_sprintf,w
  1228  07B2  1383               	bcf	3,7	;select IRP bank0
  1229  07B3  0080               	movwf	0
  1230  07B4                     l1384:
  1231  07B4  3001               	movlw	1
  1232  07B5  00BC               	movwf	??_sprintf
  1233  07B6  083C               	movf	??_sprintf,w
  1234  07B7  07C4               	addwf	sprintf@sp,f
  1235  07B8                     l1386:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1238  07B8  30FF               	movlw	255
  1239  07B9  00BC               	movwf	??_sprintf
  1240  07BA  083C               	movf	??_sprintf,w
  1241  07BB  07C2               	addwf	sprintf@prec,f
  1242  07BC  0A42               	incf	sprintf@prec,w
  1243  07BD  1D03               	btfss	3,2
  1244  07BE  2FC0               	goto	u641
  1245  07BF  2FC1               	goto	u640
  1246  07C0                     u641:
  1247  07C0  2F7F               	goto	l1380
  1248  07C1                     u640:
  1249  07C1                     l1388:
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1252  07C1  3001               	movlw	1
  1253  07C2  07B9               	addwf	sprintf@f,f
  1254  07C3  30FF               	movlw	-1
  1255  07C4  0739               	addwf	sprintf@f,w
  1256  07C5  0084               	movwf	4
  1257  07C6  120A  118A  200D  120A  118A  	fcall	stringdir
  1258  07CB  00BC               	movwf	??_sprintf
  1259  07CC  083C               	movf	??_sprintf,w
  1260  07CD  00C5               	movwf	sprintf@c
  1261  07CE  0845               	movf	sprintf@c,w
  1262  07CF  1D03               	btfss	3,2
  1263  07D0  2FD2               	goto	u651
  1264  07D1  2FD3               	goto	u650
  1265  07D2                     u651:
  1266  07D2  2EF9               	goto	l1342
  1267  07D3                     u650:
  1268  07D3                     l1390:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1271  07D3  0844               	movf	sprintf@sp,w
  1272  07D4  0084               	movwf	4
  1273  07D5  1383               	bcf	3,7	;select IRP bank0
  1274  07D6  0180               	clrf	0
  1275  07D7                     l210:
  1276  07D7  0008               	return
  1277  07D8                     __end_of_sprintf:
  1278                           
  1279                           	psect	text2
  1280  0465                     __ptext2:	
  1281 ;; *************** function ___lwmod *****************
  1282 ;; Defined at:
  1283 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  divisor         2    8[COMMON] unsigned int 
  1286 ;;  dividend        2   10[COMMON] unsigned int 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  counter         1   13[COMMON] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  2    8[COMMON] unsigned int 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         4       0       0       0       0
  1299 ;;      Locals:         1       0       0       0       0
  1300 ;;      Temps:          1       0       0       0       0
  1301 ;;      Totals:         6       0       0       0       0
  1302 ;;Total ram usage:        6 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_sprintf
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311  0465                     ___lwmod:	
  1312                           ;psect for function ___lwmod
  1313                           
  1314  0465                     l1224:	
  1315                           ;incstack = 0
  1316                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1317                           
  1318  0465  0878               	movf	___lwmod@divisor,w
  1319  0466  0479               	iorwf	___lwmod@divisor+1,w
  1320  0467  1903               	btfsc	3,2
  1321  0468  2C6A               	goto	u491
  1322  0469  2C6B               	goto	u490
  1323  046A                     u491:
  1324  046A  2C9A               	goto	l1242
  1325  046B                     u490:
  1326  046B                     l1226:
  1327  046B  01FD               	clrf	___lwmod@counter
  1328  046C  0AFD               	incf	___lwmod@counter,f
  1329  046D  2C79               	goto	l1232
  1330  046E                     l1228:
  1331  046E  3001               	movlw	1
  1332  046F                     u505:
  1333  046F  1003               	clrc
  1334  0470  0DF8               	rlf	___lwmod@divisor,f
  1335  0471  0DF9               	rlf	___lwmod@divisor+1,f
  1336  0472  3EFF               	addlw	-1
  1337  0473  1D03               	skipz
  1338  0474  2C6F               	goto	u505
  1339  0475                     l1230:
  1340  0475  3001               	movlw	1
  1341  0476  00FC               	movwf	??___lwmod
  1342  0477  087C               	movf	??___lwmod,w
  1343  0478  07FD               	addwf	___lwmod@counter,f
  1344  0479                     l1232:
  1345  0479  1FF9               	btfss	___lwmod@divisor+1,7
  1346  047A  2C7C               	goto	u511
  1347  047B  2C7D               	goto	u510
  1348  047C                     u511:
  1349  047C  2C6E               	goto	l1228
  1350  047D                     u510:
  1351  047D                     l1234:
  1352  047D  0879               	movf	___lwmod@divisor+1,w
  1353  047E  027B               	subwf	___lwmod@dividend+1,w
  1354  047F  1D03               	skipz
  1355  0480  2C83               	goto	u525
  1356  0481  0878               	movf	___lwmod@divisor,w
  1357  0482  027A               	subwf	___lwmod@dividend,w
  1358  0483                     u525:
  1359  0483  1C03               	skipc
  1360  0484  2C86               	goto	u521
  1361  0485  2C87               	goto	u520
  1362  0486                     u521:
  1363  0486  2C8D               	goto	l1238
  1364  0487                     u520:
  1365  0487                     l1236:
  1366  0487  0878               	movf	___lwmod@divisor,w
  1367  0488  02FA               	subwf	___lwmod@dividend,f
  1368  0489  0879               	movf	___lwmod@divisor+1,w
  1369  048A  1C03               	skipc
  1370  048B  03FB               	decf	___lwmod@dividend+1,f
  1371  048C  02FB               	subwf	___lwmod@dividend+1,f
  1372  048D                     l1238:
  1373  048D  3001               	movlw	1
  1374  048E                     u535:
  1375  048E  1003               	clrc
  1376  048F  0CF9               	rrf	___lwmod@divisor+1,f
  1377  0490  0CF8               	rrf	___lwmod@divisor,f
  1378  0491  3EFF               	addlw	-1
  1379  0492  1D03               	skipz
  1380  0493  2C8E               	goto	u535
  1381  0494                     l1240:
  1382  0494  3001               	movlw	1
  1383  0495  02FD               	subwf	___lwmod@counter,f
  1384  0496  1D03               	btfss	3,2
  1385  0497  2C99               	goto	u541
  1386  0498  2C9A               	goto	u540
  1387  0499                     u541:
  1388  0499  2C7D               	goto	l1234
  1389  049A                     u540:
  1390  049A                     l1242:
  1391  049A  087B               	movf	___lwmod@dividend+1,w
  1392  049B  00F9               	movwf	?___lwmod+1
  1393  049C  087A               	movf	___lwmod@dividend,w
  1394  049D  00F8               	movwf	?___lwmod
  1395  049E                     l496:
  1396  049E  0008               	return
  1397  049F                     __end_of___lwmod:
  1398                           
  1399                           	psect	text3
  1400  0523                     __ptext3:	
  1401 ;; *************** function ___lwdiv *****************
  1402 ;; Defined at:
  1403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  divisor         2    0[COMMON] unsigned int 
  1406 ;;  dividend        2    2[COMMON] unsigned int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  quotient        2    5[COMMON] unsigned int 
  1409 ;;  counter         1    7[COMMON] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  2    0[COMMON] unsigned int 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         4       0       0       0       0
  1420 ;;      Locals:         3       0       0       0       0
  1421 ;;      Temps:          1       0       0       0       0
  1422 ;;      Totals:         8       0       0       0       0
  1423 ;;Total ram usage:        8 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_sprintf
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432  0523                     ___lwdiv:	
  1433                           ;psect for function ___lwdiv
  1434                           
  1435  0523                     l1198:	
  1436                           ;incstack = 0
  1437                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1438                           
  1439  0523  01F5               	clrf	___lwdiv@quotient
  1440  0524  01F6               	clrf	___lwdiv@quotient+1
  1441  0525                     l1200:
  1442  0525  0870               	movf	___lwdiv@divisor,w
  1443  0526  0471               	iorwf	___lwdiv@divisor+1,w
  1444  0527  1903               	btfsc	3,2
  1445  0528  2D2A               	goto	u421
  1446  0529  2D2B               	goto	u420
  1447  052A                     u421:
  1448  052A  2D62               	goto	l1220
  1449  052B                     u420:
  1450  052B                     l1202:
  1451  052B  01F7               	clrf	___lwdiv@counter
  1452  052C  0AF7               	incf	___lwdiv@counter,f
  1453  052D  2D39               	goto	l1208
  1454  052E                     l1204:
  1455  052E  3001               	movlw	1
  1456  052F                     u435:
  1457  052F  1003               	clrc
  1458  0530  0DF0               	rlf	___lwdiv@divisor,f
  1459  0531  0DF1               	rlf	___lwdiv@divisor+1,f
  1460  0532  3EFF               	addlw	-1
  1461  0533  1D03               	skipz
  1462  0534  2D2F               	goto	u435
  1463  0535                     l1206:
  1464  0535  3001               	movlw	1
  1465  0536  00F4               	movwf	??___lwdiv
  1466  0537  0874               	movf	??___lwdiv,w
  1467  0538  07F7               	addwf	___lwdiv@counter,f
  1468  0539                     l1208:
  1469  0539  1FF1               	btfss	___lwdiv@divisor+1,7
  1470  053A  2D3C               	goto	u441
  1471  053B  2D3D               	goto	u440
  1472  053C                     u441:
  1473  053C  2D2E               	goto	l1204
  1474  053D                     u440:
  1475  053D                     l1210:
  1476  053D  3001               	movlw	1
  1477  053E                     u455:
  1478  053E  1003               	clrc
  1479  053F  0DF5               	rlf	___lwdiv@quotient,f
  1480  0540  0DF6               	rlf	___lwdiv@quotient+1,f
  1481  0541  3EFF               	addlw	-1
  1482  0542  1D03               	skipz
  1483  0543  2D3E               	goto	u455
  1484  0544  0871               	movf	___lwdiv@divisor+1,w
  1485  0545  0273               	subwf	___lwdiv@dividend+1,w
  1486  0546  1D03               	skipz
  1487  0547  2D4A               	goto	u465
  1488  0548  0870               	movf	___lwdiv@divisor,w
  1489  0549  0272               	subwf	___lwdiv@dividend,w
  1490  054A                     u465:
  1491  054A  1C03               	skipc
  1492  054B  2D4D               	goto	u461
  1493  054C  2D4E               	goto	u460
  1494  054D                     u461:
  1495  054D  2D55               	goto	l1216
  1496  054E                     u460:
  1497  054E                     l1212:
  1498  054E  0870               	movf	___lwdiv@divisor,w
  1499  054F  02F2               	subwf	___lwdiv@dividend,f
  1500  0550  0871               	movf	___lwdiv@divisor+1,w
  1501  0551  1C03               	skipc
  1502  0552  03F3               	decf	___lwdiv@dividend+1,f
  1503  0553  02F3               	subwf	___lwdiv@dividend+1,f
  1504  0554                     l1214:
  1505  0554  1475               	bsf	___lwdiv@quotient,0
  1506  0555                     l1216:
  1507  0555  3001               	movlw	1
  1508  0556                     u475:
  1509  0556  1003               	clrc
  1510  0557  0CF1               	rrf	___lwdiv@divisor+1,f
  1511  0558  0CF0               	rrf	___lwdiv@divisor,f
  1512  0559  3EFF               	addlw	-1
  1513  055A  1D03               	skipz
  1514  055B  2D56               	goto	u475
  1515  055C                     l1218:
  1516  055C  3001               	movlw	1
  1517  055D  02F7               	subwf	___lwdiv@counter,f
  1518  055E  1D03               	btfss	3,2
  1519  055F  2D61               	goto	u481
  1520  0560  2D62               	goto	u480
  1521  0561                     u481:
  1522  0561  2D3D               	goto	l1210
  1523  0562                     u480:
  1524  0562                     l1220:
  1525  0562  0876               	movf	___lwdiv@quotient+1,w
  1526  0563  00F1               	movwf	?___lwdiv+1
  1527  0564  0875               	movf	___lwdiv@quotient,w
  1528  0565  00F0               	movwf	?___lwdiv
  1529  0566                     l486:
  1530  0566  0008               	return
  1531  0567                     __end_of___lwdiv:
  1532                           
  1533                           	psect	text4
  1534  0679                     __ptext4:	
  1535 ;; *************** function _LCDWriteString *****************
  1536 ;; Defined at:
  1537 ;;		line 251 in file "lcd_hd44780_pic16.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  msg             2   12[COMMON] PTR const unsigned char 
  1540 ;;		 -> STR_3(17), p(20), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  cc              1    1[BANK0 ] char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         2       0       0       0       0
  1553 ;;      Locals:         0       1       0       0       0
  1554 ;;      Temps:          0       1       0       0       0
  1555 ;;      Totals:         2       2       0       0       0
  1556 ;;Total ram usage:        4 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 2
  1559 ;; This function calls:
  1560 ;;		_LCDByte
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;;		_leftToRight
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567  0679                     _LCDWriteString:	
  1568                           ;psect for function _LCDWriteString
  1569                           
  1570  0679                     l1296:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1573                           
  1574                           
  1575                           ;lcd_hd44780_pic16.c: 251: void LCDWriteString(const char *msg);lcd_hd44780_pic16.c: 252
      +                          : {;lcd_hd44780_pic16.c: 281:  while(*msg!='\0')
  1576  0679  2EE0               	goto	l1318
  1577  067A                     l1298:
  1578                           
  1579                           ;lcd_hd44780_pic16.c: 282:  {;lcd_hd44780_pic16.c: 284:  if(*msg=='%')
  1580  067A  087D               	movf	LCDWriteString@msg+1,w
  1581  067B  00FF               	movwf	btemp+1
  1582  067C  087C               	movf	LCDWriteString@msg,w
  1583  067D  0084               	movwf	4
  1584  067E  120A  118A  2003  120A  118A  	fcall	stringtab
  1585  0683  3A25               	xorlw	37
  1586  0684  1D03               	skipz
  1587  0685  2E87               	goto	u561
  1588  0686  2E88               	goto	u560
  1589  0687                     u561:
  1590  0687  2ECA               	goto	l1314
  1591  0688                     u560:
  1592  0688                     l1300:
  1593                           
  1594                           ;lcd_hd44780_pic16.c: 285:  {;lcd_hd44780_pic16.c: 286:   msg++;
  1595  0688  3001               	movlw	1
  1596  0689  07FC               	addwf	LCDWriteString@msg,f
  1597  068A  1803               	skipnc
  1598  068B  0AFD               	incf	LCDWriteString@msg+1,f
  1599  068C  3000               	movlw	0
  1600  068D  07FD               	addwf	LCDWriteString@msg+1,f
  1601  068E                     l1302:
  1602                           
  1603                           ;lcd_hd44780_pic16.c: 287:   int8_t cc=*msg-'0';
  1604  068E  087D               	movf	LCDWriteString@msg+1,w
  1605  068F  00FF               	movwf	btemp+1
  1606  0690  087C               	movf	LCDWriteString@msg,w
  1607  0691  0084               	movwf	4
  1608  0692  120A  118A  2003  120A  118A  	fcall	stringtab
  1609  0697  3ED0               	addlw	-48
  1610  0698  00B9               	movwf	??_LCDWriteString
  1611  0699  0839               	movf	??_LCDWriteString,w
  1612  069A  00BA               	movwf	LCDWriteString@cc
  1613  069B                     l1304:
  1614                           
  1615                           ;lcd_hd44780_pic16.c: 289:   if(cc>=0 && cc<=7)
  1616  069B  1BBA               	btfsc	LCDWriteString@cc,7
  1617  069C  2E9E               	goto	u571
  1618  069D  2E9F               	goto	u570
  1619  069E                     u571:
  1620  069E  2EAF               	goto	l1310
  1621  069F                     u570:
  1622  069F                     l1306:
  1623  069F  083A               	movf	LCDWriteString@cc,w
  1624  06A0  3A80               	xorlw	128
  1625  06A1  3E78               	addlw	-136
  1626  06A2  1803               	skipnc
  1627  06A3  2EA5               	goto	u581
  1628  06A4  2EA6               	goto	u580
  1629  06A5                     u581:
  1630  06A5  2EAF               	goto	l1310
  1631  06A6                     u580:
  1632  06A6                     l1308:
  1633                           
  1634                           ;lcd_hd44780_pic16.c: 290:   {;lcd_hd44780_pic16.c: 291:    (LCDByte(cc,1));
  1635  06A6  01F5               	clrf	LCDByte@isdata
  1636  06A7  0AF5               	incf	LCDByte@isdata,f
  1637  06A8  083A               	movf	LCDWriteString@cc,w
  1638  06A9  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1639                           
  1640                           ;lcd_hd44780_pic16.c: 292:   }
  1641  06AE  2EDA               	goto	l1316
  1642  06AF                     l1310:
  1643                           
  1644                           ;lcd_hd44780_pic16.c: 294:   {;lcd_hd44780_pic16.c: 295:    (LCDByte('%',1));
  1645  06AF  01F5               	clrf	LCDByte@isdata
  1646  06B0  0AF5               	incf	LCDByte@isdata,f
  1647  06B1  3025               	movlw	37
  1648  06B2  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1649  06B7                     l1312:
  1650                           
  1651                           ;lcd_hd44780_pic16.c: 296:    (LCDByte(*msg,1));
  1652  06B7  01F5               	clrf	LCDByte@isdata
  1653  06B8  0AF5               	incf	LCDByte@isdata,f
  1654  06B9  087D               	movf	LCDWriteString@msg+1,w
  1655  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1656  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1657  06BC  00FF               	movwf	btemp+1
  1658  06BD  087C               	movf	LCDWriteString@msg,w
  1659  06BE  0084               	movwf	4
  1660  06BF  120A  118A  2003  120A  118A  	fcall	stringtab
  1661  06C4  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1662  06C9  2EDA               	goto	l1316
  1663  06CA                     l1314:
  1664                           
  1665                           ;lcd_hd44780_pic16.c: 300:  {;lcd_hd44780_pic16.c: 301:   (LCDByte(*msg,1));
  1666  06CA  01F5               	clrf	LCDByte@isdata
  1667  06CB  0AF5               	incf	LCDByte@isdata,f
  1668  06CC  087D               	movf	LCDWriteString@msg+1,w
  1669  06CD  00FF               	movwf	btemp+1
  1670  06CE  087C               	movf	LCDWriteString@msg,w
  1671  06CF  0084               	movwf	4
  1672  06D0  120A  118A  2003  120A  118A  	fcall	stringtab
  1673  06D5  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1674  06DA                     l1316:
  1675                           
  1676                           ;lcd_hd44780_pic16.c: 303:  msg++;
  1677  06DA  3001               	movlw	1
  1678  06DB  07FC               	addwf	LCDWriteString@msg,f
  1679  06DC  1803               	skipnc
  1680  06DD  0AFD               	incf	LCDWriteString@msg+1,f
  1681  06DE  3000               	movlw	0
  1682  06DF  07FD               	addwf	LCDWriteString@msg+1,f
  1683  06E0                     l1318:
  1684                           
  1685                           ;lcd_hd44780_pic16.c: 281:  while(*msg!='\0')
  1686  06E0  087D               	movf	LCDWriteString@msg+1,w
  1687  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1688  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1689  06E3  00FF               	movwf	btemp+1
  1690  06E4  087C               	movf	LCDWriteString@msg,w
  1691  06E5  0084               	movwf	4
  1692  06E6  120A  118A  2003  120A  118A  	fcall	stringtab
  1693  06EB  3A00               	xorlw	0
  1694  06EC  1D03               	skipz
  1695  06ED  2EEF               	goto	u591
  1696  06EE  2EF0               	goto	u590
  1697  06EF                     u591:
  1698  06EF  2E7A               	goto	l1298
  1699  06F0                     u590:
  1700  06F0                     l43:
  1701  06F0  0008               	return
  1702  06F1                     __end_of_LCDWriteString:
  1703                           
  1704                           	psect	text5
  1705  05B5                     __ptext5:	
  1706 ;; *************** function _LCDInit *****************
  1707 ;; Defined at:
  1708 ;;		line 193 in file "lcd_hd44780_pic16.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  style           1    wreg     unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  style           1    0[BANK0 ] unsigned char 
  1713 ;;  __i             1    1[BANK0 ] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       0       0       0       0
  1724 ;;      Locals:         0       2       0       0       0
  1725 ;;      Temps:          2       0       0       0       0
  1726 ;;      Totals:         2       2       0       0       0
  1727 ;;Total ram usage:        4 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 2
  1730 ;; This function calls:
  1731 ;;		_LCDBusyLoop
  1732 ;;		_LCDByte
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738  05B5                     _LCDInit:	
  1739                           ;psect for function _LCDInit
  1740                           
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1744                           ;LCDInit@style stored from wreg
  1745  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1746  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1747  05B7  00B9               	movwf	LCDInit@style
  1748  05B8                     l1246:
  1749                           
  1750                           ;lcd_hd44780_pic16.c: 193: void LCDInit(uint8_t style);lcd_hd44780_pic16.c: 194: {;lcd_h
      +                          d44780_pic16.c: 209:  _delay((unsigned long)((30)*(4000000/4000.0)));
  1751  05B8  3027               	movlw	39
  1752  05B9  00FD               	movwf	??_LCDInit+1
  1753  05BA  30F5               	movlw	245
  1754  05BB  00FC               	movwf	??_LCDInit
  1755  05BC                     u957:
  1756  05BC  0BFC               	decfsz	??_LCDInit,f
  1757  05BD  2DBC               	goto	u957
  1758  05BE  0BFD               	decfsz	??_LCDInit+1,f
  1759  05BF  2DBC               	goto	u957
  1760  05C0                     l1248:
  1761                           
  1762                           ;lcd_hd44780_pic16.c: 212:  TRISD&=(~(0x0F<<0));
  1763  05C0  30F0               	movlw	240
  1764  05C1  00FC               	movwf	??_LCDInit
  1765  05C2  087C               	movf	??_LCDInit,w
  1766  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  1767  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  1768  05C5  0588               	andwf	8,f	;volatile
  1769  05C6                     l1250:
  1770                           
  1771                           ;lcd_hd44780_pic16.c: 214:         TRISDbits.TRISD6=0;
  1772  05C6  1308               	bcf	8,6	;volatile
  1773  05C7                     l1252:
  1774                           
  1775                           ;lcd_hd44780_pic16.c: 215:         TRISDbits.TRISD4=0;
  1776  05C7  1208               	bcf	8,4	;volatile
  1777  05C8                     l1254:
  1778                           
  1779                           ;lcd_hd44780_pic16.c: 216:         TRISDbits.TRISD5=0;
  1780  05C8  1288               	bcf	8,5	;volatile
  1781  05C9                     l1256:
  1782                           
  1783                           ;lcd_hd44780_pic16.c: 218:  PORTD&=(~(0x0F<<0));
  1784  05C9  30F0               	movlw	240
  1785  05CA  00FC               	movwf	??_LCDInit
  1786  05CB  087C               	movf	??_LCDInit,w
  1787  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1788  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1789  05CE  0588               	andwf	8,f	;volatile
  1790  05CF                     l1258:
  1791                           
  1792                           ;lcd_hd44780_pic16.c: 220:         (RD6=0);
  1793  05CF  1308               	bcf	8,6	;volatile
  1794  05D0                     l1260:
  1795                           
  1796                           ;lcd_hd44780_pic16.c: 221:  (RD5=0);
  1797  05D0  1288               	bcf	8,5	;volatile
  1798  05D1                     l1262:
  1799                           
  1800                           ;lcd_hd44780_pic16.c: 222:  (RD4=0);
  1801  05D1  1208               	bcf	8,4	;volatile
  1802  05D2                     l1264:
  1803  05D2                     l1266:	
  1804                           ;lcd_hd44780_pic16.c: 225:  _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  1805                           
  1806                           
  1807                           ;lcd_hd44780_pic16.c: 227:  (RD6=1);
  1808  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1809  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1810  05D4  1708               	bsf	8,6	;volatile
  1811  05D5                     l1268:
  1812                           
  1813                           ;lcd_hd44780_pic16.c: 228:  PORTD|=((0b00000010)<<0);
  1814  05D5  1488               	bsf	8,1	;volatile
  1815  05D6                     l1270:
  1816                           
  1817                           ;lcd_hd44780_pic16.c: 229:  _delay((unsigned long)((1)*(4000000/4000000.0)));
  1818  05D6  0000               	nop
  1819  05D7                     l1272:
  1820                           
  1821                           ;lcd_hd44780_pic16.c: 230:  (RD6=0);
  1822  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1823  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1824  05D9  1308               	bcf	8,6	;volatile
  1825  05DA                     l1274:
  1826                           
  1827                           ;lcd_hd44780_pic16.c: 231:  _delay((unsigned long)((1)*(4000000/4000000.0)));
  1828  05DA  0000               	nop
  1829  05DB                     l1276:
  1830                           
  1831                           ;lcd_hd44780_pic16.c: 234:  LCDBusyLoop();
  1832  05DB  120A  118A  2567  120A  118A  	fcall	_LCDBusyLoop
  1833  05E0                     l1278:
  1834                           
  1835                           ;lcd_hd44780_pic16.c: 239:  (LCDByte(0b00101000,0));
  1836  05E0  01F5               	clrf	LCDByte@isdata
  1837  05E1  3028               	movlw	40
  1838  05E2  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1839  05E7                     l1280:
  1840                           
  1841                           ;lcd_hd44780_pic16.c: 240:         (LCDByte(0b00001100|style,0));
  1842  05E7  01F5               	clrf	LCDByte@isdata
  1843  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1844  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1845  05EA  0839               	movf	LCDInit@style,w
  1846  05EB  380C               	iorlw	12
  1847  05EC  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1848  05F1                     l1282:
  1849                           
  1850                           ;lcd_hd44780_pic16.c: 243:         (LCDByte(0b01000000,0));
  1851  05F1  01F5               	clrf	LCDByte@isdata
  1852  05F2  3040               	movlw	64
  1853  05F3  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1854  05F8                     l1284:
  1855                           
  1856                           ;lcd_hd44780_pic16.c: 245:  uint8_t __i;;lcd_hd44780_pic16.c: 246:  for(__i=0;__i<sizeof
      +                          (__cgram);__i++)
  1857  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1858  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1859  05FA  01BA               	clrf	LCDInit@__i
  1860  05FB                     l1290:
  1861                           
  1862                           ;lcd_hd44780_pic16.c: 247:   (LCDByte(__cgram[__i],1));
  1863  05FB  01F5               	clrf	LCDByte@isdata
  1864  05FC  0AF5               	incf	LCDByte@isdata,f
  1865  05FD  083A               	movf	LCDInit@__i,w
  1866  05FE  3E90               	addlw	(low (___cgram| (0+256)))& (0+255)
  1867  05FF  0084               	movwf	4
  1868  0600  1783               	bsf	3,7	;select IRP bank3
  1869  0601  0800               	movf	0,w
  1870  0602  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  1871  0607                     l1292:
  1872  0607  3001               	movlw	1
  1873  0608  00FC               	movwf	??_LCDInit
  1874  0609  087C               	movf	??_LCDInit,w
  1875  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1876  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1877  060C  07BA               	addwf	LCDInit@__i,f
  1878  060D                     l1294:
  1879  060D  3040               	movlw	64
  1880  060E  023A               	subwf	LCDInit@__i,w
  1881  060F  1C03               	skipc
  1882  0610  2E12               	goto	u551
  1883  0611  2E13               	goto	u550
  1884  0612                     u551:
  1885  0612  2DFB               	goto	l1290
  1886  0613                     u550:
  1887  0613                     l33:
  1888  0613  0008               	return
  1889  0614                     __end_of_LCDInit:
  1890                           
  1891                           	psect	text6
  1892  0430                     __ptext6:	
  1893 ;; *************** function _LCDGotoXY *****************
  1894 ;; Defined at:
  1895 ;;		line 352 in file "lcd_hd44780_pic16.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  x               1    wreg     unsigned char 
  1898 ;;  y               1   12[COMMON] unsigned char 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  x               1   13[COMMON] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         1       0       0       0       0
  1911 ;;      Locals:         1       0       0       0       0
  1912 ;;      Temps:          0       2       0       0       0
  1913 ;;      Totals:         2       2       0       0       0
  1914 ;;Total ram usage:        4 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 2
  1917 ;; This function calls:
  1918 ;;		_LCDByte
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;;		_leftToRight
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925  0430                     _LCDGotoXY:	
  1926                           ;psect for function _LCDGotoXY
  1927                           
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1931                           ;LCDGotoXY@x stored from wreg
  1932  0430  00FD               	movwf	LCDGotoXY@x
  1933  0431                     l1320:
  1934                           
  1935                           ;lcd_hd44780_pic16.c: 352: void LCDGotoXY(uint8_t x,uint8_t y);lcd_hd44780_pic16.c: 353:
      +                           {;lcd_hd44780_pic16.c: 354:   if(x>=20) return;
  1936  0431  3014               	movlw	20
  1937  0432  027D               	subwf	LCDGotoXY@x,w
  1938  0433  1C03               	skipc
  1939  0434  2C36               	goto	u601
  1940  0435  2C37               	goto	u600
  1941  0436                     u601:
  1942  0436  2C44               	goto	l1330
  1943  0437                     u600:
  1944  0437  2C64               	goto	l63
  1945  0438                     l67:	
  1946                           ;lcd_hd44780_pic16.c: 362:   case 1:
  1947                           
  1948                           
  1949                           ;lcd_hd44780_pic16.c: 363:    x|=0b01000000;
  1950  0438  177D               	bsf	LCDGotoXY@x,6
  1951                           
  1952                           ;lcd_hd44780_pic16.c: 364:    break;
  1953  0439  2C5C               	goto	l66
  1954  043A                     l1324:
  1955                           
  1956                           ;lcd_hd44780_pic16.c: 366:    x+=0x14;
  1957  043A  3014               	movlw	20
  1958  043B  00B9               	movwf	??_LCDGotoXY
  1959  043C  0839               	movf	??_LCDGotoXY,w
  1960  043D  07FD               	addwf	LCDGotoXY@x,f
  1961                           
  1962                           ;lcd_hd44780_pic16.c: 367:    break;
  1963  043E  2C5C               	goto	l66
  1964  043F                     l1326:
  1965                           
  1966                           ;lcd_hd44780_pic16.c: 369:    x+=0x54;
  1967  043F  3054               	movlw	84
  1968  0440  00B9               	movwf	??_LCDGotoXY
  1969  0441  0839               	movf	??_LCDGotoXY,w
  1970  0442  07FD               	addwf	LCDGotoXY@x,f
  1971                           
  1972                           ;lcd_hd44780_pic16.c: 370:    break;
  1973  0443  2C5C               	goto	l66
  1974  0444                     l1330:
  1975  0444  087C               	movf	LCDGotoXY@y,w
  1976  0445  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0446  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0447  00B9               	movwf	??_LCDGotoXY
  1979  0448  01BA               	clrf	??_LCDGotoXY+1
  1980                           
  1981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1982                           ; Switch size 1, requested type "simple"
  1983                           ; Number of cases is 1, Range of values is 0 to 0
  1984                           ; switch strategies available:
  1985                           ; Name         Instructions Cycles
  1986                           ; simple_byte            4     3 (average)
  1987                           ; direct_byte           11     8 (fixed)
  1988                           ; jumptable            260     6 (fixed)
  1989                           ;	Chosen strategy is simple_byte
  1990  0449  083A               	movf	??_LCDGotoXY+1,w
  1991  044A  3A00               	xorlw	0	; case 0
  1992  044B  1903               	skipnz
  1993  044C  2C4E               	goto	l1620
  1994  044D  2C5C               	goto	l66
  1995  044E                     l1620:
  1996                           
  1997                           ; Switch size 1, requested type "simple"
  1998                           ; Number of cases is 4, Range of values is 0 to 3
  1999                           ; switch strategies available:
  2000                           ; Name         Instructions Cycles
  2001                           ; simple_byte           13     7 (average)
  2002                           ; direct_byte           20     8 (fixed)
  2003                           ; jumptable            260     6 (fixed)
  2004                           ;	Chosen strategy is simple_byte
  2005  044E  0839               	movf	??_LCDGotoXY,w
  2006  044F  3A00               	xorlw	0	; case 0
  2007  0450  1903               	skipnz
  2008  0451  2C5C               	goto	l66
  2009  0452  3A01               	xorlw	1	; case 1
  2010  0453  1903               	skipnz
  2011  0454  2C38               	goto	l67
  2012  0455  3A03               	xorlw	3	; case 2
  2013  0456  1903               	skipnz
  2014  0457  2C3A               	goto	l1324
  2015  0458  3A01               	xorlw	1	; case 3
  2016  0459  1903               	skipnz
  2017  045A  2C3F               	goto	l1326
  2018  045B  2C5C               	goto	l66
  2019  045C                     l66:
  2020                           
  2021                           ;lcd_hd44780_pic16.c: 393:  x|=0b10000000;
  2022  045C  17FD               	bsf	LCDGotoXY@x,7
  2023  045D                     l1332:
  2024                           
  2025                           ;lcd_hd44780_pic16.c: 394:    (LCDByte(x,0));
  2026  045D  01F5               	clrf	LCDByte@isdata
  2027  045E  087D               	movf	LCDGotoXY@x,w
  2028  045F  120A  118A  24DF  120A  118A  	fcall	_LCDByte
  2029  0464                     l63:
  2030  0464  0008               	return
  2031  0465                     __end_of_LCDGotoXY:
  2032                           
  2033                           	psect	text7
  2034  04DF                     __ptext7:	
  2035 ;; *************** function _LCDByte *****************
  2036 ;; Defined at:
  2037 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  c               1    wreg     unsigned char 
  2040 ;;  isdata          1    5[COMMON] unsigned char 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  c               1   10[COMMON] unsigned char 
  2043 ;;  temp            1   11[COMMON] unsigned char 
  2044 ;;  ln              1    9[COMMON] unsigned char 
  2045 ;;  hn              1    8[COMMON] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, pclath, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         1       0       0       0       0
  2056 ;;      Locals:         4       0       0       0       0
  2057 ;;      Temps:          2       0       0       0       0
  2058 ;;      Totals:         7       0       0       0       0
  2059 ;;Total ram usage:        7 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 1
  2062 ;; This function calls:
  2063 ;;		_LCDBusyLoop
  2064 ;; This function is called by:
  2065 ;;		_LCDInit
  2066 ;;		_LCDWriteString
  2067 ;;		_LCDGotoXY
  2068 ;;		_main
  2069 ;;		_LCDWriteInt
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073  04DF                     _LCDByte:	
  2074                           ;psect for function _LCDByte
  2075                           
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2079                           ;LCDByte@c stored from wreg
  2080  04DF  00FA               	movwf	LCDByte@c
  2081  04E0                     l1168:
  2082                           
  2083                           ;lcd_hd44780_pic16.c: 80: void LCDByte(uint8_t c,uint8_t isdata);lcd_hd44780_pic16.c: 81
      +                          : {;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;;lcd_hd44780_pic16.c: 90: uint8_t temp;;lcd_h
      +                          d44780_pic16.c: 92: hn=c>>4;
  2084  04E0  087A               	movf	LCDByte@c,w
  2085  04E1  00F6               	movwf	??_LCDByte
  2086  04E2  3004               	movlw	4
  2087  04E3                     u405:
  2088  04E3  1003               	clrc
  2089  04E4  0CF6               	rrf	??_LCDByte,f
  2090  04E5  3EFF               	addlw	-1
  2091  04E6  1D03               	skipz
  2092  04E7  2CE3               	goto	u405
  2093  04E8  0876               	movf	??_LCDByte,w
  2094  04E9  00F7               	movwf	??_LCDByte+1
  2095  04EA  0877               	movf	??_LCDByte+1,w
  2096  04EB  00F8               	movwf	LCDByte@hn
  2097  04EC                     l1170:
  2098                           
  2099                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2100  04EC  087A               	movf	LCDByte@c,w
  2101  04ED  390F               	andlw	15
  2102  04EE  00F6               	movwf	??_LCDByte
  2103  04EF  0876               	movf	??_LCDByte,w
  2104  04F0  00F9               	movwf	LCDByte@ln
  2105  04F1                     l1172:
  2106                           
  2107                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2108  04F1  0875               	movf	LCDByte@isdata,w
  2109  04F2  1D03               	btfss	3,2
  2110  04F3  2CF5               	goto	u411
  2111  04F4  2CF6               	goto	u410
  2112  04F5                     u411:
  2113  04F5  2CFA               	goto	l21
  2114  04F6                     u410:
  2115  04F6                     l1174:
  2116                           
  2117                           ;lcd_hd44780_pic16.c: 96:  (RD4=0);
  2118  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2119  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2120  04F8  1208               	bcf	8,4	;volatile
  2121  04F9  2CFD               	goto	l22
  2122  04FA                     l21:	
  2123                           ;lcd_hd44780_pic16.c: 97: else
  2124                           
  2125                           
  2126                           ;lcd_hd44780_pic16.c: 98:  (RD4=1);
  2127  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2128  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2129  04FC  1608               	bsf	8,4	;volatile
  2130  04FD                     l22:
  2131                           
  2132                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2133                           ;lcd_hd44780_pic16.c: 102: (RD6=1);
  2134  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2135  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2136  04FF  1708               	bsf	8,6	;volatile
  2137  0500                     l1176:
  2138                           
  2139                           ;lcd_hd44780_pic16.c: 106: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  2140  0500  0808               	movf	8,w	;volatile
  2141  0501  39F0               	andlw	240
  2142  0502  0478               	iorwf	LCDByte@hn,w
  2143  0503  00F6               	movwf	??_LCDByte
  2144  0504  0876               	movf	??_LCDByte,w
  2145  0505  00FB               	movwf	LCDByte@temp
  2146  0506                     l1178:
  2147                           
  2148                           ;lcd_hd44780_pic16.c: 107: PORTD=temp;
  2149  0506  087B               	movf	LCDByte@temp,w
  2150  0507  0088               	movwf	8	;volatile
  2151  0508                     l1180:
  2152                           
  2153                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2154  0508  0000               	nop
  2155  0509                     l1182:
  2156                           
  2157                           ;lcd_hd44780_pic16.c: 113: (RD6=0);
  2158  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2159  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2160  050B  1308               	bcf	8,6	;volatile
  2161  050C                     l1184:
  2162                           
  2163                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2164  050C  0000               	nop
  2165  050D                     l1186:
  2166                           
  2167                           ;lcd_hd44780_pic16.c: 118: (RD6=1);
  2168  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2169  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2170  050F  1708               	bsf	8,6	;volatile
  2171  0510                     l1188:
  2172                           
  2173                           ;lcd_hd44780_pic16.c: 120: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  2174  0510  0808               	movf	8,w	;volatile
  2175  0511  39F0               	andlw	240
  2176  0512  0479               	iorwf	LCDByte@ln,w
  2177  0513  00F6               	movwf	??_LCDByte
  2178  0514  0876               	movf	??_LCDByte,w
  2179  0515  00FB               	movwf	LCDByte@temp
  2180                           
  2181                           ;lcd_hd44780_pic16.c: 122: PORTD=temp;
  2182  0516  087B               	movf	LCDByte@temp,w
  2183  0517  0088               	movwf	8	;volatile
  2184  0518                     l1190:
  2185                           
  2186                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2187  0518  0000               	nop
  2188  0519                     l1192:
  2189                           
  2190                           ;lcd_hd44780_pic16.c: 128: (RD6=0);
  2191  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2192  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2193  051B  1308               	bcf	8,6	;volatile
  2194  051C                     l1194:
  2195                           
  2196                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2197  051C  0000               	nop
  2198  051D                     l1196:
  2199                           
  2200                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  2201  051D  120A  118A  2567  120A  118A  	fcall	_LCDBusyLoop
  2202  0522                     l23:
  2203  0522  0008               	return
  2204  0523                     __end_of_LCDByte:
  2205                           
  2206                           	psect	text8
  2207  0567                     __ptext8:	
  2208 ;; *************** function _LCDBusyLoop *****************
  2209 ;; Defined at:
  2210 ;;		line 135 in file "lcd_hd44780_pic16.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  status          1    4[COMMON] unsigned char 
  2215 ;;  temp            1    3[COMMON] unsigned char 
  2216 ;;  busy            1    2[COMMON] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         3       0       0       0       0
  2228 ;;      Temps:          2       0       0       0       0
  2229 ;;      Totals:         5       0       0       0       0
  2230 ;;Total ram usage:        5 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_LCDByte
  2236 ;;		_LCDInit
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240  0567                     _LCDBusyLoop:	
  2241                           ;psect for function _LCDBusyLoop
  2242                           
  2243  0567                     l1122:	
  2244                           ;incstack = 0
  2245                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2246                           
  2247  0567                     l1124:
  2248                           
  2249                           ;lcd_hd44780_pic16.c: 142:  TRISD|=(0x0f<<0);
  2250  0567  300F               	movlw	15
  2251  0568  00F0               	movwf	??_LCDBusyLoop
  2252  0569  0870               	movf	??_LCDBusyLoop,w
  2253  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2254  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2255  056C  0488               	iorwf	8,f	;volatile
  2256  056D                     l1126:
  2257                           
  2258                           ;lcd_hd44780_pic16.c: 145:  (RD5=1);
  2259  056D  1283               	bcf	3,5	;RP0=0, select bank0
  2260  056E  1303               	bcf	3,6	;RP1=0, select bank0
  2261  056F  1688               	bsf	8,5	;volatile
  2262  0570                     l1128:
  2263                           
  2264                           ;lcd_hd44780_pic16.c: 146:  (RD4=0);
  2265  0570  1208               	bcf	8,4	;volatile
  2266  0571                     l1130:
  2267  0571                     l1132:	
  2268                           ;lcd_hd44780_pic16.c: 150:  _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2269                           
  2270                           
  2271                           ;lcd_hd44780_pic16.c: 154:  {;lcd_hd44780_pic16.c: 156:   (RD6=1);
  2272  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0573  1708               	bsf	8,6	;volatile
  2275  0574                     l1134:
  2276  0574                     l1136:	
  2277                           ;lcd_hd44780_pic16.c: 159:   _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2278                           
  2279                           
  2280                           ;lcd_hd44780_pic16.c: 161:   status=(PORTD>>0);
  2281  0574  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0575  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0576  0808               	movf	8,w	;volatile
  2284  0577  00F0               	movwf	??_LCDBusyLoop
  2285  0578  0870               	movf	??_LCDBusyLoop,w
  2286  0579  00F4               	movwf	LCDBusyLoop@status
  2287  057A                     l1138:
  2288                           
  2289                           ;lcd_hd44780_pic16.c: 162:   status=status<<4;
  2290  057A  0874               	movf	LCDBusyLoop@status,w
  2291  057B  00F0               	movwf	??_LCDBusyLoop
  2292  057C  3003               	movlw	3
  2293  057D                     u385:
  2294  057D  1003               	clrc
  2295  057E  0DF0               	rlf	??_LCDBusyLoop,f
  2296  057F  3EFF               	addlw	-1
  2297  0580  1D03               	skipz
  2298  0581  2D7D               	goto	u385
  2299  0582  1003               	clrc
  2300  0583  0D70               	rlf	??_LCDBusyLoop,w
  2301  0584  00F1               	movwf	??_LCDBusyLoop+1
  2302  0585  0871               	movf	??_LCDBusyLoop+1,w
  2303  0586  00F4               	movwf	LCDBusyLoop@status
  2304  0587                     l1140:
  2305  0587                     l1142:	
  2306                           ;lcd_hd44780_pic16.c: 164:   _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2307                           
  2308                           
  2309                           ;lcd_hd44780_pic16.c: 167:   (RD6=0);
  2310  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0589  1308               	bcf	8,6	;volatile
  2313  058A                     l1144:
  2314                           
  2315                           ;lcd_hd44780_pic16.c: 168:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  2316  058A  0000               	nop
  2317  058B                     l1146:
  2318                           
  2319                           ;lcd_hd44780_pic16.c: 170:   (RD6=1);
  2320  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2321  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2322  058D  1708               	bsf	8,6	;volatile
  2323  058E                     l1148:
  2324  058E                     l1150:	
  2325                           ;lcd_hd44780_pic16.c: 171:   _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2326                           
  2327                           
  2328                           ;lcd_hd44780_pic16.c: 173:   temp=(PORTD>>0);
  2329  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2330  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0590  0808               	movf	8,w	;volatile
  2332  0591  00F0               	movwf	??_LCDBusyLoop
  2333  0592  0870               	movf	??_LCDBusyLoop,w
  2334  0593  00F3               	movwf	LCDBusyLoop@temp
  2335  0594                     l1152:
  2336                           
  2337                           ;lcd_hd44780_pic16.c: 174:   temp&=0x0F;
  2338  0594  300F               	movlw	15
  2339  0595  00F0               	movwf	??_LCDBusyLoop
  2340  0596  0870               	movf	??_LCDBusyLoop,w
  2341  0597  05F3               	andwf	LCDBusyLoop@temp,f
  2342  0598                     l1154:
  2343                           
  2344                           ;lcd_hd44780_pic16.c: 176:   status=status|temp;
  2345  0598  0874               	movf	LCDBusyLoop@status,w
  2346  0599  0473               	iorwf	LCDBusyLoop@temp,w
  2347  059A  00F0               	movwf	??_LCDBusyLoop
  2348  059B  0870               	movf	??_LCDBusyLoop,w
  2349  059C  00F4               	movwf	LCDBusyLoop@status
  2350  059D                     l1156:
  2351                           
  2352                           ;lcd_hd44780_pic16.c: 178:   busy=status & 0b10000000;
  2353  059D  0874               	movf	LCDBusyLoop@status,w
  2354  059E  3980               	andlw	128
  2355  059F  00F0               	movwf	??_LCDBusyLoop
  2356  05A0  0870               	movf	??_LCDBusyLoop,w
  2357  05A1  00F2               	movwf	LCDBusyLoop@busy
  2358  05A2                     l1158:
  2359  05A2                     l1160:	
  2360                           ;lcd_hd44780_pic16.c: 180:   _delay((unsigned long)((0.5)*(4000000/4000000.0)));
  2361                           
  2362                           
  2363                           ;lcd_hd44780_pic16.c: 182:                 (RD6=0);
  2364  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2365  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2366  05A4  1308               	bcf	8,6	;volatile
  2367  05A5                     l1162:
  2368                           
  2369                           ;lcd_hd44780_pic16.c: 183:   _delay((unsigned long)((1)*(4000000/4000000.0)));
  2370  05A5  0000               	nop
  2371  05A6                     l1164:
  2372                           
  2373                           ;lcd_hd44780_pic16.c: 184:  }while(busy);
  2374  05A6  0872               	movf	LCDBusyLoop@busy,w
  2375  05A7  1D03               	btfss	3,2
  2376  05A8  2DAA               	goto	u391
  2377  05A9  2DAB               	goto	u390
  2378  05AA                     u391:
  2379  05AA  2D71               	goto	l1132
  2380  05AB                     u390:
  2381  05AB                     l27:
  2382                           
  2383                           ;lcd_hd44780_pic16.c: 186:  (RD5=0);
  2384  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2385  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2386  05AD  1288               	bcf	8,5	;volatile
  2387  05AE                     l1166:
  2388                           
  2389                           ;lcd_hd44780_pic16.c: 189:  TRISD&=(~(0x0F<<0));
  2390  05AE  30F0               	movlw	240
  2391  05AF  00F0               	movwf	??_LCDBusyLoop
  2392  05B0  0870               	movf	??_LCDBusyLoop,w
  2393  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2394  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2395  05B3  0588               	andwf	8,f	;volatile
  2396  05B4                     l28:
  2397  05B4  0008               	return
  2398  05B5                     __end_of_LCDBusyLoop:
  2399  007E                     btemp	set	126	;btemp
  2400  007E                     wtemp0	set	126
  2401                           
  2402                           	psect	idloc
  2403                           
  2404                           ;Config register IDLOC0 @ 0x2000
  2405                           ;	unspecified, using default values
  2406  2000                     	org	8192
  2407  2000  3FFF               	dw	16383
  2408                           
  2409                           ;Config register IDLOC1 @ 0x2001
  2410                           ;	unspecified, using default values
  2411  2001                     	org	8193
  2412  2001  3FFF               	dw	16383
  2413                           
  2414                           ;Config register IDLOC2 @ 0x2002
  2415                           ;	unspecified, using default values
  2416  2002                     	org	8194
  2417  2002  3FFF               	dw	16383
  2418                           
  2419                           ;Config register IDLOC3 @ 0x2003
  2420                           ;	unspecified, using default values
  2421  2003                     	org	8195
  2422  2003  3FFF               	dw	16383
  2423                           
  2424                           	psect	config
  2425                           
  2426                           ;Config register CONFIG1 @ 0x2007
  2427                           ;	Oscillator Selection bits
  2428                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2429                           ;	Watchdog Timer Enable bit
  2430                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2431                           ;	Power-up Timer Enable bit
  2432                           ;	PWRTE = OFF, PWRT disabled
  2433                           ;	RE3/MCLR pin function select bit
  2434                           ;	MCLRE = 0x1, unprogrammed default
  2435                           ;	Code Protection bit
  2436                           ;	CP = OFF, Program memory code protection is disabled
  2437                           ;	Data Code Protection bit
  2438                           ;	CPD = OFF, Data memory code protection is disabled
  2439                           ;	Brown Out Reset Selection bits
  2440                           ;	BOREN = ON, BOR enabled
  2441                           ;	Internal External Switchover bit
  2442                           ;	IESO = 0x1, unprogrammed default
  2443                           ;	Fail-Safe Clock Monitor Enabled bit
  2444                           ;	FCMEN = 0x1, unprogrammed default
  2445                           ;	Low Voltage Programming Enable bit
  2446                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2447                           ;	In-Circuit Debugger Mode bit
  2448                           ;	DEBUG = 0x1, unprogrammed default
  2449  2007                     	org	8199
  2450  2007  3FF2               	dw	16370
  2451                           
  2452                           ;Config register CONFIG2 @ 0x2008
  2453                           ;	Brown-out Reset Selection bit
  2454                           ;	BOR4V = 0x1, unprogrammed default
  2455                           ;	Flash Program Memory Self Write Enable bits
  2456                           ;	WRT = OFF, Write protection off
  2457  2008                     	org	8200
  2458  2008  3FFF               	dw	16383

Data Sizes:
    Strings     64
    Constant    10
    Data        103
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      42
    BANK1            80      0      39
    BANK3            96      0      64
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> p(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    chu	PTR const unsigned char [39] size(1) Largest target is 41
		 -> STR_1(CODE[41]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[17]), p(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteString
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7049
                                             13 BANK0      4     4      0
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1299
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1594
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1394
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            4     3      1    1485
                                             12 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1187
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
   _LCDInit
     _LCDBusyLoop
     _LCDByte
   _LCDWriteString
     _LCDByte
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      27       7       48.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9F      12        0.0%
ABS                  0      0      9F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 15 08:26:51 2022

           ?_LCDBusyLoop 0070                        _p 0025                        pc 0002  
                     l21 04FA                       l22 04FD                       l23 0522  
                     l33 0613                       l27 05AB                       l43 06F0  
                     l28 05B4                       l63 0464                       l66 045C  
                     l67 0438                       fsr 0004                      l210 07D7  
                    l486 0566                      l496 049E                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      u410 04F6  
                    u411 04F5                      u420 052B                      u405 04E3  
                    u421 052A                      u510 047D                      u511 047C  
                    u600 0437                      u440 053D                      u520 0487  
                    u601 0436                      u441 053C                      u521 0486  
                    u505 046F                      u610 06FF                      u435 052F  
                    u611 06FE                      u460 054E                      u540 049A  
                    u620 076F                      u461 054D                      u541 0499  
                    u525 0483                      u621 076E                      u390 05AB  
                    u550 0613                      u630 077A                      u391 05AA  
                    u551 0612                      u455 053E                      u535 048E  
                    u631 0779                      u560 0688                      u480 0562  
                    u640 07C1                      u385 057D                      u561 0687  
                    u481 0561                      u465 054A                      u641 07C0  
                    u625 076B                      u570 069F                      u490 046B  
                    u650 07D3                      u571 069E                      u475 0556  
                    u491 046A                      u651 07D2                      u580 06A6  
                    u740 0675                      u581 06A5                      u741 0674  
                    u590 06F0                      u591 06EF                      u947 065B  
                    u957 05BC                      _chu 00A0                      fsr0 0004  
                    indf 0000          __end_of_LCDByte 0523          __end_of_LCDInit 0614  
            LCDByte@temp 007B                     l1200 0525                     l1130 0571  
                   l1122 0567                     l1210 053D                     l1202 052B  
                   l1140 0587                     l1132 0571                     l1124 0567  
                   l1300 0688                     l1212 054E                     l1204 052E  
                   l1220 0562                     l1150 058E                     l1142 0587  
                   l1134 0574                     l1126 056D                     l1310 06AF  
                   l1302 068E                     l1214 0554                     l1206 0535  
                   l1230 0475                     l1160 05A2                     l1152 0594  
                   l1144 058A                     l1136 0574                     l1128 0570  
                   l1320 0431                     l1312 06B7                     l1304 069B  
                   l1216 0555                     l1208 0539                     l1240 0494  
                   l1232 0479                     l1224 0465                     l1162 05A5  
                   l1154 0598                     l1146 058B                     l1138 057A  
                   l1170 04EC                     l1330 0444                     l1250 05C6  
                   l1306 069F                     l1314 06CA                     l1218 055C  
                   l1234 047D                     l1226 046B                     l1242 049A  
                   l1164 05A6                     l1156 059D                     l1148 058E  
                   l1180 0508                     l1172 04F1                     l1332 045D  
                   l1324 043A                     l1260 05D0                     l1252 05C7  
                   l1316 06DA                     l1308 06A6                     l1236 0487  
                   l1228 046E                     l1340 06F4                     l1166 05AE  
                   l1158 05A2                     l1190 0518                     l1182 0509  
                   l1174 04F6                     l1326 043F                     l1270 05D6  
                   l1262 05D1                     l1254 05C8                     l1246 05B8  
                   l1318 06E0                     l1238 048D                     l1350 070D  
                   l1342 06F9                     l1192 0519                     l1184 050C  
                   l1176 0500                     l1168 04E0                     l1280 05E7  
                   l1272 05D7                     l1264 05D2                     l1256 05C9  
                   l1248 05C0                     l1352 0714                     l1360 0729  
                   l1344 06FF                     l1194 051C                     l1186 050D  
                   l1178 0506                     l1290 05FB                     l1282 05F1  
                   l1274 05DA                     l1266 05D2                     l1258 05CF  
                   l1362 0746                     l1354 0718                     l1346 0706  
                   l1196 051D                     l1188 0510                     l1620 044E  
                   l1292 0607                     l1284 05F8                     l1276 05DB  
                   l1268 05D5                     l1380 077F                     l1372 0754  
                   l1364 074E                     l1356 0724                     l1348 070B  
                   l1294 060D                     l1278 05E0                     l1198 0523  
                   l1382 07AD                     l1366 0752                     l1390 07D3  
                   l1296 0679                     l1384 07B4                     l1376 0770  
                   l1480 0662                     l1472 061D                     l1464 0614  
                   l1298 067A                     l1386 07B8                     l1378 077A  
                   l1618 073B                     l1482 0669                     l1474 0624  
                   l1466 061A                     l1388 07C1                     l1484 066F  
                   l1476 062D                     l1478 0653                     STR_1 001D  
                   STR_2 0057                     STR_3 0046                     STR_4 005A  
                   _main 0614                     btemp 007E                     start 0000  
                  ?_main 0070             LCDInit@style 0039          __end_of___lwdiv 0567  
        __end_of___lwmod 049F                    _PORTD 0008                    _TRISD 0088  
        __end_of_dpowers 001D                    main@i 0049                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 07D8  
        __initialization 07D8             __end_of_main 0679                   ??_main 0046  
      __end_of_LCDGotoXY 0465            LCDByte@isdata 0075                ??_LCDByte 0076  
              ??_LCDInit 007C           _LCDWriteString 0679                ??___lwdiv 0074  
              ??___lwmod 007C                ??_sprintf 003C  __end_of__initialization 07FC  
 __end_of_LCDWriteString 06F1                LCDByte@hn 0078                LCDByte@ln 0079  
         __pcstackCOMMON 0070             __pidataBANK1 0409             __pidataBANK3 049F  
             __pbssBANK0 0020          ?_LCDWriteString 007C               __pmaintext 0614  
                _LCDByte 04DF                  _LCDInit 05B5               __stringtab 0003  
                ___cgram 0190                  ___lwdiv 0523                  ___lwmod 0465  
                __ptext1 06F1                  __ptext2 0465                  __ptext3 0523  
                __ptext4 0679                  __ptext5 05B5                  __ptext6 0430  
                __ptext7 04DF                  __ptext8 0567                  _dpowers 0013  
              _LCDGotoXY 0430                  _sprintf 06F1                  clrloop0 03EF  
   end_of_initialization 07FC        LCDWriteString@msg 007C                _TRISDbits 0088  
             ?_LCDGotoXY 007C               LCDInit@__i 003A               LCDGotoXY@x 007D  
             LCDGotoXY@y 007C            ??_LCDBusyLoop 0070      start_initialization 07D8  
       ??_LCDWriteString 0039               init_fetch0 03F6              __pdataBANK1 00A0  
            __pdataBANK3 0190      __end_of_LCDBusyLoop 05B5                 ?_LCDByte 0075  
               ?_LCDInit 0070                 LCDByte@c 007A                ___latbits 0002  
          __pcstackBANK0 0039              ??_LCDGotoXY 0039         LCDWriteInt@F1326 0020  
            sprintf@flag 003F              sprintf@prec 0042         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0078                __pstrings 0003  
        LCDBusyLoop@busy 0072          LCDBusyLoop@temp 0073         ___lwdiv@quotient 0075  
               ?_sprintf 0039                clear_ram0 03EE              _LCDBusyLoop 0567  
       LCDWriteString@cc 003A              __stringbase 0012        LCDBusyLoop@status 0074  
     __end_of__stringtab 0013               sprintf@val 0040          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 init_ram0 03FA                sprintf@ap 0043  
              sprintf@sp 0044         ___lwmod@dividend 007A                stringcode 000D  
               sprintf@c 0045                 sprintf@f 0039          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 000D                 stringtab 0003  
