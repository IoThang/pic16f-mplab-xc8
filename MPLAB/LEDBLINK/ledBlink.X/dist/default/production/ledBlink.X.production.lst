

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Mar 07 12:20:59 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0006                     _PORTB	set	6
   207  0086                     _TRISB	set	134
   208                           
   209                           	psect	cinit
   210  07FC                     start_initialization:	
   211                           ; #config settings
   212                           
   213  07FC                     __initialization:
   214  07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217  07FC                     __end_of__initialization:
   218  07FC  0183               	clrf	3
   219  07FD  120A  118A  2EFF   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	cstackCOMMON
   222  0070                     __pcstackCOMMON:
   223  0070                     ?_blink:
   224  0070                     ??_blink:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_blink1:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ??_blink1:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_blink2:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ??_blink2:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_blink3:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ??_blink3:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250  0070                     	ds	2
   251  0072                     blink@time:
   252  0072                     blink1@time:	
   253                           ; 1 bytes @ 0x2
   254                           
   255  0072                     blink2@time:	
   256                           ; 1 bytes @ 0x2
   257                           
   258                           
   259                           ; 1 bytes @ 0x2
   260  0072                     	ds	1
   261  0073                     blink@i:
   262  0073                     blink1@i:	
   263                           ; 1 bytes @ 0x3
   264                           
   265  0073                     blink2@i:	
   266                           ; 1 bytes @ 0x3
   267                           
   268  0073                     blink3@time:	
   269                           ; 1 bytes @ 0x3
   270                           
   271                           
   272                           ; 1 bytes @ 0x3
   273  0073                     	ds	1
   274  0074                     blink1@temp:
   275  0074                     blink2@temp:	
   276                           ; 1 bytes @ 0x4
   277                           
   278  0074                     blink3@i:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283  0074                     	ds	1
   284  0075                     blink3@stop:
   285                           
   286                           ; 1 bytes @ 0x5
   287  0075                     	ds	1
   288  0076                     blink3@k:
   289                           
   290                           ; 1 bytes @ 0x6
   291  0076                     	ds	1
   292  0077                     blink3@y:
   293                           
   294                           ; 1 bytes @ 0x7
   295  0077                     	ds	1
   296  0078                     blink3@run:
   297                           
   298                           ; 1 bytes @ 0x8
   299  0078                     	ds	1
   300  0079                     blink3@j:
   301                           
   302                           ; 1 bytes @ 0x9
   303  0079                     	ds	1
   304  007A                     ??_main:
   305                           
   306                           	psect	maintext
   307  06FF                     __pmaintext:	
   308                           ; 1 bytes @ 0xA
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 92 in file "newmain.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0, pclath, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : B00/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   328 ;;      Params:         0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0
   330 ;;      Temps:          0       0       0       0       0
   331 ;;      Totals:         0       0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels required when called: 1
   334 ;; This function calls:
   335 ;;		_blink
   336 ;;		_blink1
   337 ;;		_blink2
   338 ;;		_blink3
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344  06FF                     _main:	
   345                           ;psect for function _main
   346                           
   347  06FF                     l721:	
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   350                           
   351                           
   352                           ;newmain.c: 93:     TRISB = 0;
   353  06FF  1683               	bsf	3,5	;RP0=1, select bank1
   354  0700  1303               	bcf	3,6	;RP1=0, select bank1
   355  0701  0186               	clrf	6	;volatile
   356  0702                     l723:
   357                           
   358                           ;newmain.c: 95:     {;newmain.c: 96:         blink(2);
   359  0702  3002               	movlw	2
   360  0703  120A  118A  2743  120A  118A  	fcall	_blink
   361  0708                     l725:
   362                           
   363                           ;newmain.c: 97:         blink1(2);
   364  0708  3002               	movlw	2
   365  0709  120A  118A  271E  120A  118A  	fcall	_blink1
   366  070E                     l727:
   367                           
   368                           ;newmain.c: 98:         blink2(2);
   369  070E  3002               	movlw	2
   370  070F  120A  118A  276A  120A  118A  	fcall	_blink2
   371  0714                     l729:
   372                           
   373                           ;newmain.c: 99:         blink3(2);
   374  0714  3002               	movlw	2
   375  0715  120A  118A  27A7  120A  118A  	fcall	_blink3
   376  071A  2F02               	goto	l723
   377  071B  120A  118A  2800   	ljmp	start
   378  071E                     __end_of_main:
   379                           
   380                           	psect	text1
   381  07A7                     __ptext1:	
   382 ;; *************** function _blink3 *****************
   383 ;; Defined at:
   384 ;;		line 71 in file "newmain.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  time            1    wreg     unsigned char 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  time            1    3[COMMON] unsigned char 
   389 ;;  k               1    6[COMMON] unsigned char 
   390 ;;  j               1    9[COMMON] unsigned char 
   391 ;;  run             1    8[COMMON] unsigned char 
   392 ;;  y               1    7[COMMON] unsigned char 
   393 ;;  stop            1    5[COMMON] unsigned char 
   394 ;;  i               1    4[COMMON] unsigned char 
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         7       0       0       0       0
   406 ;;      Temps:          3       0       0       0       0
   407 ;;      Totals:        10       0       0       0       0
   408 ;;Total ram usage:       10 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417  07A7                     _blink3:	
   418                           ;psect for function _blink3
   419                           
   420                           
   421                           ;incstack = 0
   422                           ; Regs used in _blink3: [wreg+status,2+status,0]
   423                           ;blink3@time stored from wreg
   424  07A7  00F3               	movwf	blink3@time
   425  07A8                     l693:
   426                           
   427                           ;newmain.c: 71: void blink3(unsigned char time);newmain.c: 72: {;newmain.c: 73:     for(
      +                          unsigned char i = 0; i < time; i++)
   428  07A8  01F4               	clrf	blink3@i
   429  07A9  2FF5               	goto	l719
   430  07AA                     l695:
   431                           
   432                           ;newmain.c: 74:     {;newmain.c: 75:         unsigned char run, stop, y;;newmain.c: 76: 
      +                                  stop = 0;
   433  07AA  01F5               	clrf	blink3@stop
   434                           
   435                           ;newmain.c: 77:         for(unsigned char j = 0; j <= 7; j++)
   436  07AB  01F9               	clrf	blink3@j
   437  07AC                     l37:
   438                           
   439                           ;newmain.c: 78:         {;newmain.c: 79:             run = 0b00000001;
   440  07AC  01F8               	clrf	blink3@run
   441  07AD  0AF8               	incf	blink3@run,f
   442  07AE                     l701:
   443                           
   444                           ;newmain.c: 80:             for(unsigned char k = 0; k <= 7 - j; k++)
   445  07AE  01F6               	clrf	blink3@k
   446  07AF  2FCC               	goto	l39
   447  07B0                     l703:
   448                           
   449                           ;newmain.c: 81:             {;newmain.c: 82:                 y = run | stop;
   450  07B0  0878               	movf	blink3@run,w
   451  07B1  0475               	iorwf	blink3@stop,w
   452  07B2  00F0               	movwf	??_blink3
   453  07B3  0870               	movf	??_blink3,w
   454  07B4  00F7               	movwf	blink3@y
   455  07B5                     l705:
   456                           
   457                           ;newmain.c: 83:                 PORTB = y;
   458  07B5  0877               	movf	blink3@y,w
   459  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   460  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   461  07B8  0086               	movwf	6	;volatile
   462  07B9                     l707:
   463                           
   464                           ;newmain.c: 84:                 _delay((unsigned long)((100)*(4000000/4000.0)));
   465  07B9  3082               	movlw	130
   466  07BA  00F1               	movwf	??_blink3+1
   467  07BB  30DD               	movlw	221
   468  07BC  00F0               	movwf	??_blink3
   469  07BD                     u107:
   470  07BD  0BF0               	decfsz	??_blink3,f
   471  07BE  2FBD               	goto	u107
   472  07BF  0BF1               	decfsz	??_blink3+1,f
   473  07C0  2FBD               	goto	u107
   474  07C1  2FC2               	nop2
   475                           
   476                           ;newmain.c: 85:                 run = run << 1;
   477  07C2  0878               	movf	blink3@run,w
   478  07C3  00F0               	movwf	??_blink3
   479  07C4  0770               	addwf	??_blink3,w
   480  07C5  00F1               	movwf	??_blink3+1
   481  07C6  0871               	movf	??_blink3+1,w
   482  07C7  00F8               	movwf	blink3@run
   483                           
   484                           ;newmain.c: 86:             }
   485  07C8  3001               	movlw	1
   486  07C9  00F0               	movwf	??_blink3
   487  07CA  0870               	movf	??_blink3,w
   488  07CB  07F6               	addwf	blink3@k,f
   489  07CC                     l39:
   490  07CC  3000               	movlw	0
   491  07CD  00F1               	movwf	??_blink3+1
   492  07CE  0879               	movf	blink3@j,w
   493  07CF  3C07               	sublw	7
   494  07D0  00F0               	movwf	??_blink3
   495  07D1  1C03               	skipc
   496  07D2  03F1               	decf	??_blink3+1,f
   497  07D3  0871               	movf	??_blink3+1,w
   498  07D4  3A80               	xorlw	128
   499  07D5  00F2               	movwf	??_blink3+2
   500  07D6  3080               	movlw	128
   501  07D7  0272               	subwf	??_blink3+2,w
   502  07D8  1D03               	skipz
   503  07D9  2FDC               	goto	u75
   504  07DA  0876               	movf	blink3@k,w
   505  07DB  0270               	subwf	??_blink3,w
   506  07DC                     u75:
   507  07DC  1803               	skipnc
   508  07DD  2FDF               	goto	u71
   509  07DE  2FE0               	goto	u70
   510  07DF                     u71:
   511  07DF  2FB0               	goto	l703
   512  07E0                     u70:
   513  07E0                     l709:
   514                           
   515                           ;newmain.c: 87:             stop = y;
   516  07E0  0877               	movf	blink3@y,w
   517  07E1  00F0               	movwf	??_blink3
   518  07E2  0870               	movf	??_blink3,w
   519  07E3  00F5               	movwf	blink3@stop
   520  07E4                     l711:
   521                           
   522                           ;newmain.c: 88:         }
   523  07E4  3001               	movlw	1
   524  07E5  00F0               	movwf	??_blink3
   525  07E6  0870               	movf	??_blink3,w
   526  07E7  07F9               	addwf	blink3@j,f
   527  07E8                     l713:
   528  07E8  3008               	movlw	8
   529  07E9  0279               	subwf	blink3@j,w
   530  07EA  1C03               	skipc
   531  07EB  2FED               	goto	u81
   532  07EC  2FEE               	goto	u80
   533  07ED                     u81:
   534  07ED  2FAC               	goto	l37
   535  07EE                     u80:
   536  07EE                     l715:
   537                           
   538                           ;newmain.c: 89:         PORTB = 0;
   539  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   540  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   541  07F0  0186               	clrf	6	;volatile
   542  07F1                     l717:
   543                           
   544                           ;newmain.c: 90:     }
   545  07F1  3001               	movlw	1
   546  07F2  00F0               	movwf	??_blink3
   547  07F3  0870               	movf	??_blink3,w
   548  07F4  07F4               	addwf	blink3@i,f
   549  07F5                     l719:
   550  07F5  0873               	movf	blink3@time,w
   551  07F6  0274               	subwf	blink3@i,w
   552  07F7  1C03               	skipc
   553  07F8  2FFA               	goto	u91
   554  07F9  2FFB               	goto	u90
   555  07FA                     u91:
   556  07FA  2FAA               	goto	l695
   557  07FB                     u90:
   558  07FB                     l43:
   559  07FB  0008               	return
   560  07FC                     __end_of_blink3:
   561                           
   562                           	psect	text2
   563  076A                     __ptext2:	
   564 ;; *************** function _blink2 *****************
   565 ;; Defined at:
   566 ;;		line 54 in file "newmain.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  time            1    wreg     unsigned char 
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  time            1    2[COMMON] unsigned char 
   571 ;;  temp            1    4[COMMON] unsigned char 
   572 ;;  i               1    3[COMMON] unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         3       0       0       0       0
   584 ;;      Temps:          2       0       0       0       0
   585 ;;      Totals:         5       0       0       0       0
   586 ;;Total ram usage:        5 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595  076A                     _blink2:	
   596                           ;psect for function _blink2
   597                           
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _blink2: [wreg+status,2+status,0]
   601                           ;blink2@time stored from wreg
   602  076A  00F2               	movwf	blink2@time
   603  076B                     l673:
   604                           
   605                           ;newmain.c: 54: void blink2(unsigned char time);newmain.c: 55: {;newmain.c: 56:     for(
      +                          unsigned char i = 0; i < time; i++)
   606  076B  01F3               	clrf	blink2@i
   607  076C  2FA0               	goto	l691
   608  076D                     l26:
   609                           
   610                           ;newmain.c: 57:     {;newmain.c: 58:         unsigned char temp = 0b00000001;
   611  076D  01F4               	clrf	blink2@temp
   612  076E  0AF4               	incf	blink2@temp,f
   613                           
   614                           ;newmain.c: 59:         while(temp <= 128)
   615  076F  2F8A               	goto	l683
   616  0770                     l675:
   617                           
   618                           ;newmain.c: 60:         {;newmain.c: 61:             PORTB = temp;
   619  0770  0874               	movf	blink2@temp,w
   620  0771  1283               	bcf	3,5	;RP0=0, select bank0
   621  0772  1303               	bcf	3,6	;RP1=0, select bank0
   622  0773  0086               	movwf	6	;volatile
   623                           
   624                           ;newmain.c: 62:             _delay((unsigned long)((100)*(4000000/4000.0)));
   625  0774  3082               	movlw	130
   626  0775  00F1               	movwf	??_blink2+1
   627  0776  30DD               	movlw	221
   628  0777  00F0               	movwf	??_blink2
   629  0778                     u117:
   630  0778  0BF0               	decfsz	??_blink2,f
   631  0779  2F78               	goto	u117
   632  077A  0BF1               	decfsz	??_blink2+1,f
   633  077B  2F78               	goto	u117
   634  077C  2F7D               	nop2
   635  077D                     l677:
   636                           
   637                           ;newmain.c: 63:             if(temp == 128)
   638  077D  3080               	movlw	128
   639  077E  0674               	xorwf	blink2@temp,w
   640  077F  1D03               	btfss	3,2
   641  0780  2F82               	goto	u41
   642  0781  2F83               	goto	u40
   643  0782                     u41:
   644  0782  2F84               	goto	l681
   645  0783                     u40:
   646  0783  2F90               	goto	l685
   647  0784                     l681:
   648                           
   649                           ;newmain.c: 65:             temp = (temp << 1);
   650  0784  0874               	movf	blink2@temp,w
   651  0785  00F0               	movwf	??_blink2
   652  0786  0770               	addwf	??_blink2,w
   653  0787  00F1               	movwf	??_blink2+1
   654  0788  0871               	movf	??_blink2+1,w
   655  0789  00F4               	movwf	blink2@temp
   656  078A                     l683:
   657                           
   658                           ;newmain.c: 59:         while(temp <= 128)
   659  078A  3081               	movlw	129
   660  078B  0274               	subwf	blink2@temp,w
   661  078C  1C03               	skipc
   662  078D  2F8F               	goto	u51
   663  078E  2F90               	goto	u50
   664  078F                     u51:
   665  078F  2F70               	goto	l675
   666  0790                     u50:
   667  0790                     l685:
   668                           
   669                           ;newmain.c: 67:         PORTB = 0;
   670  0790  1283               	bcf	3,5	;RP0=0, select bank0
   671  0791  1303               	bcf	3,6	;RP1=0, select bank0
   672  0792  0186               	clrf	6	;volatile
   673  0793                     l687:
   674                           
   675                           ;newmain.c: 68:         _delay((unsigned long)((100)*(4000000/4000.0)));
   676  0793  3082               	movlw	130
   677  0794  00F1               	movwf	??_blink2+1
   678  0795  30DD               	movlw	221
   679  0796  00F0               	movwf	??_blink2
   680  0797                     u127:
   681  0797  0BF0               	decfsz	??_blink2,f
   682  0798  2F97               	goto	u127
   683  0799  0BF1               	decfsz	??_blink2+1,f
   684  079A  2F97               	goto	u127
   685  079B  2F9C               	nop2
   686  079C                     l689:
   687                           
   688                           ;newmain.c: 69:     }
   689  079C  3001               	movlw	1
   690  079D  00F0               	movwf	??_blink2
   691  079E  0870               	movf	??_blink2,w
   692  079F  07F3               	addwf	blink2@i,f
   693  07A0                     l691:
   694  07A0  0872               	movf	blink2@time,w
   695  07A1  0273               	subwf	blink2@i,w
   696  07A2  1C03               	skipc
   697  07A3  2FA5               	goto	u61
   698  07A4  2FA6               	goto	u60
   699  07A5                     u61:
   700  07A5  2F6D               	goto	l26
   701  07A6                     u60:
   702  07A6                     l32:
   703  07A6  0008               	return
   704  07A7                     __end_of_blink2:
   705                           
   706                           	psect	text3
   707  071E                     __ptext3:	
   708 ;; *************** function _blink1 *****************
   709 ;; Defined at:
   710 ;;		line 39 in file "newmain.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  time            1    wreg     unsigned char 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  time            1    2[COMMON] unsigned char 
   715 ;;  temp            1    4[COMMON] unsigned char 
   716 ;;  i               1    3[COMMON] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         3       0       0       0       0
   728 ;;      Temps:          2       0       0       0       0
   729 ;;      Totals:         5       0       0       0       0
   730 ;;Total ram usage:        5 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739  071E                     _blink1:	
   740                           ;psect for function _blink1
   741                           
   742                           
   743                           ;incstack = 0
   744                           ; Regs used in _blink1: [wreg+status,2+status,0]
   745                           ;blink1@time stored from wreg
   746  071E  00F2               	movwf	blink1@time
   747  071F                     l657:
   748                           
   749                           ;newmain.c: 39: void blink1(unsigned char time);newmain.c: 40: {;newmain.c: 41:     for(
      +                          unsigned char i = 0; i < time; i++)
   750  071F  01F3               	clrf	blink1@i
   751  0720  2F3C               	goto	l671
   752  0721                     l659:
   753                           
   754                           ;newmain.c: 42:     {;newmain.c: 43:         unsigned char temp = 0;
   755  0721  01F4               	clrf	blink1@temp
   756  0722                     l661:	
   757                           ;newmain.c: 44:         while(temp <= 255)
   758                           
   759                           
   760                           ;newmain.c: 45:         {;newmain.c: 46:             PORTB = temp;
   761  0722  0874               	movf	blink1@temp,w
   762  0723  1283               	bcf	3,5	;RP0=0, select bank0
   763  0724  1303               	bcf	3,6	;RP1=0, select bank0
   764  0725  0086               	movwf	6	;volatile
   765                           
   766                           ;newmain.c: 47:             _delay((unsigned long)((100)*(4000000/4000.0)));
   767  0726  3082               	movlw	130
   768  0727  00F1               	movwf	??_blink1+1
   769  0728  30DD               	movlw	221
   770  0729  00F0               	movwf	??_blink1
   771  072A                     u137:
   772  072A  0BF0               	decfsz	??_blink1,f
   773  072B  2F2A               	goto	u137
   774  072C  0BF1               	decfsz	??_blink1+1,f
   775  072D  2F2A               	goto	u137
   776  072E  2F2F               	nop2
   777  072F                     l663:
   778                           
   779                           ;newmain.c: 48:             if(temp == 255)
   780  072F  0A74               	incf	blink1@temp,w
   781  0730  1D03               	btfss	3,2
   782  0731  2F33               	goto	u21
   783  0732  2F34               	goto	u20
   784  0733                     u21:
   785  0733  2F35               	goto	l667
   786  0734                     u20:
   787  0734  2F38               	goto	l669
   788  0735                     l667:
   789                           
   790                           ;newmain.c: 50:             temp = (temp << 1) + 0x01;
   791  0735  1403               	setc
   792  0736  0DF4               	rlf	blink1@temp,f
   793  0737  2F22               	goto	l661
   794  0738                     l669:
   795                           
   796                           ;newmain.c: 52:     }
   797  0738  3001               	movlw	1
   798  0739  00F0               	movwf	??_blink1
   799  073A  0870               	movf	??_blink1,w
   800  073B  07F3               	addwf	blink1@i,f
   801  073C                     l671:
   802  073C  0872               	movf	blink1@time,w
   803  073D  0273               	subwf	blink1@i,w
   804  073E  1C03               	skipc
   805  073F  2F41               	goto	u31
   806  0740  2F42               	goto	u30
   807  0741                     u31:
   808  0741  2F21               	goto	l659
   809  0742                     u30:
   810  0742                     l22:
   811  0742  0008               	return
   812  0743                     __end_of_blink1:
   813                           
   814                           	psect	text4
   815  0743                     __ptext4:	
   816 ;; *************** function _blink *****************
   817 ;; Defined at:
   818 ;;		line 29 in file "newmain.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  time            1    wreg     unsigned char 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  time            1    2[COMMON] unsigned char 
   823 ;;  i               1    3[COMMON] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   833 ;;      Params:         0       0       0       0       0
   834 ;;      Locals:         2       0       0       0       0
   835 ;;      Temps:          2       0       0       0       0
   836 ;;      Totals:         4       0       0       0       0
   837 ;;Total ram usage:        4 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846  0743                     _blink:	
   847                           ;psect for function _blink
   848                           
   849                           
   850                           ;incstack = 0
   851                           ; Regs used in _blink: [wreg+status,2+status,0]
   852                           ;blink@time stored from wreg
   853  0743  00F2               	movwf	blink@time
   854  0744                     l643:
   855                           
   856                           ;newmain.c: 29: void blink(unsigned char time);newmain.c: 30: {;newmain.c: 31:     for(u
      +                          nsigned char i = 0; i < time; i++)
   857  0744  01F3               	clrf	blink@i
   858  0745  2F63               	goto	l655
   859  0746                     l645:
   860                           
   861                           ;newmain.c: 32:     {;newmain.c: 33:         PORTB = 0;
   862  0746  1283               	bcf	3,5	;RP0=0, select bank0
   863  0747  1303               	bcf	3,6	;RP1=0, select bank0
   864  0748  0186               	clrf	6	;volatile
   865  0749                     l647:
   866                           
   867                           ;newmain.c: 34:         _delay((unsigned long)((100)*(4000000/4000.0)));
   868  0749  3082               	movlw	130
   869  074A  00F1               	movwf	??_blink+1
   870  074B  30DD               	movlw	221
   871  074C  00F0               	movwf	??_blink
   872  074D                     u147:
   873  074D  0BF0               	decfsz	??_blink,f
   874  074E  2F4D               	goto	u147
   875  074F  0BF1               	decfsz	??_blink+1,f
   876  0750  2F4D               	goto	u147
   877  0751  2F52               	nop2
   878  0752                     l649:
   879                           
   880                           ;newmain.c: 35:         PORTB = 0XFF;
   881  0752  30FF               	movlw	255
   882  0753  1283               	bcf	3,5	;RP0=0, select bank0
   883  0754  1303               	bcf	3,6	;RP1=0, select bank0
   884  0755  0086               	movwf	6	;volatile
   885  0756                     l651:
   886                           
   887                           ;newmain.c: 36:         _delay((unsigned long)((100)*(4000000/4000.0)));
   888  0756  3082               	movlw	130
   889  0757  00F1               	movwf	??_blink+1
   890  0758  30DD               	movlw	221
   891  0759  00F0               	movwf	??_blink
   892  075A                     u157:
   893  075A  0BF0               	decfsz	??_blink,f
   894  075B  2F5A               	goto	u157
   895  075C  0BF1               	decfsz	??_blink+1,f
   896  075D  2F5A               	goto	u157
   897  075E  2F5F               	nop2
   898  075F                     l653:
   899                           
   900                           ;newmain.c: 37:     }
   901  075F  3001               	movlw	1
   902  0760  00F0               	movwf	??_blink
   903  0761  0870               	movf	??_blink,w
   904  0762  07F3               	addwf	blink@i,f
   905  0763                     l655:
   906  0763  0872               	movf	blink@time,w
   907  0764  0273               	subwf	blink@i,w
   908  0765  1C03               	skipc
   909  0766  2F68               	goto	u11
   910  0767  2F69               	goto	u10
   911  0768                     u11:
   912  0768  2F46               	goto	l645
   913  0769                     u10:
   914  0769                     l12:
   915  0769  0008               	return
   916  076A                     __end_of_blink:
   917  007E                     btemp	set	126	;btemp
   918  007E                     wtemp0	set	126
   919                           
   920                           	psect	idloc
   921                           
   922                           ;Config register IDLOC0 @ 0x2000
   923                           ;	unspecified, using default values
   924  2000                     	org	8192
   925  2000  3FFF               	dw	16383
   926                           
   927                           ;Config register IDLOC1 @ 0x2001
   928                           ;	unspecified, using default values
   929  2001                     	org	8193
   930  2001  3FFF               	dw	16383
   931                           
   932                           ;Config register IDLOC2 @ 0x2002
   933                           ;	unspecified, using default values
   934  2002                     	org	8194
   935  2002  3FFF               	dw	16383
   936                           
   937                           ;Config register IDLOC3 @ 0x2003
   938                           ;	unspecified, using default values
   939  2003                     	org	8195
   940  2003  3FFF               	dw	16383
   941                           
   942                           	psect	config
   943                           
   944                           ;Config register CONFIG1 @ 0x2007
   945                           ;	Oscillator Selection bits
   946                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   947                           ;	Watchdog Timer Enable bit
   948                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   949                           ;	Power-up Timer Enable bit
   950                           ;	PWRTE = OFF, PWRT disabled
   951                           ;	RE3/MCLR pin function select bit
   952                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   953                           ;	Code Protection bit
   954                           ;	CP = OFF, Program memory code protection is disabled
   955                           ;	Data Code Protection bit
   956                           ;	CPD = OFF, Data memory code protection is disabled
   957                           ;	Brown Out Reset Selection bits
   958                           ;	BOREN = OFF, BOR disabled
   959                           ;	Internal External Switchover bit
   960                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   961                           ;	Fail-Safe Clock Monitor Enabled bit
   962                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   963                           ;	Low Voltage Programming Enable bit
   964                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   965                           ;	In-Circuit Debugger Mode bit
   966                           ;	DEBUG = 0x1, unprogrammed default
   967  2007                     	org	8199
   968  2007  20F4               	dw	8436
   969                           
   970                           ;Config register CONFIG2 @ 0x2008
   971                           ;	Brown-out Reset Selection bit
   972                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   973                           ;	Flash Program Memory Self Write Enable bits
   974                           ;	WRT = OFF, Write protection off
   975  2008                     	org	8200
   976  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_blink3

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                              _blink
                             _blink1
                             _blink2
                             _blink3
 ---------------------------------------------------------------------------------
 (1) _blink3                                              10    10      0     165
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) _blink2                                               5     5      0      90
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _blink1                                               5     5      0      75
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _blink
   _blink1
   _blink2
   _blink3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Mar 07 12:20:59 2022

                     l12 0769                       l22 0742                       l32 07A6  
                     l26 076D                       l43 07FB                       l37 07AC  
                     l39 07CC                       u10 0769                       u11 0768  
                     u20 0734                       u21 0733                       u30 0742  
                     u31 0741                       u40 0783                       u41 0782  
                     u50 0790                       u51 078F                       u60 07A6  
                     u61 07A5                       u70 07E0                       u71 07DF  
                     u80 07EE                       u81 07ED                       u90 07FB  
                     u91 07FA                       u75 07DC                      l701 07AE  
                    l711 07E4                      l703 07B0                      l713 07E8  
                    l705 07B5                      l721 06FF                      l651 0756  
                    l643 0744                      l715 07EE                      l707 07B9  
                    l723 0702                      l653 075F                      l645 0746  
                    l661 0722                      l717 07F1                      l709 07E0  
                    l725 0708                      l647 0749                      l655 0763  
                    l663 072F                      l671 073C                      l719 07F5  
                    l727 070E                      l649 0752                      l657 071F  
                    l681 0784                      l673 076B                      l729 0714  
                    l667 0735                      l659 0721                      l675 0770  
                    l683 078A                      l691 07A0                      l669 0738  
                    l685 0790                      l677 077D                      l693 07A8  
                    l687 0793                      l695 07AA                      l689 079C  
                    u107 07BD                      u117 0778                      u127 0797  
                    u137 072A                      u147 074D                      u157 075A  
                   _main 06FF                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  _blink 0743                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 071E                   ??_main 007A  
                 ?_blink 0070                   _blink1 071E                   _blink2 076A  
                 _blink3 07A7                   blink@i 0073  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_blink 076A                  ??_blink 0070  
             __pmaintext 06FF                  ?_blink1 0070                  ?_blink2 0070  
                ?_blink3 0070                  __ptext1 07A7                  __ptext2 076A  
                __ptext3 071E                  __ptext4 0743                  blink1@i 0073  
                blink2@i 0073                  blink3@i 0074                  blink3@j 0079  
                blink3@k 0076                  blink3@y 0077               blink1@temp 0074  
             blink1@time 0072               blink2@temp 0074               blink2@time 0072  
             blink3@time 0073               blink3@stop 0075     end_of_initialization 07FC  
         __end_of_blink1 0743           __end_of_blink2 07A7           __end_of_blink3 07FC  
    start_initialization 07FC                 ??_blink1 0070                 ??_blink2 0070  
               ??_blink3 0070                ___latbits 0002                blink3@run 0078  
              blink@time 0072  
