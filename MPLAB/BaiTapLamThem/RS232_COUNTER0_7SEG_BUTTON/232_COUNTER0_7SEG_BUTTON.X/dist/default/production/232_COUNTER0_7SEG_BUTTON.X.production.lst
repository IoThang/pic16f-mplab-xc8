

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Apr 08 22:14:08 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataBANK0
   210  073C                     __pidataBANK0:
   211                           
   212                           ;initializer for _maLed
   213  073C  3440               	retlw	64
   214  073D  3479               	retlw	121
   215  073E  3424               	retlw	36
   216  073F  3430               	retlw	48
   217  0740  3419               	retlw	25
   218  0741  3412               	retlw	18
   219  0742  3402               	retlw	2
   220  0743  3478               	retlw	120
   221  0744  3400               	retlw	0
   222  0745  3410               	retlw	16
   223  0005                     _PORTAbits	set	5
   224  0006                     _PORTB	set	6
   225  0008                     _PORTD	set	8
   226  001A                     _RCREG	set	26
   227  0019                     _TXREG	set	25
   228  0065                     _RCIF	set	101
   229  00C1                     _OERR	set	193
   230  0064                     _TXIF	set	100
   231  00C6                     _RX9	set	198
   232  00C4                     _CREN	set	196
   233  00C7                     _SPEN	set	199
   234  0086                     _TRISB	set	134
   235  0088                     _TRISD	set	136
   236  0085                     _TRISA	set	133
   237  0099                     _SPBRG	set	153
   238  04C6                     _TX9	set	1222
   239  04C5                     _TXEN	set	1221
   240  04C4                     _SYNC	set	1220
   241  04C2                     _BRGH	set	1218
   242  043F                     _TRISC7	set	1087
   243  043E                     _TRISC6	set	1086
   244  0188                     _ANSEL	set	392
   245  0189                     _ANSELH	set	393
   246                           
   247                           	psect	cinit
   248  07EC                     start_initialization:	
   249                           ; #config settings
   250                           
   251  07EC                     __initialization:
   252                           
   253                           ; Initialize objects allocated to BANK0
   254  07EC  1383               	bcf	3,7	;select IRP bank0
   255  07ED  302A               	movlw	low (__pdataBANK0+10)
   256  07EE  00FD               	movwf	btemp+-1
   257  07EF  3007               	movlw	high __pidataBANK0
   258  07F0  00FE               	movwf	btemp
   259  07F1  303C               	movlw	low __pidataBANK0
   260  07F2  00FF               	movwf	btemp+1
   261  07F3  3020               	movlw	low __pdataBANK0
   262  07F4  0084               	movwf	4
   263  07F5  120A  118A  274A  120A  118A  	fcall	init_ram0
   264                           
   265                           ; Clear objects allocated to COMMON
   266  07FA  01F3               	clrf	__pbssCOMMON& (0+127)
   267  07FB  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   268  07FC                     end_of_initialization:	
   269                           ;End of C runtime variable initialization code
   270                           
   271  07FC                     __end_of__initialization:
   272  07FC  0183               	clrf	3
   273  07FD  120A  118A  2F71   	ljmp	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMMON
   276  0073                     __pbssCOMMON:
   277  0073                     _j:
   278  0073                     	ds	1
   279  0074                     _i:
   280  0074                     	ds	1
   281                           
   282                           	psect	dataBANK0
   283  0020                     __pdataBANK0:
   284  0020                     _maLed:
   285  0020                     	ds	10
   286                           
   287                           	psect	inittext
   288  0746                     init_fetch0:	
   289                           ;	Called with low address in FSR and high address in W
   290                           
   291  0746  087E               	movf	btemp,w
   292  0747  008A               	movwf	10
   293  0748  087F               	movf	btemp+1,w
   294  0749  0082               	movwf	2
   295  074A                     init_ram0:	
   296                           ;Called with:
   297                           ;	high address of idata address in btemp 
   298                           ;	low address of idata address in btemp+1 
   299                           ;	low address of data in FSR
   300                           ;	high address + 1 of data in btemp-1
   301                           
   302  074A  120A  118A  2746  120A  118A  	fcall	init_fetch0
   303  074F  0080               	movwf	0
   304  0750  0A84               	incf	4,f
   305  0751  0804               	movf	4,w
   306  0752  067D               	xorwf	btemp+-1,w
   307  0753  1903               	btfsc	3,2
   308  0754  3400               	retlw	0
   309  0755  0AFF               	incf	btemp+1,f
   310  0756  1903               	btfsc	3,2
   311  0757  0AFE               	incf	btemp,f
   312  0758  2F4A               	goto	init_ram0
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:
   316  0070                     ?_Initialize_UART:
   317  0070                     ??_Initialize_UART:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_UART_send_char:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ??_UART_send_char:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_main:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     UART_send_char@bt:	
   330                           ; 1 bytes @ 0x0
   331                           
   332                           
   333                           ; 1 bytes @ 0x0
   334  0070                     	ds	1
   335  0071                     ??_main:
   336                           
   337                           ; 1 bytes @ 0x1
   338  0071                     	ds	2
   339                           
   340                           	psect	maintext
   341  0771                     __pmaintext:	
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 78 in file "newmain.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : B00/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0
   363 ;;      Temps:          2       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels required when called: 1
   367 ;; This function calls:
   368 ;;		_Initialize_UART
   369 ;;		_UART_send_char
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375  0771                     _main:	
   376                           ;psect for function _main
   377                           
   378  0771                     l798:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   381                           
   382                           
   383                           ;newmain.c: 79:     TRISA = 0b00000011;
   384  0771  3003               	movlw	3
   385  0772  1683               	bsf	3,5	;RP0=1, select bank1
   386  0773  1303               	bcf	3,6	;RP1=0, select bank1
   387  0774  0085               	movwf	5	;volatile
   388  0775                     l800:
   389                           
   390                           ;newmain.c: 80:     TRISD = 0;
   391  0775  0188               	clrf	8	;volatile
   392  0776                     l802:
   393                           
   394                           ;newmain.c: 81:     TRISB = 0;
   395  0776  0186               	clrf	6	;volatile
   396  0777                     l804:
   397                           
   398                           ;newmain.c: 82:     ANSELH = 0;
   399  0777  1683               	bsf	3,5	;RP0=1, select bank3
   400  0778  1703               	bsf	3,6	;RP1=1, select bank3
   401  0779  0189               	clrf	9	;volatile
   402  077A                     l806:
   403                           
   404                           ;newmain.c: 83:     ANSEL = 0;
   405  077A  0188               	clrf	8	;volatile
   406                           
   407                           ;newmain.c: 84:     PORTD = maLed[0];
   408  077B  1283               	bcf	3,5	;RP0=0, select bank0
   409  077C  1303               	bcf	3,6	;RP1=0, select bank0
   410  077D  0820               	movf	_maLed,w
   411  077E  0088               	movwf	8	;volatile
   412                           
   413                           ;newmain.c: 85:     PORTB = maLed[0];
   414  077F  0820               	movf	_maLed,w
   415  0780  0086               	movwf	6	;volatile
   416  0781                     l808:
   417                           
   418                           ;newmain.c: 86:     Initialize_UART();
   419  0781  120A  118A  2759  120A  118A  	fcall	_Initialize_UART
   420  0786                     l810:
   421                           
   422                           ;newmain.c: 88:     {;newmain.c: 89:         if(PORTAbits.RA0 == 0)
   423  0786  1283               	bcf	3,5	;RP0=0, select bank0
   424  0787  1303               	bcf	3,6	;RP1=0, select bank0
   425  0788  1805               	btfsc	5,0	;volatile
   426  0789  2F8B               	goto	u151
   427  078A  2F8C               	goto	u150
   428  078B                     u151:
   429  078B  2FB8               	goto	l82
   430  078C                     u150:
   431  078C                     l812:
   432                           
   433                           ;newmain.c: 90:         {;newmain.c: 91:             _delay((unsigned long)((20)*(800000
      +                          0/4000.0)));
   434  078C  3034               	movlw	52
   435  078D  00F2               	movwf	??_main+1
   436  078E  30F1               	movlw	241
   437  078F  00F1               	movwf	??_main
   438  0790                     u237:
   439  0790  0BF1               	decfsz	??_main,f
   440  0791  2F90               	goto	u237
   441  0792  0BF2               	decfsz	??_main+1,f
   442  0793  2F90               	goto	u237
   443  0794  2F95               	nop2
   444  0795                     l814:
   445                           
   446                           ;newmain.c: 92:             if(PORTAbits.RA0 == 0)
   447  0795  1283               	bcf	3,5	;RP0=0, select bank0
   448  0796  1303               	bcf	3,6	;RP1=0, select bank0
   449  0797  1805               	btfsc	5,0	;volatile
   450  0798  2F9A               	goto	u161
   451  0799  2F9B               	goto	u160
   452  079A                     u161:
   453  079A  2FB8               	goto	l82
   454  079B                     u160:
   455  079B                     l816:
   456                           
   457                           ;newmain.c: 93:             {;newmain.c: 94:                 i++;
   458  079B  3001               	movlw	1
   459  079C  00F1               	movwf	??_main
   460  079D  0871               	movf	??_main,w
   461  079E  07F4               	addwf	_i,f
   462  079F                     l818:
   463                           
   464                           ;newmain.c: 95:                 PORTD = maLed[i];
   465  079F  0874               	movf	_i,w
   466  07A0  3E20               	addlw	(low (_maLed| 0))& (0+255)
   467  07A1  0084               	movwf	4
   468  07A2  1383               	bcf	3,7	;select IRP bank0
   469  07A3  0800               	movf	0,w
   470  07A4  0088               	movwf	8	;volatile
   471  07A5                     l820:
   472                           
   473                           ;newmain.c: 96:                 UART_send_char('T');
   474  07A5  3054               	movlw	84
   475  07A6  120A  118A  2732  120A  118A  	fcall	_UART_send_char
   476  07AB                     l822:
   477                           
   478                           ;newmain.c: 97:                 if(i == 9)
   479  07AB  3009               	movlw	9
   480  07AC  0674               	xorwf	_i,w
   481  07AD  1D03               	btfss	3,2
   482  07AE  2FB0               	goto	u171
   483  07AF  2FB1               	goto	u170
   484  07B0                     u171:
   485  07B0  2FB2               	goto	l85
   486  07B1                     u170:
   487  07B1                     l824:
   488                           
   489                           ;newmain.c: 98:                     i = 0;
   490  07B1  01F4               	clrf	_i
   491  07B2                     l85:
   492  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   493  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   494  07B4  1C05               	btfss	5,0	;volatile
   495  07B5  2FB7               	goto	u181
   496  07B6  2FB8               	goto	u180
   497  07B7                     u181:
   498  07B7  2FB2               	goto	l85
   499  07B8                     u180:
   500  07B8                     l82:	
   501                           ;newmain.c: 101:         }
   502                           
   503                           
   504                           ;newmain.c: 102:         if(PORTAbits.RA1 == 0)
   505  07B8  1885               	btfsc	5,1	;volatile
   506  07B9  2FBB               	goto	u191
   507  07BA  2FBC               	goto	u190
   508  07BB                     u191:
   509  07BB  2F86               	goto	l810
   510  07BC                     u190:
   511  07BC                     l826:
   512                           
   513                           ;newmain.c: 103:         {;newmain.c: 104:             _delay((unsigned long)((20)*(8000
      +                          000/4000.0)));
   514  07BC  3034               	movlw	52
   515  07BD  00F2               	movwf	??_main+1
   516  07BE  30F1               	movlw	241
   517  07BF  00F1               	movwf	??_main
   518  07C0                     u247:
   519  07C0  0BF1               	decfsz	??_main,f
   520  07C1  2FC0               	goto	u247
   521  07C2  0BF2               	decfsz	??_main+1,f
   522  07C3  2FC0               	goto	u247
   523  07C4  2FC5               	nop2
   524  07C5                     l828:
   525                           
   526                           ;newmain.c: 105:             if(PORTAbits.RA1 == 0)
   527  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   528  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   529  07C7  1885               	btfsc	5,1	;volatile
   530  07C8  2FCA               	goto	u201
   531  07C9  2FCB               	goto	u200
   532  07CA                     u201:
   533  07CA  2F86               	goto	l810
   534  07CB                     u200:
   535  07CB                     l830:
   536                           
   537                           ;newmain.c: 106:             {;newmain.c: 107:                 j++;
   538  07CB  3001               	movlw	1
   539  07CC  00F1               	movwf	??_main
   540  07CD  0871               	movf	??_main,w
   541  07CE  07F3               	addwf	_j,f
   542  07CF                     l832:
   543                           
   544                           ;newmain.c: 108:                 PORTB = maLed[j];
   545  07CF  0873               	movf	_j,w
   546  07D0  3E20               	addlw	(low (_maLed| 0))& (0+255)
   547  07D1  0084               	movwf	4
   548  07D2  1383               	bcf	3,7	;select IRP bank0
   549  07D3  0800               	movf	0,w
   550  07D4  0086               	movwf	6	;volatile
   551  07D5                     l834:
   552                           
   553                           ;newmain.c: 109:                 UART_send_char('X');
   554  07D5  3058               	movlw	88
   555  07D6  120A  118A  2732  120A  118A  	fcall	_UART_send_char
   556  07DB                     l836:
   557                           
   558                           ;newmain.c: 110:                 if(j == 9)
   559  07DB  3009               	movlw	9
   560  07DC  0673               	xorwf	_j,w
   561  07DD  1D03               	btfss	3,2
   562  07DE  2FE0               	goto	u211
   563  07DF  2FE1               	goto	u210
   564  07E0                     u211:
   565  07E0  2FE2               	goto	l91
   566  07E1                     u210:
   567  07E1                     l838:
   568                           
   569                           ;newmain.c: 111:                     j = 0;
   570  07E1  01F3               	clrf	_j
   571  07E2                     l91:
   572  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   573  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   574  07E4  1C85               	btfss	5,1	;volatile
   575  07E5  2FE7               	goto	u221
   576  07E6  2FE8               	goto	u220
   577  07E7                     u221:
   578  07E7  2FE2               	goto	l91
   579  07E8                     u220:
   580  07E8  2F86               	goto	l810
   581  07E9  120A  118A  2800   	ljmp	start
   582  07EC                     __end_of_main:
   583                           
   584                           	psect	text1
   585  0732                     __ptext1:	
   586 ;; *************** function _UART_send_char *****************
   587 ;; Defined at:
   588 ;;		line 44 in file "newmain.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  bt              1    wreg     unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  bt              1    0[COMMON] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         1       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         1       0       0       0       0
   606 ;;Total ram usage:        1 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;;		_UART_send_string
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616  0732                     _UART_send_char:	
   617                           ;psect for function _UART_send_char
   618                           
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _UART_send_char: [wreg]
   622                           ;UART_send_char@bt stored from wreg
   623  0732  00F0               	movwf	UART_send_char@bt
   624  0733                     l786:
   625  0733                     l56:	
   626                           ;newmain.c: 44: void UART_send_char(char bt);newmain.c: 45: {;newmain.c: 46:     while(!
      +                          TXIF);
   627                           
   628  0733  1283               	bcf	3,5	;RP0=0, select bank0
   629  0734  1303               	bcf	3,6	;RP1=0, select bank0
   630  0735  1E0C               	btfss	12,4	;volatile
   631  0736  2F38               	goto	u131
   632  0737  2F39               	goto	u130
   633  0738                     u131:
   634  0738  2F33               	goto	l56
   635  0739                     u130:
   636  0739                     l788:
   637                           
   638                           ;newmain.c: 47:     TXREG = bt;
   639  0739  0870               	movf	UART_send_char@bt,w
   640  073A  0099               	movwf	25	;volatile
   641  073B                     l59:
   642  073B  0008               	return
   643  073C                     __end_of_UART_send_char:
   644                           
   645                           	psect	text2
   646  0759                     __ptext2:	
   647 ;; *************** function _Initialize_UART *****************
   648 ;; Defined at:
   649 ;;		line 31 in file "newmain.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676  0759                     _Initialize_UART:	
   677                           ;psect for function _Initialize_UART
   678                           
   679  0759                     l768:	
   680                           ;incstack = 0
   681                           ; Regs used in _Initialize_UART: [wreg]
   682                           
   683                           
   684                           ;newmain.c: 33:     TRISC6 = 0;
   685  0759  1683               	bsf	3,5	;RP0=1, select bank1
   686  075A  1303               	bcf	3,6	;RP1=0, select bank1
   687  075B  1307               	bcf	7,6	;volatile
   688                           
   689                           ;newmain.c: 34:     TRISC7 = 1;
   690  075C  1787               	bsf	7,7	;volatile
   691  075D                     l770:
   692                           
   693                           ;newmain.c: 35:     SPBRG = ((8000000/16)/9600) - 1;
   694  075D  3033               	movlw	51
   695  075E  0099               	movwf	25	;volatile
   696  075F                     l772:
   697                           
   698                           ;newmain.c: 36:     BRGH = 1;
   699  075F  1518               	bsf	24,2	;volatile
   700  0760                     l774:
   701                           
   702                           ;newmain.c: 37:     SYNC = 0;
   703  0760  1218               	bcf	24,4	;volatile
   704  0761                     l776:
   705                           
   706                           ;newmain.c: 38:     SPEN = 1;
   707  0761  1283               	bcf	3,5	;RP0=0, select bank0
   708  0762  1303               	bcf	3,6	;RP1=0, select bank0
   709  0763  1798               	bsf	24,7	;volatile
   710  0764                     l778:
   711                           
   712                           ;newmain.c: 39:     TXEN = 1;
   713  0764  1683               	bsf	3,5	;RP0=1, select bank1
   714  0765  1303               	bcf	3,6	;RP1=0, select bank1
   715  0766  1698               	bsf	24,5	;volatile
   716  0767                     l780:
   717                           
   718                           ;newmain.c: 40:     CREN = 1;
   719  0767  1283               	bcf	3,5	;RP0=0, select bank0
   720  0768  1303               	bcf	3,6	;RP1=0, select bank0
   721  0769  1618               	bsf	24,4	;volatile
   722  076A                     l782:
   723                           
   724                           ;newmain.c: 41:     TX9 = 0;
   725  076A  1683               	bsf	3,5	;RP0=1, select bank1
   726  076B  1303               	bcf	3,6	;RP1=0, select bank1
   727  076C  1318               	bcf	24,6	;volatile
   728  076D                     l784:
   729                           
   730                           ;newmain.c: 42:     RX9 = 0;
   731  076D  1283               	bcf	3,5	;RP0=0, select bank0
   732  076E  1303               	bcf	3,6	;RP1=0, select bank0
   733  076F  1318               	bcf	24,6	;volatile
   734  0770                     l53:
   735  0770  0008               	return
   736  0771                     __end_of_Initialize_UART:
   737  007E                     btemp	set	126	;btemp
   738  007E                     wtemp0	set	126
   739                           
   740                           	psect	idloc
   741                           
   742                           ;Config register IDLOC0 @ 0x2000
   743                           ;	unspecified, using default values
   744  2000                     	org	8192
   745  2000  3FFF               	dw	16383
   746                           
   747                           ;Config register IDLOC1 @ 0x2001
   748                           ;	unspecified, using default values
   749  2001                     	org	8193
   750  2001  3FFF               	dw	16383
   751                           
   752                           ;Config register IDLOC2 @ 0x2002
   753                           ;	unspecified, using default values
   754  2002                     	org	8194
   755  2002  3FFF               	dw	16383
   756                           
   757                           ;Config register IDLOC3 @ 0x2003
   758                           ;	unspecified, using default values
   759  2003                     	org	8195
   760  2003  3FFF               	dw	16383
   761                           
   762                           	psect	config
   763                           
   764                           ;Config register CONFIG1 @ 0x2007
   765                           ;	Oscillator Selection bits
   766                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   767                           ;	Watchdog Timer Enable bit
   768                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   769                           ;	Power-up Timer Enable bit
   770                           ;	PWRTE = OFF, PWRT disabled
   771                           ;	RE3/MCLR pin function select bit
   772                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   773                           ;	Code Protection bit
   774                           ;	CP = OFF, Program memory code protection is disabled
   775                           ;	Data Code Protection bit
   776                           ;	CPD = OFF, Data memory code protection is disabled
   777                           ;	Brown Out Reset Selection bits
   778                           ;	BOREN = OFF, BOR disabled
   779                           ;	Internal External Switchover bit
   780                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   781                           ;	Fail-Safe Clock Monitor Enabled bit
   782                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   783                           ;	Low Voltage Programming Enable bit
   784                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   785                           ;	In-Circuit Debugger Mode bit
   786                           ;	DEBUG = 0x1, unprogrammed default
   787  2007                     	org	8199
   788  2007  20D4               	dw	8404
   789                           
   790                           ;Config register CONFIG2 @ 0x2008
   791                           ;	Brown-out Reset Selection bit
   792                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   793                           ;	Flash Program Memory Self Write Enable bits
   794                           ;	WRT = OFF, Write protection off
   795  2008                     	org	8200
   796  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      22
                                              1 COMMON     2     2      0
                    _Initialize_UART
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (1) _UART_send_char                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_UART
   _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Apr 08 22:14:08 2022

                      _i 0074                        _j 0073                        pc 0002  
                     l53 0770                       l56 0733                       l82 07B8  
                     l59 073B                       l91 07E2                       l85 07B2  
                     fsr 0004                      l800 0775                      l810 0786  
                    l802 0776                      l820 07A5                      l812 078C  
                    l804 0777                      l830 07CB                      l822 07AB  
                    l814 0795                      l806 077A                      l832 07CF  
                    l824 07B1                      l816 079B                      l808 0781  
                    l770 075D                      l834 07D5                      l826 07BC  
                    l818 079F                      l780 0767                      l772 075F  
                    l836 07DB                      l828 07C5                      l782 076A  
                    l774 0760                      l838 07E1                      l784 076D  
                    l776 0761                      l768 0759                      l778 0764  
                    l786 0733                      l788 0739                      l798 0771  
                    u200 07CB                      u201 07CA                      u130 0739  
                    u210 07E1                      u131 0738                      u211 07E0  
                    u220 07E8                      u221 07E7                      u150 078C  
                    u151 078B                      u160 079B                      u161 079A  
                    u170 07B1                      u171 07B0                      u180 07B8  
                    u181 07B7                      u237 0790                      u190 07BC  
                    u247 07C0                      u191 07BB                      _RX9 00C6  
                    _TX9 04C6                      fsr0 0004                      indf 0000  
                   _BRGH 04C2                     _CREN 00C4                     _RCIF 0065  
                   _OERR 00C1                     _SPEN 00C7                     _TXEN 04C5  
                   _TXIF 0064                     _SYNC 04C4                     _main 0771  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  _maLed 0020                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EC             __end_of_main 07EC  
                 ??_main 0071                   _ANSELH 0189                   _TRISC6 043E  
                 _TRISC7 043F  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 073C               __pmaintext 0771                  __ptext1 0732  
                __ptext2 0759        ??_Initialize_UART 0070     end_of_initialization 07FC  
              _PORTAbits 0005      start_initialization 07EC           _UART_send_char 0732  
             init_fetch0 0746              __pdataBANK0 0020   __end_of_UART_send_char 073C  
            __pbssCOMMON 0073                ___latbits 0002          _Initialize_UART 0759  
       UART_send_char@bt 0070          ?_UART_send_char 0070  __end_of_Initialize_UART 0771  
               init_ram0 074A         ?_Initialize_UART 0070         ??_UART_send_char 0070  
