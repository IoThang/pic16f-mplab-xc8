

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Nov 04 12:14:11 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0001                     _TMR0	set	1
   208  0040                     _RD0	set	64
   209  005D                     _T0IE	set	93
   210  005A                     _T0IF	set	90
   211  005F                     _GIE	set	95
   212  005E                     _PEIE	set	94
   213  0088                     _TRISD	set	136
   214  040B                     _PSA	set	1035
   215  040D                     _T0CS	set	1037
   216  0408                     _PS0	set	1032
   217  0409                     _PS1	set	1033
   218  040A                     _PS2	set	1034
   219  0189                     _ANSELH	set	393
   220  0188                     _ANSEL	set	392
   221                           
   222                           	psect	cinit
   223  000F                     start_initialization:	
   224                           ; #config settings
   225                           
   226  000F                     __initialization:
   227                           
   228                           ; Clear objects allocated to COMMON
   229  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   230  0010                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  0010                     __end_of__initialization:
   234  0010  0183               	clrf	3
   235  0011  120A  118A  2852   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238  0073                     __pbssCOMMON:
   239  0073                     _cnt:
   240  0073                     	ds	1
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_TIMER0_Init:
   245  0070                     ?_config:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_ISR:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ??_ISR:	
   255                           ; 1 bytes @ 0x0
   256                           
   257                           
   258                           ; 1 bytes @ 0x0
   259  0070                     	ds	3
   260  0073                     ??_TIMER0_Init:
   261  0073                     ??_config:	
   262                           ; 1 bytes @ 0x3
   263                           
   264  0073                     ??_main:	
   265                           ; 1 bytes @ 0x3
   266                           
   267                           
   268                           	psect	maintext
   269  0052                     __pmaintext:	
   270                           ; 1 bytes @ 0x3
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 46 in file "newmain.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : B00/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   290 ;;      Params:         0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0
   293 ;;      Totals:         0       0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels required when called: 3
   296 ;; This function calls:
   297 ;;		_config
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303  0052                     _main:	
   304                           ;psect for function _main
   305                           
   306  0052                     l669:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   309                           
   310                           
   311                           ;newmain.c: 47:     config();
   312  0052  120A  118A  2035  120A  118A  	fcall	_config
   313  0057                     l41:	
   314                           ;newmain.c: 48:     while(1)
   315                           
   316  0057                     l42:	
   317                           ;newmain.c: 49:     {;newmain.c: 50:     }
   318                           
   319  0057  2857               	goto	l41
   320  0058  120A  118A  280C   	ljmp	start
   321  005B                     __end_of_main:
   322                           
   323                           	psect	text1
   324  0035                     __ptext1:	
   325 ;; *************** function _config *****************
   326 ;; Defined at:
   327 ;;		line 34 in file "newmain.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, pclath, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   341 ;;      Params:         0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels used: 1
   347 ;; Hardware stack levels required when called: 2
   348 ;; This function calls:
   349 ;;		_TIMER0_Init
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355  0035                     _config:	
   356                           ;psect for function _config
   357                           
   358  0035                     l655:	
   359                           ;incstack = 0
   360                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
   361                           
   362                           
   363                           ;newmain.c: 36:     TIMER0_Init();
   364  0035  120A  118A  2046  120A  118A  	fcall	_TIMER0_Init
   365  003A                     l657:
   366                           
   367                           ;newmain.c: 37:     TRISD = 0;
   368  003A  1683               	bsf	3,5	;RP0=1, select bank1
   369  003B  1303               	bcf	3,6	;RP1=0, select bank1
   370  003C  0188               	clrf	8	;volatile
   371  003D                     l659:
   372                           
   373                           ;newmain.c: 38:     ANSEL = ANSELH = 0;
   374  003D  1683               	bsf	3,5	;RP0=1, select bank3
   375  003E  1703               	bsf	3,6	;RP1=1, select bank3
   376  003F  0189               	clrf	9	;volatile
   377  0040  0188               	clrf	8	;volatile
   378  0041                     l661:
   379                           
   380                           ;newmain.c: 41:     PEIE = 1;
   381  0041  170B               	bsf	11,6	;volatile
   382  0042                     l663:
   383                           
   384                           ;newmain.c: 42:  GIE = 1;
   385  0042  178B               	bsf	11,7	;volatile
   386  0043                     l665:
   387                           
   388                           ;newmain.c: 43:     T0IF = 0;
   389  0043  110B               	bcf	11,2	;volatile
   390  0044                     l667:
   391                           
   392                           ;newmain.c: 44:     T0IE = 1;
   393  0044  168B               	bsf	11,5	;volatile
   394  0045                     l36:
   395  0045  0008               	return
   396  0046                     __end_of_config:
   397                           
   398                           	psect	text2
   399  0046                     __ptext2:	
   400 ;; *************** function _TIMER0_Init *****************
   401 ;; Defined at:
   402 ;;		line 25 in file "newmain.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 1
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		_config
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430  0046                     _TIMER0_Init:	
   431                           ;psect for function _TIMER0_Init
   432                           
   433  0046                     l643:	
   434                           ;incstack = 0
   435                           ; Regs used in _TIMER0_Init: [wreg]
   436                           
   437                           
   438                           ;newmain.c: 27:     TMR0 = 6;
   439  0046  3006               	movlw	6
   440  0047  1283               	bcf	3,5	;RP0=0, select bank0
   441  0048  1303               	bcf	3,6	;RP1=0, select bank0
   442  0049  0081               	movwf	1	;volatile
   443  004A                     l645:
   444                           
   445                           ;newmain.c: 28:     PS2 = 1;
   446  004A  1683               	bsf	3,5	;RP0=1, select bank1
   447  004B  1303               	bcf	3,6	;RP1=0, select bank1
   448  004C  1501               	bsf	1,2	;volatile
   449  004D                     l647:
   450                           
   451                           ;newmain.c: 29:     PS1 = 0;
   452  004D  1081               	bcf	1,1	;volatile
   453  004E                     l649:
   454                           
   455                           ;newmain.c: 30:     PS0 = 1;
   456  004E  1401               	bsf	1,0	;volatile
   457  004F                     l651:
   458                           
   459                           ;newmain.c: 31:     T0CS = 0;
   460  004F  1281               	bcf	1,5	;volatile
   461  0050                     l653:
   462                           
   463                           ;newmain.c: 32:     PSA = 0;
   464  0050  1181               	bcf	1,3	;volatile
   465  0051                     l33:
   466  0051  0008               	return
   467  0052                     __end_of_TIMER0_Init:
   468                           
   469                           	psect	text3
   470  0014                     __ptext3:	
   471 ;; *************** function _ISR *****************
   472 ;; Defined at:
   473 ;;		line 53 in file "newmain.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          3       0       0       0       0
   490 ;;      Totals:         3       0       0       0       0
   491 ;;Total ram usage:        3 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		Interrupt level 1
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500  0014                     _ISR:	
   501                           ;psect for function _ISR
   502                           
   503  0014                     i1l671:
   504                           
   505                           ;newmain.c: 55:     if(T0IE && T0IF)
   506  0014  1E8B               	btfss	11,5	;volatile
   507  0015  2817               	goto	u1_21
   508  0016  2818               	goto	u1_20
   509  0017                     u1_21:
   510  0017  282D               	goto	i1l685
   511  0018                     u1_20:
   512  0018                     i1l673:
   513  0018  1D0B               	btfss	11,2	;volatile
   514  0019  281B               	goto	u2_21
   515  001A  281C               	goto	u2_20
   516  001B                     u2_21:
   517  001B  282D               	goto	i1l685
   518  001C                     u2_20:
   519  001C                     i1l675:
   520                           
   521                           ;newmain.c: 56:     {;newmain.c: 57:         cnt++;
   522  001C  3001               	movlw	1
   523  001D  00F0               	movwf	??_ISR
   524  001E  0870               	movf	??_ISR,w
   525  001F  07F3               	addwf	_cnt,f
   526  0020                     i1l677:
   527                           
   528                           ;newmain.c: 58:         TMR0 = 6;
   529  0020  3006               	movlw	6
   530  0021  1283               	bcf	3,5	;RP0=0, select bank0
   531  0022  1303               	bcf	3,6	;RP1=0, select bank0
   532  0023  0081               	movwf	1	;volatile
   533  0024                     i1l679:
   534                           
   535                           ;newmain.c: 59:         if(cnt == 5)
   536  0024  3005               	movlw	5
   537  0025  0673               	xorwf	_cnt,w
   538  0026  1D03               	btfss	3,2
   539  0027  2829               	goto	u3_21
   540  0028  282A               	goto	u3_20
   541  0029                     u3_21:
   542  0029  282D               	goto	i1l685
   543  002A                     u3_20:
   544  002A                     i1l681:
   545                           
   546                           ;newmain.c: 60:         {;newmain.c: 61:             RD0 =! RD0;
   547  002A  3001               	movlw	1
   548  002B  0688               	xorwf	8,f
   549  002C                     i1l683:
   550                           
   551                           ;newmain.c: 62:             cnt = 0;
   552  002C  01F3               	clrf	_cnt
   553  002D                     i1l685:
   554                           
   555                           ;newmain.c: 65:     T0IF = 0;
   556  002D  110B               	bcf	11,2	;volatile
   557  002E                     i1l51:
   558  002E  0872               	movf	??_ISR+2,w
   559  002F  008A               	movwf	10
   560  0030  0E71               	swapf	??_ISR+1,w
   561  0031  0083               	movwf	3
   562  0032  0EFE               	swapf	btemp,f
   563  0033  0E7E               	swapf	btemp,w
   564  0034  0009               	retfie
   565  0035                     __end_of_ISR:
   566  007E                     btemp	set	126	;btemp
   567  007E                     wtemp0	set	126
   568                           
   569                           	psect	intentry
   570  0004                     __pintentry:	
   571                           ;incstack = 0
   572                           ; Regs used in _ISR: [wreg+status,2+status,0]
   573                           
   574  0004                     interrupt_function:
   575  007E                     saved_w	set	btemp
   576  0004  00FE               	movwf	btemp
   577  0005  0E03               	swapf	3,w
   578  0006  00F1               	movwf	??_ISR+1
   579  0007  080A               	movf	10,w
   580  0008  00F2               	movwf	??_ISR+2
   581  0009  120A  118A  2814   	ljmp	_ISR
   582                           
   583                           	psect	idloc
   584                           
   585                           ;Config register IDLOC0 @ 0x2000
   586                           ;	unspecified, using default values
   587  2000                     	org	8192
   588  2000  3FFF               	dw	16383
   589                           
   590                           ;Config register IDLOC1 @ 0x2001
   591                           ;	unspecified, using default values
   592  2001                     	org	8193
   593  2001  3FFF               	dw	16383
   594                           
   595                           ;Config register IDLOC2 @ 0x2002
   596                           ;	unspecified, using default values
   597  2002                     	org	8194
   598  2002  3FFF               	dw	16383
   599                           
   600                           ;Config register IDLOC3 @ 0x2003
   601                           ;	unspecified, using default values
   602  2003                     	org	8195
   603  2003  3FFF               	dw	16383
   604                           
   605                           	psect	config
   606                           
   607                           ;Config register CONFIG1 @ 0x2007
   608                           ;	Oscillator Selection bits
   609                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   610                           ;	Watchdog Timer Enable bit
   611                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   612                           ;	Power-up Timer Enable bit
   613                           ;	PWRTE = OFF, PWRT disabled
   614                           ;	RE3/MCLR pin function select bit
   615                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   616                           ;	Code Protection bit
   617                           ;	CP = OFF, Program memory code protection is disabled
   618                           ;	Data Code Protection bit
   619                           ;	CPD = OFF, Data memory code protection is disabled
   620                           ;	Brown Out Reset Selection bits
   621                           ;	BOREN = OFF, BOR disabled
   622                           ;	Internal External Switchover bit
   623                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   624                           ;	Fail-Safe Clock Monitor Enabled bit
   625                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   626                           ;	Low Voltage Programming Enable bit
   627                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   628                           ;	In-Circuit Debugger Mode bit
   629                           ;	DEBUG = 0x1, unprogrammed default
   630  2007                     	org	8199
   631  2007  20D4               	dw	8404
   632                           
   633                           ;Config register CONFIG2 @ 0x2008
   634                           ;	Brown-out Reset Selection bit
   635                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   636                           ;	Flash Program Memory Self Write Enable bits
   637                           ;	WRT = OFF, Write protection off
   638  2008                     	org	8200
   639  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
                        _TIMER0_Init
 ---------------------------------------------------------------------------------
 (2) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _TIMER0_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Nov 04 12:14:11 2022

                     l33 0051                       l41 0057                       l42 0057  
                     l36 0045                      l651 004F                      l643 0046  
                    l653 0050                      l645 004A                      l661 0041  
                    l647 004D                      l663 0042                      l655 0035  
                    l649 004E                      l665 0043                      l657 003A  
                    l667 0044                      l659 003D                      l669 0052  
                    _GIE 005F                      _RD0 0040                      _PS0 0408  
                    _PS1 0409                      _PS2 040A                      _ISR 0014  
                    _PSA 040B                      _cnt 0073                     ?_ISR 0070  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   _PEIE 005E                     i1l51 002E                     _TMR0 0001  
                   u1_20 0018                     u1_21 0017                     u2_20 001C  
                   u2_21 001B                     u3_20 002A                     u3_21 0029  
                   _main 0052                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l671 0014                    i1l681 002A                    i1l673 0018  
                  i1l683 002C                    i1l675 001C                    i1l677 0020  
                  i1l685 002D                    i1l679 0024                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 005B                   ??_main 0073  
           ?_TIMER0_Init 0070                   _ANSELH 0189                   _config 0035  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 0052               __pintentry 0004                  ?_config 0070  
                __ptext1 0035                  __ptext2 0046                  __ptext3 0014  
   end_of_initialization 0010           __end_of_config 0046      start_initialization 000F  
            __end_of_ISR 0035                 ??_config 0073              __pbssCOMMON 0073  
              ___latbits 0002            ??_TIMER0_Init 0073        interrupt_function 0004  
    __end_of_TIMER0_Init 0052              _TIMER0_Init 0046                 intlevel1 0000  
