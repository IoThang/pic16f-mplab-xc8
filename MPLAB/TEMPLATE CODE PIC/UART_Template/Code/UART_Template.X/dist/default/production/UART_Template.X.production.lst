

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Nov 05 12:47:54 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  001A                     _RCREG	set	26
   215  0019                     _TXREG	set	25
   216  0064                     _TXIF	set	100
   217  0040                     _RD0	set	64
   218  002C                     _RA4	set	44
   219  002B                     _RA3	set	43
   220  005F                     _GIE	set	95
   221  005E                     _PEIE	set	94
   222  0065                     _RCIF	set	101
   223  00C4                     _CREN	set	196
   224  00C6                     _RX9	set	198
   225  00C7                     _SPEN	set	199
   226  0088                     _TRISD	set	136
   227  0085                     _TRISA	set	133
   228  0099                     _SPBRG	set	153
   229  009A                     _SPBRGH	set	154
   230  043F                     _TRISC7	set	1087
   231  043E                     _TRISC6	set	1086
   232  0465                     _RCIE	set	1125
   233  04C5                     _TXEN	set	1221
   234  04C6                     _TX9	set	1222
   235  04C4                     _SYNC	set	1220
   236  04C2                     _BRGH	set	1218
   237  0189                     _ANSELH	set	393
   238  0188                     _ANSEL	set	392
   239  0C3B                     _BRG16	set	3131
   240                           
   241                           	psect	strings
   242  004A                     __pstrings:
   243  004A                     stringtab:
   244  004A                     __stringtab:
   245  004A                     stringcode:	
   246                           ;	String table - string pointers are 1 byte each
   247                           
   248  004A                     stringdir:
   249  004A  3000               	movlw	high stringdir
   250  004B  008A               	movwf	10
   251  004C  0804               	movf	4,w
   252  004D  0A84               	incf	4,f
   253  004E  0782               	addwf	2,f
   254  004F                     __stringbase:
   255  004F  3400               	retlw	0
   256  0050                     __end_of__stringtab:
   257  0050                     STR_1:
   258  0050  3447               	retlw	71	;'G'
   259  0051  3469               	retlw	105	;'i'
   260  0052  3461               	retlw	97	;'a'
   261  0053  346F               	retlw	111	;'o'
   262  0054  3420               	retlw	32	;' '
   263  0055  3474               	retlw	116	;'t'
   264  0056  3469               	retlw	105	;'i'
   265  0057  3465               	retlw	101	;'e'
   266  0058  3470               	retlw	112	;'p'
   267  0059  3420               	retlw	32	;' '
   268  005A  3455               	retlw	85	;'U'
   269  005B  3441               	retlw	65	;'A'
   270  005C  3452               	retlw	82	;'R'
   271  005D  3454               	retlw	84	;'T'
   272  005E  3420               	retlw	32	;' '
   273  005F  3464               	retlw	100	;'d'
   274  0060  3461               	retlw	97	;'a'
   275  0061  3420               	retlw	32	;' '
   276  0062  3464               	retlw	100	;'d'
   277  0063  3475               	retlw	117	;'u'
   278  0064  346F               	retlw	111	;'o'
   279  0065  3463               	retlw	99	;'c'
   280  0066  3420               	retlw	32	;' '
   281  0067  346B               	retlw	107	;'k'
   282  0068  3468               	retlw	104	;'h'
   283  0069  346F               	retlw	111	;'o'
   284  006A  3469               	retlw	105	;'i'
   285  006B  3420               	retlw	32	;' '
   286  006C  3474               	retlw	116	;'t'
   287  006D  3461               	retlw	97	;'a'
   288  006E  346F               	retlw	111	;'o'
   289  006F  3400               	retlw	0
   290  0070                     STR_2:
   291  0070  344E               	retlw	78	;'N'
   292  0071  3475               	retlw	117	;'u'
   293  0072  346D               	retlw	109	;'m'
   294  0073  3462               	retlw	98	;'b'
   295  0074  3465               	retlw	101	;'e'
   296  0075  3472               	retlw	114	;'r'
   297  0076  3400               	retlw	0
   298                           
   299                           	psect	cinit
   300  0013                     start_initialization:	
   301                           ; #config settings
   302                           
   303  0013                     __initialization:
   304                           
   305                           ; Clear objects allocated to COMMON
   306  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   307  0014                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  0014                     __end_of__initialization:
   311  0014  0183               	clrf	3
   312  0015  120A  118A  290E   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMMON
   315  0078                     __pbssCOMMON:
   316  0078                     _rxdata:
   317  0078                     	ds	1
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:
   321  0070                     ?_TX_Init:
   322  0070                     ?_RX_Init:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_config:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_UART_send_char:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_UART_send_string:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_ISR:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?i1_UART_send_char:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??i1_UART_send_char:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?i1_UART_send_string:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     i1UART_send_char@bt:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 1 bytes @ 0x0
   354  0070                     	ds	1
   355  0071                     ??i1_UART_send_string:
   356                           
   357                           ; 1 bytes @ 0x1
   358  0071                     	ds	1
   359  0072                     i1UART_send_string@st_pt:
   360                           
   361                           ; 1 bytes @ 0x2
   362  0072                     	ds	1
   363  0073                     ??_ISR:
   364                           
   365                           ; 1 bytes @ 0x3
   366  0073                     	ds	5
   367                           
   368                           	psect	cstackBANK0
   369  0020                     __pcstackBANK0:
   370  0020                     ??_TX_Init:
   371  0020                     ??_RX_Init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0020                     ??_config:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0020                     ??_UART_send_char:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0020                     UART_send_char@bt:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 1 bytes @ 0x0
   385  0020                     	ds	1
   386  0021                     ??_UART_send_string:
   387                           
   388                           ; 1 bytes @ 0x1
   389  0021                     	ds	1
   390  0022                     UART_send_string@st_pt:
   391                           
   392                           ; 1 bytes @ 0x2
   393  0022                     	ds	1
   394  0023                     ??_main:
   395                           
   396                           	psect	maintext
   397  010E                     __pmaintext:	
   398                           ; 1 bytes @ 0x3
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 86 in file "newmain.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : B00/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels required when called: 5
   424 ;; This function calls:
   425 ;;		_UART_send_string
   426 ;;		_config
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432  010E                     _main:	
   433                           ;psect for function _main
   434                           
   435  010E                     l844:	
   436                           ;incstack = 0
   437                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   438                           
   439                           
   440                           ;newmain.c: 87:     config();
   441  010E  120A  118A  2018  120A  118A  	fcall	_config
   442  0113                     l846:
   443                           
   444                           ;newmain.c: 88:     UART_send_string("Giao tiep UART da duoc khoi tao");
   445  0113  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   446  0114  120A  118A  20A4  120A  118A  	fcall	_UART_send_string
   447  0119                     l80:	
   448                           ;newmain.c: 89:     while(1)
   449                           
   450  0119                     l81:	
   451                           ;newmain.c: 90:     {;newmain.c: 91:     }
   452                           
   453  0119  2919               	goto	l80
   454  011A  120A  118A  2810   	ljmp	start
   455  011D                     __end_of_main:
   456                           
   457                           	psect	text1
   458  0018                     __ptext1:	
   459 ;; *************** function _config *****************
   460 ;; Defined at:
   461 ;;		line 59 in file "newmain.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 4
   482 ;; This function calls:
   483 ;;		_RX_Init
   484 ;;		_TX_Init
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490  0018                     _config:	
   491                           ;psect for function _config
   492                           
   493  0018                     l808:	
   494                           ;incstack = 0
   495                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
   496                           
   497                           
   498                           ;newmain.c: 62:     RX_Init();
   499  0018  120A  118A  20FB  120A  118A  	fcall	_RX_Init
   500                           
   501                           ;newmain.c: 63:     TX_Init();
   502  001D  120A  118A  20E6  120A  118A  	fcall	_TX_Init
   503  0022                     l810:
   504                           
   505                           ;newmain.c: 65:  RCIF=0;
   506  0022  1283               	bcf	3,5	;RP0=0, select bank0
   507  0023  1303               	bcf	3,6	;RP1=0, select bank0
   508  0024  128C               	bcf	12,5	;volatile
   509  0025                     l812:
   510                           
   511                           ;newmain.c: 66:  RCIE=1;
   512  0025  1683               	bsf	3,5	;RP0=1, select bank1
   513  0026  1303               	bcf	3,6	;RP1=0, select bank1
   514  0027  168C               	bsf	12,5	;volatile
   515  0028                     l814:
   516                           
   517                           ;newmain.c: 67:  PEIE=1;
   518  0028  170B               	bsf	11,6	;volatile
   519  0029                     l816:
   520                           
   521                           ;newmain.c: 68:  GIE=1;
   522  0029  178B               	bsf	11,7	;volatile
   523  002A                     l818:
   524                           
   525                           ;newmain.c: 70:     TRISC6 = 0;
   526  002A  1307               	bcf	7,6	;volatile
   527  002B                     l820:
   528                           
   529                           ;newmain.c: 71:     TRISC7 = 1;
   530  002B  1787               	bsf	7,7	;volatile
   531  002C                     l822:
   532                           
   533                           ;newmain.c: 72:     TRISA = TRISD = 0;
   534  002C  0188               	clrf	8	;volatile
   535  002D  0185               	clrf	5	;volatile
   536  002E                     l824:
   537                           
   538                           ;newmain.c: 73:     RA3 = RA4 = RD0 = 1;
   539  002E  1283               	bcf	3,5	;RP0=0, select bank0
   540  002F  1303               	bcf	3,6	;RP1=0, select bank0
   541  0030  1408               	bsf	8,0	;volatile
   542  0031  1808               	btfsc	8,0	;volatile
   543  0032  2834               	goto	u131
   544  0033  2838               	goto	u130
   545  0034                     u131:
   546  0034  1283               	bcf	3,5	;RP0=0, select bank0
   547  0035  1303               	bcf	3,6	;RP1=0, select bank0
   548  0036  1605               	bsf	5,4	;volatile
   549  0037  283B               	goto	u144
   550  0038                     u130:
   551  0038  1283               	bcf	3,5	;RP0=0, select bank0
   552  0039  1303               	bcf	3,6	;RP1=0, select bank0
   553  003A  1205               	bcf	5,4	;volatile
   554  003B                     u144:
   555  003B  1A05               	btfsc	5,4	;volatile
   556  003C  283E               	goto	u141
   557  003D  2842               	goto	u140
   558  003E                     u141:
   559  003E  1283               	bcf	3,5	;RP0=0, select bank0
   560  003F  1303               	bcf	3,6	;RP1=0, select bank0
   561  0040  1585               	bsf	5,3	;volatile
   562  0041  2845               	goto	u154
   563  0042                     u140:
   564  0042  1283               	bcf	3,5	;RP0=0, select bank0
   565  0043  1303               	bcf	3,6	;RP1=0, select bank0
   566  0044  1185               	bcf	5,3	;volatile
   567  0045                     u154:
   568  0045                     l826:
   569                           
   570                           ;newmain.c: 74:     ANSEL = ANSELH = 0;
   571  0045  1683               	bsf	3,5	;RP0=1, select bank3
   572  0046  1703               	bsf	3,6	;RP1=1, select bank3
   573  0047  0189               	clrf	9	;volatile
   574  0048  0188               	clrf	8	;volatile
   575  0049                     l63:
   576  0049  0008               	return
   577  004A                     __end_of_config:
   578                           
   579                           	psect	text2
   580  00E6                     __ptext2:	
   581 ;; *************** function _TX_Init *****************
   582 ;; Defined at:
   583 ;;		line 28 in file "newmain.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   597 ;;      Params:         0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 3
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_config
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611  00E6                     _TX_Init:	
   612                           ;psect for function _TX_Init
   613                           
   614  00E6                     l772:	
   615                           ;incstack = 0
   616                           ; Regs used in _TX_Init: [wreg]
   617                           
   618                           
   619                           ;newmain.c: 32:  SPBRGH = ((16000000 / 4) / 9600) - 1 >> 8;
   620  00E6  3001               	movlw	1
   621  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   622  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   623  00E9  009A               	movwf	26	;volatile
   624                           
   625                           ;newmain.c: 33:  SPBRG = ((16000000 / 4) / 9600) - 1;
   626  00EA  309F               	movlw	159
   627  00EB  0099               	movwf	25	;volatile
   628  00EC                     l774:
   629                           
   630                           ;newmain.c: 35:  BRGH=1;
   631  00EC  1518               	bsf	24,2	;volatile
   632  00ED                     l776:
   633                           
   634                           ;newmain.c: 36:  BRG16= 1;
   635  00ED  1683               	bsf	3,5	;RP0=1, select bank3
   636  00EE  1703               	bsf	3,6	;RP1=1, select bank3
   637  00EF  1587               	bsf	7,3	;volatile
   638  00F0                     l778:
   639                           
   640                           ;newmain.c: 37:  SYNC=0;
   641  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   642  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   643  00F2  1218               	bcf	24,4	;volatile
   644  00F3                     l780:
   645                           
   646                           ;newmain.c: 39:  SPEN=1;
   647  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   648  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   649  00F5  1798               	bsf	24,7	;volatile
   650  00F6                     l782:
   651                           
   652                           ;newmain.c: 40:  TX9=0;
   653  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   654  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   655  00F8  1318               	bcf	24,6	;volatile
   656  00F9                     l784:
   657                           
   658                           ;newmain.c: 42:  TXEN=1;
   659  00F9  1698               	bsf	24,5	;volatile
   660  00FA                     l57:
   661  00FA  0008               	return
   662  00FB                     __end_of_TX_Init:
   663                           
   664                           	psect	text3
   665  00FB                     __ptext3:	
   666 ;; *************** function _RX_Init *****************
   667 ;; Defined at:
   668 ;;		line 44 in file "newmain.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0
   685 ;;      Totals:         0       0       0       0       0
   686 ;;Total ram usage:        0 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 3
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_config
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696  00FB                     _RX_Init:	
   697                           ;psect for function _RX_Init
   698                           
   699  00FB                     l786:	
   700                           ;incstack = 0
   701                           ; Regs used in _RX_Init: [wreg]
   702                           
   703                           
   704                           ;newmain.c: 46:  SPBRGH = ((16000000 / 4) / 9600) - 1 >> 8;
   705  00FB  3001               	movlw	1
   706  00FC  1683               	bsf	3,5	;RP0=1, select bank1
   707  00FD  1303               	bcf	3,6	;RP1=0, select bank1
   708  00FE  009A               	movwf	26	;volatile
   709                           
   710                           ;newmain.c: 47:  SPBRG = ((16000000 / 4) / 9600) - 1;
   711  00FF  309F               	movlw	159
   712  0100  0099               	movwf	25	;volatile
   713  0101                     l788:
   714                           
   715                           ;newmain.c: 48:  BRGH = 1;
   716  0101  1518               	bsf	24,2	;volatile
   717  0102                     l790:
   718                           
   719                           ;newmain.c: 49:  BRG16 = 1;
   720  0102  1683               	bsf	3,5	;RP0=1, select bank3
   721  0103  1703               	bsf	3,6	;RP1=1, select bank3
   722  0104  1587               	bsf	7,3	;volatile
   723  0105                     l792:
   724                           
   725                           ;newmain.c: 51:  SYNC=0;
   726  0105  1683               	bsf	3,5	;RP0=1, select bank1
   727  0106  1303               	bcf	3,6	;RP1=0, select bank1
   728  0107  1218               	bcf	24,4	;volatile
   729  0108                     l794:
   730                           
   731                           ;newmain.c: 52:  SPEN=1;
   732  0108  1283               	bcf	3,5	;RP0=0, select bank0
   733  0109  1303               	bcf	3,6	;RP1=0, select bank0
   734  010A  1798               	bsf	24,7	;volatile
   735  010B                     l796:
   736                           
   737                           ;newmain.c: 54:  RX9=0;
   738  010B  1318               	bcf	24,6	;volatile
   739  010C                     l798:
   740                           
   741                           ;newmain.c: 56:  CREN=1;
   742  010C  1618               	bsf	24,4	;volatile
   743  010D                     l60:
   744  010D  0008               	return
   745  010E                     __end_of_RX_Init:
   746                           
   747                           	psect	text4
   748  00A4                     __ptext4:	
   749 ;; *************** function _UART_send_string *****************
   750 ;; Defined at:
   751 ;;		line 81 in file "newmain.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  st_pt           1    wreg     PTR unsigned char 
   754 ;;		 -> STR_2(7), STR_1(32), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  st_pt           1    2[BANK0 ] PTR unsigned char 
   757 ;;		 -> STR_2(7), STR_1(32), 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         0       1       0       0       0
   769 ;;      Temps:          0       1       0       0       0
   770 ;;      Totals:         0       2       0       0       0
   771 ;;Total ram usage:        2 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 4
   774 ;; This function calls:
   775 ;;		_UART_send_char
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781  00A4                     _UART_send_string:	
   782                           ;psect for function _UART_send_string
   783                           
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   787                           ;UART_send_string@st_pt stored from wreg
   788  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   789  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   790  00A6  00A2               	movwf	UART_send_string@st_pt
   791  00A7                     l828:
   792                           
   793                           ;newmain.c: 81: void UART_send_string(char* st_pt);newmain.c: 82: {;newmain.c: 83:     w
      +                          hile(*st_pt)
   794  00A7  28BA               	goto	l834
   795  00A8                     l830:
   796                           
   797                           ;newmain.c: 84:         UART_send_char(*st_pt++);
   798  00A8  0822               	movf	UART_send_string@st_pt,w
   799  00A9  0084               	movwf	4
   800  00AA  120A  118A  204A  120A  118A  	fcall	stringdir
   801  00AF  120A  118A  211D  120A  118A  	fcall	_UART_send_char
   802  00B4                     l832:
   803  00B4  3001               	movlw	1
   804  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   805  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   806  00B7  00A1               	movwf	??_UART_send_string
   807  00B8  0821               	movf	??_UART_send_string,w
   808  00B9  07A2               	addwf	UART_send_string@st_pt,f
   809  00BA                     l834:
   810                           
   811                           ;newmain.c: 83:     while(*st_pt)
   812  00BA  0822               	movf	UART_send_string@st_pt,w
   813  00BB  0084               	movwf	4
   814  00BC  120A  118A  204A  120A  118A  	fcall	stringdir
   815  00C1  3A00               	xorlw	0
   816  00C2  1D03               	skipz
   817  00C3  28C5               	goto	u161
   818  00C4  28C6               	goto	u160
   819  00C5                     u161:
   820  00C5  28A8               	goto	l830
   821  00C6                     u160:
   822  00C6                     l75:
   823  00C6  0008               	return
   824  00C7                     __end_of_UART_send_string:
   825                           
   826                           	psect	text5
   827  011D                     __ptext5:	
   828 ;; *************** function _UART_send_char *****************
   829 ;; Defined at:
   830 ;;		line 76 in file "newmain.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  bt              1    wreg     unsigned char 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  bt              1    0[BANK0 ] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       1       0       0       0
   846 ;;      Temps:          0       0       0       0       0
   847 ;;      Totals:         0       1       0       0       0
   848 ;;Total ram usage:        1 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; Hardware stack levels required when called: 3
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_UART_send_string
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858  011D                     _UART_send_char:	
   859                           ;psect for function _UART_send_char
   860                           
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _UART_send_char: [wreg]
   864                           ;UART_send_char@bt stored from wreg
   865  011D  1283               	bcf	3,5	;RP0=0, select bank0
   866  011E  1303               	bcf	3,6	;RP1=0, select bank0
   867  011F  00A0               	movwf	UART_send_char@bt
   868  0120                     l800:
   869  0120                     l66:	
   870                           ;newmain.c: 76: void UART_send_char(char bt);newmain.c: 77: {;newmain.c: 78:     while(!
      +                          TXIF);
   871                           
   872  0120  1E0C               	btfss	12,4	;volatile
   873  0121  2923               	goto	u111
   874  0122  2924               	goto	u110
   875  0123                     u111:
   876  0123  2920               	goto	l66
   877  0124                     u110:
   878  0124                     l802:
   879                           
   880                           ;newmain.c: 79:     TXREG = bt;
   881  0124  0820               	movf	UART_send_char@bt,w
   882  0125  0099               	movwf	25	;volatile
   883  0126                     l69:
   884  0126  0008               	return
   885  0127                     __end_of_UART_send_char:
   886                           
   887                           	psect	text6
   888  0077                     __ptext6:	
   889 ;; *************** function _ISR *****************
   890 ;; Defined at:
   891 ;;		line 94 in file "newmain.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          5       0       0       0       0
   908 ;;      Totals:         5       0       0       0       0
   909 ;;Total ram usage:        5 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 2
   912 ;; This function calls:
   913 ;;		i1_UART_send_string
   914 ;; This function is called by:
   915 ;;		Interrupt level 1
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919  0077                     _ISR:	
   920                           ;psect for function _ISR
   921                           
   922  0077                     i1l848:
   923                           
   924                           ;newmain.c: 96:  if(RCIE && RCIF)
   925  0077  1683               	bsf	3,5	;RP0=1, select bank1
   926  0078  1303               	bcf	3,6	;RP1=0, select bank1
   927  0079  1E8C               	btfss	12,5	;volatile
   928  007A  287C               	goto	u18_21
   929  007B  287D               	goto	u18_20
   930  007C                     u18_21:
   931  007C  2896               	goto	i1l860
   932  007D                     u18_20:
   933  007D                     i1l850:
   934  007D  1283               	bcf	3,5	;RP0=0, select bank0
   935  007E  1303               	bcf	3,6	;RP1=0, select bank0
   936  007F  1E8C               	btfss	12,5	;volatile
   937  0080  2882               	goto	u19_21
   938  0081  2883               	goto	u19_20
   939  0082                     u19_21:
   940  0082  2896               	goto	i1l860
   941  0083                     u19_20:
   942  0083                     i1l852:
   943                           
   944                           ;newmain.c: 97:  {;newmain.c: 98:         rxdata = RCREG;
   945  0083  081A               	movf	26,w	;volatile
   946  0084  00F3               	movwf	??_ISR
   947  0085  0873               	movf	??_ISR,w
   948  0086  00F8               	movwf	_rxdata
   949  0087                     i1l854:
   950                           
   951                           ;newmain.c: 99:         if(rxdata == '1')
   952  0087  3031               	movlw	49
   953  0088  0678               	xorwf	_rxdata,w
   954  0089  1D03               	btfss	3,2
   955  008A  288C               	goto	u20_21
   956  008B  288D               	goto	u20_20
   957  008C                     u20_21:
   958  008C  2896               	goto	i1l860
   959  008D                     u20_20:
   960  008D                     i1l856:
   961                           
   962                           ;newmain.c: 100:   {;newmain.c: 101:    RA3 = RA4 = RD0 = 0;
   963  008D  1008               	bcf	8,0	;volatile
   964  008E  1205               	bcf	5,4	;volatile
   965  008F  1185               	bcf	5,3	;volatile
   966  0090                     i1l858:
   967                           
   968                           ;newmain.c: 102:             UART_send_string("Number");
   969  0090  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   970  0091  120A  118A  20C7  120A  118A  	fcall	i1_UART_send_string
   971  0096                     i1l860:
   972                           
   973                           ;newmain.c: 112:     RCIF=0;
   974  0096  1283               	bcf	3,5	;RP0=0, select bank0
   975  0097  1303               	bcf	3,6	;RP1=0, select bank0
   976  0098  128C               	bcf	12,5	;volatile
   977  0099                     i1l90:
   978  0099  0877               	movf	??_ISR+4,w
   979  009A  00FF               	movwf	btemp+1
   980  009B  0876               	movf	??_ISR+3,w
   981  009C  008A               	movwf	10
   982  009D  0875               	movf	??_ISR+2,w
   983  009E  0084               	movwf	4
   984  009F  0E74               	swapf	??_ISR+1,w
   985  00A0  0083               	movwf	3
   986  00A1  0EFE               	swapf	btemp,f
   987  00A2  0E7E               	swapf	btemp,w
   988  00A3  0009               	retfie
   989  00A4                     __end_of_ISR:
   990                           
   991                           	psect	intentry
   992  0004                     __pintentry:	
   993                           ;incstack = 0
   994                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   995                           
   996  0004                     interrupt_function:
   997  007E                     saved_w	set	btemp
   998  0004  00FE               	movwf	btemp
   999  0005  0E03               	swapf	3,w
  1000  0006  00F4               	movwf	??_ISR+1
  1001  0007  0804               	movf	4,w
  1002  0008  00F5               	movwf	??_ISR+2
  1003  0009  080A               	movf	10,w
  1004  000A  00F6               	movwf	??_ISR+3
  1005  000B  087F               	movf	btemp+1,w
  1006  000C  00F7               	movwf	??_ISR+4
  1007  000D  120A  118A  2877   	ljmp	_ISR
  1008                           
  1009                           	psect	text7
  1010  00C7                     __ptext7:	
  1011 ;; *************** function i1_UART_send_string *****************
  1012 ;; Defined at:
  1013 ;;		line 81 in file "newmain.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  st_pt           1    wreg     PTR unsigned char 
  1016 ;;		 -> STR_2(7), STR_1(32), 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  st_pt           1    2[COMMON] PTR unsigned char 
  1019 ;;		 -> STR_2(7), STR_1(32), 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0
  1031 ;;      Temps:          1       0       0       0       0
  1032 ;;      Totals:         2       0       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 1
  1036 ;; This function calls:
  1037 ;;		i1_UART_send_char
  1038 ;; This function is called by:
  1039 ;;		_ISR
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043  00C7                     i1_UART_send_string:	
  1044                           ;psect for function i1_UART_send_string
  1045                           
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in i1_UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1049                           ;i1UART_send_string@st_pt stored from wreg
  1050  00C7  00F2               	movwf	i1UART_send_string@st_pt
  1051  00C8                     i1l836:
  1052                           
  1053                           ;newmain.c: 81: void UART_send_string(char* st_pt);newmain.c: 82: {;newmain.c: 83:     w
      +                          hile(*st_pt)
  1054  00C8  28D9               	goto	i1l842
  1055  00C9                     i1l838:
  1056                           
  1057                           ;newmain.c: 84:         UART_send_char(*st_pt++);
  1058  00C9  0872               	movf	i1UART_send_string@st_pt,w
  1059  00CA  0084               	movwf	4
  1060  00CB  120A  118A  204A  120A  118A  	fcall	stringdir
  1061  00D0  120A  118A  2127  120A  118A  	fcall	i1_UART_send_char
  1062  00D5                     i1l840:
  1063  00D5  3001               	movlw	1
  1064  00D6  00F1               	movwf	??i1_UART_send_string
  1065  00D7  0871               	movf	??i1_UART_send_string,w
  1066  00D8  07F2               	addwf	i1UART_send_string@st_pt,f
  1067  00D9                     i1l842:
  1068                           
  1069                           ;newmain.c: 83:     while(*st_pt)
  1070  00D9  0872               	movf	i1UART_send_string@st_pt,w
  1071  00DA  0084               	movwf	4
  1072  00DB  120A  118A  204A  120A  118A  	fcall	stringdir
  1073  00E0  3A00               	xorlw	0
  1074  00E1  1D03               	skipz
  1075  00E2  28E4               	goto	u17_21
  1076  00E3  28E5               	goto	u17_20
  1077  00E4                     u17_21:
  1078  00E4  28C9               	goto	i1l838
  1079  00E5                     u17_20:
  1080  00E5                     i1l75:
  1081  00E5  0008               	return
  1082  00E6                     __end_ofi1_UART_send_string:
  1083                           
  1084                           	psect	text8
  1085  0127                     __ptext8:	
  1086 ;; *************** function i1_UART_send_char *****************
  1087 ;; Defined at:
  1088 ;;		line 76 in file "newmain.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  bt              1    wreg     unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  bt              1    0[COMMON] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0
  1105 ;;      Totals:         1       0       0       0       0
  1106 ;;Total ram usage:        1 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		i1_UART_send_string
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115  0127                     i1_UART_send_char:	
  1116                           ;psect for function i1_UART_send_char
  1117                           
  1118                           
  1119                           ;incstack = 0
  1120                           ; Regs used in i1_UART_send_char: [wreg]
  1121                           ;i1UART_send_char@bt stored from wreg
  1122  0127  00F0               	movwf	i1UART_send_char@bt
  1123  0128                     i1l804:
  1124  0128                     i1l66:	
  1125                           ;newmain.c: 76: void UART_send_char(char bt);newmain.c: 77: {;newmain.c: 78:     while(!
      +                          TXIF);
  1126                           
  1127  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1129  012A  1E0C               	btfss	12,4	;volatile
  1130  012B  292D               	goto	u12_21
  1131  012C  292E               	goto	u12_20
  1132  012D                     u12_21:
  1133  012D  2928               	goto	i1l66
  1134  012E                     u12_20:
  1135  012E                     i1l806:
  1136                           
  1137                           ;newmain.c: 79:     TXREG = bt;
  1138  012E  0870               	movf	i1UART_send_char@bt,w
  1139  012F  0099               	movwf	25	;volatile
  1140  0130                     i1l69:
  1141  0130  0008               	return
  1142  0131                     __end_ofi1_UART_send_char:
  1143  007E                     btemp	set	126	;btemp
  1144  007E                     wtemp0	set	126
  1145                           
  1146                           	psect	idloc
  1147                           
  1148                           ;Config register IDLOC0 @ 0x2000
  1149                           ;	unspecified, using default values
  1150  2000                     	org	8192
  1151  2000  3FFF               	dw	16383
  1152                           
  1153                           ;Config register IDLOC1 @ 0x2001
  1154                           ;	unspecified, using default values
  1155  2001                     	org	8193
  1156  2001  3FFF               	dw	16383
  1157                           
  1158                           ;Config register IDLOC2 @ 0x2002
  1159                           ;	unspecified, using default values
  1160  2002                     	org	8194
  1161  2002  3FFF               	dw	16383
  1162                           
  1163                           ;Config register IDLOC3 @ 0x2003
  1164                           ;	unspecified, using default values
  1165  2003                     	org	8195
  1166  2003  3FFF               	dw	16383
  1167                           
  1168                           	psect	config
  1169                           
  1170                           ;Config register CONFIG1 @ 0x2007
  1171                           ;	Oscillator Selection bits
  1172                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1173                           ;	Watchdog Timer Enable bit
  1174                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1175                           ;	Power-up Timer Enable bit
  1176                           ;	PWRTE = OFF, PWRT disabled
  1177                           ;	RE3/MCLR pin function select bit
  1178                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1179                           ;	Code Protection bit
  1180                           ;	CP = OFF, Program memory code protection is disabled
  1181                           ;	Data Code Protection bit
  1182                           ;	CPD = OFF, Data memory code protection is disabled
  1183                           ;	Brown Out Reset Selection bits
  1184                           ;	BOREN = OFF, BOR disabled
  1185                           ;	Internal External Switchover bit
  1186                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1187                           ;	Fail-Safe Clock Monitor Enabled bit
  1188                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1189                           ;	Low Voltage Programming Enable bit
  1190                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1191                           ;	In-Circuit Debugger Mode bit
  1192                           ;	DEBUG = 0x1, unprogrammed default
  1193  2007                     	org	8199
  1194  2007  20D2               	dw	8402
  1195                           
  1196                           ;Config register CONFIG2 @ 0x2008
  1197                           ;	Brown-out Reset Selection bit
  1198                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1199                           ;	Flash Program Memory Self Write Enable bits
  1200                           ;	WRT = OFF, Write protection off
  1201  2008                     	org	8200
  1202  2008  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 32
		 -> STR_2(CODE[7]), STR_1(CODE[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_UART_send_string
    i1_UART_send_string->i1_UART_send_char

Critical Paths under _main in BANK0

    _main->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     133
                   _UART_send_string
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
                            _RX_Init
                            _TX_Init
 ---------------------------------------------------------------------------------
 (2) _TX_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RX_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     133
                                              1 BANK0      2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      67
                                              3 COMMON     5     5      0
                 i1_UART_send_string
 ---------------------------------------------------------------------------------
 (4) i1_UART_send_string                                   2     2      0      67
                                              1 COMMON     2     2      0
                   i1_UART_send_char
 ---------------------------------------------------------------------------------
 (5) i1_UART_send_char                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_send_string
     _UART_send_char
   _config
     _RX_Init
     _TX_Init

 _ISR (ROOT)
   i1_UART_send_string
     i1_UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Nov 05 12:47:54 2022

                         pc 0002                          l60 010D                          l63 0049  
                        l80 0119                          l57 00FA                          l81 0119  
                        l66 0120                          l75 00C6                          l69 0126  
                        fsr 0004                         l800 0120                         l802 0124  
                       l810 0022                         l820 002B                         l812 0025  
                       l830 00A8                         l822 002C                         l814 0028  
                       l832 00B4                         l824 002E                         l816 0029  
                       l808 0018                         l834 00BA                         l826 0045  
                       l818 002A                         l828 00A7                         l780 00F3  
                       l772 00E6                         l844 010E                         l790 0102  
                       l782 00F6                         l774 00EC                         l846 0113  
                       l792 0105                         l784 00F9                         l776 00ED  
                       l794 0108                         l786 00FB                         l778 00F0  
                       l796 010B                         l788 0101                         l798 010C  
                       _GIE 005F                         _RA3 002B                         _RA4 002C  
                       _RD0 0040                         u110 0124                         u111 0123  
                       u130 0038                         u131 0034                         u140 0042  
                       u141 003E                         u160 00C6                         u144 003B  
                       u161 00C5                         u154 0045                         _ISR 0077  
                       _RX9 00C6                         _TX9 04C6                         fsr0 0004  
                      ?_ISR 0070                        STR_1 0050                        STR_2 0070  
                      _BRGH 04C2                        _CREN 00C4                        _PEIE 005E  
                      _RCIE 0465                        _RCIF 0065                        i1l66 0128  
                      i1l90 0099                        i1l75 00E5                        i1l69 0130  
                      _SPEN 00C7                        _TXEN 04C5                        _TXIF 0064  
                      _SYNC 04C4                        _main 010E                        btemp 007E  
                      start 0010             __end_of_RX_Init 010E             __end_of_TX_Init 00FB  
                     ??_ISR 0073                       ?_main 0070                       _BRG16 0C3B  
                     _ANSEL 0188                       i1l804 0128                       i1l806 012E  
                     i1l840 00D5                       i1l842 00D9                       i1l850 007D  
                     i1l836 00C8                       i1l852 0083                       i1l860 0096  
                     i1l838 00C9                       i1l854 0087                       i1l856 008D  
                     i1l848 0077                       i1l858 0090                       _RCREG 001A  
                     u12_20 012E                       u20_20 008D                       u12_21 012D  
                     u20_21 008C                       u17_20 00E5                       u17_21 00E4  
                     u18_20 007D                       u18_21 007C                       _SPBRG 0099  
                     u19_20 0083                       u19_21 0082                       _TRISA 0085  
                     _TRISD 0088                       _TXREG 0019    __end_ofi1_UART_send_char 0131  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0013                __end_of_main 011D                      ??_main 0023  
__end_ofi1_UART_send_string 00E6                      _ANSELH 0189                   ??_RX_Init 0020  
                    _SPBRGH 009A                   ??_TX_Init 0020                      _TRISC6 043E  
                    _TRISC7 043F                      _config 0018                      _rxdata 0078  
                    saved_w 007E     __end_of__initialization 0014              __pcstackCOMMON 0070  
          _UART_send_string 00A4                  __pmaintext 010E                  __pintentry 0004  
                   ?_config 0070           ?i1_UART_send_char 0070          ??i1_UART_send_char 0070  
                __stringtab 004A                     _RX_Init 00FB                     _TX_Init 00E6  
                   __ptext1 0018                     __ptext2 00E6                     __ptext3 00FB  
                   __ptext4 00A4                     __ptext5 011D                     __ptext6 0077  
                   __ptext7 00C7                     __ptext8 0127        end_of_initialization 0014  
        i1_UART_send_string 00C7         ?i1_UART_send_string 0070        ??i1_UART_send_string 0071  
  __end_of_UART_send_string 00C7              __end_of_config 004A         start_initialization 0013  
            _UART_send_char 011D                 __end_of_ISR 00A4                    ??_config 0020  
   i1UART_send_string@st_pt 0072      __end_of_UART_send_char 0127                 __pbssCOMMON 0078  
                 ___latbits 0002               __pcstackBANK0 0020                    ?_RX_Init 0070  
                  ?_TX_Init 0070            UART_send_char@bt 0020                   __pstrings 004A  
           ?_UART_send_char 0070           interrupt_function 0004                 __stringbase 004F  
     UART_send_string@st_pt 0022           ?_UART_send_string 0070          ??_UART_send_string 0021  
        __end_of__stringtab 0050            i1_UART_send_char 0127          i1UART_send_char@bt 0070  
                  intlevel1 0000                   stringcode 004A            ??_UART_send_char 0020  
                  stringdir 004A                    stringtab 004A  
