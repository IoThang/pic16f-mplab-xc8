

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 26 21:20:48 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0005                     _PORTAbits	set	5
   205  0008                     _PORTD	set	8
   206  0085                     _TRISA	set	133
   207  0088                     _TRISD	set	136
   208  0188                     _ANSEL	set	392
   209                           
   210                           	psect	cinit
   211  07F3                     start_initialization:	
   212                           ; #config settings
   213                           
   214  07F3                     __initialization:
   215                           
   216                           ; Clear objects allocated to COMMON
   217  07F3  01F0               	clrf	__pbssCOMMON& (0+127)
   218  07F4  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   219  07F5  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   220  07F6  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   221  07F7  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   222  07F8  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   223  07F9  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   224  07FA  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   225  07FB  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   226  07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  07FC                     __end_of__initialization:
   230  07FC  0183               	clrf	3
   231  07FD  120A  118A  2F7C   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMMON
   234  0070                     __pbssCOMMON:
   235  0070                     _cnt1:
   236  0070                     	ds	2
   237  0072                     _cnt:
   238  0072                     	ds	2
   239  0074                     _state2:
   240  0074                     	ds	1
   241  0075                     _z:
   242  0075                     	ds	1
   243  0076                     _j:
   244  0076                     	ds	1
   245  0077                     _k:
   246  0077                     	ds	1
   247  0078                     _i:
   248  0078                     	ds	1
   249                           
   250                           	psect	cstackCOMMON
   251  0079                     __pcstackCOMMON:
   252  0079                     ?_flashing:
   253  0079                     ??_flashing:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0079                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 1 bytes @ 0x0
   261  0079                     	ds	2
   262  007B                     flashing@i:
   263                           
   264                           ; 1 bytes @ 0x2
   265  007B                     	ds	1
   266  007C                     ??_main:
   267                           
   268                           ; 1 bytes @ 0x3
   269  007C                     	ds	2
   270                           
   271                           	psect	maintext
   272  077C                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 24 in file "newmain.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          2       0       0       0       0
   295 ;;      Totals:         2       0       0       0       0
   296 ;;Total ram usage:        2 bytes
   297 ;; Hardware stack levels required when called: 1
   298 ;; This function calls:
   299 ;;		_flashing
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305  077C                     _main:	
   306                           ;psect for function _main
   307                           
   308  077C                     l686:	
   309                           ;incstack = 0
   310                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   311                           
   312                           
   313                           ;newmain.c: 25:     TRISD = 0;
   314  077C  1683               	bsf	3,5	;RP0=1, select bank1
   315  077D  1303               	bcf	3,6	;RP1=0, select bank1
   316  077E  0188               	clrf	8	;volatile
   317                           
   318                           ;newmain.c: 26:     ANSEL = 0;
   319  077F  1683               	bsf	3,5	;RP0=1, select bank3
   320  0780  1703               	bsf	3,6	;RP1=1, select bank3
   321  0781  0188               	clrf	8	;volatile
   322  0782                     l688:
   323                           
   324                           ;newmain.c: 27:     TRISA = 7;
   325  0782  3007               	movlw	7
   326  0783  1683               	bsf	3,5	;RP0=1, select bank1
   327  0784  1303               	bcf	3,6	;RP1=0, select bank1
   328  0785  0085               	movwf	5	;volatile
   329  0786                     l690:
   330                           
   331                           ;newmain.c: 28:     PORTD = 0;
   332  0786  1283               	bcf	3,5	;RP0=0, select bank0
   333  0787  1303               	bcf	3,6	;RP1=0, select bank0
   334  0788  0188               	clrf	8	;volatile
   335  0789                     l692:
   336                           
   337                           ;newmain.c: 30:     {;newmain.c: 31:         if(PORTAbits.RA0 == 1)
   338  0789  1C05               	btfss	5,0	;volatile
   339  078A  2F8C               	goto	u81
   340  078B  2F8D               	goto	u80
   341  078C                     u81:
   342  078C  2FAB               	goto	l704
   343  078D                     u80:
   344  078D                     l35:
   345  078D  1805               	btfsc	5,0	;volatile
   346  078E  2F90               	goto	u91
   347  078F  2F91               	goto	u90
   348  0790                     u91:
   349  0790  2F8D               	goto	l35
   350  0791                     u90:
   351  0791                     l696:
   352                           
   353                           ;newmain.c: 34:             k = 0x01 << i++;
   354  0791  3001               	movlw	1
   355  0792  00FC               	movwf	??_main
   356  0793  0A78               	incf	_i,w
   357  0794  2F97               	goto	u104
   358  0795                     u105:
   359  0795  1003               	clrc
   360  0796  0DFC               	rlf	??_main,f
   361  0797                     u104:
   362  0797  3EFF               	addlw	-1
   363  0798  1D03               	skipz
   364  0799  2F95               	goto	u105
   365  079A  087C               	movf	??_main,w
   366  079B  00FD               	movwf	??_main+1
   367  079C  087D               	movf	??_main+1,w
   368  079D  00F7               	movwf	_k
   369  079E  3001               	movlw	1
   370  079F  00FC               	movwf	??_main
   371  07A0  087C               	movf	??_main,w
   372  07A1  07F8               	addwf	_i,f
   373  07A2                     l698:
   374                           
   375                           ;newmain.c: 35:             PORTD = k;
   376  07A2  0877               	movf	_k,w
   377  07A3  0088               	movwf	8	;volatile
   378  07A4                     l700:
   379                           
   380                           ;newmain.c: 36:             if(i == 4) i = 0;
   381  07A4  3004               	movlw	4
   382  07A5  0678               	xorwf	_i,w
   383  07A6  1D03               	btfss	3,2
   384  07A7  2FA9               	goto	u111
   385  07A8  2FAA               	goto	u110
   386  07A9                     u111:
   387  07A9  2FAB               	goto	l704
   388  07AA                     u110:
   389  07AA                     l702:
   390  07AA  01F8               	clrf	_i
   391  07AB                     l704:
   392                           
   393                           ;newmain.c: 39:         if(PORTAbits.RA1 == 1)
   394  07AB  1C85               	btfss	5,1	;volatile
   395  07AC  2FAE               	goto	u121
   396  07AD  2FAF               	goto	u120
   397  07AE                     u121:
   398  07AE  2FC4               	goto	l716
   399  07AF                     u120:
   400  07AF                     l40:
   401  07AF  1885               	btfsc	5,1	;volatile
   402  07B0  2FB2               	goto	u131
   403  07B1  2FB3               	goto	u130
   404  07B2                     u131:
   405  07B2  2FAF               	goto	l40
   406  07B3                     u130:
   407  07B3                     l708:
   408                           
   409                           ;newmain.c: 42:             flashing(z++);
   410  07B3  0875               	movf	_z,w
   411  07B4  120A  118A  2720  120A  118A  	fcall	_flashing
   412  07B9                     l710:
   413  07B9  3001               	movlw	1
   414  07BA  00FC               	movwf	??_main
   415  07BB  087C               	movf	??_main,w
   416  07BC  07F5               	addwf	_z,f
   417  07BD                     l712:
   418                           
   419                           ;newmain.c: 43:             if(z == 4) z = 0;
   420  07BD  3004               	movlw	4
   421  07BE  0675               	xorwf	_z,w
   422  07BF  1D03               	btfss	3,2
   423  07C0  2FC2               	goto	u141
   424  07C1  2FC3               	goto	u140
   425  07C2                     u141:
   426  07C2  2FC4               	goto	l716
   427  07C3                     u140:
   428  07C3                     l714:
   429  07C3  01F5               	clrf	_z
   430  07C4                     l716:
   431                           
   432                           ;newmain.c: 45:         if(PORTAbits.RA2 == 1)
   433  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   434  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   435  07C6  1D05               	btfss	5,2	;volatile
   436  07C7  2FC9               	goto	u151
   437  07C8  2FCA               	goto	u150
   438  07C9                     u151:
   439  07C9  2F89               	goto	l692
   440  07CA                     u150:
   441  07CA  2FE9               	goto	l726
   442  07CB                     l720:
   443                           
   444                           ;newmain.c: 48:             {;newmain.c: 49:                 if(cnt1 == 3000)
   445  07CB  30B8               	movlw	184
   446  07CC  0670               	xorwf	_cnt1,w
   447  07CD  300B               	movlw	11
   448  07CE  1903               	skipnz
   449  07CF  0671               	xorwf	_cnt1+1,w
   450  07D0  1D03               	btfss	3,2
   451  07D1  2FD3               	goto	u161
   452  07D2  2FD4               	goto	u160
   453  07D3                     u161:
   454  07D3  2FDA               	goto	l724
   455  07D4                     u160:
   456  07D4                     l722:
   457                           
   458                           ;newmain.c: 50:                 {;newmain.c: 51:                     cnt1 = 0;
   459  07D4  01F0               	clrf	_cnt1
   460  07D5  01F1               	clrf	_cnt1+1
   461                           
   462                           ;newmain.c: 52:                     PORTD = 0;
   463  07D6  0188               	clrf	8	;volatile
   464                           
   465                           ;newmain.c: 53:                     i = z = 0; break;
   466  07D7  01F5               	clrf	_z
   467  07D8  01F8               	clrf	_i
   468  07D9  2F89               	goto	l692
   469  07DA                     l724:
   470                           
   471                           ;newmain.c: 55:                 _delay((unsigned long)((1)*(8000000/4000.0)));
   472  07DA  3003               	movlw	3
   473  07DB  00FD               	movwf	??_main+1
   474  07DC  3097               	movlw	151
   475  07DD  00FC               	movwf	??_main
   476  07DE                     u187:
   477  07DE  0BFC               	decfsz	??_main,f
   478  07DF  2FDE               	goto	u187
   479  07E0  0BFD               	decfsz	??_main+1,f
   480  07E1  2FDE               	goto	u187
   481  07E2  2FE3               	nop2
   482                           
   483                           ;newmain.c: 56:                 cnt1++;
   484  07E3  3001               	movlw	1
   485  07E4  07F0               	addwf	_cnt1,f
   486  07E5  1803               	skipnc
   487  07E6  0AF1               	incf	_cnt1+1,f
   488  07E7  3000               	movlw	0
   489  07E8  07F1               	addwf	_cnt1+1,f
   490  07E9                     l726:
   491                           
   492                           ;newmain.c: 47:             while((PORTAbits.RA2 == 1))
   493  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   494  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   495  07EB  1905               	btfsc	5,2	;volatile
   496  07EC  2FEE               	goto	u171
   497  07ED  2FEF               	goto	u170
   498  07EE                     u171:
   499  07EE  2FCB               	goto	l720
   500  07EF                     u170:
   501  07EF  2F89               	goto	l692
   502  07F0  120A  118A  2800   	ljmp	start
   503  07F3                     __end_of_main:
   504                           
   505                           	psect	text1
   506  0720                     __ptext1:	
   507 ;; *************** function _flashing *****************
   508 ;; Defined at:
   509 ;;		line 62 in file "newmain.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  i               1    wreg     unsigned char 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  i               1    2[COMMON] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0
   525 ;;      Temps:          2       0       0       0       0
   526 ;;      Totals:         3       0       0       0       0
   527 ;;Total ram usage:        3 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536  0720                     _flashing:	
   537                           ;psect for function _flashing
   538                           
   539                           
   540                           ;incstack = 0
   541                           ; Regs used in _flashing: [wreg+status,2+status,0]
   542                           ;flashing@i stored from wreg
   543  0720  00FB               	movwf	flashing@i
   544  0721                     l658:
   545                           
   546                           ;newmain.c: 62: void flashing(unsigned char i);newmain.c: 63: {;newmain.c: 64:     while
      +                          (PORTAbits.RA1 == 0)
   547  0721  2F75               	goto	l54
   548  0722                     l660:
   549                           
   550                           ;newmain.c: 65:     {;newmain.c: 66:         PORTD = 0x01 << i;
   551  0722  3001               	movlw	1
   552  0723  00F9               	movwf	??_flashing
   553  0724  0A7B               	incf	flashing@i,w
   554  0725  2F28               	goto	u14
   555  0726                     u15:
   556  0726  1003               	clrc
   557  0727  0DF9               	rlf	??_flashing,f
   558  0728                     u14:
   559  0728  3EFF               	addlw	-1
   560  0729  1D03               	skipz
   561  072A  2F26               	goto	u15
   562  072B  0879               	movf	??_flashing,w
   563  072C  0088               	movwf	8	;volatile
   564  072D                     l662:
   565                           
   566                           ;newmain.c: 67:         _delay((unsigned long)((1)*(8000000/4000.0))); cnt++;
   567  072D  3003               	movlw	3
   568  072E  00FA               	movwf	??_flashing+1
   569  072F  3097               	movlw	151
   570  0730  00F9               	movwf	??_flashing
   571  0731                     u197:
   572  0731  0BF9               	decfsz	??_flashing,f
   573  0732  2F31               	goto	u197
   574  0733  0BFA               	decfsz	??_flashing+1,f
   575  0734  2F31               	goto	u197
   576  0735  2F36               	nop2
   577  0736                     l664:
   578  0736  3001               	movlw	1
   579  0737  07F2               	addwf	_cnt,f
   580  0738  1803               	skipnc
   581  0739  0AF3               	incf	_cnt+1,f
   582  073A  3000               	movlw	0
   583  073B  07F3               	addwf	_cnt+1,f
   584  073C                     l666:
   585                           
   586                           ;newmain.c: 68:         if(PORTAbits.RA2 == 1) break;
   587  073C  1283               	bcf	3,5	;RP0=0, select bank0
   588  073D  1303               	bcf	3,6	;RP1=0, select bank0
   589  073E  1D05               	btfss	5,2	;volatile
   590  073F  2F41               	goto	u21
   591  0740  2F42               	goto	u20
   592  0741                     u21:
   593  0741  2F43               	goto	l670
   594  0742                     u20:
   595  0742  2F7B               	goto	l66
   596  0743                     l670:
   597                           
   598                           ;newmain.c: 69:         if(cnt == 1000)
   599  0743  30E8               	movlw	232
   600  0744  0672               	xorwf	_cnt,w
   601  0745  3003               	movlw	3
   602  0746  1903               	skipnz
   603  0747  0673               	xorwf	_cnt+1,w
   604  0748  1D03               	btfss	3,2
   605  0749  2F4B               	goto	u31
   606  074A  2F4C               	goto	u30
   607  074B                     u31:
   608  074B  2F75               	goto	l54
   609  074C                     u30:
   610  074C                     l672:
   611                           
   612                           ;newmain.c: 70:         {;newmain.c: 71:             cnt = 0;
   613  074C  01F2               	clrf	_cnt
   614  074D  01F3               	clrf	_cnt+1
   615  074E                     l59:	
   616                           ;newmain.c: 72:             while(1)
   617                           
   618                           
   619                           ;newmain.c: 73:             {;newmain.c: 74:                 PORTD = 0;
   620  074E  0188               	clrf	8	;volatile
   621  074F                     l674:
   622                           
   623                           ;newmain.c: 75:                 _delay((unsigned long)((1)*(8000000/4000.0))); cnt++;
   624  074F  3003               	movlw	3
   625  0750  00FA               	movwf	??_flashing+1
   626  0751  3097               	movlw	151
   627  0752  00F9               	movwf	??_flashing
   628  0753                     u207:
   629  0753  0BF9               	decfsz	??_flashing,f
   630  0754  2F53               	goto	u207
   631  0755  0BFA               	decfsz	??_flashing+1,f
   632  0756  2F53               	goto	u207
   633  0757  2F58               	nop2
   634  0758                     l676:
   635  0758  3001               	movlw	1
   636  0759  07F2               	addwf	_cnt,f
   637  075A  1803               	skipnc
   638  075B  0AF3               	incf	_cnt+1,f
   639  075C  3000               	movlw	0
   640  075D  07F3               	addwf	_cnt+1,f
   641  075E                     l678:
   642                           
   643                           ;newmain.c: 76:                 if(PORTAbits.RA1 == 1 || PORTAbits.RA2 == 1) break;
   644  075E  1283               	bcf	3,5	;RP0=0, select bank0
   645  075F  1303               	bcf	3,6	;RP1=0, select bank0
   646  0760  1885               	btfsc	5,1	;volatile
   647  0761  2F63               	goto	u41
   648  0762  2F64               	goto	u40
   649  0763                     u41:
   650  0763  2F21               	goto	l658
   651  0764                     u40:
   652  0764                     l680:
   653  0764  1D05               	btfss	5,2	;volatile
   654  0765  2F67               	goto	u51
   655  0766  2F68               	goto	u50
   656  0767                     u51:
   657  0767  2F69               	goto	l682
   658  0768                     u50:
   659  0768  2F75               	goto	l54
   660  0769                     l682:
   661                           
   662                           ;newmain.c: 77:                 if(cnt == 1000)
   663  0769  30E8               	movlw	232
   664  076A  0672               	xorwf	_cnt,w
   665  076B  3003               	movlw	3
   666  076C  1903               	skipnz
   667  076D  0673               	xorwf	_cnt+1,w
   668  076E  1D03               	btfss	3,2
   669  076F  2F71               	goto	u61
   670  0770  2F72               	goto	u60
   671  0771                     u61:
   672  0771  2F4E               	goto	l59
   673  0772                     u60:
   674  0772                     l684:
   675                           
   676                           ;newmain.c: 78:                 {;newmain.c: 79:                     cnt = 0; break;
   677  0772  01F2               	clrf	_cnt
   678  0773  01F3               	clrf	_cnt+1
   679  0774  2F21               	goto	l658
   680  0775                     l54:	
   681                           ;newmain.c: 83:     }
   682                           
   683                           
   684                           ;newmain.c: 64:     while(PORTAbits.RA1 == 0)
   685  0775  1283               	bcf	3,5	;RP0=0, select bank0
   686  0776  1303               	bcf	3,6	;RP1=0, select bank0
   687  0777  1C85               	btfss	5,1	;volatile
   688  0778  2F7A               	goto	u71
   689  0779  2F7B               	goto	u70
   690  077A                     u71:
   691  077A  2F22               	goto	l660
   692  077B                     u70:
   693  077B                     l66:
   694  077B  0008               	return
   695  077C                     __end_of_flashing:
   696  007E                     btemp	set	126	;btemp
   697  007E                     wtemp0	set	126
   698                           
   699                           	psect	idloc
   700                           
   701                           ;Config register IDLOC0 @ 0x2000
   702                           ;	unspecified, using default values
   703  2000                     	org	8192
   704  2000  3FFF               	dw	16383
   705                           
   706                           ;Config register IDLOC1 @ 0x2001
   707                           ;	unspecified, using default values
   708  2001                     	org	8193
   709  2001  3FFF               	dw	16383
   710                           
   711                           ;Config register IDLOC2 @ 0x2002
   712                           ;	unspecified, using default values
   713  2002                     	org	8194
   714  2002  3FFF               	dw	16383
   715                           
   716                           ;Config register IDLOC3 @ 0x2003
   717                           ;	unspecified, using default values
   718  2003                     	org	8195
   719  2003  3FFF               	dw	16383
   720                           
   721                           	psect	config
   722                           
   723                           ;Config register CONFIG1 @ 0x2007
   724                           ;	Oscillator Selection bits
   725                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   726                           ;	Watchdog Timer Enable bit
   727                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   728                           ;	Power-up Timer Enable bit
   729                           ;	PWRTE = OFF, PWRT disabled
   730                           ;	RE3/MCLR pin function select bit
   731                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   732                           ;	Code Protection bit
   733                           ;	CP = OFF, Program memory code protection is disabled
   734                           ;	Data Code Protection bit
   735                           ;	CPD = OFF, Data memory code protection is disabled
   736                           ;	Brown Out Reset Selection bits
   737                           ;	BOREN = OFF, BOR disabled
   738                           ;	Internal External Switchover bit
   739                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   740                           ;	Fail-Safe Clock Monitor Enabled bit
   741                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   742                           ;	Low Voltage Programming Enable bit
   743                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   744                           ;	In-Circuit Debugger Mode bit
   745                           ;	DEBUG = 0x1, unprogrammed default
   746  2007                     	org	8199
   747  2007  20D4               	dw	8404
   748                           
   749                           ;Config register CONFIG2 @ 0x2008
   750                           ;	Brown-out Reset Selection bit
   751                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   752                           ;	Flash Program Memory Self Write Enable bits
   753                           ;	WRT = OFF, Write protection off
   754  2008                     	org	8200
   755  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_flashing

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              3 COMMON     2     2      0
                           _flashing
 ---------------------------------------------------------------------------------
 (1) _flashing                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _flashing

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 26 21:20:48 2022

                      _i 0078                        _j 0076                        _k 0077  
                      _z 0075                       l40 07AF                       l35 078D  
                     l54 0775                       l66 077B                       l59 074E  
                     u20 0742                       u21 0741                       u30 074C  
                     u14 0728                       u31 074B                       u15 0726  
                     u40 0764                       u41 0763                       u50 0768  
                     u51 0767                       u60 0772                       u61 0771  
                     u70 077B                       u71 077A                       u80 078D  
                     u81 078C                       u90 0791                       u91 0790  
                    l700 07A4                      l710 07B9                      l702 07AA  
                    l720 07CB                      l712 07BD                      l704 07AB  
                    l722 07D4                      l714 07C3                      l660 0722  
                    l724 07DA                      l708 07B3                      l716 07C4  
                    l670 0743                      l662 072D                      l726 07E9  
                    l680 0764                      l672 074C                      l664 0736  
                    l682 0769                      l674 074F                      l666 073C  
                    l658 0721                      l690 0786                      l684 0772  
                    l676 0758                      l692 0789                      l678 075E  
                    l686 077C                      l696 0791                      l688 0782  
                    l698 07A2                      u110 07AA                      u111 07A9  
                    u120 07AF                      u104 0797                      u121 07AE  
                    u105 0795                      u130 07B3                      u131 07B2  
                    u140 07C3                      u141 07C2                      u150 07CA  
                    u207 0753                      u151 07C9                      u160 07D4  
                    u161 07D3                      u170 07EF                      u171 07EE  
                    u187 07DE                      u197 0731                      _cnt 0072  
                   _cnt1 0070                     _main 077C                     btemp 007E  
                   start 0000                    ?_main 0079                    _ANSEL 0188  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  status 0003                    wtemp0 007E          __initialization 07F3  
           __end_of_main 07F3                   ??_main 007C         __end_of_flashing 077C  
                 _state2 0074  __end_of__initialization 07FC           __pcstackCOMMON 0079  
             __pmaintext 077C                ?_flashing 0079                  __ptext1 0720  
             ??_flashing 0079     end_of_initialization 07FC                _PORTAbits 0005  
    start_initialization 07F3              __pbssCOMMON 0070                ___latbits 0002  
              flashing@i 007B                 _flashing 0720  
