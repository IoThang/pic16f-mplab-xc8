

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Nov 06 02:04:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322                           
   323                           	psect	strings
   324  0000'                    __pstrings:
   325  0000'                    stringtab:
   326  0000'                    __stringtab:
   327  0000'                    stringcode:	
   328                           ;	String table - string pointers are 1 byte each
   329                           
   330  0000'                    stringdir:
   331  0000' 3000'              	movlw	high stringdir
   332  0001' 008A               	movwf	10
   333  0002' 0804               	movf	4,w
   334  0003' 0A84               	incf	4,f
   335  0004' 0782               	addwf	2,f
   336  0005'                    __stringbase:
   337  0005' 3400               	retlw	0
   338  0006'                    __end_of__stringtab:
   339  0006'                    __powers_:
   340  0006' 3400               	retlw	0
   341  0007' 3400               	retlw	0
   342  0008' 3480               	retlw	128
   343  0009' 343F               	retlw	63
   344  000A' 3400               	retlw	0
   345  000B' 3400               	retlw	0
   346  000C' 3420               	retlw	32
   347  000D' 3441               	retlw	65
   348  000E' 3400               	retlw	0
   349  000F' 3400               	retlw	0
   350  0010' 34C8               	retlw	200
   351  0011' 3442               	retlw	66
   352  0012' 3400               	retlw	0
   353  0013' 3400               	retlw	0
   354  0014' 347A               	retlw	122
   355  0015' 3444               	retlw	68
   356  0016' 3400               	retlw	0
   357  0017' 3440               	retlw	64
   358  0018' 341C               	retlw	28
   359  0019' 3446               	retlw	70
   360  001A' 3400               	retlw	0
   361  001B' 3450               	retlw	80
   362  001C' 34C3               	retlw	195
   363  001D' 3447               	retlw	71
   364  001E' 3400               	retlw	0
   365  001F' 3424               	retlw	36
   366  0020' 3474               	retlw	116
   367  0021' 3449               	retlw	73
   368  0022' 3480               	retlw	128
   369  0023' 3496               	retlw	150
   370  0024' 3418               	retlw	24
   371  0025' 344B               	retlw	75
   372  0026' 3420               	retlw	32
   373  0027' 34BC               	retlw	188
   374  0028' 34BE               	retlw	190
   375  0029' 344C               	retlw	76
   376  002A' 3428               	retlw	40
   377  002B' 346B               	retlw	107
   378  002C' 346E               	retlw	110
   379  002D' 344E               	retlw	78
   380  002E' 34F9               	retlw	249
   381  002F' 3402               	retlw	2
   382  0030' 3415               	retlw	21
   383  0031' 3450               	retlw	80
   384  0032' 34EC               	retlw	236
   385  0033' 3478               	retlw	120
   386  0034' 34AD               	retlw	173
   387  0035' 3460               	retlw	96
   388  0036' 34CA               	retlw	202
   389  0037' 34F2               	retlw	242
   390  0038' 3449               	retlw	73
   391  0039' 3471               	retlw	113
   392  003A'                    __end_of__powers_:
   393  003A'                    __npowers_:
   394  003A' 3400               	retlw	0
   395  003B' 3400               	retlw	0
   396  003C' 3480               	retlw	128
   397  003D' 343F               	retlw	63
   398  003E' 34CD               	retlw	205
   399  003F' 34CC               	retlw	204
   400  0040' 34CC               	retlw	204
   401  0041' 343D               	retlw	61
   402  0042' 340A               	retlw	10
   403  0043' 34D7               	retlw	215
   404  0044' 3423               	retlw	35
   405  0045' 343C               	retlw	60
   406  0046' 346F               	retlw	111
   407  0047' 3412               	retlw	18
   408  0048' 3483               	retlw	131
   409  0049' 343A               	retlw	58
   410  004A' 3417               	retlw	23
   411  004B' 34B7               	retlw	183
   412  004C' 34D1               	retlw	209
   413  004D' 3438               	retlw	56
   414  004E' 34AC               	retlw	172
   415  004F' 34C5               	retlw	197
   416  0050' 3427               	retlw	39
   417  0051' 3437               	retlw	55
   418  0052' 34BD               	retlw	189
   419  0053' 3437               	retlw	55
   420  0054' 3486               	retlw	134
   421  0055' 3435               	retlw	53
   422  0056' 3495               	retlw	149
   423  0057' 34BF               	retlw	191
   424  0058' 34D6               	retlw	214
   425  0059' 3433               	retlw	51
   426  005A' 3477               	retlw	119
   427  005B' 34CC               	retlw	204
   428  005C' 342B               	retlw	43
   429  005D' 3432               	retlw	50
   430  005E' 345F               	retlw	95
   431  005F' 3470               	retlw	112
   432  0060' 3489               	retlw	137
   433  0061' 3430               	retlw	48
   434  0062' 34FF               	retlw	255
   435  0063' 34E6               	retlw	230
   436  0064' 34DB               	retlw	219
   437  0065' 342E               	retlw	46
   438  0066' 3408               	retlw	8
   439  0067' 34E5               	retlw	229
   440  0068' 343C               	retlw	60
   441  0069' 341E               	retlw	30
   442  006A' 3460               	retlw	96
   443  006B' 3442               	retlw	66
   444  006C' 34A2               	retlw	162
   445  006D' 340D               	retlw	13
   446  006E'                    __end_of__npowers_:
   447  006E'                    _dpowers:
   448  006E' 3401               	retlw	1
   449  006F' 3400               	retlw	0
   450  0070' 3400               	retlw	0
   451  0071' 3400               	retlw	0
   452  0072' 340A               	retlw	10
   453  0073' 3400               	retlw	0
   454  0074' 3400               	retlw	0
   455  0075' 3400               	retlw	0
   456  0076' 3464               	retlw	100
   457  0077' 3400               	retlw	0
   458  0078' 3400               	retlw	0
   459  0079' 3400               	retlw	0
   460  007A' 34E8               	retlw	232
   461  007B' 3403               	retlw	3
   462  007C' 3400               	retlw	0
   463  007D' 3400               	retlw	0
   464  007E' 3410               	retlw	16
   465  007F' 3427               	retlw	39
   466  0080' 3400               	retlw	0
   467  0081' 3400               	retlw	0
   468  0082' 34A0               	retlw	160
   469  0083' 3486               	retlw	134
   470  0084' 3401               	retlw	1
   471  0085' 3400               	retlw	0
   472  0086' 3440               	retlw	64
   473  0087' 3442               	retlw	66
   474  0088' 340F               	retlw	15
   475  0089' 3400               	retlw	0
   476  008A' 3480               	retlw	128
   477  008B' 3496               	retlw	150
   478  008C' 3498               	retlw	152
   479  008D' 3400               	retlw	0
   480  008E' 3400               	retlw	0
   481  008F' 34E1               	retlw	225
   482  0090' 34F5               	retlw	245
   483  0091' 3405               	retlw	5
   484  0092' 3400               	retlw	0
   485  0093' 34CA               	retlw	202
   486  0094' 349A               	retlw	154
   487  0095' 343B               	retlw	59
   488  0096'                    __end_of_dpowers:
   489  000E                     _TMR1	set	14
   490  0008                     _PORTDbits	set	8
   491  0008                     _PORTD	set	8
   492  005F                     _GIE	set	95
   493  005E                     _PEIE	set	94
   494  0059                     _INTF	set	89
   495  005C                     _INTE	set	92
   496  0060                     _TMR1IF	set	96
   497  0080                     _TMR1ON	set	128
   498  0081                     _TMR1CS	set	129
   499  0084                     _T1CKPS0	set	132
   500  0085                     _T1CKPS1	set	133
   501  0088                     _TRISD	set	136
   502  0087                     _TRISC	set	135
   503  040E                     _INTEDG	set	1038
   504  0460                     _TMR1IE	set	1120
   505  0189                     _ANSELH	set	393
   506  0188                     _ANSEL	set	392
   507  0096'                    STR_1:
   508  0096' 3420               	retlw	32	;' '
   509  0097' 3425               	retlw	37	;'%'
   510  0098' 3466               	retlw	102	;'f'
   511  0099' 3420               	retlw	32	;' '
   512  009A' 3420               	retlw	32	;' '
   513  009B' 3420               	retlw	32	;' '
   514  009C' 3420               	retlw	32	;' '
   515  009D' 3425               	retlw	37	;'%'
   516  009E' 3475               	retlw	117	;'u'
   517  009F' 3400               	retlw	0
   518                           
   519                           	psect	cinit
   520  0000'                    start_initialization:	
   521                           ; #config settings
   522                           
   523  0000'                    __initialization:
   524                           
   525                           ; Clear objects allocated to BANK0
   526  0000' 1283               	bcf	3,5	;RP0=0, select bank0
   527  0001' 1303               	bcf	3,6	;RP1=0, select bank0
   528  0002' 0180'              	clrf	__pbssBANK0& (0+127)
   529  0003' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
   530  0004' 0180'              	clrf	(__pbssBANK0+2)& (0+127)
   531  0005' 0180'              	clrf	(__pbssBANK0+3)& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK1
   534  0006' 1683               	bsf	3,5	;RP0=1, select bank1
   535  0007' 1303               	bcf	3,6	;RP1=0, select bank1
   536  0008' 0180'              	clrf	__pbssBANK1& (0+127)
   537  0009' 0180'              	clrf	(__pbssBANK1+1)& (0+127)
   538                           
   539                           ; Clear objects allocated to BANK3
   540  000A' 1683               	bsf	3,5	;RP0=1, select bank3
   541  000B' 1703               	bsf	3,6	;RP1=1, select bank3
   542  000C' 0180'              	clrf	__pbssBANK3& (0+127)
   543  000D' 0180'              	clrf	(__pbssBANK3+1)& (0+127)
   544  000E' 0180'              	clrf	(__pbssBANK3+2)& (0+127)
   545  000F' 0180'              	clrf	(__pbssBANK3+3)& (0+127)
   546  0010' 0180'              	clrf	(__pbssBANK3+4)& (0+127)
   547  0011' 0180'              	clrf	(__pbssBANK3+5)& (0+127)
   548  0012' 0180'              	clrf	(__pbssBANK3+6)& (0+127)
   549  0013' 0180'              	clrf	(__pbssBANK3+7)& (0+127)
   550  0014' 0180'              	clrf	(__pbssBANK3+8)& (0+127)
   551  0015' 0180'              	clrf	(__pbssBANK3+9)& (0+127)
   552  0016' 0180'              	clrf	(__pbssBANK3+10)& (0+127)
   553  0017' 0180'              	clrf	(__pbssBANK3+11)& (0+127)
   554  0018' 0180'              	clrf	(__pbssBANK3+12)& (0+127)
   555  0019' 0180'              	clrf	(__pbssBANK3+13)& (0+127)
   556  001A'                    end_of_initialization:	
   557                           ;End of C runtime variable initialization code
   558                           
   559  001A'                    __end_of__initialization:
   560  001A' 0183               	clrf	3
   561  001B' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssBANK0
   564  0000'                    __pbssBANK0:
   565  0000'                    _PrePulse:
   566  0000'                    	ds	2
   567  0002'                    _DeltaPulse:
   568  0002'                    	ds	2
   569                           
   570                           	psect	bssBANK1
   571  0000'                    __pbssBANK1:
   572  0000'                    _Pulse:
   573  0000'                    	ds	2
   574                           
   575                           	psect	bssBANK3
   576  0000'                    __pbssBANK3:
   577  0000'                    _Velocity:
   578  0000'                    	ds	4
   579  0004'                    _buffer:
   580  0004'                    	ds	10
   581                           
   582                           	psect	cstackBANK3
   583  0000'                    __pcstackBANK3:
   584  0000'                    ?_sprintf:
   585  0000'                    sprintf@f:	
   586                           ; 2 bytes @ 0x0
   587                           
   588                           
   589                           ; 1 bytes @ 0x0
   590  0000'                    	ds	7
   591  0007'                    ??_sprintf:
   592                           
   593                           ; 1 bytes @ 0x7
   594  0007'                    	ds	5
   595  000C'                    _sprintf$821:
   596                           
   597                           ; 4 bytes @ 0xC
   598  000C'                    	ds	4
   599  0010'                    sprintf@ap:
   600                           
   601                           ; 1 bytes @ 0x10
   602  0010'                    	ds	1
   603  0011'                    sprintf@flag:
   604                           
   605                           ; 2 bytes @ 0x11
   606  0011'                    	ds	2
   607  0013'                    sprintf@prec:
   608                           
   609                           ; 2 bytes @ 0x13
   610  0013'                    	ds	2
   611  0015'                    sprintf@val:
   612                           
   613                           ; 4 bytes @ 0x15
   614  0015'                    	ds	4
   615  0019'                    sprintf@eexp:
   616                           
   617                           ; 2 bytes @ 0x19
   618  0019'                    	ds	2
   619  001B'                    sprintf@tmpval:
   620                           
   621                           ; 4 bytes @ 0x1B
   622  001B'                    	ds	4
   623  001F'                    sprintf@sp:
   624                           
   625                           ; 1 bytes @ 0x1F
   626  001F'                    	ds	1
   627  0020'                    sprintf@fval:
   628                           
   629                           ; 4 bytes @ 0x20
   630  0020'                    	ds	4
   631  0024'                    sprintf@c:
   632                           
   633                           ; 1 bytes @ 0x24
   634  0024'                    	ds	1
   635                           
   636                           	psect	cstackBANK1
   637  0000'                    __pcstackBANK1:
   638  0000'                    ?___llmod:
   639  0000'                    ?___flmul:	
   640                           ; 4 bytes @ 0x0
   641                           
   642  0000'                    ___llmod@divisor:	
   643                           ; 4 bytes @ 0x0
   644                           
   645  0000'                    ___flmul@b:	
   646                           ; 4 bytes @ 0x0
   647                           
   648                           
   649                           ; 4 bytes @ 0x0
   650  0000'                    	ds	4
   651  0004'                    ___llmod@dividend:
   652  0004'                    ___flmul@a:	
   653                           ; 4 bytes @ 0x4
   654                           
   655                           
   656                           ; 4 bytes @ 0x4
   657  0004'                    	ds	4
   658  0008'                    ??___flmul:
   659                           
   660                           ; 1 bytes @ 0x8
   661  0008'                    	ds	5
   662  000D'                    ___flmul@sign:
   663                           
   664                           ; 1 bytes @ 0xD
   665  000D'                    	ds	1
   666  000E'                    ___flmul@aexp:
   667                           
   668                           ; 1 bytes @ 0xE
   669  000E'                    	ds	1
   670  000F'                    ___flmul@grs:
   671                           
   672                           ; 4 bytes @ 0xF
   673  000F'                    	ds	4
   674  0013'                    ___flmul@bexp:
   675                           
   676                           ; 1 bytes @ 0x13
   677  0013'                    	ds	1
   678  0014'                    ___flmul@prod:
   679                           
   680                           ; 4 bytes @ 0x14
   681  0014'                    	ds	4
   682  0018'                    ___flmul@temp:
   683                           
   684                           ; 2 bytes @ 0x18
   685  0018'                    	ds	2
   686  001A'                    ?_fround:
   687  001A'                    ?_scale:	
   688                           ; 4 bytes @ 0x1A
   689                           
   690                           
   691                           ; 4 bytes @ 0x1A
   692  001A'                    	ds	4
   693  001E'                    ??_fround:
   694  001E'                    ??_scale:	
   695                           ; 1 bytes @ 0x1E
   696                           
   697                           
   698                           ; 1 bytes @ 0x1E
   699  001E'                    	ds	7
   700  0025'                    _fround$819:
   701                           
   702                           ; 4 bytes @ 0x25
   703  0025'                    	ds	3
   704  0028'                    _scale$820:
   705                           
   706                           ; 4 bytes @ 0x28
   707  0028'                    	ds	1
   708  0029'                    _fround$818:
   709                           
   710                           ; 4 bytes @ 0x29
   711  0029'                    	ds	3
   712  002C'                    scale@scl:
   713                           
   714                           ; 1 bytes @ 0x2C
   715  002C'                    	ds	1
   716  002D'                    ?___fltol:
   717  002D'                    fround@prec:	
   718                           ; 4 bytes @ 0x2D
   719                           
   720  002D'                    ___fltol@f1:	
   721                           ; 1 bytes @ 0x2D
   722                           
   723                           
   724                           ; 4 bytes @ 0x2D
   725  002D'                    	ds	1
   726  002E'                    ?___fladd:
   727  002E'                    ___fladd@b:	
   728                           ; 4 bytes @ 0x2E
   729                           
   730                           
   731                           ; 4 bytes @ 0x2E
   732  002E'                    	ds	3
   733  0031'                    ??___fltol:
   734                           
   735                           ; 1 bytes @ 0x31
   736  0031'                    	ds	1
   737  0032'                    ___fladd@a:
   738                           
   739                           ; 4 bytes @ 0x32
   740  0032'                    	ds	4
   741  0036'                    ??___fladd:
   742                           
   743                           ; 1 bytes @ 0x36
   744  0036'                    	ds	8
   745  003E'                    ___fladd@signs:
   746                           
   747                           ; 1 bytes @ 0x3E
   748  003E'                    	ds	1
   749  003F'                    ___fladd@aexp:
   750                           
   751                           ; 1 bytes @ 0x3F
   752  003F'                    	ds	1
   753  0040'                    ___fladd@bexp:
   754                           
   755                           ; 1 bytes @ 0x40
   756  0040'                    	ds	1
   757  0041'                    ___fladd@grs:
   758                           
   759                           ; 1 bytes @ 0x41
   760  0041'                    	ds	1
   761  0042'                    ?___flsub:
   762  0042'                    ___flsub@a:	
   763                           ; 4 bytes @ 0x42
   764                           
   765                           
   766                           ; 4 bytes @ 0x42
   767  0042'                    	ds	4
   768  0046'                    ___flsub@b:
   769                           
   770                           ; 4 bytes @ 0x46
   771  0046'                    	ds	4
   772  004A'                    ??_main:
   773                           
   774                           ; 1 bytes @ 0x4A
   775  004A'                    	ds	1
   776                           
   777                           	psect	cstackCOMMON
   778  0000'                    __pcstackCOMMON:
   779  0000'                    ?_LCD_Initialize:
   780  0000'                    ?_LCDPutStr:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0000'                    ?_LCDPutCmd:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0000'                    ?_TIMER1_Init:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0000'                    ?_config:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0000'                    ?_main:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0000'                    ?_ISR:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0000'                    ?_LCDPutChar:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0000'                    ?i1__Umul8_16:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0000'                    ?i1___xxtofl:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0000'                    i1__Umul8_16@multiplicand:	
   808                           ; 4 bytes @ 0x0
   809                           
   810  0000'                    i1___xxtofl@val:	
   811                           ; 1 bytes @ 0x0
   812                           
   813                           
   814                           ; 4 bytes @ 0x0
   815  0000'                    	ds	2
   816  0002'                    ??i1__Umul8_16:
   817                           
   818                           ; 1 bytes @ 0x2
   819  0002'                    	ds	2
   820  0004'                    ??i1___xxtofl:
   821  0004'                    i1__Umul8_16@product:	
   822                           ; 1 bytes @ 0x4
   823                           
   824                           
   825                           ; 2 bytes @ 0x4
   826  0004'                    	ds	2
   827  0006'                    i1__Umul8_16@word_mpld:
   828                           
   829                           ; 2 bytes @ 0x6
   830  0006'                    	ds	2
   831  0008'                    i1__Umul8_16@multiplier:
   832  0008'                    i1___xxtofl@sign:	
   833                           ; 1 bytes @ 0x8
   834                           
   835                           
   836                           ; 1 bytes @ 0x8
   837  0008'                    	ds	1
   838  0009'                    i1___xxtofl@exp:
   839                           
   840                           ; 1 bytes @ 0x9
   841  0009'                    	ds	1
   842  000A'                    i1___xxtofl@arg:
   843                           
   844                           ; 4 bytes @ 0xA
   845  000A'                    	ds	4
   846                           
   847                           	psect	cstackBANK0
   848  0000'                    __pcstackBANK0:
   849  0000'                    ?i1___flmul:
   850  0000'                    i1___flmul@b:	
   851                           ; 4 bytes @ 0x0
   852                           
   853                           
   854                           ; 4 bytes @ 0x0
   855  0000'                    	ds	4
   856  0004'                    i1___flmul@a:
   857                           
   858                           ; 4 bytes @ 0x4
   859  0004'                    	ds	4
   860  0008'                    ??i1___flmul:
   861                           
   862                           ; 1 bytes @ 0x8
   863  0008'                    	ds	5
   864  000D'                    i1___flmul@sign:
   865                           
   866                           ; 1 bytes @ 0xD
   867  000D'                    	ds	1
   868  000E'                    i1___flmul@grs:
   869                           
   870                           ; 4 bytes @ 0xE
   871  000E'                    	ds	4
   872  0012'                    i1___flmul@aexp:
   873                           
   874                           ; 1 bytes @ 0x12
   875  0012'                    	ds	1
   876  0013'                    i1___flmul@bexp:
   877                           
   878                           ; 1 bytes @ 0x13
   879  0013'                    	ds	1
   880  0014'                    i1___flmul@prod:
   881                           
   882                           ; 4 bytes @ 0x14
   883  0014'                    	ds	4
   884  0018'                    i1___flmul@temp:
   885                           
   886                           ; 2 bytes @ 0x18
   887  0018'                    	ds	2
   888  001A'                    ??_ISR:
   889                           
   890                           ; 1 bytes @ 0x1A
   891  001A'                    	ds	3
   892  001D'                    ?___fleq:
   893  001D'                    ?___flge:	
   894                           ; 1 bit 
   895                           
   896  001D'                    ??_TIMER1_Init:	
   897                           ; 1 bit 
   898                           
   899  001D'                    ?_LCDWriteNibble:	
   900                           ; 1 bytes @ 0x1D
   901                           
   902  001D'                    ?__Umul8_16:	
   903                           ; 1 bytes @ 0x1D
   904                           
   905  001D'                    ?___wmul:	
   906                           ; 2 bytes @ 0x1D
   907                           
   908  001D'                    ?___awmod:	
   909                           ; 2 bytes @ 0x1D
   910                           
   911  001D'                    ?___lwmod:	
   912                           ; 2 bytes @ 0x1D
   913                           
   914  001D'                    ?__tdiv_to_l_:	
   915                           ; 2 bytes @ 0x1D
   916                           
   917  001D'                    ?__div_to_l_:	
   918                           ; 4 bytes @ 0x1D
   919                           
   920  001D'                    ?___lldiv:	
   921                           ; 4 bytes @ 0x1D
   922                           
   923  001D'                    ?___flneg:	
   924                           ; 4 bytes @ 0x1D
   925                           
   926  001D'                    ?___xxtofl:	
   927                           ; 4 bytes @ 0x1D
   928                           
   929  001D'                    LCDWriteNibble@rs:	
   930                           ; 4 bytes @ 0x1D
   931                           
   932  001D'                    __Umul8_16@multiplicand:	
   933                           ; 1 bytes @ 0x1D
   934                           
   935  001D'                    ___wmul@multiplier:	
   936                           ; 1 bytes @ 0x1D
   937                           
   938  001D'                    ___awmod@divisor:	
   939                           ; 2 bytes @ 0x1D
   940                           
   941  001D'                    ___lwmod@divisor:	
   942                           ; 2 bytes @ 0x1D
   943                           
   944  001D'                    ___lldiv@divisor:	
   945                           ; 2 bytes @ 0x1D
   946                           
   947  001D'                    __div_to_l_@f1:	
   948                           ; 4 bytes @ 0x1D
   949                           
   950  001D'                    ___fleq@ff1:	
   951                           ; 4 bytes @ 0x1D
   952                           
   953  001D'                    ___flge@ff1:	
   954                           ; 4 bytes @ 0x1D
   955                           
   956  001D'                    ___flneg@f1:	
   957                           ; 4 bytes @ 0x1D
   958                           
   959  001D'                    __tdiv_to_l_@f1:	
   960                           ; 4 bytes @ 0x1D
   961                           
   962  001D'                    ___xxtofl@val:	
   963                           ; 4 bytes @ 0x1D
   964                           
   965                           
   966                           ; 4 bytes @ 0x1D
   967  001D'                    	ds	1
   968  001E'                    ??_LCDWriteNibble:
   969                           
   970                           ; 1 bytes @ 0x1E
   971  001E'                    	ds	1
   972  001F'                    ??__Umul8_16:
   973  001F'                    LCDWriteNibble@ch:	
   974                           ; 1 bytes @ 0x1F
   975                           
   976  001F'                    ___wmul@multiplicand:	
   977                           ; 1 bytes @ 0x1F
   978                           
   979  001F'                    ___awmod@dividend:	
   980                           ; 2 bytes @ 0x1F
   981                           
   982  001F'                    ___lwmod@dividend:	
   983                           ; 2 bytes @ 0x1F
   984                           
   985                           
   986                           ; 2 bytes @ 0x1F
   987  001F'                    	ds	1
   988  0020'                    ??_LCDPutCmd:
   989  0020'                    ??_LCDPutChar:	
   990                           ; 1 bytes @ 0x20
   991                           
   992                           
   993                           ; 1 bytes @ 0x20
   994  0020'                    	ds	1
   995  0021'                    ??___wmul:
   996  0021'                    ??___awmod:	
   997                           ; 1 bytes @ 0x21
   998                           
   999  0021'                    ??___flneg:	
  1000                           ; 1 bytes @ 0x21
  1001                           
  1002  0021'                    ??___lwmod:	
  1003                           ; 1 bytes @ 0x21
  1004                           
  1005  0021'                    ??___xxtofl:	
  1006                           ; 1 bytes @ 0x21
  1007                           
  1008  0021'                    ___wmul@product:	
  1009                           ; 1 bytes @ 0x21
  1010                           
  1011  0021'                    __Umul8_16@product:	
  1012                           ; 2 bytes @ 0x21
  1013                           
  1014  0021'                    ___lldiv@dividend:	
  1015                           ; 2 bytes @ 0x21
  1016                           
  1017  0021'                    __div_to_l_@f2:	
  1018                           ; 4 bytes @ 0x21
  1019                           
  1020  0021'                    ___fleq@ff2:	
  1021                           ; 4 bytes @ 0x21
  1022                           
  1023  0021'                    ___flge@ff2:	
  1024                           ; 4 bytes @ 0x21
  1025                           
  1026  0021'                    __tdiv_to_l_@f2:	
  1027                           ; 4 bytes @ 0x21
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x21
  1031  0021'                    	ds	1
  1032  0022'                    LCDPutChar@ch:
  1033  0022'                    LCDPutCmd@ch:	
  1034                           ; 1 bytes @ 0x22
  1035                           
  1036  0022'                    ___awmod@counter:	
  1037                           ; 1 bytes @ 0x22
  1038                           
  1039  0022'                    ___lwmod@counter:	
  1040                           ; 1 bytes @ 0x22
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x22
  1044  0022'                    	ds	1
  1045  0023'                    ??_LCD_Initialize:
  1046  0023'                    ?_LCDGoto:	
  1047                           ; 1 bytes @ 0x23
  1048                           
  1049  0023'                    ??_LCDPutStr:	
  1050                           ; 1 bytes @ 0x23
  1051                           
  1052  0023'                    ?___lwdiv:	
  1053                           ; 1 bytes @ 0x23
  1054                           
  1055  0023'                    LCDGoto@ln:	
  1056                           ; 2 bytes @ 0x23
  1057                           
  1058  0023'                    ___awmod@sign:	
  1059                           ; 1 bytes @ 0x23
  1060                           
  1061  0023'                    ___lwdiv@divisor:	
  1062                           ; 1 bytes @ 0x23
  1063                           
  1064  0023'                    __Umul8_16@word_mpld:	
  1065                           ; 2 bytes @ 0x23
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x23
  1069  0023'                    	ds	1
  1070  0024'                    ??_LCDGoto:
  1071  0024'                    ?___awdiv:	
  1072                           ; 1 bytes @ 0x24
  1073                           
  1074  0024'                    LCDPutStr@str:	
  1075                           ; 2 bytes @ 0x24
  1076                           
  1077  0024'                    ___awdiv@divisor:	
  1078                           ; 1 bytes @ 0x24
  1079                           
  1080                           
  1081                           ; 2 bytes @ 0x24
  1082  0024'                    	ds	1
  1083  0025'                    ??__tdiv_to_l_:
  1084  0025'                    ??__div_to_l_:	
  1085                           ; 1 bytes @ 0x25
  1086                           
  1087  0025'                    ??_config:	
  1088                           ; 1 bytes @ 0x25
  1089                           
  1090  0025'                    ??___lldiv:	
  1091                           ; 1 bytes @ 0x25
  1092                           
  1093  0025'                    ??___fleq:	
  1094                           ; 1 bytes @ 0x25
  1095                           
  1096  0025'                    ??___flge:	
  1097                           ; 1 bytes @ 0x25
  1098                           
  1099  0025'                    LCDPutStr@i:	
  1100                           ; 1 bytes @ 0x25
  1101                           
  1102  0025'                    __Umul8_16@multiplier:	
  1103                           ; 1 bytes @ 0x25
  1104                           
  1105  0025'                    ___xxtofl@sign:	
  1106                           ; 1 bytes @ 0x25
  1107                           
  1108  0025'                    ___lwdiv@dividend:	
  1109                           ; 1 bytes @ 0x25
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x25
  1113  0025'                    	ds	1
  1114  0026'                    ___xxtofl@exp:
  1115  0026'                    _LCDGoto$138:	
  1116                           ; 1 bytes @ 0x26
  1117                           
  1118  0026'                    ___awdiv@dividend:	
  1119                           ; 2 bytes @ 0x26
  1120                           
  1121  0026'                    ___lldiv@quotient:	
  1122                           ; 2 bytes @ 0x26
  1123                           
  1124  0026'                    __div_to_l_@quot:	
  1125                           ; 4 bytes @ 0x26
  1126                           
  1127                           
  1128                           ; 4 bytes @ 0x26
  1129  0026'                    	ds	1
  1130  0027'                    ??___lwdiv:
  1131  0027'                    ___xxtofl@arg:	
  1132                           ; 1 bytes @ 0x27
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x27
  1136  0027'                    	ds	1
  1137  0028'                    ??___awdiv:
  1138  0028'                    LCDGoto@pos:	
  1139                           ; 1 bytes @ 0x28
  1140                           
  1141  0028'                    ___lwdiv@quotient:	
  1142                           ; 1 bytes @ 0x28
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x28
  1146  0028'                    	ds	1
  1147  0029'                    ___awdiv@counter:
  1148  0029'                    __tdiv_to_l_@quot:	
  1149                           ; 1 bytes @ 0x29
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0x29
  1153  0029'                    	ds	1
  1154  002A'                    ___lldiv@counter:
  1155  002A'                    ___awdiv@sign:	
  1156                           ; 1 bytes @ 0x2A
  1157                           
  1158  002A'                    __div_to_l_@cntr:	
  1159                           ; 1 bytes @ 0x2A
  1160                           
  1161  002A'                    ___lwdiv@counter:	
  1162                           ; 1 bytes @ 0x2A
  1163                           
  1164                           
  1165                           ; 1 bytes @ 0x2A
  1166  002A'                    	ds	1
  1167  002B'                    ??___llmod:
  1168  002B'                    __div_to_l_@exp1:	
  1169                           ; 1 bytes @ 0x2B
  1170                           
  1171  002B'                    ___awdiv@quotient:	
  1172                           ; 1 bytes @ 0x2B
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x2B
  1176  002B'                    	ds	1
  1177  002C'                    ___llmod@counter:
  1178                           
  1179                           ; 1 bytes @ 0x2C
  1180  002C'                    	ds	1
  1181  002D'                    ??___flsub:
  1182  002D'                    ___fltol@sign1:	
  1183                           ; 1 bytes @ 0x2D
  1184                           
  1185  002D'                    __tdiv_to_l_@cntr:	
  1186                           ; 1 bytes @ 0x2D
  1187                           
  1188                           
  1189                           ; 1 bytes @ 0x2D
  1190  002D'                    	ds	1
  1191  002E'                    ___fltol@exp1:
  1192  002E'                    __tdiv_to_l_@exp1:	
  1193                           ; 1 bytes @ 0x2E
  1194                           
  1195                           
  1196                           ; 1 bytes @ 0x2E
  1197  002E'                    	ds	1
  1198                           
  1199                           	psect	maintext
  1200  0000'                    __pmaintext:	
  1201 ;;
  1202 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1203 ;;
  1204 ;; *************** function _main *****************
  1205 ;; Defined at:
  1206 ;;		line 110 in file "newmain.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : B00/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0
  1222 ;;      Temps:          0       0       1       0       0
  1223 ;;      Totals:         0       0       1       0       0
  1224 ;;Total ram usage:        1 bytes
  1225 ;; Hardware stack levels required when called: 7
  1226 ;; This function calls:
  1227 ;;		_LCDGoto
  1228 ;;		_LCDPutStr
  1229 ;;		_config
  1230 ;;		_sprintf
  1231 ;; This function is called by:
  1232 ;;		Startup code after reset
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236  0000'                    _main:	
  1237                           ;psect for function _main
  1238                           
  1239  0000'                    l4079:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1242                           
  1243                           
  1244                           ;newmain.c: 112:     config();
  1245  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_config
  1246  0005'                    l59:	
  1247                           ;newmain.c: 113:     while(1)
  1248                           
  1249                           
  1250                           ;newmain.c: 114:     {;newmain.c: 115:         LCDGoto(0,0);
  1251  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  1252  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  1253  0007' 01A3'              	clrf	LCDGoto@ln
  1254  0008' 3000               	movlw	0
  1255  0009' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDGoto
  1256  000E'                    l4081:
  1257                           
  1258                           ;newmain.c: 116:         sprintf(buffer," %f    %u", Velocity, Pulse);
  1259  000E' 3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1260  000F' 1683               	bsf	3,5	;RP0=1, select bank1
  1261  0010' 1303               	bcf	3,6	;RP1=0, select bank1
  1262  0011' 0080'              	movwf	??_main^(0+128)
  1263  0012' 0800'              	movf	??_main^(0+128),w
  1264  0013' 1683               	bsf	3,5	;RP0=1, select bank3
  1265  0014' 1703               	bsf	3,6	;RP1=1, select bank3
  1266  0015' 0080'              	movwf	sprintf@f^(0+384)
  1267  0016' 0800'              	movf	(_Velocity+3)^(0+384),w
  1268  0017' 0081'              	movwf	((?_sprintf+3)^(0+384)+1)
  1269  0018' 0800'              	movf	(_Velocity+2)^(0+384),w
  1270  0019' 0081'              	movwf	((?_sprintf+2)^(0+384)+1)
  1271  001A' 0800'              	movf	(_Velocity+1)^(0+384),w
  1272  001B' 0081'              	movwf	((?_sprintf+1)^(0+384)+1)
  1273  001C' 0800'              	movf	_Velocity^(0+384),w
  1274  001D' 0081'              	movwf	(?_sprintf^(0+384)+1)
  1275  001E' 1683               	bsf	3,5	;RP0=1, select bank1
  1276  001F' 1303               	bcf	3,6	;RP1=0, select bank1
  1277  0020' 0800'              	movf	(_Pulse+1)^(0+128),w
  1278  0021' 1683               	bsf	3,5	;RP0=1, select bank3
  1279  0022' 1703               	bsf	3,6	;RP1=1, select bank3
  1280  0023' 0085'              	movwf	((?_sprintf+1)^(0+384)+5)
  1281  0024' 1683               	bsf	3,5	;RP0=1, select bank1
  1282  0025' 1303               	bcf	3,6	;RP1=0, select bank1
  1283  0026' 0800'              	movf	_Pulse^(0+128),w
  1284  0027' 1683               	bsf	3,5	;RP0=1, select bank3
  1285  0028' 1703               	bsf	3,6	;RP1=1, select bank3
  1286  0029' 0085'              	movwf	(?_sprintf^(0+384)+5)
  1287  002A' 3000'              	movlw	(low (_buffer| (0+256)))& (0+255)
  1288  002B' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1289  0030'                    l4083:
  1290                           
  1291                           ;newmain.c: 117:         LCDPutStr(buffer);
  1292  0030' 3000'              	movlw	(low (_buffer| (0+256)))& (0+255)
  1293  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutStr
  1294  0036' 2800'              	goto	l59
  1295  0037' 120A' 118A' 2800'  	ljmp	start
  1296  003A'                    __end_of_main:
  1297                           
  1298                           	psect	text1
  1299  0000'                    __ptext1:	
  1300 ;; *************** function _sprintf *****************
  1301 ;; Defined at:
  1302 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  sp              1    wreg     PTR unsigned char 
  1305 ;;		 -> buffer(10), 
  1306 ;;  f               1    0[BANK3 ] PTR const unsigned char 
  1307 ;;		 -> STR_1(10), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  sp              1   31[BANK3 ] PTR unsigned char 
  1310 ;;		 -> buffer(10), 
  1311 ;;  fval            4   32[BANK3 ] PTR unsigned char 
  1312 ;;  tmpval          4   27[BANK3 ] struct .
  1313 ;;  val             4   21[BANK3 ] unsigned long 
  1314 ;;  eexp            2   25[BANK3 ] int 
  1315 ;;  prec            2   19[BANK3 ] int 
  1316 ;;  flag            2   17[BANK3 ] unsigned short 
  1317 ;;  cp              2    0        PTR const unsigned char 
  1318 ;;  len             2    0        unsigned int 
  1319 ;;  width           2    0        int 
  1320 ;;  c               1   36[BANK3 ] unsigned char 
  1321 ;;  ap              1   16[BANK3 ] PTR void [1]
  1322 ;;		 -> ?_sprintf(2), 
  1323 ;;  d               1    0        unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  2    0[BANK3 ] int 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       0       0       7       0
  1334 ;;      Locals:         0       0       0      25       0
  1335 ;;      Temps:          0       0       0       5       0
  1336 ;;      Totals:         0       0       0      37       0
  1337 ;;Total ram usage:       37 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 6
  1340 ;; This function calls:
  1341 ;;		___awdiv
  1342 ;;		___fladd
  1343 ;;		___fleq
  1344 ;;		___flge
  1345 ;;		___flmul
  1346 ;;		___flneg
  1347 ;;		___flsub
  1348 ;;		___fltol
  1349 ;;		___lldiv
  1350 ;;		___llmod
  1351 ;;		___wmul
  1352 ;;		___xxtofl
  1353 ;;		__div_to_l_
  1354 ;;		__tdiv_to_l_
  1355 ;;		_fround
  1356 ;;		_scale
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362  0000'                    _sprintf:	
  1363                           ;psect for function _sprintf
  1364                           
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1368                           ;sprintf@sp stored from wreg
  1369  0000' 1683               	bsf	3,5	;RP0=1, select bank3
  1370  0001' 1703               	bsf	3,6	;RP1=1, select bank3
  1371  0002' 0080'              	movwf	sprintf@sp^(0+384)
  1372  0003'                    l3879:
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1375  0003' 3000'              	movlw	(low ((?_sprintf| (0+256)+1)))& (0+255)
  1376  0004' 0080'              	movwf	??_sprintf^(0+384)
  1377  0005' 0800'              	movf	??_sprintf^(0+384),w
  1378  0006' 0080'              	movwf	sprintf@ap^(0+384)
  1379  0007'                    L1:
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1382  0007' 120A' 118A' 2800'  	goto	l4067
  1383  000A'                    l3881:
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1386  000A' 3025               	movlw	37
  1387  000B' 0600'              	xorwf	sprintf@c^(0+384),w
  1388  000C' 1903               	btfsc	3,2
  1389  000D' 2800'              	goto	u7291
  1390  000E' 2800'              	goto	u7290
  1391  000F'                    u7291:
  1392  000F' 2800'              	goto	l3887
  1393  0010'                    u7290:
  1394  0010'                    l3883:
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1397  0010' 0800'              	movf	sprintf@c^(0+384),w
  1398  0011' 0080'              	movwf	??_sprintf^(0+384)
  1399  0012' 0800'              	movf	sprintf@sp^(0+384),w
  1400  0013' 0084               	movwf	4
  1401  0014' 0800'              	movf	??_sprintf^(0+384),w
  1402  0015' 1783               	bsf	3,7	;select IRP bank2
  1403  0016' 0080               	movwf	0
  1404  0017'                    l3885:
  1405  0017' 3001               	movlw	1
  1406  0018' 0080'              	movwf	??_sprintf^(0+384)
  1407  0019' 0800'              	movf	??_sprintf^(0+384),w
  1408  001A' 0780'              	addwf	sprintf@sp^(0+384),f
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1411  001B' 2800'              	goto	L1
  1412  001C'                    l3887:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1415  001C' 0180'              	clrf	sprintf@flag^(0+384)
  1416  001D' 0180'              	clrf	(sprintf@flag+1)^(0+384)
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1419  001E' 2800'              	goto	l3893
  1420  001F'                    l240:	
  1421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1422                           
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1425  001F' 1501'              	bsf	(sprintf@flag^(0+384)+1),2
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 690:    break;
  1428  0020' 2800'              	goto	l3895
  1429  0021'                    l3889:
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1432  0021' 30C0               	movlw	192
  1433  0022' 0480'              	iorwf	sprintf@flag^(0+384),f
  1434  0023' 3000               	movlw	0
  1435  0024' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 845:    break;
  1438  0025' 2800'              	goto	l3895
  1439  0026'                    l3893:
  1440  0026' 3001               	movlw	1
  1441  0027' 0780'              	addwf	sprintf@f^(0+384),f
  1442  0028' 30FF               	movlw	-1
  1443  0029' 0700'              	addwf	sprintf@f^(0+384),w
  1444  002A' 0084               	movwf	4
  1445  002B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1446  0030' 0080'              	movwf	sprintf@c^(0+384)
  1447  0031' 0080'              	movwf	??_sprintf^(0+384)
  1448  0032' 0181'              	clrf	(??_sprintf^(0+384)+1)
  1449                           
  1450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 1, Range of values is 0 to 0
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte            4     3 (average)
  1456                           ; direct_byte           11     8 (fixed)
  1457                           ; jumptable            260     6 (fixed)
  1458                           ;	Chosen strategy is simple_byte
  1459  0033' 0800'              	movf	(??_sprintf+1)^(0+384),w
  1460  0034' 3A00               	xorlw	0	; case 0
  1461  0035' 1903               	skipnz
  1462  0036' 2800'              	goto	l4115
  1463  0037' 2800'              	goto	L1
  1464  0038'                    l4115:
  1465                           
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 3, Range of values is 0 to 117
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte           10     6 (average)
  1471                           ; jumptable            260     6 (fixed)
  1472                           ;	Chosen strategy is simple_byte
  1473  0038' 0800'              	movf	??_sprintf^(0+384),w
  1474  0039' 3A00               	xorlw	0	; case 0
  1475  003A' 1903               	skipnz
  1476  003B' 2800'              	goto	L3
  1477  003C' 3A66               	xorlw	102	; case 102
  1478  003D' 1903               	skipnz
  1479  003E' 2800'              	goto	l240
  1480  003F' 3A13               	xorlw	19	; case 117
  1481  0040' 1903               	skipnz
  1482  0041' 2800'              	goto	l3889
  1483  0042' 2800'              	goto	L1
  1484  0043'                    l3895:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1487  0043' 3000               	movlw	0
  1488  0044' 0500'              	andwf	sprintf@flag^(0+384),w
  1489  0045' 0080'              	movwf	??_sprintf^(0+384)
  1490  0046' 3007               	movlw	7
  1491  0047' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
  1492  0048' 0080'              	movwf	(??_sprintf+1)^(0+384)
  1493  0049' 0800'              	movf	??_sprintf^(0+384),w
  1494  004A' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
  1495  004B' 1903               	btfsc	3,2
  1496  004C' 2800'              	goto	u7301
  1497  004D' 2800'              	goto	u7300
  1498  004E'                    u7301:
  1499  004E' 120A' 118A' 2800'  	goto	l4035
  1500  0051'                    u7300:
  1501  0051'                    l3897:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1504  0051' 3006               	movlw	6
  1505  0052' 0080'              	movwf	sprintf@prec^(0+384)
  1506  0053' 3000               	movlw	0
  1507  0054' 0081'              	movwf	(sprintf@prec^(0+384)+1)
  1508  0055'                    l3899:
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1511  0055' 0800'              	movf	sprintf@ap^(0+384),w
  1512  0056' 0084               	movwf	4
  1513  0057' 1783               	bsf	3,7	;select IRP bank2
  1514  0058' 0800               	movf	0,w
  1515  0059' 0080'              	movwf	sprintf@fval^(0+384)
  1516  005A' 0A84               	incf	4,f
  1517  005B' 0800               	movf	0,w
  1518  005C' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  1519  005D' 0A84               	incf	4,f
  1520  005E' 0800               	movf	0,w
  1521  005F' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  1522  0060' 0A84               	incf	4,f
  1523  0061' 0800               	movf	0,w
  1524  0062' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  1525  0063'                    l3901:
  1526  0063' 3004               	movlw	4
  1527  0064' 0080'              	movwf	??_sprintf^(0+384)
  1528  0065' 0800'              	movf	??_sprintf^(0+384),w
  1529  0066' 0780'              	addwf	sprintf@ap^(0+384),f
  1530  0067'                    l3903:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1533  0067' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  1534  0068' 1283               	bcf	3,5	;RP0=0, select bank0
  1535  0069' 1303               	bcf	3,6	;RP1=0, select bank0
  1536  006A' 00A0'              	movwf	___flge@ff1+3
  1537  006B' 1683               	bsf	3,5	;RP0=1, select bank3
  1538  006C' 1703               	bsf	3,6	;RP1=1, select bank3
  1539  006D' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  1540  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  1541  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  1542  0070' 009F'              	movwf	___flge@ff1+2
  1543  0071' 1683               	bsf	3,5	;RP0=1, select bank3
  1544  0072' 1703               	bsf	3,6	;RP1=1, select bank3
  1545  0073' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  1546  0074' 1283               	bcf	3,5	;RP0=0, select bank0
  1547  0075' 1303               	bcf	3,6	;RP1=0, select bank0
  1548  0076' 009E'              	movwf	___flge@ff1+1
  1549  0077' 1683               	bsf	3,5	;RP0=1, select bank3
  1550  0078' 1703               	bsf	3,6	;RP1=1, select bank3
  1551  0079' 0800'              	movf	sprintf@fval^(0+384),w
  1552  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  1553  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  1554  007C' 009D'              	movwf	___flge@ff1
  1555  007D' 3000               	movlw	0
  1556  007E' 00A4'              	movwf	___flge@ff2+3
  1557  007F' 3000               	movlw	0
  1558  0080' 00A3'              	movwf	___flge@ff2+2
  1559  0081' 3000               	movlw	0
  1560  0082' 00A2'              	movwf	___flge@ff2+1
  1561  0083' 3000               	movlw	0
  1562  0084' 00A1'              	movwf	___flge@ff2
  1563  0085' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  1564  008A' 1803               	btfsc	3,0
  1565  008B' 2800'              	goto	u7311
  1566  008C' 2800'              	goto	u7310
  1567  008D'                    u7311:
  1568  008D' 2800'              	goto	l3909
  1569  008E'                    u7310:
  1570  008E'                    l3905:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1573  008E' 1683               	bsf	3,5	;RP0=1, select bank3
  1574  008F' 1703               	bsf	3,6	;RP1=1, select bank3
  1575  0090' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  1576  0091' 1283               	bcf	3,5	;RP0=0, select bank0
  1577  0092' 1303               	bcf	3,6	;RP1=0, select bank0
  1578  0093' 00A0'              	movwf	___flneg@f1+3
  1579  0094' 1683               	bsf	3,5	;RP0=1, select bank3
  1580  0095' 1703               	bsf	3,6	;RP1=1, select bank3
  1581  0096' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  1582  0097' 1283               	bcf	3,5	;RP0=0, select bank0
  1583  0098' 1303               	bcf	3,6	;RP1=0, select bank0
  1584  0099' 009F'              	movwf	___flneg@f1+2
  1585  009A' 1683               	bsf	3,5	;RP0=1, select bank3
  1586  009B' 1703               	bsf	3,6	;RP1=1, select bank3
  1587  009C' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  1588  009D' 1283               	bcf	3,5	;RP0=0, select bank0
  1589  009E' 1303               	bcf	3,6	;RP1=0, select bank0
  1590  009F' 009E'              	movwf	___flneg@f1+1
  1591  00A0' 1683               	bsf	3,5	;RP0=1, select bank3
  1592  00A1' 1703               	bsf	3,6	;RP1=1, select bank3
  1593  00A2' 0800'              	movf	sprintf@fval^(0+384),w
  1594  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  1595  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  1596  00A5' 009D'              	movwf	___flneg@f1
  1597  00A6' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  1598  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  1599  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  1600  00AD' 0820'              	movf	?___flneg+3,w
  1601  00AE' 1683               	bsf	3,5	;RP0=1, select bank3
  1602  00AF' 1703               	bsf	3,6	;RP1=1, select bank3
  1603  00B0' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  1604  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  1605  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  1606  00B3' 081F'              	movf	?___flneg+2,w
  1607  00B4' 1683               	bsf	3,5	;RP0=1, select bank3
  1608  00B5' 1703               	bsf	3,6	;RP1=1, select bank3
  1609  00B6' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  1610  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  1611  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  1612  00B9' 081E'              	movf	?___flneg+1,w
  1613  00BA' 1683               	bsf	3,5	;RP0=1, select bank3
  1614  00BB' 1703               	bsf	3,6	;RP1=1, select bank3
  1615  00BC' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  1616  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  1617  00BE' 1303               	bcf	3,6	;RP1=0, select bank0
  1618  00BF' 081D'              	movf	?___flneg,w
  1619  00C0' 1683               	bsf	3,5	;RP0=1, select bank3
  1620  00C1' 1703               	bsf	3,6	;RP1=1, select bank3
  1621  00C2' 0080'              	movwf	sprintf@fval^(0+384)
  1622  00C3'                    l3907:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1625  00C3' 3003               	movlw	3
  1626  00C4' 0480'              	iorwf	sprintf@flag^(0+384),f
  1627  00C5' 3000               	movlw	0
  1628  00C6' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
  1629  00C7'                    l3909:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1632  00C7' 1683               	bsf	3,5	;RP0=1, select bank3
  1633  00C8' 1703               	bsf	3,6	;RP1=1, select bank3
  1634  00C9' 0180'              	clrf	sprintf@eexp^(0+384)
  1635  00CA' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
  1636  00CB'                    l3911:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1639  00CB' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  1640  00CC' 1283               	bcf	3,5	;RP0=0, select bank0
  1641  00CD' 1303               	bcf	3,6	;RP1=0, select bank0
  1642  00CE' 00A0'              	movwf	___fleq@ff1+3
  1643  00CF' 1683               	bsf	3,5	;RP0=1, select bank3
  1644  00D0' 1703               	bsf	3,6	;RP1=1, select bank3
  1645  00D1' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  1646  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  1647  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
  1648  00D4' 009F'              	movwf	___fleq@ff1+2
  1649  00D5' 1683               	bsf	3,5	;RP0=1, select bank3
  1650  00D6' 1703               	bsf	3,6	;RP1=1, select bank3
  1651  00D7' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  1652  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
  1653  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
  1654  00DA' 009E'              	movwf	___fleq@ff1+1
  1655  00DB' 1683               	bsf	3,5	;RP0=1, select bank3
  1656  00DC' 1703               	bsf	3,6	;RP1=1, select bank3
  1657  00DD' 0800'              	movf	sprintf@fval^(0+384),w
  1658  00DE' 1283               	bcf	3,5	;RP0=0, select bank0
  1659  00DF' 1303               	bcf	3,6	;RP1=0, select bank0
  1660  00E0' 009D'              	movwf	___fleq@ff1
  1661  00E1' 3000               	movlw	0
  1662  00E2' 00A4'              	movwf	___fleq@ff2+3
  1663  00E3' 3000               	movlw	0
  1664  00E4' 00A3'              	movwf	___fleq@ff2+2
  1665  00E5' 3000               	movlw	0
  1666  00E6' 00A2'              	movwf	___fleq@ff2+1
  1667  00E7' 3000               	movlw	0
  1668  00E8' 00A1'              	movwf	___fleq@ff2
  1669  00E9' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  1670  00EE' 1803               	btfsc	3,0
  1671  00EF' 2800'              	goto	u7321
  1672  00F0' 2800'              	goto	u7320
  1673  00F1'                    u7321:
  1674  00F1' 2800'              	goto	l3937
  1675  00F2'                    u7320:
  1676  00F2'                    l3913:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1679  00F2' 1003               	clrc
  1680  00F3' 1683               	bsf	3,5	;RP0=1, select bank3
  1681  00F4' 1703               	bsf	3,6	;RP1=1, select bank3
  1682  00F5' 0D00'              	rlf	(sprintf@fval+2)^(0+384),w
  1683  00F6' 0D00'              	rlf	(sprintf@fval+3)^(0+384),w
  1684  00F7' 3E82               	addlw	130
  1685  00F8' 0080'              	movwf	sprintf@eexp^(0+384)
  1686  00F9' 30FF               	movlw	255
  1687  00FA' 1803               	skipnc
  1688  00FB' 3000               	movlw	0
  1689  00FC' 0081'              	movwf	(sprintf@eexp^(0+384)+1)
  1690  00FD'                    l3915:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1693  00FD' 30FF               	movlw	255
  1694  00FE' 0780'              	addwf	sprintf@eexp^(0+384),f
  1695  00FF' 1803               	skipnc
  1696  0100' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  1697  0101' 30FF               	movlw	255
  1698  0102' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  1699  0103'                    l3917:
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1702  0103' 3003               	movlw	3
  1703  0104' 1283               	bcf	3,5	;RP0=0, select bank0
  1704  0105' 1303               	bcf	3,6	;RP1=0, select bank0
  1705  0106' 009D'              	movwf	___wmul@multiplier
  1706  0107' 3000               	movlw	0
  1707  0108' 009E'              	movwf	___wmul@multiplier+1
  1708  0109' 1683               	bsf	3,5	;RP0=1, select bank3
  1709  010A' 1703               	bsf	3,6	;RP1=1, select bank3
  1710  010B' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  1711  010C' 1283               	bcf	3,5	;RP0=0, select bank0
  1712  010D' 1303               	bcf	3,6	;RP1=0, select bank0
  1713  010E' 00A0'              	movwf	___wmul@multiplicand+1
  1714  010F' 1683               	bsf	3,5	;RP0=1, select bank3
  1715  0110' 1703               	bsf	3,6	;RP1=1, select bank3
  1716  0111' 0800'              	movf	sprintf@eexp^(0+384),w
  1717  0112' 1283               	bcf	3,5	;RP0=0, select bank0
  1718  0113' 1303               	bcf	3,6	;RP1=0, select bank0
  1719  0114' 009F'              	movwf	___wmul@multiplicand
  1720  0115' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1721  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  1722  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  1723  011C' 081E'              	movf	?___wmul+1,w
  1724  011D' 1683               	bsf	3,5	;RP0=1, select bank3
  1725  011E' 1703               	bsf	3,6	;RP1=1, select bank3
  1726  011F' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  1727  0120' 1283               	bcf	3,5	;RP0=0, select bank0
  1728  0121' 1303               	bcf	3,6	;RP1=0, select bank0
  1729  0122' 081D'              	movf	?___wmul,w
  1730  0123' 1683               	bsf	3,5	;RP0=1, select bank3
  1731  0124' 1703               	bsf	3,6	;RP1=1, select bank3
  1732  0125' 0080'              	movwf	sprintf@eexp^(0+384)
  1733  0126'                    l3919:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1736  0126' 300A               	movlw	10
  1737  0127' 1283               	bcf	3,5	;RP0=0, select bank0
  1738  0128' 1303               	bcf	3,6	;RP1=0, select bank0
  1739  0129' 00A4'              	movwf	___awdiv@divisor
  1740  012A' 3000               	movlw	0
  1741  012B' 00A5'              	movwf	___awdiv@divisor+1
  1742  012C' 1683               	bsf	3,5	;RP0=1, select bank3
  1743  012D' 1703               	bsf	3,6	;RP1=1, select bank3
  1744  012E' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  1745  012F' 1283               	bcf	3,5	;RP0=0, select bank0
  1746  0130' 1303               	bcf	3,6	;RP1=0, select bank0
  1747  0131' 00A7'              	movwf	___awdiv@dividend+1
  1748  0132' 1683               	bsf	3,5	;RP0=1, select bank3
  1749  0133' 1703               	bsf	3,6	;RP1=1, select bank3
  1750  0134' 0800'              	movf	sprintf@eexp^(0+384),w
  1751  0135' 1283               	bcf	3,5	;RP0=0, select bank0
  1752  0136' 1303               	bcf	3,6	;RP1=0, select bank0
  1753  0137' 00A6'              	movwf	___awdiv@dividend
  1754  0138' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  1755  013D' 1283               	bcf	3,5	;RP0=0, select bank0
  1756  013E' 1303               	bcf	3,6	;RP1=0, select bank0
  1757  013F' 0825'              	movf	?___awdiv+1,w
  1758  0140' 1683               	bsf	3,5	;RP0=1, select bank3
  1759  0141' 1703               	bsf	3,6	;RP1=1, select bank3
  1760  0142' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  1761  0143' 1283               	bcf	3,5	;RP0=0, select bank0
  1762  0144' 1303               	bcf	3,6	;RP1=0, select bank0
  1763  0145' 0824'              	movf	?___awdiv,w
  1764  0146' 1683               	bsf	3,5	;RP0=1, select bank3
  1765  0147' 1703               	bsf	3,6	;RP1=1, select bank3
  1766  0148' 0080'              	movwf	sprintf@eexp^(0+384)
  1767  0149'                    l3921:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1770  0149' 1F80'              	btfss	(sprintf@eexp+1)^(0+384),7
  1771  014A' 2800'              	goto	u7331
  1772  014B' 2800'              	goto	u7330
  1773  014C'                    u7331:
  1774  014C' 2800'              	goto	l3925
  1775  014D'                    u7330:
  1776  014D'                    l3923:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1779  014D' 30FF               	movlw	255
  1780  014E' 0780'              	addwf	sprintf@eexp^(0+384),f
  1781  014F' 1803               	skipnc
  1782  0150' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  1783  0151' 30FF               	movlw	255
  1784  0152' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  1785  0153'                    l3925:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1788  0153' 0300'              	decf	sprintf@eexp^(0+384),w
  1789  0154' 3AFF               	xorlw	255
  1790  0155' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  1791  015A' 1683               	bsf	3,5	;RP0=1, select bank1
  1792  015B' 1303               	bcf	3,6	;RP1=0, select bank1
  1793  015C' 0800'              	movf	(?_scale+3)^(0+128),w
  1794  015D' 1683               	bsf	3,5	;RP0=1, select bank3
  1795  015E' 1703               	bsf	3,6	;RP1=1, select bank3
  1796  015F' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  1797  0160' 1683               	bsf	3,5	;RP0=1, select bank1
  1798  0161' 1303               	bcf	3,6	;RP1=0, select bank1
  1799  0162' 0800'              	movf	(?_scale+2)^(0+128),w
  1800  0163' 1683               	bsf	3,5	;RP0=1, select bank3
  1801  0164' 1703               	bsf	3,6	;RP1=1, select bank3
  1802  0165' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  1803  0166' 1683               	bsf	3,5	;RP0=1, select bank1
  1804  0167' 1303               	bcf	3,6	;RP1=0, select bank1
  1805  0168' 0800'              	movf	(?_scale+1)^(0+128),w
  1806  0169' 1683               	bsf	3,5	;RP0=1, select bank3
  1807  016A' 1703               	bsf	3,6	;RP1=1, select bank3
  1808  016B' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  1809  016C' 1683               	bsf	3,5	;RP0=1, select bank1
  1810  016D' 1303               	bcf	3,6	;RP1=0, select bank1
  1811  016E' 0800'              	movf	?_scale^(0+128),w
  1812  016F' 1683               	bsf	3,5	;RP0=1, select bank3
  1813  0170' 1703               	bsf	3,6	;RP1=1, select bank3
  1814  0171' 0080'              	movwf	sprintf@tmpval^(0+384)
  1815  0172'                    l3927:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1818  0172' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  1819  0173' 1683               	bsf	3,5	;RP0=1, select bank1
  1820  0174' 1303               	bcf	3,6	;RP1=0, select bank1
  1821  0175' 0080'              	movwf	(___flmul@b+3)^(0+128)
  1822  0176' 1683               	bsf	3,5	;RP0=1, select bank3
  1823  0177' 1703               	bsf	3,6	;RP1=1, select bank3
  1824  0178' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  1825  0179' 1683               	bsf	3,5	;RP0=1, select bank1
  1826  017A' 1303               	bcf	3,6	;RP1=0, select bank1
  1827  017B' 0080'              	movwf	(___flmul@b+2)^(0+128)
  1828  017C' 1683               	bsf	3,5	;RP0=1, select bank3
  1829  017D' 1703               	bsf	3,6	;RP1=1, select bank3
  1830  017E' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  1831  017F' 1683               	bsf	3,5	;RP0=1, select bank1
  1832  0180' 1303               	bcf	3,6	;RP1=0, select bank1
  1833  0181' 0080'              	movwf	(___flmul@b+1)^(0+128)
  1834  0182' 1683               	bsf	3,5	;RP0=1, select bank3
  1835  0183' 1703               	bsf	3,6	;RP1=1, select bank3
  1836  0184' 0800'              	movf	sprintf@fval^(0+384),w
  1837  0185' 1683               	bsf	3,5	;RP0=1, select bank1
  1838  0186' 1303               	bcf	3,6	;RP1=0, select bank1
  1839  0187' 0080'              	movwf	___flmul@b^(0+128)
  1840  0188' 1683               	bsf	3,5	;RP0=1, select bank3
  1841  0189' 1703               	bsf	3,6	;RP1=1, select bank3
  1842  018A' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  1843  018B' 1683               	bsf	3,5	;RP0=1, select bank1
  1844  018C' 1303               	bcf	3,6	;RP1=0, select bank1
  1845  018D' 0080'              	movwf	(___flmul@a+3)^(0+128)
  1846  018E' 1683               	bsf	3,5	;RP0=1, select bank3
  1847  018F' 1703               	bsf	3,6	;RP1=1, select bank3
  1848  0190' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  1849  0191' 1683               	bsf	3,5	;RP0=1, select bank1
  1850  0192' 1303               	bcf	3,6	;RP1=0, select bank1
  1851  0193' 0080'              	movwf	(___flmul@a+2)^(0+128)
  1852  0194' 1683               	bsf	3,5	;RP0=1, select bank3
  1853  0195' 1703               	bsf	3,6	;RP1=1, select bank3
  1854  0196' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  1855  0197' 1683               	bsf	3,5	;RP0=1, select bank1
  1856  0198' 1303               	bcf	3,6	;RP1=0, select bank1
  1857  0199' 0080'              	movwf	(___flmul@a+1)^(0+128)
  1858  019A' 1683               	bsf	3,5	;RP0=1, select bank3
  1859  019B' 1703               	bsf	3,6	;RP1=1, select bank3
  1860  019C' 0800'              	movf	sprintf@tmpval^(0+384),w
  1861  019D' 1683               	bsf	3,5	;RP0=1, select bank1
  1862  019E' 1303               	bcf	3,6	;RP1=0, select bank1
  1863  019F' 0080'              	movwf	___flmul@a^(0+128)
  1864  01A0' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  1865  01A5' 1683               	bsf	3,5	;RP0=1, select bank1
  1866  01A6' 1303               	bcf	3,6	;RP1=0, select bank1
  1867  01A7' 0800'              	movf	(?___flmul+3)^(0+128),w
  1868  01A8' 1683               	bsf	3,5	;RP0=1, select bank3
  1869  01A9' 1703               	bsf	3,6	;RP1=1, select bank3
  1870  01AA' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  1871  01AB' 1683               	bsf	3,5	;RP0=1, select bank1
  1872  01AC' 1303               	bcf	3,6	;RP1=0, select bank1
  1873  01AD' 0800'              	movf	(?___flmul+2)^(0+128),w
  1874  01AE' 1683               	bsf	3,5	;RP0=1, select bank3
  1875  01AF' 1703               	bsf	3,6	;RP1=1, select bank3
  1876  01B0' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  1877  01B1' 1683               	bsf	3,5	;RP0=1, select bank1
  1878  01B2' 1303               	bcf	3,6	;RP1=0, select bank1
  1879  01B3' 0800'              	movf	(?___flmul+1)^(0+128),w
  1880  01B4' 1683               	bsf	3,5	;RP0=1, select bank3
  1881  01B5' 1703               	bsf	3,6	;RP1=1, select bank3
  1882  01B6' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  1883  01B7' 1683               	bsf	3,5	;RP0=1, select bank1
  1884  01B8' 1303               	bcf	3,6	;RP1=0, select bank1
  1885  01B9' 0800'              	movf	?___flmul^(0+128),w
  1886  01BA' 1683               	bsf	3,5	;RP0=1, select bank3
  1887  01BB' 1703               	bsf	3,6	;RP1=1, select bank3
  1888  01BC' 0080'              	movwf	sprintf@tmpval^(0+384)
  1889  01BD'                    l3929:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  1892  01BD' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  1893  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  1894  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  1895  01C0' 00A0'              	movwf	___flge@ff1+3
  1896  01C1' 1683               	bsf	3,5	;RP0=1, select bank3
  1897  01C2' 1703               	bsf	3,6	;RP1=1, select bank3
  1898  01C3' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  1899  01C4' 1283               	bcf	3,5	;RP0=0, select bank0
  1900  01C5' 1303               	bcf	3,6	;RP1=0, select bank0
  1901  01C6' 009F'              	movwf	___flge@ff1+2
  1902  01C7' 1683               	bsf	3,5	;RP0=1, select bank3
  1903  01C8' 1703               	bsf	3,6	;RP1=1, select bank3
  1904  01C9' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  1905  01CA' 1283               	bcf	3,5	;RP0=0, select bank0
  1906  01CB' 1303               	bcf	3,6	;RP1=0, select bank0
  1907  01CC' 009E'              	movwf	___flge@ff1+1
  1908  01CD' 1683               	bsf	3,5	;RP0=1, select bank3
  1909  01CE' 1703               	bsf	3,6	;RP1=1, select bank3
  1910  01CF' 0800'              	movf	sprintf@tmpval^(0+384),w
  1911  01D0' 1283               	bcf	3,5	;RP0=0, select bank0
  1912  01D1' 1303               	bcf	3,6	;RP1=0, select bank0
  1913  01D2' 009D'              	movwf	___flge@ff1
  1914  01D3' 303F               	movlw	63
  1915  01D4' 00A4'              	movwf	___flge@ff2+3
  1916  01D5' 3080               	movlw	128
  1917  01D6' 00A3'              	movwf	___flge@ff2+2
  1918  01D7' 3000               	movlw	0
  1919  01D8' 00A2'              	movwf	___flge@ff2+1
  1920  01D9' 3000               	movlw	0
  1921  01DA' 00A1'              	movwf	___flge@ff2
  1922  01DB' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  1923  01E0' 1803               	btfsc	3,0
  1924  01E1' 2800'              	goto	u7341
  1925  01E2' 2800'              	goto	u7340
  1926  01E3'                    u7341:
  1927  01E3' 2800'              	goto	l3933
  1928  01E4'                    u7340:
  1929  01E4'                    l3931:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  1932  01E4' 30FF               	movlw	255
  1933  01E5' 1683               	bsf	3,5	;RP0=1, select bank3
  1934  01E6' 1703               	bsf	3,6	;RP1=1, select bank3
  1935  01E7' 0780'              	addwf	sprintf@eexp^(0+384),f
  1936  01E8' 1803               	skipnc
  1937  01E9' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  1938  01EA' 30FF               	movlw	255
  1939  01EB' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  1940  01EC' 2800'              	goto	l3937
  1941  01ED'                    l3933:
  1942  01ED' 1683               	bsf	3,5	;RP0=1, select bank3
  1943  01EE' 1703               	bsf	3,6	;RP1=1, select bank3
  1944  01EF' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  1945  01F0' 1283               	bcf	3,5	;RP0=0, select bank0
  1946  01F1' 1303               	bcf	3,6	;RP1=0, select bank0
  1947  01F2' 00A0'              	movwf	___flge@ff1+3
  1948  01F3' 1683               	bsf	3,5	;RP0=1, select bank3
  1949  01F4' 1703               	bsf	3,6	;RP1=1, select bank3
  1950  01F5' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  1951  01F6' 1283               	bcf	3,5	;RP0=0, select bank0
  1952  01F7' 1303               	bcf	3,6	;RP1=0, select bank0
  1953  01F8' 009F'              	movwf	___flge@ff1+2
  1954  01F9' 1683               	bsf	3,5	;RP0=1, select bank3
  1955  01FA' 1703               	bsf	3,6	;RP1=1, select bank3
  1956  01FB' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  1957  01FC' 1283               	bcf	3,5	;RP0=0, select bank0
  1958  01FD' 1303               	bcf	3,6	;RP1=0, select bank0
  1959  01FE' 009E'              	movwf	___flge@ff1+1
  1960  01FF' 1683               	bsf	3,5	;RP0=1, select bank3
  1961  0200' 1703               	bsf	3,6	;RP1=1, select bank3
  1962  0201' 0800'              	movf	sprintf@tmpval^(0+384),w
  1963  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  1964  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  1965  0204' 009D'              	movwf	___flge@ff1
  1966  0205' 3041               	movlw	65
  1967  0206' 00A4'              	movwf	___flge@ff2+3
  1968  0207' 3020               	movlw	32
  1969  0208' 00A3'              	movwf	___flge@ff2+2
  1970  0209' 3000               	movlw	0
  1971  020A' 00A2'              	movwf	___flge@ff2+1
  1972  020B' 3000               	movlw	0
  1973  020C' 00A1'              	movwf	___flge@ff2
  1974  020D' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  1975  0212' 1C03               	btfss	3,0
  1976  0213' 2800'              	goto	u7351
  1977  0214' 2800'              	goto	u7350
  1978  0215'                    u7351:
  1979  0215' 2800'              	goto	l3937
  1980  0216'                    u7350:
  1981  0216'                    l3935:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  1984  0216' 3001               	movlw	1
  1985  0217' 1683               	bsf	3,5	;RP0=1, select bank3
  1986  0218' 1703               	bsf	3,6	;RP1=1, select bank3
  1987  0219' 0780'              	addwf	sprintf@eexp^(0+384),f
  1988  021A' 1803               	skipnc
  1989  021B' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  1990  021C' 3000               	movlw	0
  1991  021D' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  1992  021E'                    l3937:
  1993  021E'                    l3939:	
  1994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  1995                           
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  1998  021E' 3006               	movlw	6
  1999  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2000  0224' 1683               	bsf	3,5	;RP0=1, select bank1
  2001  0225' 1303               	bcf	3,6	;RP1=0, select bank1
  2002  0226' 0800'              	movf	(?_fround+3)^(0+128),w
  2003  0227' 0080'              	movwf	(___fladd@b+3)^(0+128)
  2004  0228' 0800'              	movf	(?_fround+2)^(0+128),w
  2005  0229' 0080'              	movwf	(___fladd@b+2)^(0+128)
  2006  022A' 0800'              	movf	(?_fround+1)^(0+128),w
  2007  022B' 0080'              	movwf	(___fladd@b+1)^(0+128)
  2008  022C' 0800'              	movf	?_fround^(0+128),w
  2009  022D' 0080'              	movwf	___fladd@b^(0+128)
  2010  022E' 1683               	bsf	3,5	;RP0=1, select bank3
  2011  022F' 1703               	bsf	3,6	;RP1=1, select bank3
  2012  0230' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2013  0231' 1683               	bsf	3,5	;RP0=1, select bank1
  2014  0232' 1303               	bcf	3,6	;RP1=0, select bank1
  2015  0233' 0080'              	movwf	(___fladd@a+3)^(0+128)
  2016  0234' 1683               	bsf	3,5	;RP0=1, select bank3
  2017  0235' 1703               	bsf	3,6	;RP1=1, select bank3
  2018  0236' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2019  0237' 1683               	bsf	3,5	;RP0=1, select bank1
  2020  0238' 1303               	bcf	3,6	;RP1=0, select bank1
  2021  0239' 0080'              	movwf	(___fladd@a+2)^(0+128)
  2022  023A' 1683               	bsf	3,5	;RP0=1, select bank3
  2023  023B' 1703               	bsf	3,6	;RP1=1, select bank3
  2024  023C' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2025  023D' 1683               	bsf	3,5	;RP0=1, select bank1
  2026  023E' 1303               	bcf	3,6	;RP1=0, select bank1
  2027  023F' 0080'              	movwf	(___fladd@a+1)^(0+128)
  2028  0240' 1683               	bsf	3,5	;RP0=1, select bank3
  2029  0241' 1703               	bsf	3,6	;RP1=1, select bank3
  2030  0242' 0800'              	movf	sprintf@fval^(0+384),w
  2031  0243' 1683               	bsf	3,5	;RP0=1, select bank1
  2032  0244' 1303               	bcf	3,6	;RP1=0, select bank1
  2033  0245' 0080'              	movwf	___fladd@a^(0+128)
  2034  0246' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2035  024B' 1683               	bsf	3,5	;RP0=1, select bank1
  2036  024C' 1303               	bcf	3,6	;RP1=0, select bank1
  2037  024D' 0800'              	movf	(?___fladd+3)^(0+128),w
  2038  024E' 1683               	bsf	3,5	;RP0=1, select bank3
  2039  024F' 1703               	bsf	3,6	;RP1=1, select bank3
  2040  0250' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2041  0251' 1683               	bsf	3,5	;RP0=1, select bank1
  2042  0252' 1303               	bcf	3,6	;RP1=0, select bank1
  2043  0253' 0800'              	movf	(?___fladd+2)^(0+128),w
  2044  0254' 1683               	bsf	3,5	;RP0=1, select bank3
  2045  0255' 1703               	bsf	3,6	;RP1=1, select bank3
  2046  0256' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2047  0257' 1683               	bsf	3,5	;RP0=1, select bank1
  2048  0258' 1303               	bcf	3,6	;RP1=0, select bank1
  2049  0259' 0800'              	movf	(?___fladd+1)^(0+128),w
  2050  025A' 1683               	bsf	3,5	;RP0=1, select bank3
  2051  025B' 1703               	bsf	3,6	;RP1=1, select bank3
  2052  025C' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2053  025D' 1683               	bsf	3,5	;RP0=1, select bank1
  2054  025E' 1303               	bcf	3,6	;RP1=0, select bank1
  2055  025F' 0800'              	movf	?___fladd^(0+128),w
  2056  0260' 1683               	bsf	3,5	;RP0=1, select bank3
  2057  0261' 1703               	bsf	3,6	;RP1=1, select bank3
  2058  0262' 0080'              	movwf	sprintf@fval^(0+384)
  2059  0263'                    l3941:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2062  0263' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2063  0264' 3A80               	xorlw	128
  2064  0265' 00FF               	movwf	btemp+1
  2065  0266' 3080               	movlw	128
  2066  0267' 027F               	subwf	btemp+1,w
  2067  0268' 1D03               	skipz
  2068  0269' 2800'              	goto	u7365
  2069  026A' 300A               	movlw	10
  2070  026B' 0200'              	subwf	sprintf@eexp^(0+384),w
  2071  026C'                    u7365:
  2072  026C' 1803               	skipnc
  2073  026D' 2800'              	goto	u7361
  2074  026E' 2800'              	goto	u7360
  2075  026F'                    u7361:
  2076  026F' 2800'              	goto	l3949
  2077  0270'                    u7360:
  2078  0270'                    l3943:
  2079  0270' 1683               	bsf	3,5	;RP0=1, select bank3
  2080  0271' 1703               	bsf	3,6	;RP1=1, select bank3
  2081  0272' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2082  0273' 1283               	bcf	3,5	;RP0=0, select bank0
  2083  0274' 1303               	bcf	3,6	;RP1=0, select bank0
  2084  0275' 00A0'              	movwf	___fleq@ff1+3
  2085  0276' 1683               	bsf	3,5	;RP0=1, select bank3
  2086  0277' 1703               	bsf	3,6	;RP1=1, select bank3
  2087  0278' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2088  0279' 1283               	bcf	3,5	;RP0=0, select bank0
  2089  027A' 1303               	bcf	3,6	;RP1=0, select bank0
  2090  027B' 009F'              	movwf	___fleq@ff1+2
  2091  027C' 1683               	bsf	3,5	;RP0=1, select bank3
  2092  027D' 1703               	bsf	3,6	;RP1=1, select bank3
  2093  027E' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2094  027F' 1283               	bcf	3,5	;RP0=0, select bank0
  2095  0280' 1303               	bcf	3,6	;RP1=0, select bank0
  2096  0281' 009E'              	movwf	___fleq@ff1+1
  2097  0282' 1683               	bsf	3,5	;RP0=1, select bank3
  2098  0283' 1703               	bsf	3,6	;RP1=1, select bank3
  2099  0284' 0800'              	movf	sprintf@fval^(0+384),w
  2100  0285' 1283               	bcf	3,5	;RP0=0, select bank0
  2101  0286' 1303               	bcf	3,6	;RP1=0, select bank0
  2102  0287' 009D'              	movwf	___fleq@ff1
  2103  0288' 3000               	movlw	0
  2104  0289' 00A4'              	movwf	___fleq@ff2+3
  2105  028A' 3000               	movlw	0
  2106  028B' 00A3'              	movwf	___fleq@ff2+2
  2107  028C' 3000               	movlw	0
  2108  028D' 00A2'              	movwf	___fleq@ff2+1
  2109  028E' 3000               	movlw	0
  2110  028F' 00A1'              	movwf	___fleq@ff2
  2111  0290' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2112  0295' 1803               	btfsc	3,0
  2113  0296' 2800'              	goto	u7371
  2114  0297' 2800'              	goto	u7370
  2115  0298'                    u7371:
  2116  0298' 120A' 118A' 2800'  	goto	l3963
  2117  029B'                    u7370:
  2118  029B'                    l3945:
  2119  029B' 1683               	bsf	3,5	;RP0=1, select bank3
  2120  029C' 1703               	bsf	3,6	;RP1=1, select bank3
  2121  029D' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2122  029E' 1683               	bsf	3,5	;RP0=1, select bank1
  2123  029F' 1303               	bcf	3,6	;RP1=0, select bank1
  2124  02A0' 0080'              	movwf	(___fltol@f1+3)^(0+128)
  2125  02A1' 1683               	bsf	3,5	;RP0=1, select bank3
  2126  02A2' 1703               	bsf	3,6	;RP1=1, select bank3
  2127  02A3' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2128  02A4' 1683               	bsf	3,5	;RP0=1, select bank1
  2129  02A5' 1303               	bcf	3,6	;RP1=0, select bank1
  2130  02A6' 0080'              	movwf	(___fltol@f1+2)^(0+128)
  2131  02A7' 1683               	bsf	3,5	;RP0=1, select bank3
  2132  02A8' 1703               	bsf	3,6	;RP1=1, select bank3
  2133  02A9' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2134  02AA' 1683               	bsf	3,5	;RP0=1, select bank1
  2135  02AB' 1303               	bcf	3,6	;RP1=0, select bank1
  2136  02AC' 0080'              	movwf	(___fltol@f1+1)^(0+128)
  2137  02AD' 1683               	bsf	3,5	;RP0=1, select bank3
  2138  02AE' 1703               	bsf	3,6	;RP1=1, select bank3
  2139  02AF' 0800'              	movf	sprintf@fval^(0+384),w
  2140  02B0' 1683               	bsf	3,5	;RP0=1, select bank1
  2141  02B1' 1303               	bcf	3,6	;RP1=0, select bank1
  2142  02B2' 0080'              	movwf	___fltol@f1^(0+128)
  2143  02B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
  2144  02B8' 1683               	bsf	3,5	;RP0=1, select bank1
  2145  02B9' 1303               	bcf	3,6	;RP1=0, select bank1
  2146  02BA' 0800'              	movf	(?___fltol+3)^(0+128),w
  2147  02BB' 0400'              	iorwf	(?___fltol+2)^(0+128),w
  2148  02BC' 0400'              	iorwf	(?___fltol+1)^(0+128),w
  2149  02BD' 0400'              	iorwf	?___fltol^(0+128),w
  2150  02BE' 1D03               	skipz
  2151  02BF' 2800'              	goto	u7381
  2152  02C0' 2800'              	goto	u7380
  2153  02C1'                    u7381:
  2154  02C1' 2800'              	goto	u7371
  2155  02C2'                    u7380:
  2156  02C2'                    l3947:
  2157  02C2' 1683               	bsf	3,5	;RP0=1, select bank3
  2158  02C3' 1703               	bsf	3,6	;RP1=1, select bank3
  2159  02C4' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2160  02C5' 3A80               	xorlw	128
  2161  02C6' 00FF               	movwf	btemp+1
  2162  02C7' 3080               	movlw	128
  2163  02C8' 027F               	subwf	btemp+1,w
  2164  02C9' 1D03               	skipz
  2165  02CA' 2800'              	goto	u7395
  2166  02CB' 3002               	movlw	2
  2167  02CC' 0200'              	subwf	sprintf@eexp^(0+384),w
  2168  02CD'                    u7395:
  2169  02CD' 1C03               	skipc
  2170  02CE' 2800'              	goto	u7391
  2171  02CF' 2800'              	goto	u7390
  2172  02D0'                    u7391:
  2173  02D0' 2800'              	goto	u7371
  2174  02D1'                    u7390:
  2175  02D1'                    l3949:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2178  02D1' 1683               	bsf	3,5	;RP0=1, select bank3
  2179  02D2' 1703               	bsf	3,6	;RP1=1, select bank3
  2180  02D3' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2181  02D4' 1283               	bcf	3,5	;RP0=0, select bank0
  2182  02D5' 1303               	bcf	3,6	;RP1=0, select bank0
  2183  02D6' 00A0'              	movwf	___flge@ff1+3
  2184  02D7' 1683               	bsf	3,5	;RP0=1, select bank3
  2185  02D8' 1703               	bsf	3,6	;RP1=1, select bank3
  2186  02D9' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2187  02DA' 1283               	bcf	3,5	;RP0=0, select bank0
  2188  02DB' 1303               	bcf	3,6	;RP1=0, select bank0
  2189  02DC' 009F'              	movwf	___flge@ff1+2
  2190  02DD' 1683               	bsf	3,5	;RP0=1, select bank3
  2191  02DE' 1703               	bsf	3,6	;RP1=1, select bank3
  2192  02DF' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2193  02E0' 1283               	bcf	3,5	;RP0=0, select bank0
  2194  02E1' 1303               	bcf	3,6	;RP1=0, select bank0
  2195  02E2' 009E'              	movwf	___flge@ff1+1
  2196  02E3' 1683               	bsf	3,5	;RP0=1, select bank3
  2197  02E4' 1703               	bsf	3,6	;RP1=1, select bank3
  2198  02E5' 0800'              	movf	sprintf@tmpval^(0+384),w
  2199  02E6' 1283               	bcf	3,5	;RP0=0, select bank0
  2200  02E7' 1303               	bcf	3,6	;RP1=0, select bank0
  2201  02E8' 009D'              	movwf	___flge@ff1
  2202  02E9' 3040               	movlw	64
  2203  02EA' 00A4'              	movwf	___flge@ff2+3
  2204  02EB' 3089               	movlw	137
  2205  02EC' 00A3'              	movwf	___flge@ff2+2
  2206  02ED' 3070               	movlw	112
  2207  02EE' 00A2'              	movwf	___flge@ff2+1
  2208  02EF' 305F               	movlw	95
  2209  02F0' 00A1'              	movwf	___flge@ff2
  2210  02F1' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2211  02F6' 1803               	btfsc	3,0
  2212  02F7' 2800'              	goto	u7401
  2213  02F8' 2800'              	goto	u7400
  2214  02F9'                    u7401:
  2215  02F9' 2800'              	goto	l3953
  2216  02FA'                    u7400:
  2217  02FA'                    l3951:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2220  02FA' 30F7               	movlw	247
  2221  02FB' 1683               	bsf	3,5	;RP0=1, select bank3
  2222  02FC' 1703               	bsf	3,6	;RP1=1, select bank3
  2223  02FD' 0780'              	addwf	sprintf@eexp^(0+384),f
  2224  02FE' 1803               	skipnc
  2225  02FF' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2226  0300' 30FF               	movlw	255
  2227  0301' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2230  0302' 2800'              	goto	l3955
  2231  0303'                    l3953:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2234  0303' 30F8               	movlw	248
  2235  0304' 1683               	bsf	3,5	;RP0=1, select bank3
  2236  0305' 1703               	bsf	3,6	;RP1=1, select bank3
  2237  0306' 0780'              	addwf	sprintf@eexp^(0+384),f
  2238  0307' 1803               	skipnc
  2239  0308' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2240  0309' 30FF               	movlw	255
  2241  030A' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2242  030B'                    l3955:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2245  030B' 0800'              	movf	sprintf@eexp^(0+384),w
  2246  030C' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2247  0311' 1683               	bsf	3,5	;RP0=1, select bank1
  2248  0312' 1303               	bcf	3,6	;RP1=0, select bank1
  2249  0313' 0800'              	movf	(?_scale+3)^(0+128),w
  2250  0314' 1683               	bsf	3,5	;RP0=1, select bank3
  2251  0315' 1703               	bsf	3,6	;RP1=1, select bank3
  2252  0316' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  2253  0317' 1683               	bsf	3,5	;RP0=1, select bank1
  2254  0318' 1303               	bcf	3,6	;RP1=0, select bank1
  2255  0319' 0800'              	movf	(?_scale+2)^(0+128),w
  2256  031A' 1683               	bsf	3,5	;RP0=1, select bank3
  2257  031B' 1703               	bsf	3,6	;RP1=1, select bank3
  2258  031C' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  2259  031D' 1683               	bsf	3,5	;RP0=1, select bank1
  2260  031E' 1303               	bcf	3,6	;RP1=0, select bank1
  2261  031F' 0800'              	movf	(?_scale+1)^(0+128),w
  2262  0320' 1683               	bsf	3,5	;RP0=1, select bank3
  2263  0321' 1703               	bsf	3,6	;RP1=1, select bank3
  2264  0322' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  2265  0323' 1683               	bsf	3,5	;RP0=1, select bank1
  2266  0324' 1303               	bcf	3,6	;RP1=0, select bank1
  2267  0325' 0800'              	movf	?_scale^(0+128),w
  2268  0326' 1683               	bsf	3,5	;RP0=1, select bank3
  2269  0327' 1703               	bsf	3,6	;RP1=1, select bank3
  2270  0328' 0080'              	movwf	sprintf@tmpval^(0+384)
  2271  0329'                    l3957:
  2272  0329' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2273  032A' 1283               	bcf	3,5	;RP0=0, select bank0
  2274  032B' 1303               	bcf	3,6	;RP1=0, select bank0
  2275  032C' 00A0'              	movwf	__div_to_l_@f1+3
  2276  032D' 1683               	bsf	3,5	;RP0=1, select bank3
  2277  032E' 1703               	bsf	3,6	;RP1=1, select bank3
  2278  032F' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2279  0330' 1283               	bcf	3,5	;RP0=0, select bank0
  2280  0331' 1303               	bcf	3,6	;RP1=0, select bank0
  2281  0332' 009F'              	movwf	__div_to_l_@f1+2
  2282  0333' 1683               	bsf	3,5	;RP0=1, select bank3
  2283  0334' 1703               	bsf	3,6	;RP1=1, select bank3
  2284  0335' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2285  0336' 1283               	bcf	3,5	;RP0=0, select bank0
  2286  0337' 1303               	bcf	3,6	;RP1=0, select bank0
  2287  0338' 009E'              	movwf	__div_to_l_@f1+1
  2288  0339' 1683               	bsf	3,5	;RP0=1, select bank3
  2289  033A' 1703               	bsf	3,6	;RP1=1, select bank3
  2290  033B' 0800'              	movf	sprintf@fval^(0+384),w
  2291  033C' 1283               	bcf	3,5	;RP0=0, select bank0
  2292  033D' 1303               	bcf	3,6	;RP1=0, select bank0
  2293  033E' 009D'              	movwf	__div_to_l_@f1
  2294  033F' 1683               	bsf	3,5	;RP0=1, select bank3
  2295  0340' 1703               	bsf	3,6	;RP1=1, select bank3
  2296  0341' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2297  0342' 1283               	bcf	3,5	;RP0=0, select bank0
  2298  0343' 1303               	bcf	3,6	;RP1=0, select bank0
  2299  0344' 00A4'              	movwf	__div_to_l_@f2+3
  2300  0345' 1683               	bsf	3,5	;RP0=1, select bank3
  2301  0346' 1703               	bsf	3,6	;RP1=1, select bank3
  2302  0347' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2303  0348' 1283               	bcf	3,5	;RP0=0, select bank0
  2304  0349' 1303               	bcf	3,6	;RP1=0, select bank0
  2305  034A' 00A3'              	movwf	__div_to_l_@f2+2
  2306  034B' 1683               	bsf	3,5	;RP0=1, select bank3
  2307  034C' 1703               	bsf	3,6	;RP1=1, select bank3
  2308  034D' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2309  034E' 1283               	bcf	3,5	;RP0=0, select bank0
  2310  034F' 1303               	bcf	3,6	;RP1=0, select bank0
  2311  0350' 00A2'              	movwf	__div_to_l_@f2+1
  2312  0351' 1683               	bsf	3,5	;RP0=1, select bank3
  2313  0352' 1703               	bsf	3,6	;RP1=1, select bank3
  2314  0353' 0800'              	movf	sprintf@tmpval^(0+384),w
  2315  0354' 1283               	bcf	3,5	;RP0=0, select bank0
  2316  0355' 1303               	bcf	3,6	;RP1=0, select bank0
  2317  0356' 00A1'              	movwf	__div_to_l_@f2
  2318  0357' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
  2319  035C' 1283               	bcf	3,5	;RP0=0, select bank0
  2320  035D' 1303               	bcf	3,6	;RP1=0, select bank0
  2321  035E' 0820'              	movf	?__div_to_l_+3,w
  2322  035F' 1683               	bsf	3,5	;RP0=1, select bank3
  2323  0360' 1703               	bsf	3,6	;RP1=1, select bank3
  2324  0361' 0080'              	movwf	(sprintf@val+3)^(0+384)
  2325  0362' 1283               	bcf	3,5	;RP0=0, select bank0
  2326  0363' 1303               	bcf	3,6	;RP1=0, select bank0
  2327  0364' 081F'              	movf	?__div_to_l_+2,w
  2328  0365' 1683               	bsf	3,5	;RP0=1, select bank3
  2329  0366' 1703               	bsf	3,6	;RP1=1, select bank3
  2330  0367' 0080'              	movwf	(sprintf@val+2)^(0+384)
  2331  0368' 1283               	bcf	3,5	;RP0=0, select bank0
  2332  0369' 1303               	bcf	3,6	;RP1=0, select bank0
  2333  036A' 081E'              	movf	?__div_to_l_+1,w
  2334  036B' 1683               	bsf	3,5	;RP0=1, select bank3
  2335  036C' 1703               	bsf	3,6	;RP1=1, select bank3
  2336  036D' 0080'              	movwf	(sprintf@val+1)^(0+384)
  2337  036E' 1283               	bcf	3,5	;RP0=0, select bank0
  2338  036F' 1303               	bcf	3,6	;RP1=0, select bank0
  2339  0370' 081D'              	movf	?__div_to_l_,w
  2340  0371' 1683               	bsf	3,5	;RP0=1, select bank3
  2341  0372' 1703               	bsf	3,6	;RP1=1, select bank3
  2342  0373' 0080'              	movwf	sprintf@val^(0+384)
  2343  0374'                    l3961:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2346  0374' 3000               	movlw	0
  2347  0375' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2348  0376' 3000               	movlw	0
  2349  0377' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2350  0378' 3000               	movlw	0
  2351  0379' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2352  037A' 3000               	movlw	0
  2353  037B' 0080'              	movwf	sprintf@fval^(0+384)
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2356  037C' 120A' 118A' 2800'  	goto	l3969
  2357  037F'                    L3:
  2358  037F'                    L2:
  2359  037F' 120A' 118A' 2800'  	ljmp	l4069
  2360                           
  2361                           	psect	text2
  2362  0000'                    __ptext2:	
  2363 ;; *************** function _scale *****************
  2364 ;; Defined at:
  2365 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  scl             1    wreg     char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  scl             1   44[BANK1 ] char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  4   26[BANK1 ] char 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       4       0       0
  2380 ;;      Locals:         0       0       5       0       0
  2381 ;;      Temps:          0       0      10       0       0
  2382 ;;      Totals:         0       0      19       0       0
  2383 ;;Total ram usage:       19 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 5
  2386 ;; This function calls:
  2387 ;;		___awdiv
  2388 ;;		___awmod
  2389 ;;		___flmul
  2390 ;; This function is called by:
  2391 ;;		_sprintf
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395  0000'                    _scale:	
  2396                           ;psect for function _scale
  2397                           
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2401                           ;scale@scl stored from wreg
  2402  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2403  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2404  0002' 0080'              	movwf	scale@scl^(0+128)
  2405  0003'                    l3783:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2408  0003' 1F80'              	btfss	scale@scl^(0+128),7
  2409  0004' 2800'              	goto	u6961
  2410  0005' 2800'              	goto	u6960
  2411  0006'                    u6961:
  2412  0006' 2800'              	goto	l3805
  2413  0007'                    u6960:
  2414  0007'                    l3785:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2417  0007' 0980'              	comf	scale@scl^(0+128),f
  2418  0008' 0A80'              	incf	scale@scl^(0+128),f
  2419  0009'                    l3787:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2422  0009' 0800'              	movf	scale@scl^(0+128),w
  2423  000A' 3A80               	xorlw	128
  2424  000B' 3E12               	addlw	-238
  2425  000C' 1C03               	skipc
  2426  000D' 2800'              	goto	u6971
  2427  000E' 2800'              	goto	u6970
  2428  000F'                    u6971:
  2429  000F' 2800'              	goto	l3795
  2430  0010'                    u6970:
  2431  0010'                    l3789:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2434  0010' 300A               	movlw	10
  2435  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  2436  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  2437  0013' 00A4'              	movwf	___awdiv@divisor
  2438  0014' 3000               	movlw	0
  2439  0015' 00A5'              	movwf	___awdiv@divisor+1
  2440  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  2441  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  2442  0018' 0800'              	movf	scale@scl^(0+128),w
  2443  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  2444  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  2445  001B' 009F'              	movwf	___awmod@dividend
  2446  001C' 01A0'              	clrf	___awmod@dividend+1
  2447  001D' 1B9F'              	btfsc	___awmod@dividend,7
  2448  001E' 03A0'              	decf	___awmod@dividend+1,f
  2449  001F' 3064               	movlw	100
  2450  0020' 009D'              	movwf	___awmod@divisor
  2451  0021' 3000               	movlw	0
  2452  0022' 009E'              	movwf	___awmod@divisor+1
  2453  0023' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2454  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  2455  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  2456  002A' 081E'              	movf	?___awmod+1,w
  2457  002B' 00A7'              	movwf	___awdiv@dividend+1
  2458  002C' 081D'              	movf	?___awmod,w
  2459  002D' 00A6'              	movwf	___awdiv@dividend
  2460  002E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2461  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  2462  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  2463  0035' 0824'              	movf	?___awdiv,w
  2464  0036' 1683               	bsf	3,5	;RP0=1, select bank1
  2465  0037' 1303               	bcf	3,6	;RP1=0, select bank1
  2466  0038' 0080'              	movwf	??_scale^(0+128)
  2467  0039' 3001               	movlw	1
  2468  003A'                    u6985:
  2469  003A' 1003               	clrc
  2470  003B' 0D80'              	rlf	??_scale^(0+128),f
  2471  003C' 3EFF               	addlw	-1
  2472  003D' 1D03               	skipz
  2473  003E' 2800'              	goto	u6985
  2474  003F' 1003               	clrc
  2475  0040' 0D00'              	rlf	??_scale^(0+128),w
  2476  0041' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2477  0042' 0084               	movwf	4
  2478  0043' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2479  0048' 0080'              	movwf	(??_scale+1)^(0+128)
  2480  0049' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2481  004E' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  2482  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2483  0054' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  2484  0055' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2485  005A' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  2486  005B' 0800'              	movf	(??_scale+4)^(0+128),w
  2487  005C' 0080'              	movwf	(___flmul@b+3)^(0+128)
  2488  005D' 0800'              	movf	(??_scale+3)^(0+128),w
  2489  005E' 0080'              	movwf	(___flmul@b+2)^(0+128)
  2490  005F' 0800'              	movf	(??_scale+2)^(0+128),w
  2491  0060' 0080'              	movwf	(___flmul@b+1)^(0+128)
  2492  0061' 0800'              	movf	(??_scale+1)^(0+128),w
  2493  0062' 0080'              	movwf	___flmul@b^(0+128)
  2494  0063' 3064               	movlw	100
  2495  0064' 1283               	bcf	3,5	;RP0=0, select bank0
  2496  0065' 1303               	bcf	3,6	;RP1=0, select bank0
  2497  0066' 00A4'              	movwf	___awdiv@divisor
  2498  0067' 3000               	movlw	0
  2499  0068' 00A5'              	movwf	___awdiv@divisor+1
  2500  0069' 1683               	bsf	3,5	;RP0=1, select bank1
  2501  006A' 1303               	bcf	3,6	;RP1=0, select bank1
  2502  006B' 0800'              	movf	scale@scl^(0+128),w
  2503  006C' 1283               	bcf	3,5	;RP0=0, select bank0
  2504  006D' 1303               	bcf	3,6	;RP1=0, select bank0
  2505  006E' 00A6'              	movwf	___awdiv@dividend
  2506  006F' 01A7'              	clrf	___awdiv@dividend+1
  2507  0070' 1BA6'              	btfsc	___awdiv@dividend,7
  2508  0071' 03A7'              	decf	___awdiv@dividend+1,f
  2509  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2510  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  2511  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  2512  0079' 0824'              	movf	?___awdiv,w
  2513  007A' 1683               	bsf	3,5	;RP0=1, select bank1
  2514  007B' 1303               	bcf	3,6	;RP1=0, select bank1
  2515  007C' 0080'              	movwf	(??_scale+5)^(0+128)
  2516  007D' 3001               	movlw	1
  2517  007E'                    u6995:
  2518  007E' 1003               	clrc
  2519  007F' 0D80'              	rlf	(??_scale+5)^(0+128),f
  2520  0080' 3EFF               	addlw	-1
  2521  0081' 1D03               	skipz
  2522  0082' 2800'              	goto	u6995
  2523  0083' 1003               	clrc
  2524  0084' 0D00'              	rlf	(??_scale+5)^(0+128),w
  2525  0085' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2526  0086' 0084               	movwf	4
  2527  0087' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2528  008C' 0080'              	movwf	(??_scale+6)^(0+128)
  2529  008D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2530  0092' 0081'              	movwf	((??_scale+6)^(0+128)+1)
  2531  0093' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2532  0098' 0082'              	movwf	((??_scale+6)^(0+128)+2)
  2533  0099' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2534  009E' 0083'              	movwf	((??_scale+6)^(0+128)+3)
  2535  009F' 0800'              	movf	(??_scale+9)^(0+128),w
  2536  00A0' 0080'              	movwf	(___flmul@a+3)^(0+128)
  2537  00A1' 0800'              	movf	(??_scale+8)^(0+128),w
  2538  00A2' 0080'              	movwf	(___flmul@a+2)^(0+128)
  2539  00A3' 0800'              	movf	(??_scale+7)^(0+128),w
  2540  00A4' 0080'              	movwf	(___flmul@a+1)^(0+128)
  2541  00A5' 0800'              	movf	(??_scale+6)^(0+128),w
  2542  00A6' 0080'              	movwf	___flmul@a^(0+128)
  2543  00A7' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2544  00AC' 1683               	bsf	3,5	;RP0=1, select bank1
  2545  00AD' 1303               	bcf	3,6	;RP1=0, select bank1
  2546  00AE' 0800'              	movf	(?___flmul+3)^(0+128),w
  2547  00AF' 0080'              	movwf	(_scale$820+3)^(0+128)
  2548  00B0' 0800'              	movf	(?___flmul+2)^(0+128),w
  2549  00B1' 0080'              	movwf	(_scale$820+2)^(0+128)
  2550  00B2' 0800'              	movf	(?___flmul+1)^(0+128),w
  2551  00B3' 0080'              	movwf	(_scale$820+1)^(0+128)
  2552  00B4' 0800'              	movf	?___flmul^(0+128),w
  2553  00B5' 0080'              	movwf	_scale$820^(0+128)
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2556  00B6' 300A               	movlw	10
  2557  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  2558  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  2559  00B9' 009D'              	movwf	___awmod@divisor
  2560  00BA' 3000               	movlw	0
  2561  00BB' 009E'              	movwf	___awmod@divisor+1
  2562  00BC' 1683               	bsf	3,5	;RP0=1, select bank1
  2563  00BD' 1303               	bcf	3,6	;RP1=0, select bank1
  2564  00BE' 0800'              	movf	scale@scl^(0+128),w
  2565  00BF' 1283               	bcf	3,5	;RP0=0, select bank0
  2566  00C0' 1303               	bcf	3,6	;RP1=0, select bank0
  2567  00C1' 009F'              	movwf	___awmod@dividend
  2568  00C2' 01A0'              	clrf	___awmod@dividend+1
  2569  00C3' 1B9F'              	btfsc	___awmod@dividend,7
  2570  00C4' 03A0'              	decf	___awmod@dividend+1,f
  2571  00C5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2572  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  2573  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
  2574  00CC' 081D'              	movf	?___awmod,w
  2575  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
  2576  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
  2577  00CF' 0080'              	movwf	??_scale^(0+128)
  2578  00D0' 3001               	movlw	1
  2579  00D1'                    u7005:
  2580  00D1' 1003               	clrc
  2581  00D2' 0D80'              	rlf	??_scale^(0+128),f
  2582  00D3' 3EFF               	addlw	-1
  2583  00D4' 1D03               	skipz
  2584  00D5' 2800'              	goto	u7005
  2585  00D6' 1003               	clrc
  2586  00D7' 0D00'              	rlf	??_scale^(0+128),w
  2587  00D8' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2588  00D9' 0084               	movwf	4
  2589  00DA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2590  00DF' 0080'              	movwf	(??_scale+1)^(0+128)
  2591  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2592  00E5' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  2593  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2594  00EB' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  2595  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2596  00F1' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  2597  00F2' 0800'              	movf	(??_scale+4)^(0+128),w
  2598  00F3' 0080'              	movwf	(___flmul@b+3)^(0+128)
  2599  00F4' 0800'              	movf	(??_scale+3)^(0+128),w
  2600  00F5' 0080'              	movwf	(___flmul@b+2)^(0+128)
  2601  00F6' 0800'              	movf	(??_scale+2)^(0+128),w
  2602  00F7' 0080'              	movwf	(___flmul@b+1)^(0+128)
  2603  00F8' 0800'              	movf	(??_scale+1)^(0+128),w
  2604  00F9' 0080'              	movwf	___flmul@b^(0+128)
  2605  00FA' 0800'              	movf	(_scale$820+3)^(0+128),w
  2606  00FB' 0080'              	movwf	(___flmul@a+3)^(0+128)
  2607  00FC' 0800'              	movf	(_scale$820+2)^(0+128),w
  2608  00FD' 0080'              	movwf	(___flmul@a+2)^(0+128)
  2609  00FE' 0800'              	movf	(_scale$820+1)^(0+128),w
  2610  00FF' 0080'              	movwf	(___flmul@a+1)^(0+128)
  2611  0100' 0800'              	movf	_scale$820^(0+128),w
  2612  0101' 0080'              	movwf	___flmul@a^(0+128)
  2613  0102' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2614  0107' 1683               	bsf	3,5	;RP0=1, select bank1
  2615  0108' 1303               	bcf	3,6	;RP1=0, select bank1
  2616  0109' 0800'              	movf	(?___flmul+3)^(0+128),w
  2617  010A' 0080'              	movwf	(?_scale+3)^(0+128)
  2618  010B' 0800'              	movf	(?___flmul+2)^(0+128),w
  2619  010C' 0080'              	movwf	(?_scale+2)^(0+128)
  2620  010D' 0800'              	movf	(?___flmul+1)^(0+128),w
  2621  010E' 0080'              	movwf	(?_scale+1)^(0+128)
  2622  010F' 0800'              	movf	?___flmul^(0+128),w
  2623  0110' 0080'              	movwf	?_scale^(0+128)
  2624  0111' 2800'              	goto	l226
  2625  0112'                    l3795:
  2626  0112' 0800'              	movf	scale@scl^(0+128),w
  2627  0113' 3A80               	xorlw	128
  2628  0114' 3E75               	addlw	-139
  2629  0115' 1C03               	skipc
  2630  0116' 2800'              	goto	u7011
  2631  0117' 2800'              	goto	u7010
  2632  0118'                    u7011:
  2633  0118' 2800'              	goto	l3801
  2634  0119'                    u7010:
  2635  0119'                    l3797:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2638  0119' 300A               	movlw	10
  2639  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  2640  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  2641  011C' 009D'              	movwf	___awmod@divisor
  2642  011D' 3000               	movlw	0
  2643  011E' 009E'              	movwf	___awmod@divisor+1
  2644  011F' 1683               	bsf	3,5	;RP0=1, select bank1
  2645  0120' 1303               	bcf	3,6	;RP1=0, select bank1
  2646  0121' 0800'              	movf	scale@scl^(0+128),w
  2647  0122' 1283               	bcf	3,5	;RP0=0, select bank0
  2648  0123' 1303               	bcf	3,6	;RP1=0, select bank0
  2649  0124' 009F'              	movwf	___awmod@dividend
  2650  0125' 01A0'              	clrf	___awmod@dividend+1
  2651  0126' 1B9F'              	btfsc	___awmod@dividend,7
  2652  0127' 03A0'              	decf	___awmod@dividend+1,f
  2653  0128' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2654  012D' 1283               	bcf	3,5	;RP0=0, select bank0
  2655  012E' 1303               	bcf	3,6	;RP1=0, select bank0
  2656  012F' 081D'              	movf	?___awmod,w
  2657  0130' 1683               	bsf	3,5	;RP0=1, select bank1
  2658  0131' 1303               	bcf	3,6	;RP1=0, select bank1
  2659  0132' 0080'              	movwf	??_scale^(0+128)
  2660  0133' 3001               	movlw	1
  2661  0134'                    u7025:
  2662  0134' 1003               	clrc
  2663  0135' 0D80'              	rlf	??_scale^(0+128),f
  2664  0136' 3EFF               	addlw	-1
  2665  0137' 1D03               	skipz
  2666  0138' 2800'              	goto	u7025
  2667  0139' 1003               	clrc
  2668  013A' 0D00'              	rlf	??_scale^(0+128),w
  2669  013B' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2670  013C' 0084               	movwf	4
  2671  013D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2672  0142' 0080'              	movwf	(??_scale+1)^(0+128)
  2673  0143' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2674  0148' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  2675  0149' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2676  014E' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  2677  014F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2678  0154' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  2679  0155' 0800'              	movf	(??_scale+4)^(0+128),w
  2680  0156' 0080'              	movwf	(___flmul@b+3)^(0+128)
  2681  0157' 0800'              	movf	(??_scale+3)^(0+128),w
  2682  0158' 0080'              	movwf	(___flmul@b+2)^(0+128)
  2683  0159' 0800'              	movf	(??_scale+2)^(0+128),w
  2684  015A' 0080'              	movwf	(___flmul@b+1)^(0+128)
  2685  015B' 0800'              	movf	(??_scale+1)^(0+128),w
  2686  015C' 0080'              	movwf	___flmul@b^(0+128)
  2687  015D' 300A               	movlw	10
  2688  015E' 1283               	bcf	3,5	;RP0=0, select bank0
  2689  015F' 1303               	bcf	3,6	;RP1=0, select bank0
  2690  0160' 00A4'              	movwf	___awdiv@divisor
  2691  0161' 3000               	movlw	0
  2692  0162' 00A5'              	movwf	___awdiv@divisor+1
  2693  0163' 1683               	bsf	3,5	;RP0=1, select bank1
  2694  0164' 1303               	bcf	3,6	;RP1=0, select bank1
  2695  0165' 0800'              	movf	scale@scl^(0+128),w
  2696  0166' 1283               	bcf	3,5	;RP0=0, select bank0
  2697  0167' 1303               	bcf	3,6	;RP1=0, select bank0
  2698  0168' 00A6'              	movwf	___awdiv@dividend
  2699  0169' 01A7'              	clrf	___awdiv@dividend+1
  2700  016A' 1BA6'              	btfsc	___awdiv@dividend,7
  2701  016B' 03A7'              	decf	___awdiv@dividend+1,f
  2702  016C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2703  0171' 1283               	bcf	3,5	;RP0=0, select bank0
  2704  0172' 1303               	bcf	3,6	;RP1=0, select bank0
  2705  0173' 0824'              	movf	?___awdiv,w
  2706  0174' 1683               	bsf	3,5	;RP0=1, select bank1
  2707  0175' 1303               	bcf	3,6	;RP1=0, select bank1
  2708  0176' 0080'              	movwf	(??_scale+5)^(0+128)
  2709  0177' 3001               	movlw	1
  2710  0178'                    u7035:
  2711  0178' 1003               	clrc
  2712  0179' 0D80'              	rlf	(??_scale+5)^(0+128),f
  2713  017A' 3EFF               	addlw	-1
  2714  017B' 1D03               	skipz
  2715  017C' 2800'              	goto	u7035
  2716  017D' 1003               	clrc
  2717  017E' 0D00'              	rlf	(??_scale+5)^(0+128),w
  2718  017F' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2719  0180' 0084               	movwf	4
  2720  0181' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2721  0186' 0080'              	movwf	(??_scale+6)^(0+128)
  2722  0187' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2723  018C' 0081'              	movwf	((??_scale+6)^(0+128)+1)
  2724  018D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2725  0192' 0082'              	movwf	((??_scale+6)^(0+128)+2)
  2726  0193' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2727  0198' 0083'              	movwf	((??_scale+6)^(0+128)+3)
  2728  0199' 0800'              	movf	(??_scale+9)^(0+128),w
  2729  019A' 0080'              	movwf	(___flmul@a+3)^(0+128)
  2730  019B' 0800'              	movf	(??_scale+8)^(0+128),w
  2731  019C' 0080'              	movwf	(___flmul@a+2)^(0+128)
  2732  019D' 0800'              	movf	(??_scale+7)^(0+128),w
  2733  019E' 0080'              	movwf	(___flmul@a+1)^(0+128)
  2734  019F' 0800'              	movf	(??_scale+6)^(0+128),w
  2735  01A0' 0080'              	movwf	___flmul@a^(0+128)
  2736  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2737  01A6' 1683               	bsf	3,5	;RP0=1, select bank1
  2738  01A7' 1303               	bcf	3,6	;RP1=0, select bank1
  2739  01A8' 0800'              	movf	(?___flmul+3)^(0+128),w
  2740  01A9' 0080'              	movwf	(?_scale+3)^(0+128)
  2741  01AA' 0800'              	movf	(?___flmul+2)^(0+128),w
  2742  01AB' 0080'              	movwf	(?_scale+2)^(0+128)
  2743  01AC' 0800'              	movf	(?___flmul+1)^(0+128),w
  2744  01AD' 0080'              	movwf	(?_scale+1)^(0+128)
  2745  01AE' 0800'              	movf	?___flmul^(0+128),w
  2746  01AF' 0080'              	movwf	?_scale^(0+128)
  2747  01B0' 2800'              	goto	l226
  2748  01B1'                    l3801:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2751  01B1' 0800'              	movf	scale@scl^(0+128),w
  2752  01B2' 0080'              	movwf	??_scale^(0+128)
  2753  01B3' 3001               	movlw	1
  2754  01B4'                    u7045:
  2755  01B4' 1003               	clrc
  2756  01B5' 0D80'              	rlf	??_scale^(0+128),f
  2757  01B6' 3EFF               	addlw	-1
  2758  01B7' 1D03               	skipz
  2759  01B8' 2800'              	goto	u7045
  2760  01B9' 1003               	clrc
  2761  01BA' 0D00'              	rlf	??_scale^(0+128),w
  2762  01BB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2763  01BC' 0084               	movwf	4
  2764  01BD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2765  01C2' 0080'              	movwf	(??_scale+1)^(0+128)
  2766  01C3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2767  01C8' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  2768  01C9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2769  01CE' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  2770  01CF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2771  01D4' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  2772  01D5' 0800'              	movf	(??_scale+4)^(0+128),w
  2773  01D6' 0080'              	movwf	(?_scale+3)^(0+128)
  2774  01D7' 0800'              	movf	(??_scale+3)^(0+128),w
  2775  01D8' 0080'              	movwf	(?_scale+2)^(0+128)
  2776  01D9' 0800'              	movf	(??_scale+2)^(0+128),w
  2777  01DA' 0080'              	movwf	(?_scale+1)^(0+128)
  2778  01DB' 0800'              	movf	(??_scale+1)^(0+128),w
  2779  01DC' 0080'              	movwf	?_scale^(0+128)
  2780  01DD' 2800'              	goto	l226
  2781  01DE'                    l3805:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2784  01DE' 0800'              	movf	scale@scl^(0+128),w
  2785  01DF' 3A80               	xorlw	128
  2786  01E0' 3E12               	addlw	-238
  2787  01E1' 1C03               	skipc
  2788  01E2' 2800'              	goto	u7051
  2789  01E3' 2800'              	goto	u7050
  2790  01E4'                    u7051:
  2791  01E4' 2800'              	goto	l3813
  2792  01E5'                    u7050:
  2793  01E5'                    l3807:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2796  01E5' 300A               	movlw	10
  2797  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  2798  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  2799  01E8' 00A4'              	movwf	___awdiv@divisor
  2800  01E9' 3000               	movlw	0
  2801  01EA' 00A5'              	movwf	___awdiv@divisor+1
  2802  01EB' 1683               	bsf	3,5	;RP0=1, select bank1
  2803  01EC' 1303               	bcf	3,6	;RP1=0, select bank1
  2804  01ED' 0800'              	movf	scale@scl^(0+128),w
  2805  01EE' 1283               	bcf	3,5	;RP0=0, select bank0
  2806  01EF' 1303               	bcf	3,6	;RP1=0, select bank0
  2807  01F0' 009F'              	movwf	___awmod@dividend
  2808  01F1' 01A0'              	clrf	___awmod@dividend+1
  2809  01F2' 1B9F'              	btfsc	___awmod@dividend,7
  2810  01F3' 03A0'              	decf	___awmod@dividend+1,f
  2811  01F4' 3064               	movlw	100
  2812  01F5' 009D'              	movwf	___awmod@divisor
  2813  01F6' 3000               	movlw	0
  2814  01F7' 009E'              	movwf	___awmod@divisor+1
  2815  01F8' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2816  01FD' 1283               	bcf	3,5	;RP0=0, select bank0
  2817  01FE' 1303               	bcf	3,6	;RP1=0, select bank0
  2818  01FF' 081E'              	movf	?___awmod+1,w
  2819  0200' 00A7'              	movwf	___awdiv@dividend+1
  2820  0201' 081D'              	movf	?___awmod,w
  2821  0202' 00A6'              	movwf	___awdiv@dividend
  2822  0203' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2823  0208' 1283               	bcf	3,5	;RP0=0, select bank0
  2824  0209' 1303               	bcf	3,6	;RP1=0, select bank0
  2825  020A' 0824'              	movf	?___awdiv,w
  2826  020B' 1683               	bsf	3,5	;RP0=1, select bank1
  2827  020C' 1303               	bcf	3,6	;RP1=0, select bank1
  2828  020D' 0080'              	movwf	??_scale^(0+128)
  2829  020E' 3001               	movlw	1
  2830  020F'                    u7065:
  2831  020F' 1003               	clrc
  2832  0210' 0D80'              	rlf	??_scale^(0+128),f
  2833  0211' 3EFF               	addlw	-1
  2834  0212' 1D03               	skipz
  2835  0213' 2800'              	goto	u7065
  2836  0214' 1003               	clrc
  2837  0215' 0D00'              	rlf	??_scale^(0+128),w
  2838  0216' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2839  0217' 0084               	movwf	4
  2840  0218' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2841  021D' 0080'              	movwf	(??_scale+1)^(0+128)
  2842  021E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2843  0223' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  2844  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2845  0229' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  2846  022A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2847  022F' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  2848  0230' 0800'              	movf	(??_scale+4)^(0+128),w
  2849  0231' 0080'              	movwf	(___flmul@b+3)^(0+128)
  2850  0232' 0800'              	movf	(??_scale+3)^(0+128),w
  2851  0233' 0080'              	movwf	(___flmul@b+2)^(0+128)
  2852  0234' 0800'              	movf	(??_scale+2)^(0+128),w
  2853  0235' 0080'              	movwf	(___flmul@b+1)^(0+128)
  2854  0236' 0800'              	movf	(??_scale+1)^(0+128),w
  2855  0237' 0080'              	movwf	___flmul@b^(0+128)
  2856  0238' 3064               	movlw	100
  2857  0239' 1283               	bcf	3,5	;RP0=0, select bank0
  2858  023A' 1303               	bcf	3,6	;RP1=0, select bank0
  2859  023B' 00A4'              	movwf	___awdiv@divisor
  2860  023C' 3000               	movlw	0
  2861  023D' 00A5'              	movwf	___awdiv@divisor+1
  2862  023E' 1683               	bsf	3,5	;RP0=1, select bank1
  2863  023F' 1303               	bcf	3,6	;RP1=0, select bank1
  2864  0240' 0800'              	movf	scale@scl^(0+128),w
  2865  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  2866  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  2867  0243' 00A6'              	movwf	___awdiv@dividend
  2868  0244' 01A7'              	clrf	___awdiv@dividend+1
  2869  0245' 1BA6'              	btfsc	___awdiv@dividend,7
  2870  0246' 03A7'              	decf	___awdiv@dividend+1,f
  2871  0247' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2872  024C' 1283               	bcf	3,5	;RP0=0, select bank0
  2873  024D' 1303               	bcf	3,6	;RP1=0, select bank0
  2874  024E' 0824'              	movf	?___awdiv,w
  2875  024F' 1683               	bsf	3,5	;RP0=1, select bank1
  2876  0250' 1303               	bcf	3,6	;RP1=0, select bank1
  2877  0251' 0080'              	movwf	(??_scale+5)^(0+128)
  2878  0252' 3001               	movlw	1
  2879  0253'                    u7075:
  2880  0253' 1003               	clrc
  2881  0254' 0D80'              	rlf	(??_scale+5)^(0+128),f
  2882  0255' 3EFF               	addlw	-1
  2883  0256' 1D03               	skipz
  2884  0257' 2800'              	goto	u7075
  2885  0258' 1003               	clrc
  2886  0259' 0D00'              	rlf	(??_scale+5)^(0+128),w
  2887  025A' 3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2888  025B' 0084               	movwf	4
  2889  025C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2890  0261' 0080'              	movwf	(??_scale+6)^(0+128)
  2891  0262' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2892  0267' 0081'              	movwf	((??_scale+6)^(0+128)+1)
  2893  0268' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2894  026D' 0082'              	movwf	((??_scale+6)^(0+128)+2)
  2895  026E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2896  0273' 0083'              	movwf	((??_scale+6)^(0+128)+3)
  2897  0274' 0800'              	movf	(??_scale+9)^(0+128),w
  2898  0275' 0080'              	movwf	(___flmul@a+3)^(0+128)
  2899  0276' 0800'              	movf	(??_scale+8)^(0+128),w
  2900  0277' 0080'              	movwf	(___flmul@a+2)^(0+128)
  2901  0278' 0800'              	movf	(??_scale+7)^(0+128),w
  2902  0279' 0080'              	movwf	(___flmul@a+1)^(0+128)
  2903  027A' 0800'              	movf	(??_scale+6)^(0+128),w
  2904  027B' 0080'              	movwf	___flmul@a^(0+128)
  2905  027C' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2906  0281' 1683               	bsf	3,5	;RP0=1, select bank1
  2907  0282' 1303               	bcf	3,6	;RP1=0, select bank1
  2908  0283' 0800'              	movf	(?___flmul+3)^(0+128),w
  2909  0284' 0080'              	movwf	(_scale$820+3)^(0+128)
  2910  0285' 0800'              	movf	(?___flmul+2)^(0+128),w
  2911  0286' 0080'              	movwf	(_scale$820+2)^(0+128)
  2912  0287' 0800'              	movf	(?___flmul+1)^(0+128),w
  2913  0288' 0080'              	movwf	(_scale$820+1)^(0+128)
  2914  0289' 0800'              	movf	?___flmul^(0+128),w
  2915  028A' 0080'              	movwf	_scale$820^(0+128)
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2918  028B' 300A               	movlw	10
  2919  028C' 1283               	bcf	3,5	;RP0=0, select bank0
  2920  028D' 1303               	bcf	3,6	;RP1=0, select bank0
  2921  028E' 009D'              	movwf	___awmod@divisor
  2922  028F' 3000               	movlw	0
  2923  0290' 009E'              	movwf	___awmod@divisor+1
  2924  0291' 1683               	bsf	3,5	;RP0=1, select bank1
  2925  0292' 1303               	bcf	3,6	;RP1=0, select bank1
  2926  0293' 0800'              	movf	scale@scl^(0+128),w
  2927  0294' 1283               	bcf	3,5	;RP0=0, select bank0
  2928  0295' 1303               	bcf	3,6	;RP1=0, select bank0
  2929  0296' 009F'              	movwf	___awmod@dividend
  2930  0297' 01A0'              	clrf	___awmod@dividend+1
  2931  0298' 1B9F'              	btfsc	___awmod@dividend,7
  2932  0299' 03A0'              	decf	___awmod@dividend+1,f
  2933  029A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2934  029F' 1283               	bcf	3,5	;RP0=0, select bank0
  2935  02A0' 1303               	bcf	3,6	;RP1=0, select bank0
  2936  02A1' 081D'              	movf	?___awmod,w
  2937  02A2' 1683               	bsf	3,5	;RP0=1, select bank1
  2938  02A3' 1303               	bcf	3,6	;RP1=0, select bank1
  2939  02A4' 0080'              	movwf	??_scale^(0+128)
  2940  02A5' 3001               	movlw	1
  2941  02A6'                    u7085:
  2942  02A6' 1003               	clrc
  2943  02A7' 0D80'              	rlf	??_scale^(0+128),f
  2944  02A8' 3EFF               	addlw	-1
  2945  02A9' 1D03               	skipz
  2946  02AA' 2800'              	goto	u7085
  2947  02AB' 1003               	clrc
  2948  02AC' 0D00'              	rlf	??_scale^(0+128),w
  2949  02AD' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2950  02AE' 0084               	movwf	4
  2951  02AF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2952  02B4' 0080'              	movwf	(??_scale+1)^(0+128)
  2953  02B5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2954  02BA' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  2955  02BB' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2956  02C0' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  2957  02C1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2958  02C6' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  2959  02C7' 0800'              	movf	(??_scale+4)^(0+128),w
  2960  02C8' 0080'              	movwf	(___flmul@b+3)^(0+128)
  2961  02C9' 0800'              	movf	(??_scale+3)^(0+128),w
  2962  02CA' 0080'              	movwf	(___flmul@b+2)^(0+128)
  2963  02CB' 0800'              	movf	(??_scale+2)^(0+128),w
  2964  02CC' 0080'              	movwf	(___flmul@b+1)^(0+128)
  2965  02CD' 0800'              	movf	(??_scale+1)^(0+128),w
  2966  02CE' 0080'              	movwf	___flmul@b^(0+128)
  2967  02CF' 0800'              	movf	(_scale$820+3)^(0+128),w
  2968  02D0' 0080'              	movwf	(___flmul@a+3)^(0+128)
  2969  02D1' 0800'              	movf	(_scale$820+2)^(0+128),w
  2970  02D2' 0080'              	movwf	(___flmul@a+2)^(0+128)
  2971  02D3' 0800'              	movf	(_scale$820+1)^(0+128),w
  2972  02D4' 0080'              	movwf	(___flmul@a+1)^(0+128)
  2973  02D5' 0800'              	movf	_scale$820^(0+128),w
  2974  02D6' 0080'              	movwf	___flmul@a^(0+128)
  2975  02D7' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2976  02DC' 1683               	bsf	3,5	;RP0=1, select bank1
  2977  02DD' 1303               	bcf	3,6	;RP1=0, select bank1
  2978  02DE' 0800'              	movf	(?___flmul+3)^(0+128),w
  2979  02DF' 0080'              	movwf	(?_scale+3)^(0+128)
  2980  02E0' 0800'              	movf	(?___flmul+2)^(0+128),w
  2981  02E1' 0080'              	movwf	(?_scale+2)^(0+128)
  2982  02E2' 0800'              	movf	(?___flmul+1)^(0+128),w
  2983  02E3' 0080'              	movwf	(?_scale+1)^(0+128)
  2984  02E4' 0800'              	movf	?___flmul^(0+128),w
  2985  02E5' 0080'              	movwf	?_scale^(0+128)
  2986  02E6' 2800'              	goto	l226
  2987  02E7'                    l3813:
  2988  02E7' 0800'              	movf	scale@scl^(0+128),w
  2989  02E8' 3A80               	xorlw	128
  2990  02E9' 3E75               	addlw	-139
  2991  02EA' 1C03               	skipc
  2992  02EB' 2800'              	goto	u7091
  2993  02EC' 2800'              	goto	u7090
  2994  02ED'                    u7091:
  2995  02ED' 2800'              	goto	l3819
  2996  02EE'                    u7090:
  2997  02EE'                    l3815:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3000  02EE' 300A               	movlw	10
  3001  02EF' 1283               	bcf	3,5	;RP0=0, select bank0
  3002  02F0' 1303               	bcf	3,6	;RP1=0, select bank0
  3003  02F1' 009D'              	movwf	___awmod@divisor
  3004  02F2' 3000               	movlw	0
  3005  02F3' 009E'              	movwf	___awmod@divisor+1
  3006  02F4' 1683               	bsf	3,5	;RP0=1, select bank1
  3007  02F5' 1303               	bcf	3,6	;RP1=0, select bank1
  3008  02F6' 0800'              	movf	scale@scl^(0+128),w
  3009  02F7' 1283               	bcf	3,5	;RP0=0, select bank0
  3010  02F8' 1303               	bcf	3,6	;RP1=0, select bank0
  3011  02F9' 009F'              	movwf	___awmod@dividend
  3012  02FA' 01A0'              	clrf	___awmod@dividend+1
  3013  02FB' 1B9F'              	btfsc	___awmod@dividend,7
  3014  02FC' 03A0'              	decf	___awmod@dividend+1,f
  3015  02FD' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3016  0302' 1283               	bcf	3,5	;RP0=0, select bank0
  3017  0303' 1303               	bcf	3,6	;RP1=0, select bank0
  3018  0304' 081D'              	movf	?___awmod,w
  3019  0305' 1683               	bsf	3,5	;RP0=1, select bank1
  3020  0306' 1303               	bcf	3,6	;RP1=0, select bank1
  3021  0307' 0080'              	movwf	??_scale^(0+128)
  3022  0308' 3001               	movlw	1
  3023  0309'                    u7105:
  3024  0309' 1003               	clrc
  3025  030A' 0D80'              	rlf	??_scale^(0+128),f
  3026  030B' 3EFF               	addlw	-1
  3027  030C' 1D03               	skipz
  3028  030D' 2800'              	goto	u7105
  3029  030E' 1003               	clrc
  3030  030F' 0D00'              	rlf	??_scale^(0+128),w
  3031  0310' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3032  0311' 0084               	movwf	4
  3033  0312' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3034  0317' 0080'              	movwf	(??_scale+1)^(0+128)
  3035  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3036  031D' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  3037  031E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3038  0323' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  3039  0324' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3040  0329' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  3041  032A' 0800'              	movf	(??_scale+4)^(0+128),w
  3042  032B' 0080'              	movwf	(___flmul@b+3)^(0+128)
  3043  032C' 0800'              	movf	(??_scale+3)^(0+128),w
  3044  032D' 0080'              	movwf	(___flmul@b+2)^(0+128)
  3045  032E' 0800'              	movf	(??_scale+2)^(0+128),w
  3046  032F' 0080'              	movwf	(___flmul@b+1)^(0+128)
  3047  0330' 0800'              	movf	(??_scale+1)^(0+128),w
  3048  0331' 0080'              	movwf	___flmul@b^(0+128)
  3049  0332' 300A               	movlw	10
  3050  0333' 1283               	bcf	3,5	;RP0=0, select bank0
  3051  0334' 1303               	bcf	3,6	;RP1=0, select bank0
  3052  0335' 00A4'              	movwf	___awdiv@divisor
  3053  0336' 3000               	movlw	0
  3054  0337' 00A5'              	movwf	___awdiv@divisor+1
  3055  0338' 1683               	bsf	3,5	;RP0=1, select bank1
  3056  0339' 1303               	bcf	3,6	;RP1=0, select bank1
  3057  033A' 0800'              	movf	scale@scl^(0+128),w
  3058  033B' 1283               	bcf	3,5	;RP0=0, select bank0
  3059  033C' 1303               	bcf	3,6	;RP1=0, select bank0
  3060  033D' 00A6'              	movwf	___awdiv@dividend
  3061  033E' 01A7'              	clrf	___awdiv@dividend+1
  3062  033F' 1BA6'              	btfsc	___awdiv@dividend,7
  3063  0340' 03A7'              	decf	___awdiv@dividend+1,f
  3064  0341' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3065  0346' 1283               	bcf	3,5	;RP0=0, select bank0
  3066  0347' 1303               	bcf	3,6	;RP1=0, select bank0
  3067  0348' 0824'              	movf	?___awdiv,w
  3068  0349' 1683               	bsf	3,5	;RP0=1, select bank1
  3069  034A' 1303               	bcf	3,6	;RP1=0, select bank1
  3070  034B' 0080'              	movwf	(??_scale+5)^(0+128)
  3071  034C' 3001               	movlw	1
  3072  034D'                    u7115:
  3073  034D' 1003               	clrc
  3074  034E' 0D80'              	rlf	(??_scale+5)^(0+128),f
  3075  034F' 3EFF               	addlw	-1
  3076  0350' 1D03               	skipz
  3077  0351' 2800'              	goto	u7115
  3078  0352' 1003               	clrc
  3079  0353' 0D00'              	rlf	(??_scale+5)^(0+128),w
  3080  0354' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3081  0355' 0084               	movwf	4
  3082  0356' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3083  035B' 0080'              	movwf	(??_scale+6)^(0+128)
  3084  035C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3085  0361' 0081'              	movwf	((??_scale+6)^(0+128)+1)
  3086  0362' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3087  0367' 0082'              	movwf	((??_scale+6)^(0+128)+2)
  3088  0368' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3089  036D' 0083'              	movwf	((??_scale+6)^(0+128)+3)
  3090  036E' 0800'              	movf	(??_scale+9)^(0+128),w
  3091  036F' 0080'              	movwf	(___flmul@a+3)^(0+128)
  3092  0370' 0800'              	movf	(??_scale+8)^(0+128),w
  3093  0371' 0080'              	movwf	(___flmul@a+2)^(0+128)
  3094  0372' 0800'              	movf	(??_scale+7)^(0+128),w
  3095  0373' 0080'              	movwf	(___flmul@a+1)^(0+128)
  3096  0374' 0800'              	movf	(??_scale+6)^(0+128),w
  3097  0375' 0080'              	movwf	___flmul@a^(0+128)
  3098  0376' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3099  037B' 1683               	bsf	3,5	;RP0=1, select bank1
  3100  037C' 1303               	bcf	3,6	;RP1=0, select bank1
  3101  037D' 0800'              	movf	(?___flmul+3)^(0+128),w
  3102  037E' 0080'              	movwf	(?_scale+3)^(0+128)
  3103  037F' 0800'              	movf	(?___flmul+2)^(0+128),w
  3104  0380' 0080'              	movwf	(?_scale+2)^(0+128)
  3105  0381' 0800'              	movf	(?___flmul+1)^(0+128),w
  3106  0382' 0080'              	movwf	(?_scale+1)^(0+128)
  3107  0383' 0800'              	movf	?___flmul^(0+128),w
  3108  0384' 0080'              	movwf	?_scale^(0+128)
  3109  0385' 2800'              	goto	l226
  3110  0386'                    l3819:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3113  0386' 0800'              	movf	scale@scl^(0+128),w
  3114  0387' 0080'              	movwf	??_scale^(0+128)
  3115  0388' 3001               	movlw	1
  3116  0389'                    u7125:
  3117  0389' 1003               	clrc
  3118  038A' 0D80'              	rlf	??_scale^(0+128),f
  3119  038B' 3EFF               	addlw	-1
  3120  038C' 1D03               	skipz
  3121  038D' 2800'              	goto	u7125
  3122  038E' 1003               	clrc
  3123  038F' 0D00'              	rlf	??_scale^(0+128),w
  3124  0390' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3125  0391' 0084               	movwf	4
  3126  0392' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3127  0397' 0080'              	movwf	(??_scale+1)^(0+128)
  3128  0398' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3129  039D' 0081'              	movwf	((??_scale+1)^(0+128)+1)
  3130  039E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3131  03A3' 0082'              	movwf	((??_scale+1)^(0+128)+2)
  3132  03A4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3133  03A9' 0083'              	movwf	((??_scale+1)^(0+128)+3)
  3134  03AA' 0800'              	movf	(??_scale+4)^(0+128),w
  3135  03AB' 0080'              	movwf	(?_scale+3)^(0+128)
  3136  03AC' 0800'              	movf	(??_scale+3)^(0+128),w
  3137  03AD' 0080'              	movwf	(?_scale+2)^(0+128)
  3138  03AE' 0800'              	movf	(??_scale+2)^(0+128),w
  3139  03AF' 0080'              	movwf	(?_scale+1)^(0+128)
  3140  03B0' 0800'              	movf	(??_scale+1)^(0+128),w
  3141  03B1' 0080'              	movwf	?_scale^(0+128)
  3142  03B2'                    l226:
  3143  03B2' 0008               	return
  3144  03B3'                    __end_of_scale:
  3145                           
  3146                           	psect	text3
  3147  0000'                    __ptext3:	
  3148 ;; *************** function ___awmod *****************
  3149 ;; Defined at:
  3150 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  divisor         2   29[BANK0 ] int 
  3153 ;;  dividend        2   31[BANK0 ] int 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  sign            1   35[BANK0 ] unsigned char 
  3156 ;;  counter         1   34[BANK0 ] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2   29[BANK0 ] int 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         0       4       0       0       0
  3167 ;;      Locals:         0       2       0       0       0
  3168 ;;      Temps:          0       1       0       0       0
  3169 ;;      Totals:         0       7       0       0       0
  3170 ;;Total ram usage:        7 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 3
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_scale
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180  0000'                    ___awmod:	
  3181                           ;psect for function ___awmod
  3182                           
  3183  0000'                    l2349:	
  3184                           ;incstack = 0
  3185                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3186                           
  3187  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3188  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3189  0002' 01A3'              	clrf	___awmod@sign
  3190  0003'                    l2351:
  3191  0003' 1FA0'              	btfss	___awmod@dividend+1,7
  3192  0004' 2800'              	goto	u3481
  3193  0005' 2800'              	goto	u3480
  3194  0006'                    u3481:
  3195  0006' 2800'              	goto	l2357
  3196  0007'                    u3480:
  3197  0007'                    l2353:
  3198  0007' 099F'              	comf	___awmod@dividend,f
  3199  0008' 09A0'              	comf	___awmod@dividend+1,f
  3200  0009' 0A9F'              	incf	___awmod@dividend,f
  3201  000A' 1903               	skipnz
  3202  000B' 0AA0'              	incf	___awmod@dividend+1,f
  3203  000C'                    l2355:
  3204  000C' 01A3'              	clrf	___awmod@sign
  3205  000D' 0AA3'              	incf	___awmod@sign,f
  3206  000E'                    l2357:
  3207  000E' 1F9E'              	btfss	___awmod@divisor+1,7
  3208  000F' 2800'              	goto	u3491
  3209  0010' 2800'              	goto	u3490
  3210  0011'                    u3491:
  3211  0011' 2800'              	goto	l2361
  3212  0012'                    u3490:
  3213  0012'                    l2359:
  3214  0012' 099D'              	comf	___awmod@divisor,f
  3215  0013' 099E'              	comf	___awmod@divisor+1,f
  3216  0014' 0A9D'              	incf	___awmod@divisor,f
  3217  0015' 1903               	skipnz
  3218  0016' 0A9E'              	incf	___awmod@divisor+1,f
  3219  0017'                    l2361:
  3220  0017' 081D'              	movf	___awmod@divisor,w
  3221  0018' 041E'              	iorwf	___awmod@divisor+1,w
  3222  0019' 1903               	btfsc	3,2
  3223  001A' 2800'              	goto	u3501
  3224  001B' 2800'              	goto	u3500
  3225  001C'                    u3501:
  3226  001C' 2800'              	goto	l2379
  3227  001D'                    u3500:
  3228  001D'                    l2363:
  3229  001D' 01A2'              	clrf	___awmod@counter
  3230  001E' 0AA2'              	incf	___awmod@counter,f
  3231  001F' 2800'              	goto	l2369
  3232  0020'                    l2365:
  3233  0020' 3001               	movlw	1
  3234  0021'                    u3515:
  3235  0021' 1003               	clrc
  3236  0022' 0D9D'              	rlf	___awmod@divisor,f
  3237  0023' 0D9E'              	rlf	___awmod@divisor+1,f
  3238  0024' 3EFF               	addlw	-1
  3239  0025' 1D03               	skipz
  3240  0026' 2800'              	goto	u3515
  3241  0027'                    l2367:
  3242  0027' 3001               	movlw	1
  3243  0028' 00A1'              	movwf	??___awmod
  3244  0029' 0821'              	movf	??___awmod,w
  3245  002A' 07A2'              	addwf	___awmod@counter,f
  3246  002B'                    l2369:
  3247  002B' 1F9E'              	btfss	___awmod@divisor+1,7
  3248  002C' 2800'              	goto	u3521
  3249  002D' 2800'              	goto	u3520
  3250  002E'                    u3521:
  3251  002E' 2800'              	goto	l2365
  3252  002F'                    u3520:
  3253  002F'                    l2371:
  3254  002F' 081E'              	movf	___awmod@divisor+1,w
  3255  0030' 0220'              	subwf	___awmod@dividend+1,w
  3256  0031' 1D03               	skipz
  3257  0032' 2800'              	goto	u3535
  3258  0033' 081D'              	movf	___awmod@divisor,w
  3259  0034' 021F'              	subwf	___awmod@dividend,w
  3260  0035'                    u3535:
  3261  0035' 1C03               	skipc
  3262  0036' 2800'              	goto	u3531
  3263  0037' 2800'              	goto	u3530
  3264  0038'                    u3531:
  3265  0038' 2800'              	goto	l2375
  3266  0039'                    u3530:
  3267  0039'                    l2373:
  3268  0039' 081D'              	movf	___awmod@divisor,w
  3269  003A' 029F'              	subwf	___awmod@dividend,f
  3270  003B' 081E'              	movf	___awmod@divisor+1,w
  3271  003C' 1C03               	skipc
  3272  003D' 03A0'              	decf	___awmod@dividend+1,f
  3273  003E' 02A0'              	subwf	___awmod@dividend+1,f
  3274  003F'                    l2375:
  3275  003F' 3001               	movlw	1
  3276  0040'                    u3545:
  3277  0040' 1003               	clrc
  3278  0041' 0C9E'              	rrf	___awmod@divisor+1,f
  3279  0042' 0C9D'              	rrf	___awmod@divisor,f
  3280  0043' 3EFF               	addlw	-1
  3281  0044' 1D03               	skipz
  3282  0045' 2800'              	goto	u3545
  3283  0046'                    l2377:
  3284  0046' 3001               	movlw	1
  3285  0047' 02A2'              	subwf	___awmod@counter,f
  3286  0048' 1D03               	btfss	3,2
  3287  0049' 2800'              	goto	u3551
  3288  004A' 2800'              	goto	u3550
  3289  004B'                    u3551:
  3290  004B' 2800'              	goto	l2371
  3291  004C'                    u3550:
  3292  004C'                    l2379:
  3293  004C' 0823'              	movf	___awmod@sign,w
  3294  004D' 1903               	btfsc	3,2
  3295  004E' 2800'              	goto	u3561
  3296  004F' 2800'              	goto	u3560
  3297  0050'                    u3561:
  3298  0050' 2800'              	goto	l2383
  3299  0051'                    u3560:
  3300  0051'                    l2381:
  3301  0051' 099F'              	comf	___awmod@dividend,f
  3302  0052' 09A0'              	comf	___awmod@dividend+1,f
  3303  0053' 0A9F'              	incf	___awmod@dividend,f
  3304  0054' 1903               	skipnz
  3305  0055' 0AA0'              	incf	___awmod@dividend+1,f
  3306  0056'                    l2383:
  3307  0056' 0820'              	movf	___awmod@dividend+1,w
  3308  0057' 009E'              	movwf	?___awmod+1
  3309  0058' 081F'              	movf	___awmod@dividend,w
  3310  0059' 009D'              	movwf	?___awmod
  3311  005A'                    l459:
  3312  005A' 0008               	return
  3313  005B'                    __end_of___awmod:
  3314                           
  3315                           	psect	text4
  3316  0000'                    __ptext4:	
  3317 ;; *************** function ___awdiv *****************
  3318 ;; Defined at:
  3319 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  divisor         2   36[BANK0 ] int 
  3322 ;;  dividend        2   38[BANK0 ] int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  quotient        2   43[BANK0 ] int 
  3325 ;;  sign            1   42[BANK0 ] unsigned char 
  3326 ;;  counter         1   41[BANK0 ] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2   36[BANK0 ] int 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       4       0       0       0
  3337 ;;      Locals:         0       4       0       0       0
  3338 ;;      Temps:          0       1       0       0       0
  3339 ;;      Totals:         0       9       0       0       0
  3340 ;;Total ram usage:        9 bytes
  3341 ;; Hardware stack levels used: 1
  3342 ;; Hardware stack levels required when called: 3
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_scale
  3347 ;;		_sprintf
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351  0000'                    ___awdiv:	
  3352                           ;psect for function ___awdiv
  3353                           
  3354  0000'                    l2305:	
  3355                           ;incstack = 0
  3356                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3357                           
  3358  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3359  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3360  0002' 01AA'              	clrf	___awdiv@sign
  3361  0003'                    l2307:
  3362  0003' 1FA5'              	btfss	___awdiv@divisor+1,7
  3363  0004' 2800'              	goto	u3381
  3364  0005' 2800'              	goto	u3380
  3365  0006'                    u3381:
  3366  0006' 2800'              	goto	l2313
  3367  0007'                    u3380:
  3368  0007'                    l2309:
  3369  0007' 09A4'              	comf	___awdiv@divisor,f
  3370  0008' 09A5'              	comf	___awdiv@divisor+1,f
  3371  0009' 0AA4'              	incf	___awdiv@divisor,f
  3372  000A' 1903               	skipnz
  3373  000B' 0AA5'              	incf	___awdiv@divisor+1,f
  3374  000C'                    l2311:
  3375  000C' 01AA'              	clrf	___awdiv@sign
  3376  000D' 0AAA'              	incf	___awdiv@sign,f
  3377  000E'                    l2313:
  3378  000E' 1FA7'              	btfss	___awdiv@dividend+1,7
  3379  000F' 2800'              	goto	u3391
  3380  0010' 2800'              	goto	u3390
  3381  0011'                    u3391:
  3382  0011' 2800'              	goto	l2319
  3383  0012'                    u3390:
  3384  0012'                    l2315:
  3385  0012' 09A6'              	comf	___awdiv@dividend,f
  3386  0013' 09A7'              	comf	___awdiv@dividend+1,f
  3387  0014' 0AA6'              	incf	___awdiv@dividend,f
  3388  0015' 1903               	skipnz
  3389  0016' 0AA7'              	incf	___awdiv@dividend+1,f
  3390  0017'                    l2317:
  3391  0017' 3001               	movlw	1
  3392  0018' 00A8'              	movwf	??___awdiv
  3393  0019' 0828'              	movf	??___awdiv,w
  3394  001A' 06AA'              	xorwf	___awdiv@sign,f
  3395  001B'                    l2319:
  3396  001B' 01AB'              	clrf	___awdiv@quotient
  3397  001C' 01AC'              	clrf	___awdiv@quotient+1
  3398  001D'                    l2321:
  3399  001D' 0824'              	movf	___awdiv@divisor,w
  3400  001E' 0425'              	iorwf	___awdiv@divisor+1,w
  3401  001F' 1903               	btfsc	3,2
  3402  0020' 2800'              	goto	u3401
  3403  0021' 2800'              	goto	u3400
  3404  0022'                    u3401:
  3405  0022' 2800'              	goto	l2341
  3406  0023'                    u3400:
  3407  0023'                    l2323:
  3408  0023' 01A9'              	clrf	___awdiv@counter
  3409  0024' 0AA9'              	incf	___awdiv@counter,f
  3410  0025' 2800'              	goto	l2329
  3411  0026'                    l2325:
  3412  0026' 3001               	movlw	1
  3413  0027'                    u3415:
  3414  0027' 1003               	clrc
  3415  0028' 0DA4'              	rlf	___awdiv@divisor,f
  3416  0029' 0DA5'              	rlf	___awdiv@divisor+1,f
  3417  002A' 3EFF               	addlw	-1
  3418  002B' 1D03               	skipz
  3419  002C' 2800'              	goto	u3415
  3420  002D'                    l2327:
  3421  002D' 3001               	movlw	1
  3422  002E' 00A8'              	movwf	??___awdiv
  3423  002F' 0828'              	movf	??___awdiv,w
  3424  0030' 07A9'              	addwf	___awdiv@counter,f
  3425  0031'                    l2329:
  3426  0031' 1FA5'              	btfss	___awdiv@divisor+1,7
  3427  0032' 2800'              	goto	u3421
  3428  0033' 2800'              	goto	u3420
  3429  0034'                    u3421:
  3430  0034' 2800'              	goto	l2325
  3431  0035'                    u3420:
  3432  0035'                    l2331:
  3433  0035' 3001               	movlw	1
  3434  0036'                    u3435:
  3435  0036' 1003               	clrc
  3436  0037' 0DAB'              	rlf	___awdiv@quotient,f
  3437  0038' 0DAC'              	rlf	___awdiv@quotient+1,f
  3438  0039' 3EFF               	addlw	-1
  3439  003A' 1D03               	skipz
  3440  003B' 2800'              	goto	u3435
  3441  003C' 0825'              	movf	___awdiv@divisor+1,w
  3442  003D' 0227'              	subwf	___awdiv@dividend+1,w
  3443  003E' 1D03               	skipz
  3444  003F' 2800'              	goto	u3445
  3445  0040' 0824'              	movf	___awdiv@divisor,w
  3446  0041' 0226'              	subwf	___awdiv@dividend,w
  3447  0042'                    u3445:
  3448  0042' 1C03               	skipc
  3449  0043' 2800'              	goto	u3441
  3450  0044' 2800'              	goto	u3440
  3451  0045'                    u3441:
  3452  0045' 2800'              	goto	l2337
  3453  0046'                    u3440:
  3454  0046'                    l2333:
  3455  0046' 0824'              	movf	___awdiv@divisor,w
  3456  0047' 02A6'              	subwf	___awdiv@dividend,f
  3457  0048' 0825'              	movf	___awdiv@divisor+1,w
  3458  0049' 1C03               	skipc
  3459  004A' 03A7'              	decf	___awdiv@dividend+1,f
  3460  004B' 02A7'              	subwf	___awdiv@dividend+1,f
  3461  004C'                    l2335:
  3462  004C' 142B'              	bsf	___awdiv@quotient,0
  3463  004D'                    l2337:
  3464  004D' 3001               	movlw	1
  3465  004E'                    u3455:
  3466  004E' 1003               	clrc
  3467  004F' 0CA5'              	rrf	___awdiv@divisor+1,f
  3468  0050' 0CA4'              	rrf	___awdiv@divisor,f
  3469  0051' 3EFF               	addlw	-1
  3470  0052' 1D03               	skipz
  3471  0053' 2800'              	goto	u3455
  3472  0054'                    l2339:
  3473  0054' 3001               	movlw	1
  3474  0055' 02A9'              	subwf	___awdiv@counter,f
  3475  0056' 1D03               	btfss	3,2
  3476  0057' 2800'              	goto	u3461
  3477  0058' 2800'              	goto	u3460
  3478  0059'                    u3461:
  3479  0059' 2800'              	goto	l2331
  3480  005A'                    u3460:
  3481  005A'                    l2341:
  3482  005A' 082A'              	movf	___awdiv@sign,w
  3483  005B' 1903               	btfsc	3,2
  3484  005C' 2800'              	goto	u3471
  3485  005D' 2800'              	goto	u3470
  3486  005E'                    u3471:
  3487  005E' 2800'              	goto	l2345
  3488  005F'                    u3470:
  3489  005F'                    l2343:
  3490  005F' 09AB'              	comf	___awdiv@quotient,f
  3491  0060' 09AC'              	comf	___awdiv@quotient+1,f
  3492  0061' 0AAB'              	incf	___awdiv@quotient,f
  3493  0062' 1903               	skipnz
  3494  0063' 0AAC'              	incf	___awdiv@quotient+1,f
  3495  0064'                    l2345:
  3496  0064' 082C'              	movf	___awdiv@quotient+1,w
  3497  0065' 00A5'              	movwf	?___awdiv+1
  3498  0066' 082B'              	movf	___awdiv@quotient,w
  3499  0067' 00A4'              	movwf	?___awdiv
  3500  0068'                    l446:
  3501  0068' 0008               	return
  3502  0069'                    __end_of___awdiv:
  3503                           
  3504                           	psect	text5
  3505  0000'                    __ptext5:	
  3506 ;; *************** function _fround *****************
  3507 ;; Defined at:
  3508 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  prec            1    wreg     unsigned char 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  prec            1   45[BANK1 ] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  4   26[BANK1 ] unsigned char 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         0       0       4       0       0
  3523 ;;      Locals:         0       0       9       0       0
  3524 ;;      Temps:          0       0       7       0       0
  3525 ;;      Totals:         0       0      20       0       0
  3526 ;;Total ram usage:       20 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 5
  3529 ;; This function calls:
  3530 ;;		___flmul
  3531 ;;		___lwdiv
  3532 ;;		___lwmod
  3533 ;; This function is called by:
  3534 ;;		_sprintf
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538  0000'                    _fround:	
  3539                           ;psect for function _fround
  3540                           
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3544                           ;fround@prec stored from wreg
  3545  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  3546  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  3547  0002' 0080'              	movwf	fround@prec^(0+128)
  3548  0003'                    l3765:
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3551  0003' 306E               	movlw	110
  3552  0004' 0200'              	subwf	fround@prec^(0+128),w
  3553  0005' 1C03               	skipc
  3554  0006' 2800'              	goto	u6881
  3555  0007' 2800'              	goto	u6880
  3556  0008'                    u6881:
  3557  0008' 2800'              	goto	l3773
  3558  0009'                    u6880:
  3559  0009'                    l3767:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3562  0009' 303F               	movlw	63
  3563  000A' 0080'              	movwf	(___flmul@b+3)^(0+128)
  3564  000B' 3000               	movlw	0
  3565  000C' 0080'              	movwf	(___flmul@b+2)^(0+128)
  3566  000D' 3000               	movlw	0
  3567  000E' 0080'              	movwf	(___flmul@b+1)^(0+128)
  3568  000F' 3000               	movlw	0
  3569  0010' 0080'              	movwf	___flmul@b^(0+128)
  3570  0011' 3064               	movlw	100
  3571  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  3572  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  3573  0014' 00A3'              	movwf	___lwdiv@divisor
  3574  0015' 3000               	movlw	0
  3575  0016' 00A4'              	movwf	___lwdiv@divisor+1
  3576  0017' 1683               	bsf	3,5	;RP0=1, select bank1
  3577  0018' 1303               	bcf	3,6	;RP1=0, select bank1
  3578  0019' 0800'              	movf	fround@prec^(0+128),w
  3579  001A' 0080'              	movwf	??_fround^(0+128)
  3580  001B' 0181'              	clrf	(??_fround^(0+128)+1)
  3581  001C' 0800'              	movf	??_fround^(0+128),w
  3582  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  3583  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  3584  001F' 00A5'              	movwf	___lwdiv@dividend
  3585  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  3586  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  3587  0022' 0800'              	movf	(??_fround+1)^(0+128),w
  3588  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  3589  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  3590  0025' 00A6'              	movwf	___lwdiv@dividend+1
  3591  0026' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  3592  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  3593  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  3594  002D' 0823'              	movf	?___lwdiv,w
  3595  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  3596  002F' 1303               	bcf	3,6	;RP1=0, select bank1
  3597  0030' 0080'              	movwf	(??_fround+2)^(0+128)
  3598  0031' 3001               	movlw	1
  3599  0032'                    u6895:
  3600  0032' 1003               	clrc
  3601  0033' 0D80'              	rlf	(??_fround+2)^(0+128),f
  3602  0034' 3EFF               	addlw	-1
  3603  0035' 1D03               	skipz
  3604  0036' 2800'              	goto	u6895
  3605  0037' 1003               	clrc
  3606  0038' 0D00'              	rlf	(??_fround+2)^(0+128),w
  3607  0039' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3608  003A' 0084               	movwf	4
  3609  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3610  0040' 0080'              	movwf	(??_fround+3)^(0+128)
  3611  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3612  0046' 0081'              	movwf	((??_fround+3)^(0+128)+1)
  3613  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3614  004C' 0082'              	movwf	((??_fround+3)^(0+128)+2)
  3615  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3616  0052' 0083'              	movwf	((??_fround+3)^(0+128)+3)
  3617  0053' 0800'              	movf	(??_fround+6)^(0+128),w
  3618  0054' 0080'              	movwf	(___flmul@a+3)^(0+128)
  3619  0055' 0800'              	movf	(??_fround+5)^(0+128),w
  3620  0056' 0080'              	movwf	(___flmul@a+2)^(0+128)
  3621  0057' 0800'              	movf	(??_fround+4)^(0+128),w
  3622  0058' 0080'              	movwf	(___flmul@a+1)^(0+128)
  3623  0059' 0800'              	movf	(??_fround+3)^(0+128),w
  3624  005A' 0080'              	movwf	___flmul@a^(0+128)
  3625  005B' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3626  0060' 1683               	bsf	3,5	;RP0=1, select bank1
  3627  0061' 1303               	bcf	3,6	;RP1=0, select bank1
  3628  0062' 0800'              	movf	(?___flmul+3)^(0+128),w
  3629  0063' 0080'              	movwf	(_fround$818+3)^(0+128)
  3630  0064' 0800'              	movf	(?___flmul+2)^(0+128),w
  3631  0065' 0080'              	movwf	(_fround$818+2)^(0+128)
  3632  0066' 0800'              	movf	(?___flmul+1)^(0+128),w
  3633  0067' 0080'              	movwf	(_fround$818+1)^(0+128)
  3634  0068' 0800'              	movf	?___flmul^(0+128),w
  3635  0069' 0080'              	movwf	_fround$818^(0+128)
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3638  006A' 300A               	movlw	10
  3639  006B' 1283               	bcf	3,5	;RP0=0, select bank0
  3640  006C' 1303               	bcf	3,6	;RP1=0, select bank0
  3641  006D' 00A3'              	movwf	___lwdiv@divisor
  3642  006E' 3000               	movlw	0
  3643  006F' 00A4'              	movwf	___lwdiv@divisor+1
  3644  0070' 1683               	bsf	3,5	;RP0=1, select bank1
  3645  0071' 1303               	bcf	3,6	;RP1=0, select bank1
  3646  0072' 0800'              	movf	fround@prec^(0+128),w
  3647  0073' 0080'              	movwf	??_fround^(0+128)
  3648  0074' 0181'              	clrf	(??_fround^(0+128)+1)
  3649  0075' 0800'              	movf	??_fround^(0+128),w
  3650  0076' 1283               	bcf	3,5	;RP0=0, select bank0
  3651  0077' 1303               	bcf	3,6	;RP1=0, select bank0
  3652  0078' 009F'              	movwf	___lwmod@dividend
  3653  0079' 1683               	bsf	3,5	;RP0=1, select bank1
  3654  007A' 1303               	bcf	3,6	;RP1=0, select bank1
  3655  007B' 0800'              	movf	(??_fround+1)^(0+128),w
  3656  007C' 1283               	bcf	3,5	;RP0=0, select bank0
  3657  007D' 1303               	bcf	3,6	;RP1=0, select bank0
  3658  007E' 00A0'              	movwf	___lwmod@dividend+1
  3659  007F' 3064               	movlw	100
  3660  0080' 009D'              	movwf	___lwmod@divisor
  3661  0081' 3000               	movlw	0
  3662  0082' 009E'              	movwf	___lwmod@divisor+1
  3663  0083' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  3664  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  3665  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  3666  008A' 081E'              	movf	?___lwmod+1,w
  3667  008B' 00A6'              	movwf	___lwdiv@dividend+1
  3668  008C' 081D'              	movf	?___lwmod,w
  3669  008D' 00A5'              	movwf	___lwdiv@dividend
  3670  008E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  3671  0093' 1283               	bcf	3,5	;RP0=0, select bank0
  3672  0094' 1303               	bcf	3,6	;RP1=0, select bank0
  3673  0095' 0823'              	movf	?___lwdiv,w
  3674  0096' 1683               	bsf	3,5	;RP0=1, select bank1
  3675  0097' 1303               	bcf	3,6	;RP1=0, select bank1
  3676  0098' 0080'              	movwf	(??_fround+2)^(0+128)
  3677  0099' 3001               	movlw	1
  3678  009A'                    u6905:
  3679  009A' 1003               	clrc
  3680  009B' 0D80'              	rlf	(??_fround+2)^(0+128),f
  3681  009C' 3EFF               	addlw	-1
  3682  009D' 1D03               	skipz
  3683  009E' 2800'              	goto	u6905
  3684  009F' 1003               	clrc
  3685  00A0' 0D00'              	rlf	(??_fround+2)^(0+128),w
  3686  00A1' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3687  00A2' 0084               	movwf	4
  3688  00A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3689  00A8' 0080'              	movwf	(??_fround+3)^(0+128)
  3690  00A9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3691  00AE' 0081'              	movwf	((??_fround+3)^(0+128)+1)
  3692  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3693  00B4' 0082'              	movwf	((??_fround+3)^(0+128)+2)
  3694  00B5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3695  00BA' 0083'              	movwf	((??_fround+3)^(0+128)+3)
  3696  00BB' 0800'              	movf	(??_fround+6)^(0+128),w
  3697  00BC' 0080'              	movwf	(___flmul@b+3)^(0+128)
  3698  00BD' 0800'              	movf	(??_fround+5)^(0+128),w
  3699  00BE' 0080'              	movwf	(___flmul@b+2)^(0+128)
  3700  00BF' 0800'              	movf	(??_fround+4)^(0+128),w
  3701  00C0' 0080'              	movwf	(___flmul@b+1)^(0+128)
  3702  00C1' 0800'              	movf	(??_fround+3)^(0+128),w
  3703  00C2' 0080'              	movwf	___flmul@b^(0+128)
  3704  00C3' 0800'              	movf	(_fround$818+3)^(0+128),w
  3705  00C4' 0080'              	movwf	(___flmul@a+3)^(0+128)
  3706  00C5' 0800'              	movf	(_fround$818+2)^(0+128),w
  3707  00C6' 0080'              	movwf	(___flmul@a+2)^(0+128)
  3708  00C7' 0800'              	movf	(_fround$818+1)^(0+128),w
  3709  00C8' 0080'              	movwf	(___flmul@a+1)^(0+128)
  3710  00C9' 0800'              	movf	_fround$818^(0+128),w
  3711  00CA' 0080'              	movwf	___flmul@a^(0+128)
  3712  00CB' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3713  00D0' 1683               	bsf	3,5	;RP0=1, select bank1
  3714  00D1' 1303               	bcf	3,6	;RP1=0, select bank1
  3715  00D2' 0800'              	movf	(?___flmul+3)^(0+128),w
  3716  00D3' 0080'              	movwf	(_fround$819+3)^(0+128)
  3717  00D4' 0800'              	movf	(?___flmul+2)^(0+128),w
  3718  00D5' 0080'              	movwf	(_fround$819+2)^(0+128)
  3719  00D6' 0800'              	movf	(?___flmul+1)^(0+128),w
  3720  00D7' 0080'              	movwf	(_fround$819+1)^(0+128)
  3721  00D8' 0800'              	movf	?___flmul^(0+128),w
  3722  00D9' 0080'              	movwf	_fround$819^(0+128)
  3723                           
  3724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3725  00DA' 300A               	movlw	10
  3726  00DB' 1283               	bcf	3,5	;RP0=0, select bank0
  3727  00DC' 1303               	bcf	3,6	;RP1=0, select bank0
  3728  00DD' 009D'              	movwf	___lwmod@divisor
  3729  00DE' 3000               	movlw	0
  3730  00DF' 009E'              	movwf	___lwmod@divisor+1
  3731  00E0' 1683               	bsf	3,5	;RP0=1, select bank1
  3732  00E1' 1303               	bcf	3,6	;RP1=0, select bank1
  3733  00E2' 0800'              	movf	fround@prec^(0+128),w
  3734  00E3' 0080'              	movwf	??_fround^(0+128)
  3735  00E4' 0181'              	clrf	(??_fround^(0+128)+1)
  3736  00E5' 0800'              	movf	??_fround^(0+128),w
  3737  00E6' 1283               	bcf	3,5	;RP0=0, select bank0
  3738  00E7' 1303               	bcf	3,6	;RP1=0, select bank0
  3739  00E8' 009F'              	movwf	___lwmod@dividend
  3740  00E9' 1683               	bsf	3,5	;RP0=1, select bank1
  3741  00EA' 1303               	bcf	3,6	;RP1=0, select bank1
  3742  00EB' 0800'              	movf	(??_fround+1)^(0+128),w
  3743  00EC' 1283               	bcf	3,5	;RP0=0, select bank0
  3744  00ED' 1303               	bcf	3,6	;RP1=0, select bank0
  3745  00EE' 00A0'              	movwf	___lwmod@dividend+1
  3746  00EF' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  3747  00F4' 1283               	bcf	3,5	;RP0=0, select bank0
  3748  00F5' 1303               	bcf	3,6	;RP1=0, select bank0
  3749  00F6' 081D'              	movf	?___lwmod,w
  3750  00F7' 1683               	bsf	3,5	;RP0=1, select bank1
  3751  00F8' 1303               	bcf	3,6	;RP1=0, select bank1
  3752  00F9' 0080'              	movwf	(??_fround+2)^(0+128)
  3753  00FA' 3001               	movlw	1
  3754  00FB'                    u6915:
  3755  00FB' 1003               	clrc
  3756  00FC' 0D80'              	rlf	(??_fround+2)^(0+128),f
  3757  00FD' 3EFF               	addlw	-1
  3758  00FE' 1D03               	skipz
  3759  00FF' 2800'              	goto	u6915
  3760  0100' 1003               	clrc
  3761  0101' 0D00'              	rlf	(??_fround+2)^(0+128),w
  3762  0102' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3763  0103' 0084               	movwf	4
  3764  0104' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3765  0109' 0080'              	movwf	(??_fround+3)^(0+128)
  3766  010A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3767  010F' 0081'              	movwf	((??_fround+3)^(0+128)+1)
  3768  0110' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3769  0115' 0082'              	movwf	((??_fround+3)^(0+128)+2)
  3770  0116' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3771  011B' 0083'              	movwf	((??_fround+3)^(0+128)+3)
  3772  011C' 0800'              	movf	(??_fround+6)^(0+128),w
  3773  011D' 0080'              	movwf	(___flmul@b+3)^(0+128)
  3774  011E' 0800'              	movf	(??_fround+5)^(0+128),w
  3775  011F' 0080'              	movwf	(___flmul@b+2)^(0+128)
  3776  0120' 0800'              	movf	(??_fround+4)^(0+128),w
  3777  0121' 0080'              	movwf	(___flmul@b+1)^(0+128)
  3778  0122' 0800'              	movf	(??_fround+3)^(0+128),w
  3779  0123' 0080'              	movwf	___flmul@b^(0+128)
  3780  0124' 0800'              	movf	(_fround$819+3)^(0+128),w
  3781  0125' 0080'              	movwf	(___flmul@a+3)^(0+128)
  3782  0126' 0800'              	movf	(_fround$819+2)^(0+128),w
  3783  0127' 0080'              	movwf	(___flmul@a+2)^(0+128)
  3784  0128' 0800'              	movf	(_fround$819+1)^(0+128),w
  3785  0129' 0080'              	movwf	(___flmul@a+1)^(0+128)
  3786  012A' 0800'              	movf	_fround$819^(0+128),w
  3787  012B' 0080'              	movwf	___flmul@a^(0+128)
  3788  012C' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3789  0131' 1683               	bsf	3,5	;RP0=1, select bank1
  3790  0132' 1303               	bcf	3,6	;RP1=0, select bank1
  3791  0133' 0800'              	movf	(?___flmul+3)^(0+128),w
  3792  0134' 0080'              	movwf	(?_fround+3)^(0+128)
  3793  0135' 0800'              	movf	(?___flmul+2)^(0+128),w
  3794  0136' 0080'              	movwf	(?_fround+2)^(0+128)
  3795  0137' 0800'              	movf	(?___flmul+1)^(0+128),w
  3796  0138' 0080'              	movwf	(?_fround+1)^(0+128)
  3797  0139' 0800'              	movf	?___flmul^(0+128),w
  3798  013A' 0080'              	movwf	?_fround^(0+128)
  3799  013B' 2800'              	goto	l219
  3800  013C'                    l3773:
  3801  013C' 300B               	movlw	11
  3802  013D' 0200'              	subwf	fround@prec^(0+128),w
  3803  013E' 1C03               	skipc
  3804  013F' 2800'              	goto	u6921
  3805  0140' 2800'              	goto	u6920
  3806  0141'                    u6921:
  3807  0141' 2800'              	goto	l3779
  3808  0142'                    u6920:
  3809  0142'                    l3775:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3812  0142' 303F               	movlw	63
  3813  0143' 0080'              	movwf	(___flmul@b+3)^(0+128)
  3814  0144' 3000               	movlw	0
  3815  0145' 0080'              	movwf	(___flmul@b+2)^(0+128)
  3816  0146' 3000               	movlw	0
  3817  0147' 0080'              	movwf	(___flmul@b+1)^(0+128)
  3818  0148' 3000               	movlw	0
  3819  0149' 0080'              	movwf	___flmul@b^(0+128)
  3820  014A' 300A               	movlw	10
  3821  014B' 1283               	bcf	3,5	;RP0=0, select bank0
  3822  014C' 1303               	bcf	3,6	;RP1=0, select bank0
  3823  014D' 00A3'              	movwf	___lwdiv@divisor
  3824  014E' 3000               	movlw	0
  3825  014F' 00A4'              	movwf	___lwdiv@divisor+1
  3826  0150' 1683               	bsf	3,5	;RP0=1, select bank1
  3827  0151' 1303               	bcf	3,6	;RP1=0, select bank1
  3828  0152' 0800'              	movf	fround@prec^(0+128),w
  3829  0153' 0080'              	movwf	??_fround^(0+128)
  3830  0154' 0181'              	clrf	(??_fround^(0+128)+1)
  3831  0155' 0800'              	movf	??_fround^(0+128),w
  3832  0156' 1283               	bcf	3,5	;RP0=0, select bank0
  3833  0157' 1303               	bcf	3,6	;RP1=0, select bank0
  3834  0158' 00A5'              	movwf	___lwdiv@dividend
  3835  0159' 1683               	bsf	3,5	;RP0=1, select bank1
  3836  015A' 1303               	bcf	3,6	;RP1=0, select bank1
  3837  015B' 0800'              	movf	(??_fround+1)^(0+128),w
  3838  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  3839  015D' 1303               	bcf	3,6	;RP1=0, select bank0
  3840  015E' 00A6'              	movwf	___lwdiv@dividend+1
  3841  015F' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  3842  0164' 1283               	bcf	3,5	;RP0=0, select bank0
  3843  0165' 1303               	bcf	3,6	;RP1=0, select bank0
  3844  0166' 0823'              	movf	?___lwdiv,w
  3845  0167' 1683               	bsf	3,5	;RP0=1, select bank1
  3846  0168' 1303               	bcf	3,6	;RP1=0, select bank1
  3847  0169' 0080'              	movwf	(??_fround+2)^(0+128)
  3848  016A' 3001               	movlw	1
  3849  016B'                    u6935:
  3850  016B' 1003               	clrc
  3851  016C' 0D80'              	rlf	(??_fround+2)^(0+128),f
  3852  016D' 3EFF               	addlw	-1
  3853  016E' 1D03               	skipz
  3854  016F' 2800'              	goto	u6935
  3855  0170' 1003               	clrc
  3856  0171' 0D00'              	rlf	(??_fround+2)^(0+128),w
  3857  0172' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3858  0173' 0084               	movwf	4
  3859  0174' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3860  0179' 0080'              	movwf	(??_fround+3)^(0+128)
  3861  017A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3862  017F' 0081'              	movwf	((??_fround+3)^(0+128)+1)
  3863  0180' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3864  0185' 0082'              	movwf	((??_fround+3)^(0+128)+2)
  3865  0186' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3866  018B' 0083'              	movwf	((??_fround+3)^(0+128)+3)
  3867  018C' 0800'              	movf	(??_fround+6)^(0+128),w
  3868  018D' 0080'              	movwf	(___flmul@a+3)^(0+128)
  3869  018E' 0800'              	movf	(??_fround+5)^(0+128),w
  3870  018F' 0080'              	movwf	(___flmul@a+2)^(0+128)
  3871  0190' 0800'              	movf	(??_fround+4)^(0+128),w
  3872  0191' 0080'              	movwf	(___flmul@a+1)^(0+128)
  3873  0192' 0800'              	movf	(??_fround+3)^(0+128),w
  3874  0193' 0080'              	movwf	___flmul@a^(0+128)
  3875  0194' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3876  0199' 1683               	bsf	3,5	;RP0=1, select bank1
  3877  019A' 1303               	bcf	3,6	;RP1=0, select bank1
  3878  019B' 0800'              	movf	(?___flmul+3)^(0+128),w
  3879  019C' 0080'              	movwf	(_fround$818+3)^(0+128)
  3880  019D' 0800'              	movf	(?___flmul+2)^(0+128),w
  3881  019E' 0080'              	movwf	(_fround$818+2)^(0+128)
  3882  019F' 0800'              	movf	(?___flmul+1)^(0+128),w
  3883  01A0' 0080'              	movwf	(_fround$818+1)^(0+128)
  3884  01A1' 0800'              	movf	?___flmul^(0+128),w
  3885  01A2' 0080'              	movwf	_fround$818^(0+128)
  3886                           
  3887                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3888  01A3' 300A               	movlw	10
  3889  01A4' 1283               	bcf	3,5	;RP0=0, select bank0
  3890  01A5' 1303               	bcf	3,6	;RP1=0, select bank0
  3891  01A6' 009D'              	movwf	___lwmod@divisor
  3892  01A7' 3000               	movlw	0
  3893  01A8' 009E'              	movwf	___lwmod@divisor+1
  3894  01A9' 1683               	bsf	3,5	;RP0=1, select bank1
  3895  01AA' 1303               	bcf	3,6	;RP1=0, select bank1
  3896  01AB' 0800'              	movf	fround@prec^(0+128),w
  3897  01AC' 0080'              	movwf	??_fround^(0+128)
  3898  01AD' 0181'              	clrf	(??_fround^(0+128)+1)
  3899  01AE' 0800'              	movf	??_fround^(0+128),w
  3900  01AF' 1283               	bcf	3,5	;RP0=0, select bank0
  3901  01B0' 1303               	bcf	3,6	;RP1=0, select bank0
  3902  01B1' 009F'              	movwf	___lwmod@dividend
  3903  01B2' 1683               	bsf	3,5	;RP0=1, select bank1
  3904  01B3' 1303               	bcf	3,6	;RP1=0, select bank1
  3905  01B4' 0800'              	movf	(??_fround+1)^(0+128),w
  3906  01B5' 1283               	bcf	3,5	;RP0=0, select bank0
  3907  01B6' 1303               	bcf	3,6	;RP1=0, select bank0
  3908  01B7' 00A0'              	movwf	___lwmod@dividend+1
  3909  01B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  3910  01BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3911  01BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3912  01BF' 081D'              	movf	?___lwmod,w
  3913  01C0' 1683               	bsf	3,5	;RP0=1, select bank1
  3914  01C1' 1303               	bcf	3,6	;RP1=0, select bank1
  3915  01C2' 0080'              	movwf	(??_fround+2)^(0+128)
  3916  01C3' 3001               	movlw	1
  3917  01C4'                    u6945:
  3918  01C4' 1003               	clrc
  3919  01C5' 0D80'              	rlf	(??_fround+2)^(0+128),f
  3920  01C6' 3EFF               	addlw	-1
  3921  01C7' 1D03               	skipz
  3922  01C8' 2800'              	goto	u6945
  3923  01C9' 1003               	clrc
  3924  01CA' 0D00'              	rlf	(??_fround+2)^(0+128),w
  3925  01CB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3926  01CC' 0084               	movwf	4
  3927  01CD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3928  01D2' 0080'              	movwf	(??_fround+3)^(0+128)
  3929  01D3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3930  01D8' 0081'              	movwf	((??_fround+3)^(0+128)+1)
  3931  01D9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3932  01DE' 0082'              	movwf	((??_fround+3)^(0+128)+2)
  3933  01DF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3934  01E4' 0083'              	movwf	((??_fround+3)^(0+128)+3)
  3935  01E5' 0800'              	movf	(??_fround+6)^(0+128),w
  3936  01E6' 0080'              	movwf	(___flmul@b+3)^(0+128)
  3937  01E7' 0800'              	movf	(??_fround+5)^(0+128),w
  3938  01E8' 0080'              	movwf	(___flmul@b+2)^(0+128)
  3939  01E9' 0800'              	movf	(??_fround+4)^(0+128),w
  3940  01EA' 0080'              	movwf	(___flmul@b+1)^(0+128)
  3941  01EB' 0800'              	movf	(??_fround+3)^(0+128),w
  3942  01EC' 0080'              	movwf	___flmul@b^(0+128)
  3943  01ED' 0800'              	movf	(_fround$818+3)^(0+128),w
  3944  01EE' 0080'              	movwf	(___flmul@a+3)^(0+128)
  3945  01EF' 0800'              	movf	(_fround$818+2)^(0+128),w
  3946  01F0' 0080'              	movwf	(___flmul@a+2)^(0+128)
  3947  01F1' 0800'              	movf	(_fround$818+1)^(0+128),w
  3948  01F2' 0080'              	movwf	(___flmul@a+1)^(0+128)
  3949  01F3' 0800'              	movf	_fround$818^(0+128),w
  3950  01F4' 0080'              	movwf	___flmul@a^(0+128)
  3951  01F5' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3952  01FA' 1683               	bsf	3,5	;RP0=1, select bank1
  3953  01FB' 1303               	bcf	3,6	;RP1=0, select bank1
  3954  01FC' 0800'              	movf	(?___flmul+3)^(0+128),w
  3955  01FD' 0080'              	movwf	(?_fround+3)^(0+128)
  3956  01FE' 0800'              	movf	(?___flmul+2)^(0+128),w
  3957  01FF' 0080'              	movwf	(?_fround+2)^(0+128)
  3958  0200' 0800'              	movf	(?___flmul+1)^(0+128),w
  3959  0201' 0080'              	movwf	(?_fround+1)^(0+128)
  3960  0202' 0800'              	movf	?___flmul^(0+128),w
  3961  0203' 0080'              	movwf	?_fround^(0+128)
  3962  0204' 2800'              	goto	l219
  3963  0205'                    l3779:
  3964                           
  3965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3966  0205' 303F               	movlw	63
  3967  0206' 0080'              	movwf	(___flmul@b+3)^(0+128)
  3968  0207' 3000               	movlw	0
  3969  0208' 0080'              	movwf	(___flmul@b+2)^(0+128)
  3970  0209' 3000               	movlw	0
  3971  020A' 0080'              	movwf	(___flmul@b+1)^(0+128)
  3972  020B' 3000               	movlw	0
  3973  020C' 0080'              	movwf	___flmul@b^(0+128)
  3974  020D' 0800'              	movf	fround@prec^(0+128),w
  3975  020E' 0080'              	movwf	??_fround^(0+128)
  3976  020F' 3001               	movlw	1
  3977  0210'                    u6955:
  3978  0210' 1003               	clrc
  3979  0211' 0D80'              	rlf	??_fround^(0+128),f
  3980  0212' 3EFF               	addlw	-1
  3981  0213' 1D03               	skipz
  3982  0214' 2800'              	goto	u6955
  3983  0215' 1003               	clrc
  3984  0216' 0D00'              	rlf	??_fround^(0+128),w
  3985  0217' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3986  0218' 0084               	movwf	4
  3987  0219' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3988  021E' 0080'              	movwf	(??_fround+1)^(0+128)
  3989  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3990  0224' 0081'              	movwf	((??_fround+1)^(0+128)+1)
  3991  0225' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3992  022A' 0082'              	movwf	((??_fround+1)^(0+128)+2)
  3993  022B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3994  0230' 0083'              	movwf	((??_fround+1)^(0+128)+3)
  3995  0231' 0800'              	movf	(??_fround+4)^(0+128),w
  3996  0232' 0080'              	movwf	(___flmul@a+3)^(0+128)
  3997  0233' 0800'              	movf	(??_fround+3)^(0+128),w
  3998  0234' 0080'              	movwf	(___flmul@a+2)^(0+128)
  3999  0235' 0800'              	movf	(??_fround+2)^(0+128),w
  4000  0236' 0080'              	movwf	(___flmul@a+1)^(0+128)
  4001  0237' 0800'              	movf	(??_fround+1)^(0+128),w
  4002  0238' 0080'              	movwf	___flmul@a^(0+128)
  4003  0239' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4004  023E' 1683               	bsf	3,5	;RP0=1, select bank1
  4005  023F' 1303               	bcf	3,6	;RP1=0, select bank1
  4006  0240' 0800'              	movf	(?___flmul+3)^(0+128),w
  4007  0241' 0080'              	movwf	(?_fround+3)^(0+128)
  4008  0242' 0800'              	movf	(?___flmul+2)^(0+128),w
  4009  0243' 0080'              	movwf	(?_fround+2)^(0+128)
  4010  0244' 0800'              	movf	(?___flmul+1)^(0+128),w
  4011  0245' 0080'              	movwf	(?_fround+1)^(0+128)
  4012  0246' 0800'              	movf	?___flmul^(0+128),w
  4013  0247' 0080'              	movwf	?_fround^(0+128)
  4014  0248'                    l219:
  4015  0248' 0008               	return
  4016  0249'                    __end_of_fround:
  4017                           
  4018                           	psect	text6
  4019  0000'                    __ptext6:	
  4020 ;; *************** function ___lwmod *****************
  4021 ;; Defined at:
  4022 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  divisor         2   29[BANK0 ] unsigned int 
  4025 ;;  dividend        2   31[BANK0 ] unsigned int 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  counter         1   34[BANK0 ] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  2   29[BANK0 ] unsigned int 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       4       0       0       0
  4038 ;;      Locals:         0       1       0       0       0
  4039 ;;      Temps:          0       1       0       0       0
  4040 ;;      Totals:         0       6       0       0       0
  4041 ;;Total ram usage:        6 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 3
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_fround
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051  0000'                    ___lwmod:	
  4052                           ;psect for function ___lwmod
  4053                           
  4054  0000'                    l2413:	
  4055                           ;incstack = 0
  4056                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4057                           
  4058  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4059  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4060  0002' 081D'              	movf	___lwmod@divisor,w
  4061  0003' 041E'              	iorwf	___lwmod@divisor+1,w
  4062  0004' 1903               	btfsc	3,2
  4063  0005' 2800'              	goto	u3641
  4064  0006' 2800'              	goto	u3640
  4065  0007'                    u3641:
  4066  0007' 2800'              	goto	l2431
  4067  0008'                    u3640:
  4068  0008'                    l2415:
  4069  0008' 01A2'              	clrf	___lwmod@counter
  4070  0009' 0AA2'              	incf	___lwmod@counter,f
  4071  000A' 2800'              	goto	l2421
  4072  000B'                    l2417:
  4073  000B' 3001               	movlw	1
  4074  000C'                    u3655:
  4075  000C' 1003               	clrc
  4076  000D' 0D9D'              	rlf	___lwmod@divisor,f
  4077  000E' 0D9E'              	rlf	___lwmod@divisor+1,f
  4078  000F' 3EFF               	addlw	-1
  4079  0010' 1D03               	skipz
  4080  0011' 2800'              	goto	u3655
  4081  0012'                    l2419:
  4082  0012' 3001               	movlw	1
  4083  0013' 00A1'              	movwf	??___lwmod
  4084  0014' 0821'              	movf	??___lwmod,w
  4085  0015' 07A2'              	addwf	___lwmod@counter,f
  4086  0016'                    l2421:
  4087  0016' 1F9E'              	btfss	___lwmod@divisor+1,7
  4088  0017' 2800'              	goto	u3661
  4089  0018' 2800'              	goto	u3660
  4090  0019'                    u3661:
  4091  0019' 2800'              	goto	l2417
  4092  001A'                    u3660:
  4093  001A'                    l2423:
  4094  001A' 081E'              	movf	___lwmod@divisor+1,w
  4095  001B' 0220'              	subwf	___lwmod@dividend+1,w
  4096  001C' 1D03               	skipz
  4097  001D' 2800'              	goto	u3675
  4098  001E' 081D'              	movf	___lwmod@divisor,w
  4099  001F' 021F'              	subwf	___lwmod@dividend,w
  4100  0020'                    u3675:
  4101  0020' 1C03               	skipc
  4102  0021' 2800'              	goto	u3671
  4103  0022' 2800'              	goto	u3670
  4104  0023'                    u3671:
  4105  0023' 2800'              	goto	l2427
  4106  0024'                    u3670:
  4107  0024'                    l2425:
  4108  0024' 081D'              	movf	___lwmod@divisor,w
  4109  0025' 029F'              	subwf	___lwmod@dividend,f
  4110  0026' 081E'              	movf	___lwmod@divisor+1,w
  4111  0027' 1C03               	skipc
  4112  0028' 03A0'              	decf	___lwmod@dividend+1,f
  4113  0029' 02A0'              	subwf	___lwmod@dividend+1,f
  4114  002A'                    l2427:
  4115  002A' 3001               	movlw	1
  4116  002B'                    u3685:
  4117  002B' 1003               	clrc
  4118  002C' 0C9E'              	rrf	___lwmod@divisor+1,f
  4119  002D' 0C9D'              	rrf	___lwmod@divisor,f
  4120  002E' 3EFF               	addlw	-1
  4121  002F' 1D03               	skipz
  4122  0030' 2800'              	goto	u3685
  4123  0031'                    l2429:
  4124  0031' 3001               	movlw	1
  4125  0032' 02A2'              	subwf	___lwmod@counter,f
  4126  0033' 1D03               	btfss	3,2
  4127  0034' 2800'              	goto	u3691
  4128  0035' 2800'              	goto	u3690
  4129  0036'                    u3691:
  4130  0036' 2800'              	goto	l2423
  4131  0037'                    u3690:
  4132  0037'                    l2431:
  4133  0037' 0820'              	movf	___lwmod@dividend+1,w
  4134  0038' 009E'              	movwf	?___lwmod+1
  4135  0039' 081F'              	movf	___lwmod@dividend,w
  4136  003A' 009D'              	movwf	?___lwmod
  4137  003B'                    l609:
  4138  003B' 0008               	return
  4139  003C'                    __end_of___lwmod:
  4140                           
  4141                           	psect	text7
  4142  0000'                    __ptext7:	
  4143 ;; *************** function ___lwdiv *****************
  4144 ;; Defined at:
  4145 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  divisor         2   35[BANK0 ] unsigned int 
  4148 ;;  dividend        2   37[BANK0 ] unsigned int 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  quotient        2   40[BANK0 ] unsigned int 
  4151 ;;  counter         1   42[BANK0 ] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  2   35[BANK0 ] unsigned int 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4161 ;;      Params:         0       4       0       0       0
  4162 ;;      Locals:         0       3       0       0       0
  4163 ;;      Temps:          0       1       0       0       0
  4164 ;;      Totals:         0       8       0       0       0
  4165 ;;Total ram usage:        8 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 3
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_fround
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175  0000'                    ___lwdiv:	
  4176                           ;psect for function ___lwdiv
  4177                           
  4178  0000'                    l2387:	
  4179                           ;incstack = 0
  4180                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4181                           
  4182  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4183  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4184  0002' 01A8'              	clrf	___lwdiv@quotient
  4185  0003' 01A9'              	clrf	___lwdiv@quotient+1
  4186  0004'                    l2389:
  4187  0004' 0823'              	movf	___lwdiv@divisor,w
  4188  0005' 0424'              	iorwf	___lwdiv@divisor+1,w
  4189  0006' 1903               	btfsc	3,2
  4190  0007' 2800'              	goto	u3571
  4191  0008' 2800'              	goto	u3570
  4192  0009'                    u3571:
  4193  0009' 2800'              	goto	l2409
  4194  000A'                    u3570:
  4195  000A'                    l2391:
  4196  000A' 01AA'              	clrf	___lwdiv@counter
  4197  000B' 0AAA'              	incf	___lwdiv@counter,f
  4198  000C' 2800'              	goto	l2397
  4199  000D'                    l2393:
  4200  000D' 3001               	movlw	1
  4201  000E'                    u3585:
  4202  000E' 1003               	clrc
  4203  000F' 0DA3'              	rlf	___lwdiv@divisor,f
  4204  0010' 0DA4'              	rlf	___lwdiv@divisor+1,f
  4205  0011' 3EFF               	addlw	-1
  4206  0012' 1D03               	skipz
  4207  0013' 2800'              	goto	u3585
  4208  0014'                    l2395:
  4209  0014' 3001               	movlw	1
  4210  0015' 00A7'              	movwf	??___lwdiv
  4211  0016' 0827'              	movf	??___lwdiv,w
  4212  0017' 07AA'              	addwf	___lwdiv@counter,f
  4213  0018'                    l2397:
  4214  0018' 1FA4'              	btfss	___lwdiv@divisor+1,7
  4215  0019' 2800'              	goto	u3591
  4216  001A' 2800'              	goto	u3590
  4217  001B'                    u3591:
  4218  001B' 2800'              	goto	l2393
  4219  001C'                    u3590:
  4220  001C'                    l2399:
  4221  001C' 3001               	movlw	1
  4222  001D'                    u3605:
  4223  001D' 1003               	clrc
  4224  001E' 0DA8'              	rlf	___lwdiv@quotient,f
  4225  001F' 0DA9'              	rlf	___lwdiv@quotient+1,f
  4226  0020' 3EFF               	addlw	-1
  4227  0021' 1D03               	skipz
  4228  0022' 2800'              	goto	u3605
  4229  0023' 0824'              	movf	___lwdiv@divisor+1,w
  4230  0024' 0226'              	subwf	___lwdiv@dividend+1,w
  4231  0025' 1D03               	skipz
  4232  0026' 2800'              	goto	u3615
  4233  0027' 0823'              	movf	___lwdiv@divisor,w
  4234  0028' 0225'              	subwf	___lwdiv@dividend,w
  4235  0029'                    u3615:
  4236  0029' 1C03               	skipc
  4237  002A' 2800'              	goto	u3611
  4238  002B' 2800'              	goto	u3610
  4239  002C'                    u3611:
  4240  002C' 2800'              	goto	l2405
  4241  002D'                    u3610:
  4242  002D'                    l2401:
  4243  002D' 0823'              	movf	___lwdiv@divisor,w
  4244  002E' 02A5'              	subwf	___lwdiv@dividend,f
  4245  002F' 0824'              	movf	___lwdiv@divisor+1,w
  4246  0030' 1C03               	skipc
  4247  0031' 03A6'              	decf	___lwdiv@dividend+1,f
  4248  0032' 02A6'              	subwf	___lwdiv@dividend+1,f
  4249  0033'                    l2403:
  4250  0033' 1428'              	bsf	___lwdiv@quotient,0
  4251  0034'                    l2405:
  4252  0034' 3001               	movlw	1
  4253  0035'                    u3625:
  4254  0035' 1003               	clrc
  4255  0036' 0CA4'              	rrf	___lwdiv@divisor+1,f
  4256  0037' 0CA3'              	rrf	___lwdiv@divisor,f
  4257  0038' 3EFF               	addlw	-1
  4258  0039' 1D03               	skipz
  4259  003A' 2800'              	goto	u3625
  4260  003B'                    l2407:
  4261  003B' 3001               	movlw	1
  4262  003C' 02AA'              	subwf	___lwdiv@counter,f
  4263  003D' 1D03               	btfss	3,2
  4264  003E' 2800'              	goto	u3631
  4265  003F' 2800'              	goto	u3630
  4266  0040'                    u3631:
  4267  0040' 2800'              	goto	l2399
  4268  0041'                    u3630:
  4269  0041'                    l2409:
  4270  0041' 0829'              	movf	___lwdiv@quotient+1,w
  4271  0042' 00A4'              	movwf	?___lwdiv+1
  4272  0043' 0828'              	movf	___lwdiv@quotient,w
  4273  0044' 00A3'              	movwf	?___lwdiv
  4274  0045'                    l599:
  4275  0045' 0008               	return
  4276  0046'                    __end_of___lwdiv:
  4277                           
  4278                           	psect	text8
  4279  0000'                    __ptext8:	
  4280 ;; *************** function ___flmul *****************
  4281 ;; Defined at:
  4282 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  b               4    0[BANK1 ] unsigned int 
  4285 ;;  a               4    4[BANK1 ] unsigned int 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  prod            4   20[BANK1 ] struct .
  4288 ;;  grs             4   15[BANK1 ] unsigned long 
  4289 ;;  temp            2   24[BANK1 ] struct .
  4290 ;;  bexp            1   19[BANK1 ] unsigned char 
  4291 ;;  aexp            1   14[BANK1 ] unsigned char 
  4292 ;;  sign            1   13[BANK1 ] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  4    0[BANK1 ] unsigned char 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         0       0       8       0       0
  4303 ;;      Locals:         0       0      13       0       0
  4304 ;;      Temps:          0       0       5       0       0
  4305 ;;      Totals:         0       0      26       0       0
  4306 ;;Total ram usage:       26 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 4
  4309 ;; This function calls:
  4310 ;;		__Umul8_16
  4311 ;; This function is called by:
  4312 ;;		_fround
  4313 ;;		_scale
  4314 ;;		_sprintf
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318  0000'                    ___flmul:	
  4319                           ;psect for function ___flmul
  4320                           
  4321  0000'                    l3625:	
  4322                           ;incstack = 0
  4323                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4324                           
  4325  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  4326  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  4327  0002' 0803'              	movf	(___flmul@b^(0+128)+3),w
  4328  0003' 3980               	andlw	128
  4329  0004' 0080'              	movwf	??___flmul^(0+128)
  4330  0005' 0800'              	movf	??___flmul^(0+128),w
  4331  0006' 0080'              	movwf	___flmul@sign^(0+128)
  4332  0007'                    l3627:
  4333  0007' 0803'              	movf	(___flmul@b^(0+128)+3),w
  4334  0008' 0080'              	movwf	??___flmul^(0+128)
  4335  0009' 0700'              	addwf	??___flmul^(0+128),w
  4336  000A' 0080'              	movwf	(??___flmul+1)^(0+128)
  4337  000B' 0800'              	movf	(??___flmul+1)^(0+128),w
  4338  000C' 0080'              	movwf	___flmul@bexp^(0+128)
  4339  000D'                    l3629:
  4340  000D' 1F82'              	btfss	(___flmul@b^(0+128)+2),7
  4341  000E' 2800'              	goto	u6511
  4342  000F' 2800'              	goto	u6510
  4343  0010'                    u6511:
  4344  0010' 2800'              	goto	l3633
  4345  0011'                    u6510:
  4346  0011'                    l3631:
  4347  0011' 1400'              	bsf	___flmul@bexp^(0+128),0
  4348  0012'                    l3633:
  4349  0012' 0800'              	movf	___flmul@bexp^(0+128),w
  4350  0013' 1903               	btfsc	3,2
  4351  0014' 2800'              	goto	u6521
  4352  0015' 2800'              	goto	u6520
  4353  0016'                    u6521:
  4354  0016' 2800'              	goto	l3641
  4355  0017'                    u6520:
  4356  0017'                    l3635:
  4357  0017' 0A00'              	incf	___flmul@bexp^(0+128),w
  4358  0018' 1D03               	btfss	3,2
  4359  0019' 2800'              	goto	u6531
  4360  001A' 2800'              	goto	u6530
  4361  001B'                    u6531:
  4362  001B' 2800'              	goto	l3639
  4363  001C'                    u6530:
  4364  001C'                    l3637:
  4365  001C' 3000               	movlw	0
  4366  001D' 0080'              	movwf	(___flmul@b+3)^(0+128)
  4367  001E' 3000               	movlw	0
  4368  001F' 0080'              	movwf	(___flmul@b+2)^(0+128)
  4369  0020' 3000               	movlw	0
  4370  0021' 0080'              	movwf	(___flmul@b+1)^(0+128)
  4371  0022' 3000               	movlw	0
  4372  0023' 0080'              	movwf	___flmul@b^(0+128)
  4373  0024'                    l3639:
  4374  0024' 1782'              	bsf	(___flmul@b^(0+128)+2),7
  4375  0025' 2800'              	goto	l3643
  4376  0026'                    l3641:
  4377  0026' 3000               	movlw	0
  4378  0027' 0080'              	movwf	(___flmul@b+3)^(0+128)
  4379  0028' 3000               	movlw	0
  4380  0029' 0080'              	movwf	(___flmul@b+2)^(0+128)
  4381  002A' 3000               	movlw	0
  4382  002B' 0080'              	movwf	(___flmul@b+1)^(0+128)
  4383  002C' 3000               	movlw	0
  4384  002D' 0080'              	movwf	___flmul@b^(0+128)
  4385  002E'                    l3643:
  4386  002E' 0803'              	movf	(___flmul@a^(0+128)+3),w
  4387  002F' 3980               	andlw	128
  4388  0030' 0080'              	movwf	??___flmul^(0+128)
  4389  0031' 0800'              	movf	??___flmul^(0+128),w
  4390  0032' 0680'              	xorwf	___flmul@sign^(0+128),f
  4391  0033'                    l3645:
  4392  0033' 0803'              	movf	(___flmul@a^(0+128)+3),w
  4393  0034' 0080'              	movwf	??___flmul^(0+128)
  4394  0035' 0700'              	addwf	??___flmul^(0+128),w
  4395  0036' 0080'              	movwf	(??___flmul+1)^(0+128)
  4396  0037' 0800'              	movf	(??___flmul+1)^(0+128),w
  4397  0038' 0080'              	movwf	___flmul@aexp^(0+128)
  4398  0039'                    l3647:
  4399  0039' 1F82'              	btfss	(___flmul@a^(0+128)+2),7
  4400  003A' 2800'              	goto	u6541
  4401  003B' 2800'              	goto	u6540
  4402  003C'                    u6541:
  4403  003C' 2800'              	goto	l3651
  4404  003D'                    u6540:
  4405  003D'                    l3649:
  4406  003D' 1400'              	bsf	___flmul@aexp^(0+128),0
  4407  003E'                    l3651:
  4408  003E' 0800'              	movf	___flmul@aexp^(0+128),w
  4409  003F' 1903               	btfsc	3,2
  4410  0040' 2800'              	goto	u6551
  4411  0041' 2800'              	goto	u6550
  4412  0042'                    u6551:
  4413  0042' 2800'              	goto	l3659
  4414  0043'                    u6550:
  4415  0043'                    l3653:
  4416  0043' 0A00'              	incf	___flmul@aexp^(0+128),w
  4417  0044' 1D03               	btfss	3,2
  4418  0045' 2800'              	goto	u6561
  4419  0046' 2800'              	goto	u6560
  4420  0047'                    u6561:
  4421  0047' 2800'              	goto	l3657
  4422  0048'                    u6560:
  4423  0048'                    l3655:
  4424  0048' 3000               	movlw	0
  4425  0049' 0080'              	movwf	(___flmul@a+3)^(0+128)
  4426  004A' 3000               	movlw	0
  4427  004B' 0080'              	movwf	(___flmul@a+2)^(0+128)
  4428  004C' 3000               	movlw	0
  4429  004D' 0080'              	movwf	(___flmul@a+1)^(0+128)
  4430  004E' 3000               	movlw	0
  4431  004F' 0080'              	movwf	___flmul@a^(0+128)
  4432  0050'                    l3657:
  4433  0050' 1782'              	bsf	(___flmul@a^(0+128)+2),7
  4434  0051' 2800'              	goto	l3661
  4435  0052'                    l3659:
  4436  0052' 3000               	movlw	0
  4437  0053' 0080'              	movwf	(___flmul@a+3)^(0+128)
  4438  0054' 3000               	movlw	0
  4439  0055' 0080'              	movwf	(___flmul@a+2)^(0+128)
  4440  0056' 3000               	movlw	0
  4441  0057' 0080'              	movwf	(___flmul@a+1)^(0+128)
  4442  0058' 3000               	movlw	0
  4443  0059' 0080'              	movwf	___flmul@a^(0+128)
  4444  005A'                    l3661:
  4445  005A' 0800'              	movf	___flmul@aexp^(0+128),w
  4446  005B' 1903               	btfsc	3,2
  4447  005C' 2800'              	goto	u6571
  4448  005D' 2800'              	goto	u6570
  4449  005E'                    u6571:
  4450  005E' 2800'              	goto	l3665
  4451  005F'                    u6570:
  4452  005F'                    l3663:
  4453  005F' 0800'              	movf	___flmul@bexp^(0+128),w
  4454  0060' 1D03               	btfss	3,2
  4455  0061' 2800'              	goto	u6581
  4456  0062' 2800'              	goto	u6580
  4457  0063'                    u6581:
  4458  0063' 2800'              	goto	l3669
  4459  0064'                    u6580:
  4460  0064'                    l3665:
  4461  0064' 3000               	movlw	0
  4462  0065' 0080'              	movwf	(?___flmul+3)^(0+128)
  4463  0066' 3000               	movlw	0
  4464  0067' 0080'              	movwf	(?___flmul+2)^(0+128)
  4465  0068' 3000               	movlw	0
  4466  0069' 0080'              	movwf	(?___flmul+1)^(0+128)
  4467  006A' 3000               	movlw	0
  4468  006B' 0080'              	movwf	?___flmul^(0+128)
  4469  006C' 2800'              	goto	l716
  4470  006D'                    l3669:
  4471  006D' 0800'              	movf	___flmul@b^(0+128),w
  4472  006E' 0080'              	movwf	??___flmul^(0+128)
  4473  006F' 0800'              	movf	??___flmul^(0+128),w
  4474  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  4475  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  4476  0072' 009D'              	movwf	__Umul8_16@multiplicand
  4477  0073' 1683               	bsf	3,5	;RP0=1, select bank1
  4478  0074' 1303               	bcf	3,6	;RP1=0, select bank1
  4479  0075' 0802'              	movf	(___flmul@a^(0+128)+2),w
  4480  0076' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4481  007B' 1283               	bcf	3,5	;RP0=0, select bank0
  4482  007C' 1303               	bcf	3,6	;RP1=0, select bank0
  4483  007D' 081E'              	movf	?__Umul8_16+1,w
  4484  007E' 1683               	bsf	3,5	;RP0=1, select bank1
  4485  007F' 1303               	bcf	3,6	;RP1=0, select bank1
  4486  0080' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4487  0081' 1283               	bcf	3,5	;RP0=0, select bank0
  4488  0082' 1303               	bcf	3,6	;RP1=0, select bank0
  4489  0083' 081D'              	movf	?__Umul8_16,w
  4490  0084' 1683               	bsf	3,5	;RP0=1, select bank1
  4491  0085' 1303               	bcf	3,6	;RP1=0, select bank1
  4492  0086' 0080'              	movwf	___flmul@temp^(0+128)
  4493  0087'                    l3671:
  4494  0087' 0800'              	movf	___flmul@temp^(0+128),w
  4495  0088' 0080'              	movwf	??___flmul^(0+128)
  4496  0089' 0181'              	clrf	(??___flmul^(0+128)+1)
  4497  008A' 0182'              	clrf	(??___flmul^(0+128)+2)
  4498  008B' 0183'              	clrf	(??___flmul^(0+128)+3)
  4499  008C' 0800'              	movf	(??___flmul+3)^(0+128),w
  4500  008D' 0080'              	movwf	(___flmul@grs+3)^(0+128)
  4501  008E' 0800'              	movf	(??___flmul+2)^(0+128),w
  4502  008F' 0080'              	movwf	(___flmul@grs+2)^(0+128)
  4503  0090' 0800'              	movf	(??___flmul+1)^(0+128),w
  4504  0091' 0080'              	movwf	(___flmul@grs+1)^(0+128)
  4505  0092' 0800'              	movf	??___flmul^(0+128),w
  4506  0093' 0080'              	movwf	___flmul@grs^(0+128)
  4507  0094'                    l3673:
  4508  0094' 0801'              	movf	(___flmul@temp^(0+128)+1),w
  4509  0095' 0080'              	movwf	??___flmul^(0+128)
  4510  0096' 0181'              	clrf	(??___flmul^(0+128)+1)
  4511  0097' 0182'              	clrf	(??___flmul^(0+128)+2)
  4512  0098' 0183'              	clrf	(??___flmul^(0+128)+3)
  4513  0099' 0800'              	movf	(??___flmul+3)^(0+128),w
  4514  009A' 0080'              	movwf	(___flmul@prod+3)^(0+128)
  4515  009B' 0800'              	movf	(??___flmul+2)^(0+128),w
  4516  009C' 0080'              	movwf	(___flmul@prod+2)^(0+128)
  4517  009D' 0800'              	movf	(??___flmul+1)^(0+128),w
  4518  009E' 0080'              	movwf	(___flmul@prod+1)^(0+128)
  4519  009F' 0800'              	movf	??___flmul^(0+128),w
  4520  00A0' 0080'              	movwf	___flmul@prod^(0+128)
  4521  00A1' 0801'              	movf	(___flmul@b^(0+128)+1),w
  4522  00A2' 0080'              	movwf	??___flmul^(0+128)
  4523  00A3' 0800'              	movf	??___flmul^(0+128),w
  4524  00A4' 1283               	bcf	3,5	;RP0=0, select bank0
  4525  00A5' 1303               	bcf	3,6	;RP1=0, select bank0
  4526  00A6' 009D'              	movwf	__Umul8_16@multiplicand
  4527  00A7' 1683               	bsf	3,5	;RP0=1, select bank1
  4528  00A8' 1303               	bcf	3,6	;RP1=0, select bank1
  4529  00A9' 0801'              	movf	(___flmul@a^(0+128)+1),w
  4530  00AA' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4531  00AF' 1283               	bcf	3,5	;RP0=0, select bank0
  4532  00B0' 1303               	bcf	3,6	;RP1=0, select bank0
  4533  00B1' 081E'              	movf	?__Umul8_16+1,w
  4534  00B2' 1683               	bsf	3,5	;RP0=1, select bank1
  4535  00B3' 1303               	bcf	3,6	;RP1=0, select bank1
  4536  00B4' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4537  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  4538  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  4539  00B7' 081D'              	movf	?__Umul8_16,w
  4540  00B8' 1683               	bsf	3,5	;RP0=1, select bank1
  4541  00B9' 1303               	bcf	3,6	;RP1=0, select bank1
  4542  00BA' 0080'              	movwf	___flmul@temp^(0+128)
  4543  00BB'                    l3675:
  4544  00BB' 0800'              	movf	___flmul@temp^(0+128),w
  4545  00BC' 0080'              	movwf	??___flmul^(0+128)
  4546  00BD' 0181'              	clrf	(??___flmul^(0+128)+1)
  4547  00BE' 0182'              	clrf	(??___flmul^(0+128)+2)
  4548  00BF' 0183'              	clrf	(??___flmul^(0+128)+3)
  4549  00C0' 0800'              	movf	??___flmul^(0+128),w
  4550  00C1' 0780'              	addwf	___flmul@grs^(0+128),f
  4551  00C2' 0800'              	movf	(??___flmul+1)^(0+128),w
  4552  00C3' 1103               	clrz
  4553  00C4' 1803               	skipnc
  4554  00C5' 3E01               	addlw	1
  4555  00C6' 1903               	skipnz
  4556  00C7' 2800'              	goto	u6591
  4557  00C8' 0780'              	addwf	(___flmul@grs+1)^(0+128),f
  4558  00C9'                    u6591:
  4559  00C9' 0800'              	movf	(??___flmul+2)^(0+128),w
  4560  00CA' 1103               	clrz
  4561  00CB' 1803               	skipnc
  4562  00CC' 3E01               	addlw	1
  4563  00CD' 1903               	skipnz
  4564  00CE' 2800'              	goto	u6592
  4565  00CF' 0780'              	addwf	(___flmul@grs+2)^(0+128),f
  4566  00D0'                    u6592:
  4567  00D0' 0800'              	movf	(??___flmul+3)^(0+128),w
  4568  00D1' 1103               	clrz
  4569  00D2' 1803               	skipnc
  4570  00D3' 3E01               	addlw	1
  4571  00D4' 1903               	skipnz
  4572  00D5' 2800'              	goto	u6593
  4573  00D6' 0780'              	addwf	(___flmul@grs+3)^(0+128),f
  4574  00D7'                    u6593:
  4575  00D7'                    l3677:
  4576  00D7' 0801'              	movf	(___flmul@temp^(0+128)+1),w
  4577  00D8' 0080'              	movwf	??___flmul^(0+128)
  4578  00D9' 0181'              	clrf	(??___flmul^(0+128)+1)
  4579  00DA' 0182'              	clrf	(??___flmul^(0+128)+2)
  4580  00DB' 0183'              	clrf	(??___flmul^(0+128)+3)
  4581  00DC' 0800'              	movf	??___flmul^(0+128),w
  4582  00DD' 0780'              	addwf	___flmul@prod^(0+128),f
  4583  00DE' 0800'              	movf	(??___flmul+1)^(0+128),w
  4584  00DF' 1103               	clrz
  4585  00E0' 1803               	skipnc
  4586  00E1' 3E01               	addlw	1
  4587  00E2' 1903               	skipnz
  4588  00E3' 2800'              	goto	u6601
  4589  00E4' 0780'              	addwf	(___flmul@prod+1)^(0+128),f
  4590  00E5'                    u6601:
  4591  00E5' 0800'              	movf	(??___flmul+2)^(0+128),w
  4592  00E6' 1103               	clrz
  4593  00E7' 1803               	skipnc
  4594  00E8' 3E01               	addlw	1
  4595  00E9' 1903               	skipnz
  4596  00EA' 2800'              	goto	u6602
  4597  00EB' 0780'              	addwf	(___flmul@prod+2)^(0+128),f
  4598  00EC'                    u6602:
  4599  00EC' 0800'              	movf	(??___flmul+3)^(0+128),w
  4600  00ED' 1103               	clrz
  4601  00EE' 1803               	skipnc
  4602  00EF' 3E01               	addlw	1
  4603  00F0' 1903               	skipnz
  4604  00F1' 2800'              	goto	u6603
  4605  00F2' 0780'              	addwf	(___flmul@prod+3)^(0+128),f
  4606  00F3'                    u6603:
  4607  00F3' 0802'              	movf	(___flmul@b^(0+128)+2),w
  4608  00F4' 0080'              	movwf	??___flmul^(0+128)
  4609  00F5' 0800'              	movf	??___flmul^(0+128),w
  4610  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
  4611  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
  4612  00F8' 009D'              	movwf	__Umul8_16@multiplicand
  4613  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
  4614  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
  4615  00FB' 0800'              	movf	___flmul@a^(0+128),w
  4616  00FC' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4617  0101' 1283               	bcf	3,5	;RP0=0, select bank0
  4618  0102' 1303               	bcf	3,6	;RP1=0, select bank0
  4619  0103' 081E'              	movf	?__Umul8_16+1,w
  4620  0104' 1683               	bsf	3,5	;RP0=1, select bank1
  4621  0105' 1303               	bcf	3,6	;RP1=0, select bank1
  4622  0106' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4623  0107' 1283               	bcf	3,5	;RP0=0, select bank0
  4624  0108' 1303               	bcf	3,6	;RP1=0, select bank0
  4625  0109' 081D'              	movf	?__Umul8_16,w
  4626  010A' 1683               	bsf	3,5	;RP0=1, select bank1
  4627  010B' 1303               	bcf	3,6	;RP1=0, select bank1
  4628  010C' 0080'              	movwf	___flmul@temp^(0+128)
  4629  010D'                    l3679:
  4630  010D' 0800'              	movf	___flmul@temp^(0+128),w
  4631  010E' 0080'              	movwf	??___flmul^(0+128)
  4632  010F' 0181'              	clrf	(??___flmul^(0+128)+1)
  4633  0110' 0182'              	clrf	(??___flmul^(0+128)+2)
  4634  0111' 0183'              	clrf	(??___flmul^(0+128)+3)
  4635  0112' 0800'              	movf	??___flmul^(0+128),w
  4636  0113' 0780'              	addwf	___flmul@grs^(0+128),f
  4637  0114' 0800'              	movf	(??___flmul+1)^(0+128),w
  4638  0115' 1103               	clrz
  4639  0116' 1803               	skipnc
  4640  0117' 3E01               	addlw	1
  4641  0118' 1903               	skipnz
  4642  0119' 2800'              	goto	u6611
  4643  011A' 0780'              	addwf	(___flmul@grs+1)^(0+128),f
  4644  011B'                    u6611:
  4645  011B' 0800'              	movf	(??___flmul+2)^(0+128),w
  4646  011C' 1103               	clrz
  4647  011D' 1803               	skipnc
  4648  011E' 3E01               	addlw	1
  4649  011F' 1903               	skipnz
  4650  0120' 2800'              	goto	u6612
  4651  0121' 0780'              	addwf	(___flmul@grs+2)^(0+128),f
  4652  0122'                    u6612:
  4653  0122' 0800'              	movf	(??___flmul+3)^(0+128),w
  4654  0123' 1103               	clrz
  4655  0124' 1803               	skipnc
  4656  0125' 3E01               	addlw	1
  4657  0126' 1903               	skipnz
  4658  0127' 2800'              	goto	u6613
  4659  0128' 0780'              	addwf	(___flmul@grs+3)^(0+128),f
  4660  0129'                    u6613:
  4661  0129'                    l3681:
  4662  0129' 0801'              	movf	(___flmul@temp^(0+128)+1),w
  4663  012A' 0080'              	movwf	??___flmul^(0+128)
  4664  012B' 0181'              	clrf	(??___flmul^(0+128)+1)
  4665  012C' 0182'              	clrf	(??___flmul^(0+128)+2)
  4666  012D' 0183'              	clrf	(??___flmul^(0+128)+3)
  4667  012E' 0800'              	movf	??___flmul^(0+128),w
  4668  012F' 0780'              	addwf	___flmul@prod^(0+128),f
  4669  0130' 0800'              	movf	(??___flmul+1)^(0+128),w
  4670  0131' 1103               	clrz
  4671  0132' 1803               	skipnc
  4672  0133' 3E01               	addlw	1
  4673  0134' 1903               	skipnz
  4674  0135' 2800'              	goto	u6621
  4675  0136' 0780'              	addwf	(___flmul@prod+1)^(0+128),f
  4676  0137'                    u6621:
  4677  0137' 0800'              	movf	(??___flmul+2)^(0+128),w
  4678  0138' 1103               	clrz
  4679  0139' 1803               	skipnc
  4680  013A' 3E01               	addlw	1
  4681  013B' 1903               	skipnz
  4682  013C' 2800'              	goto	u6622
  4683  013D' 0780'              	addwf	(___flmul@prod+2)^(0+128),f
  4684  013E'                    u6622:
  4685  013E' 0800'              	movf	(??___flmul+3)^(0+128),w
  4686  013F' 1103               	clrz
  4687  0140' 1803               	skipnc
  4688  0141' 3E01               	addlw	1
  4689  0142' 1903               	skipnz
  4690  0143' 2800'              	goto	u6623
  4691  0144' 0780'              	addwf	(___flmul@prod+3)^(0+128),f
  4692  0145'                    u6623:
  4693  0145'                    l3683:
  4694  0145' 3008               	movlw	8
  4695  0146' 0080'              	movwf	??___flmul^(0+128)
  4696  0147'                    u6635:
  4697  0147' 1003               	clrc
  4698  0148' 0D80'              	rlf	___flmul@grs^(0+128),f
  4699  0149' 0D80'              	rlf	(___flmul@grs+1)^(0+128),f
  4700  014A' 0D80'              	rlf	(___flmul@grs+2)^(0+128),f
  4701  014B' 0D80'              	rlf	(___flmul@grs+3)^(0+128),f
  4702  014C' 0B80'              	decfsz	??___flmul^(0+128),f
  4703  014D' 2800'              	goto	u6635
  4704  014E'                    l3685:
  4705  014E' 0801'              	movf	(___flmul@b^(0+128)+1),w
  4706  014F' 0080'              	movwf	??___flmul^(0+128)
  4707  0150' 0800'              	movf	??___flmul^(0+128),w
  4708  0151' 1283               	bcf	3,5	;RP0=0, select bank0
  4709  0152' 1303               	bcf	3,6	;RP1=0, select bank0
  4710  0153' 009D'              	movwf	__Umul8_16@multiplicand
  4711  0154' 1683               	bsf	3,5	;RP0=1, select bank1
  4712  0155' 1303               	bcf	3,6	;RP1=0, select bank1
  4713  0156' 0800'              	movf	___flmul@a^(0+128),w
  4714  0157' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4715  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  4716  015D' 1303               	bcf	3,6	;RP1=0, select bank0
  4717  015E' 081E'              	movf	?__Umul8_16+1,w
  4718  015F' 1683               	bsf	3,5	;RP0=1, select bank1
  4719  0160' 1303               	bcf	3,6	;RP1=0, select bank1
  4720  0161' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4721  0162' 1283               	bcf	3,5	;RP0=0, select bank0
  4722  0163' 1303               	bcf	3,6	;RP1=0, select bank0
  4723  0164' 081D'              	movf	?__Umul8_16,w
  4724  0165' 1683               	bsf	3,5	;RP0=1, select bank1
  4725  0166' 1303               	bcf	3,6	;RP1=0, select bank1
  4726  0167' 0080'              	movwf	___flmul@temp^(0+128)
  4727  0168'                    l3687:
  4728  0168' 0800'              	movf	___flmul@temp^(0+128),w
  4729  0169' 0080'              	movwf	??___flmul^(0+128)
  4730  016A' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  4731  016B' 0081'              	movwf	(??___flmul^(0+128)+1)
  4732  016C' 0182'              	clrf	(??___flmul^(0+128)+2)
  4733  016D' 0183'              	clrf	(??___flmul^(0+128)+3)
  4734  016E' 0800'              	movf	??___flmul^(0+128),w
  4735  016F' 0780'              	addwf	___flmul@grs^(0+128),f
  4736  0170' 0800'              	movf	(??___flmul+1)^(0+128),w
  4737  0171' 1103               	clrz
  4738  0172' 1803               	skipnc
  4739  0173' 3E01               	addlw	1
  4740  0174' 1903               	skipnz
  4741  0175' 2800'              	goto	u6641
  4742  0176' 0780'              	addwf	(___flmul@grs+1)^(0+128),f
  4743  0177'                    u6641:
  4744  0177' 0800'              	movf	(??___flmul+2)^(0+128),w
  4745  0178' 1103               	clrz
  4746  0179' 1803               	skipnc
  4747  017A' 3E01               	addlw	1
  4748  017B' 1903               	skipnz
  4749  017C' 2800'              	goto	u6642
  4750  017D' 0780'              	addwf	(___flmul@grs+2)^(0+128),f
  4751  017E'                    u6642:
  4752  017E' 0800'              	movf	(??___flmul+3)^(0+128),w
  4753  017F' 1103               	clrz
  4754  0180' 1803               	skipnc
  4755  0181' 3E01               	addlw	1
  4756  0182' 1903               	skipnz
  4757  0183' 2800'              	goto	u6643
  4758  0184' 0780'              	addwf	(___flmul@grs+3)^(0+128),f
  4759  0185'                    u6643:
  4760  0185'                    l3689:
  4761  0185' 0800'              	movf	___flmul@b^(0+128),w
  4762  0186' 0080'              	movwf	??___flmul^(0+128)
  4763  0187' 0800'              	movf	??___flmul^(0+128),w
  4764  0188' 1283               	bcf	3,5	;RP0=0, select bank0
  4765  0189' 1303               	bcf	3,6	;RP1=0, select bank0
  4766  018A' 009D'              	movwf	__Umul8_16@multiplicand
  4767  018B' 1683               	bsf	3,5	;RP0=1, select bank1
  4768  018C' 1303               	bcf	3,6	;RP1=0, select bank1
  4769  018D' 0801'              	movf	(___flmul@a^(0+128)+1),w
  4770  018E' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4771  0193' 1283               	bcf	3,5	;RP0=0, select bank0
  4772  0194' 1303               	bcf	3,6	;RP1=0, select bank0
  4773  0195' 081E'              	movf	?__Umul8_16+1,w
  4774  0196' 1683               	bsf	3,5	;RP0=1, select bank1
  4775  0197' 1303               	bcf	3,6	;RP1=0, select bank1
  4776  0198' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4777  0199' 1283               	bcf	3,5	;RP0=0, select bank0
  4778  019A' 1303               	bcf	3,6	;RP1=0, select bank0
  4779  019B' 081D'              	movf	?__Umul8_16,w
  4780  019C' 1683               	bsf	3,5	;RP0=1, select bank1
  4781  019D' 1303               	bcf	3,6	;RP1=0, select bank1
  4782  019E' 0080'              	movwf	___flmul@temp^(0+128)
  4783  019F'                    l3691:
  4784  019F' 0800'              	movf	___flmul@temp^(0+128),w
  4785  01A0' 0080'              	movwf	??___flmul^(0+128)
  4786  01A1' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  4787  01A2' 0081'              	movwf	(??___flmul^(0+128)+1)
  4788  01A3' 0182'              	clrf	(??___flmul^(0+128)+2)
  4789  01A4' 0183'              	clrf	(??___flmul^(0+128)+3)
  4790  01A5' 0800'              	movf	??___flmul^(0+128),w
  4791  01A6' 0780'              	addwf	___flmul@grs^(0+128),f
  4792  01A7' 0800'              	movf	(??___flmul+1)^(0+128),w
  4793  01A8' 1103               	clrz
  4794  01A9' 1803               	skipnc
  4795  01AA' 3E01               	addlw	1
  4796  01AB' 1903               	skipnz
  4797  01AC' 2800'              	goto	u6651
  4798  01AD' 0780'              	addwf	(___flmul@grs+1)^(0+128),f
  4799  01AE'                    u6651:
  4800  01AE' 0800'              	movf	(??___flmul+2)^(0+128),w
  4801  01AF' 1103               	clrz
  4802  01B0' 1803               	skipnc
  4803  01B1' 3E01               	addlw	1
  4804  01B2' 1903               	skipnz
  4805  01B3' 2800'              	goto	u6652
  4806  01B4' 0780'              	addwf	(___flmul@grs+2)^(0+128),f
  4807  01B5'                    u6652:
  4808  01B5' 0800'              	movf	(??___flmul+3)^(0+128),w
  4809  01B6' 1103               	clrz
  4810  01B7' 1803               	skipnc
  4811  01B8' 3E01               	addlw	1
  4812  01B9' 1903               	skipnz
  4813  01BA' 2800'              	goto	u6653
  4814  01BB' 0780'              	addwf	(___flmul@grs+3)^(0+128),f
  4815  01BC'                    u6653:
  4816  01BC'                    l3693:
  4817  01BC' 3008               	movlw	8
  4818  01BD' 0080'              	movwf	??___flmul^(0+128)
  4819  01BE'                    u6665:
  4820  01BE' 1003               	clrc
  4821  01BF' 0D80'              	rlf	___flmul@grs^(0+128),f
  4822  01C0' 0D80'              	rlf	(___flmul@grs+1)^(0+128),f
  4823  01C1' 0D80'              	rlf	(___flmul@grs+2)^(0+128),f
  4824  01C2' 0D80'              	rlf	(___flmul@grs+3)^(0+128),f
  4825  01C3' 0B80'              	decfsz	??___flmul^(0+128),f
  4826  01C4' 2800'              	goto	u6665
  4827  01C5' 0800'              	movf	___flmul@b^(0+128),w
  4828  01C6' 0080'              	movwf	??___flmul^(0+128)
  4829  01C7' 0800'              	movf	??___flmul^(0+128),w
  4830  01C8' 1283               	bcf	3,5	;RP0=0, select bank0
  4831  01C9' 1303               	bcf	3,6	;RP1=0, select bank0
  4832  01CA' 009D'              	movwf	__Umul8_16@multiplicand
  4833  01CB' 1683               	bsf	3,5	;RP0=1, select bank1
  4834  01CC' 1303               	bcf	3,6	;RP1=0, select bank1
  4835  01CD' 0800'              	movf	___flmul@a^(0+128),w
  4836  01CE' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4837  01D3' 1283               	bcf	3,5	;RP0=0, select bank0
  4838  01D4' 1303               	bcf	3,6	;RP1=0, select bank0
  4839  01D5' 081E'              	movf	?__Umul8_16+1,w
  4840  01D6' 1683               	bsf	3,5	;RP0=1, select bank1
  4841  01D7' 1303               	bcf	3,6	;RP1=0, select bank1
  4842  01D8' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4843  01D9' 1283               	bcf	3,5	;RP0=0, select bank0
  4844  01DA' 1303               	bcf	3,6	;RP1=0, select bank0
  4845  01DB' 081D'              	movf	?__Umul8_16,w
  4846  01DC' 1683               	bsf	3,5	;RP0=1, select bank1
  4847  01DD' 1303               	bcf	3,6	;RP1=0, select bank1
  4848  01DE' 0080'              	movwf	___flmul@temp^(0+128)
  4849  01DF'                    l3695:
  4850  01DF' 0800'              	movf	___flmul@temp^(0+128),w
  4851  01E0' 0080'              	movwf	??___flmul^(0+128)
  4852  01E1' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  4853  01E2' 0081'              	movwf	(??___flmul^(0+128)+1)
  4854  01E3' 0182'              	clrf	(??___flmul^(0+128)+2)
  4855  01E4' 0183'              	clrf	(??___flmul^(0+128)+3)
  4856  01E5' 0800'              	movf	??___flmul^(0+128),w
  4857  01E6' 0780'              	addwf	___flmul@grs^(0+128),f
  4858  01E7' 0800'              	movf	(??___flmul+1)^(0+128),w
  4859  01E8' 1103               	clrz
  4860  01E9' 1803               	skipnc
  4861  01EA' 3E01               	addlw	1
  4862  01EB' 1903               	skipnz
  4863  01EC' 2800'              	goto	u6671
  4864  01ED' 0780'              	addwf	(___flmul@grs+1)^(0+128),f
  4865  01EE'                    u6671:
  4866  01EE' 0800'              	movf	(??___flmul+2)^(0+128),w
  4867  01EF' 1103               	clrz
  4868  01F0' 1803               	skipnc
  4869  01F1' 3E01               	addlw	1
  4870  01F2' 1903               	skipnz
  4871  01F3' 2800'              	goto	u6672
  4872  01F4' 0780'              	addwf	(___flmul@grs+2)^(0+128),f
  4873  01F5'                    u6672:
  4874  01F5' 0800'              	movf	(??___flmul+3)^(0+128),w
  4875  01F6' 1103               	clrz
  4876  01F7' 1803               	skipnc
  4877  01F8' 3E01               	addlw	1
  4878  01F9' 1903               	skipnz
  4879  01FA' 2800'              	goto	u6673
  4880  01FB' 0780'              	addwf	(___flmul@grs+3)^(0+128),f
  4881  01FC'                    u6673:
  4882  01FC'                    l3697:
  4883  01FC' 0801'              	movf	(___flmul@b^(0+128)+1),w
  4884  01FD' 0080'              	movwf	??___flmul^(0+128)
  4885  01FE' 0800'              	movf	??___flmul^(0+128),w
  4886  01FF' 1283               	bcf	3,5	;RP0=0, select bank0
  4887  0200' 1303               	bcf	3,6	;RP1=0, select bank0
  4888  0201' 009D'              	movwf	__Umul8_16@multiplicand
  4889  0202' 1683               	bsf	3,5	;RP0=1, select bank1
  4890  0203' 1303               	bcf	3,6	;RP1=0, select bank1
  4891  0204' 0802'              	movf	(___flmul@a^(0+128)+2),w
  4892  0205' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4893  020A' 1283               	bcf	3,5	;RP0=0, select bank0
  4894  020B' 1303               	bcf	3,6	;RP1=0, select bank0
  4895  020C' 081E'              	movf	?__Umul8_16+1,w
  4896  020D' 1683               	bsf	3,5	;RP0=1, select bank1
  4897  020E' 1303               	bcf	3,6	;RP1=0, select bank1
  4898  020F' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4899  0210' 1283               	bcf	3,5	;RP0=0, select bank0
  4900  0211' 1303               	bcf	3,6	;RP1=0, select bank0
  4901  0212' 081D'              	movf	?__Umul8_16,w
  4902  0213' 1683               	bsf	3,5	;RP0=1, select bank1
  4903  0214' 1303               	bcf	3,6	;RP1=0, select bank1
  4904  0215' 0080'              	movwf	___flmul@temp^(0+128)
  4905  0216' 0800'              	movf	___flmul@temp^(0+128),w
  4906  0217' 0080'              	movwf	??___flmul^(0+128)
  4907  0218' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  4908  0219' 0081'              	movwf	(??___flmul^(0+128)+1)
  4909  021A' 0182'              	clrf	(??___flmul^(0+128)+2)
  4910  021B' 0183'              	clrf	(??___flmul^(0+128)+3)
  4911  021C' 0800'              	movf	??___flmul^(0+128),w
  4912  021D' 0780'              	addwf	___flmul@prod^(0+128),f
  4913  021E' 0800'              	movf	(??___flmul+1)^(0+128),w
  4914  021F' 1103               	clrz
  4915  0220' 1803               	skipnc
  4916  0221' 3E01               	addlw	1
  4917  0222' 1903               	skipnz
  4918  0223' 2800'              	goto	u6681
  4919  0224' 0780'              	addwf	(___flmul@prod+1)^(0+128),f
  4920  0225'                    u6681:
  4921  0225' 0800'              	movf	(??___flmul+2)^(0+128),w
  4922  0226' 1103               	clrz
  4923  0227' 1803               	skipnc
  4924  0228' 3E01               	addlw	1
  4925  0229' 1903               	skipnz
  4926  022A' 2800'              	goto	u6682
  4927  022B' 0780'              	addwf	(___flmul@prod+2)^(0+128),f
  4928  022C'                    u6682:
  4929  022C' 0800'              	movf	(??___flmul+3)^(0+128),w
  4930  022D' 1103               	clrz
  4931  022E' 1803               	skipnc
  4932  022F' 3E01               	addlw	1
  4933  0230' 1903               	skipnz
  4934  0231' 2800'              	goto	u6683
  4935  0232' 0780'              	addwf	(___flmul@prod+3)^(0+128),f
  4936  0233'                    u6683:
  4937  0233'                    l3699:
  4938  0233' 0802'              	movf	(___flmul@b^(0+128)+2),w
  4939  0234' 0080'              	movwf	??___flmul^(0+128)
  4940  0235' 0800'              	movf	??___flmul^(0+128),w
  4941  0236' 1283               	bcf	3,5	;RP0=0, select bank0
  4942  0237' 1303               	bcf	3,6	;RP1=0, select bank0
  4943  0238' 009D'              	movwf	__Umul8_16@multiplicand
  4944  0239' 1683               	bsf	3,5	;RP0=1, select bank1
  4945  023A' 1303               	bcf	3,6	;RP1=0, select bank1
  4946  023B' 0801'              	movf	(___flmul@a^(0+128)+1),w
  4947  023C' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4948  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  4949  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  4950  0243' 081E'              	movf	?__Umul8_16+1,w
  4951  0244' 1683               	bsf	3,5	;RP0=1, select bank1
  4952  0245' 1303               	bcf	3,6	;RP1=0, select bank1
  4953  0246' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  4954  0247' 1283               	bcf	3,5	;RP0=0, select bank0
  4955  0248' 1303               	bcf	3,6	;RP1=0, select bank0
  4956  0249' 081D'              	movf	?__Umul8_16,w
  4957  024A' 1683               	bsf	3,5	;RP0=1, select bank1
  4958  024B' 1303               	bcf	3,6	;RP1=0, select bank1
  4959  024C' 0080'              	movwf	___flmul@temp^(0+128)
  4960  024D'                    l3701:
  4961  024D' 0800'              	movf	___flmul@temp^(0+128),w
  4962  024E' 0080'              	movwf	??___flmul^(0+128)
  4963  024F' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  4964  0250' 0081'              	movwf	(??___flmul^(0+128)+1)
  4965  0251' 0182'              	clrf	(??___flmul^(0+128)+2)
  4966  0252' 0183'              	clrf	(??___flmul^(0+128)+3)
  4967  0253' 0800'              	movf	??___flmul^(0+128),w
  4968  0254' 0780'              	addwf	___flmul@prod^(0+128),f
  4969  0255' 0800'              	movf	(??___flmul+1)^(0+128),w
  4970  0256' 1103               	clrz
  4971  0257' 1803               	skipnc
  4972  0258' 3E01               	addlw	1
  4973  0259' 1903               	skipnz
  4974  025A' 2800'              	goto	u6691
  4975  025B' 0780'              	addwf	(___flmul@prod+1)^(0+128),f
  4976  025C'                    u6691:
  4977  025C' 0800'              	movf	(??___flmul+2)^(0+128),w
  4978  025D' 1103               	clrz
  4979  025E' 1803               	skipnc
  4980  025F' 3E01               	addlw	1
  4981  0260' 1903               	skipnz
  4982  0261' 2800'              	goto	u6692
  4983  0262' 0780'              	addwf	(___flmul@prod+2)^(0+128),f
  4984  0263'                    u6692:
  4985  0263' 0800'              	movf	(??___flmul+3)^(0+128),w
  4986  0264' 1103               	clrz
  4987  0265' 1803               	skipnc
  4988  0266' 3E01               	addlw	1
  4989  0267' 1903               	skipnz
  4990  0268' 2800'              	goto	u6693
  4991  0269' 0780'              	addwf	(___flmul@prod+3)^(0+128),f
  4992  026A'                    u6693:
  4993  026A' 0802'              	movf	(___flmul@b^(0+128)+2),w
  4994  026B' 0080'              	movwf	??___flmul^(0+128)
  4995  026C' 0800'              	movf	??___flmul^(0+128),w
  4996  026D' 1283               	bcf	3,5	;RP0=0, select bank0
  4997  026E' 1303               	bcf	3,6	;RP1=0, select bank0
  4998  026F' 009D'              	movwf	__Umul8_16@multiplicand
  4999  0270' 1683               	bsf	3,5	;RP0=1, select bank1
  5000  0271' 1303               	bcf	3,6	;RP1=0, select bank1
  5001  0272' 0802'              	movf	(___flmul@a^(0+128)+2),w
  5002  0273' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5003  0278' 1283               	bcf	3,5	;RP0=0, select bank0
  5004  0279' 1303               	bcf	3,6	;RP1=0, select bank0
  5005  027A' 081E'              	movf	?__Umul8_16+1,w
  5006  027B' 1683               	bsf	3,5	;RP0=1, select bank1
  5007  027C' 1303               	bcf	3,6	;RP1=0, select bank1
  5008  027D' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  5009  027E' 1283               	bcf	3,5	;RP0=0, select bank0
  5010  027F' 1303               	bcf	3,6	;RP1=0, select bank0
  5011  0280' 081D'              	movf	?__Umul8_16,w
  5012  0281' 1683               	bsf	3,5	;RP0=1, select bank1
  5013  0282' 1303               	bcf	3,6	;RP1=0, select bank1
  5014  0283' 0080'              	movwf	___flmul@temp^(0+128)
  5015  0284'                    l3703:
  5016  0284' 0800'              	movf	___flmul@temp^(0+128),w
  5017  0285' 0080'              	movwf	??___flmul^(0+128)
  5018  0286' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  5019  0287' 0081'              	movwf	(??___flmul^(0+128)+1)
  5020  0288' 0182'              	clrf	(??___flmul^(0+128)+2)
  5021  0289' 0183'              	clrf	(??___flmul^(0+128)+3)
  5022  028A' 3008               	movlw	8
  5023  028B'                    u6705:
  5024  028B' 1003               	clrc
  5025  028C' 0D80'              	rlf	??___flmul^(0+128),f
  5026  028D' 0D81'              	rlf	(??___flmul^(0+128)+1),f
  5027  028E' 0D82'              	rlf	(??___flmul^(0+128)+2),f
  5028  028F' 0D83'              	rlf	(??___flmul^(0+128)+3),f
  5029  0290'                    u6700:
  5030  0290' 3EFF               	addlw	-1
  5031  0291' 1D03               	skipz
  5032  0292' 2800'              	goto	u6705
  5033  0293' 0800'              	movf	??___flmul^(0+128),w
  5034  0294' 0780'              	addwf	___flmul@prod^(0+128),f
  5035  0295' 0800'              	movf	(??___flmul+1)^(0+128),w
  5036  0296' 1103               	clrz
  5037  0297' 1803               	skipnc
  5038  0298' 3E01               	addlw	1
  5039  0299' 1903               	skipnz
  5040  029A' 2800'              	goto	u6711
  5041  029B' 0780'              	addwf	(___flmul@prod+1)^(0+128),f
  5042  029C'                    u6711:
  5043  029C' 0800'              	movf	(??___flmul+2)^(0+128),w
  5044  029D' 1103               	clrz
  5045  029E' 1803               	skipnc
  5046  029F' 3E01               	addlw	1
  5047  02A0' 1903               	skipnz
  5048  02A1' 2800'              	goto	u6712
  5049  02A2' 0780'              	addwf	(___flmul@prod+2)^(0+128),f
  5050  02A3'                    u6712:
  5051  02A3' 0800'              	movf	(??___flmul+3)^(0+128),w
  5052  02A4' 1103               	clrz
  5053  02A5' 1803               	skipnc
  5054  02A6' 3E01               	addlw	1
  5055  02A7' 1903               	skipnz
  5056  02A8' 2800'              	goto	u6713
  5057  02A9' 0780'              	addwf	(___flmul@prod+3)^(0+128),f
  5058  02AA'                    u6713:
  5059  02AA'                    l3705:
  5060  02AA' 0800'              	movf	___flmul@grs^(0+128),w
  5061  02AB' 0080'              	movwf	??___flmul^(0+128)
  5062  02AC' 0800'              	movf	(___flmul@grs+1)^(0+128),w
  5063  02AD' 0081'              	movwf	(??___flmul^(0+128)+1)
  5064  02AE' 0800'              	movf	(___flmul@grs+2)^(0+128),w
  5065  02AF' 0082'              	movwf	(??___flmul^(0+128)+2)
  5066  02B0' 0800'              	movf	(___flmul@grs+3)^(0+128),w
  5067  02B1' 0083'              	movwf	(??___flmul^(0+128)+3)
  5068  02B2' 3018               	movlw	24
  5069  02B3'                    u6725:
  5070  02B3' 1003               	clrc
  5071  02B4' 0C83'              	rrf	(??___flmul^(0+128)+3),f
  5072  02B5' 0C82'              	rrf	(??___flmul^(0+128)+2),f
  5073  02B6' 0C81'              	rrf	(??___flmul^(0+128)+1),f
  5074  02B7' 0C80'              	rrf	??___flmul^(0+128),f
  5075  02B8'                    u6720:
  5076  02B8' 3EFF               	addlw	-1
  5077  02B9' 1D03               	skipz
  5078  02BA' 2800'              	goto	u6725
  5079  02BB' 0800'              	movf	??___flmul^(0+128),w
  5080  02BC' 0780'              	addwf	___flmul@prod^(0+128),f
  5081  02BD' 0800'              	movf	(??___flmul+1)^(0+128),w
  5082  02BE' 1103               	clrz
  5083  02BF' 1803               	skipnc
  5084  02C0' 3E01               	addlw	1
  5085  02C1' 1903               	skipnz
  5086  02C2' 2800'              	goto	u6731
  5087  02C3' 0780'              	addwf	(___flmul@prod+1)^(0+128),f
  5088  02C4'                    u6731:
  5089  02C4' 0800'              	movf	(??___flmul+2)^(0+128),w
  5090  02C5' 1103               	clrz
  5091  02C6' 1803               	skipnc
  5092  02C7' 3E01               	addlw	1
  5093  02C8' 1903               	skipnz
  5094  02C9' 2800'              	goto	u6732
  5095  02CA' 0780'              	addwf	(___flmul@prod+2)^(0+128),f
  5096  02CB'                    u6732:
  5097  02CB' 0800'              	movf	(??___flmul+3)^(0+128),w
  5098  02CC' 1103               	clrz
  5099  02CD' 1803               	skipnc
  5100  02CE' 3E01               	addlw	1
  5101  02CF' 1903               	skipnz
  5102  02D0' 2800'              	goto	u6733
  5103  02D1' 0780'              	addwf	(___flmul@prod+3)^(0+128),f
  5104  02D2'                    u6733:
  5105  02D2'                    l3707:
  5106  02D2' 3008               	movlw	8
  5107  02D3' 0080'              	movwf	??___flmul^(0+128)
  5108  02D4'                    u6745:
  5109  02D4' 1003               	clrc
  5110  02D5' 0D80'              	rlf	___flmul@grs^(0+128),f
  5111  02D6' 0D80'              	rlf	(___flmul@grs+1)^(0+128),f
  5112  02D7' 0D80'              	rlf	(___flmul@grs+2)^(0+128),f
  5113  02D8' 0D80'              	rlf	(___flmul@grs+3)^(0+128),f
  5114  02D9' 0B80'              	decfsz	??___flmul^(0+128),f
  5115  02DA' 2800'              	goto	u6745
  5116  02DB'                    l3709:
  5117  02DB' 0800'              	movf	___flmul@bexp^(0+128),w
  5118  02DC' 0700'              	addwf	___flmul@aexp^(0+128),w
  5119  02DD' 0080'              	movwf	??___flmul^(0+128)
  5120  02DE' 0181'              	clrf	(??___flmul^(0+128)+1)
  5121  02DF' 0D80'              	rlf	(??___flmul+1)^(0+128),f
  5122  02E0' 0800'              	movf	??___flmul^(0+128),w
  5123  02E1' 3E82               	addlw	130
  5124  02E2' 0080'              	movwf	___flmul@temp^(0+128)
  5125  02E3' 0800'              	movf	(??___flmul+1)^(0+128),w
  5126  02E4' 1803               	skipnc
  5127  02E5' 3E01               	addlw	1
  5128  02E6' 3EFF               	addlw	255
  5129  02E7' 0080'              	movwf	(___flmul@temp+1)^(0+128)
  5130  02E8' 2800'              	goto	l3721
  5131  02E9'                    l3711:
  5132  02E9' 3001               	movlw	1
  5133  02EA' 0080'              	movwf	??___flmul^(0+128)
  5134  02EB'                    u6755:
  5135  02EB' 1003               	clrc
  5136  02EC' 0D80'              	rlf	___flmul@prod^(0+128),f
  5137  02ED' 0D80'              	rlf	(___flmul@prod+1)^(0+128),f
  5138  02EE' 0D80'              	rlf	(___flmul@prod+2)^(0+128),f
  5139  02EF' 0D80'              	rlf	(___flmul@prod+3)^(0+128),f
  5140  02F0' 0B80'              	decfsz	??___flmul^(0+128),f
  5141  02F1' 2800'              	goto	u6755
  5142  02F2'                    l3713:
  5143  02F2' 1F80'              	btfss	(___flmul@grs+3)^(0+128),7
  5144  02F3' 2800'              	goto	u6761
  5145  02F4' 2800'              	goto	u6760
  5146  02F5'                    u6761:
  5147  02F5' 2800'              	goto	l3717
  5148  02F6'                    u6760:
  5149  02F6'                    l3715:
  5150  02F6' 1400'              	bsf	___flmul@prod^(0+128),0
  5151  02F7'                    l3717:
  5152  02F7' 3001               	movlw	1
  5153  02F8' 0080'              	movwf	??___flmul^(0+128)
  5154  02F9'                    u6775:
  5155  02F9' 1003               	clrc
  5156  02FA' 0D80'              	rlf	___flmul@grs^(0+128),f
  5157  02FB' 0D80'              	rlf	(___flmul@grs+1)^(0+128),f
  5158  02FC' 0D80'              	rlf	(___flmul@grs+2)^(0+128),f
  5159  02FD' 0D80'              	rlf	(___flmul@grs+3)^(0+128),f
  5160  02FE' 0B80'              	decfsz	??___flmul^(0+128),f
  5161  02FF' 2800'              	goto	u6775
  5162  0300'                    l3719:
  5163  0300' 30FF               	movlw	255
  5164  0301' 0780'              	addwf	___flmul@temp^(0+128),f
  5165  0302' 1803               	skipnc
  5166  0303' 0A80'              	incf	(___flmul@temp+1)^(0+128),f
  5167  0304' 30FF               	movlw	255
  5168  0305' 0780'              	addwf	(___flmul@temp+1)^(0+128),f
  5169  0306'                    l3721:
  5170  0306' 1F80'              	btfss	(___flmul@prod+2)^(0+128),7
  5171  0307' 2800'              	goto	u6781
  5172  0308' 2800'              	goto	u6780
  5173  0309'                    u6781:
  5174  0309' 2800'              	goto	l3711
  5175  030A'                    u6780:
  5176  030A'                    l3723:
  5177  030A' 0180'              	clrf	___flmul@aexp^(0+128)
  5178  030B'                    l3725:
  5179  030B' 1F80'              	btfss	(___flmul@grs+3)^(0+128),7
  5180  030C' 2800'              	goto	u6791
  5181  030D' 2800'              	goto	u6790
  5182  030E'                    u6791:
  5183  030E' 2800'              	goto	l3733
  5184  030F'                    u6790:
  5185  030F'                    l3727:
  5186  030F' 30FF               	movlw	255
  5187  0310' 0500'              	andwf	___flmul@grs^(0+128),w
  5188  0311' 0080'              	movwf	??___flmul^(0+128)
  5189  0312' 30FF               	movlw	255
  5190  0313' 0500'              	andwf	(___flmul@grs+1)^(0+128),w
  5191  0314' 0081'              	movwf	(??___flmul^(0+128)+1)
  5192  0315' 30FF               	movlw	255
  5193  0316' 0500'              	andwf	(___flmul@grs+2)^(0+128),w
  5194  0317' 0082'              	movwf	(??___flmul^(0+128)+2)
  5195  0318' 307F               	movlw	127
  5196  0319' 0500'              	andwf	(___flmul@grs+3)^(0+128),w
  5197  031A' 0083'              	movwf	(??___flmul^(0+128)+3)
  5198  031B' 0800'              	movf	(??___flmul+3)^(0+128),w
  5199  031C' 0400'              	iorwf	(??___flmul+2)^(0+128),w
  5200  031D' 0400'              	iorwf	(??___flmul+1)^(0+128),w
  5201  031E' 0400'              	iorwf	??___flmul^(0+128),w
  5202  031F' 1903               	skipnz
  5203  0320' 2800'              	goto	u6801
  5204  0321' 2800'              	goto	u6800
  5205  0322'                    u6801:
  5206  0322' 2800'              	goto	l722
  5207  0323'                    u6800:
  5208  0323'                    l3729:
  5209  0323' 0180'              	clrf	___flmul@aexp^(0+128)
  5210  0324' 0A80'              	incf	___flmul@aexp^(0+128),f
  5211  0325' 2800'              	goto	l3733
  5212  0326'                    l722:
  5213  0326' 1C00'              	btfss	___flmul@prod^(0+128),0
  5214  0327' 2800'              	goto	u6811
  5215  0328' 2800'              	goto	u6810
  5216  0329'                    u6811:
  5217  0329' 2800'              	goto	l3733
  5218  032A'                    u6810:
  5219  032A' 2800'              	goto	l3729
  5220  032B'                    l3733:
  5221  032B' 0800'              	movf	___flmul@aexp^(0+128),w
  5222  032C' 1903               	btfsc	3,2
  5223  032D' 2800'              	goto	u6821
  5224  032E' 2800'              	goto	u6820
  5225  032F'                    u6821:
  5226  032F' 2800'              	goto	l3743
  5227  0330'                    u6820:
  5228  0330'                    l3735:
  5229  0330' 3001               	movlw	1
  5230  0331' 0780'              	addwf	___flmul@prod^(0+128),f
  5231  0332' 3000               	movlw	0
  5232  0333' 1803               	skipnc
  5233  0334' 3001               	movlw	1
  5234  0335' 0780'              	addwf	(___flmul@prod+1)^(0+128),f
  5235  0336' 3000               	movlw	0
  5236  0337' 1803               	skipnc
  5237  0338' 3001               	movlw	1
  5238  0339' 0780'              	addwf	(___flmul@prod+2)^(0+128),f
  5239  033A' 3000               	movlw	0
  5240  033B' 1803               	skipnc
  5241  033C' 3001               	movlw	1
  5242  033D' 0780'              	addwf	(___flmul@prod+3)^(0+128),f
  5243  033E'                    l3737:
  5244  033E' 1C00'              	btfss	(___flmul@prod+3)^(0+128),0
  5245  033F' 2800'              	goto	u6831
  5246  0340' 2800'              	goto	u6830
  5247  0341'                    u6831:
  5248  0341' 2800'              	goto	l3743
  5249  0342'                    u6830:
  5250  0342'                    l3739:
  5251  0342' 0800'              	movf	___flmul@prod^(0+128),w
  5252  0343' 0080'              	movwf	??___flmul^(0+128)
  5253  0344' 0800'              	movf	(___flmul@prod+1)^(0+128),w
  5254  0345' 0081'              	movwf	(??___flmul^(0+128)+1)
  5255  0346' 0800'              	movf	(___flmul@prod+2)^(0+128),w
  5256  0347' 0082'              	movwf	(??___flmul^(0+128)+2)
  5257  0348' 0800'              	movf	(___flmul@prod+3)^(0+128),w
  5258  0349' 0083'              	movwf	(??___flmul^(0+128)+3)
  5259  034A' 3001               	movlw	1
  5260  034B' 0080'              	movwf	(??___flmul+4)^(0+128)
  5261  034C'                    u6845:
  5262  034C' 0D03'              	rlf	(??___flmul^(0+128)+3),w
  5263  034D' 0C83'              	rrf	(??___flmul^(0+128)+3),f
  5264  034E' 0C82'              	rrf	(??___flmul^(0+128)+2),f
  5265  034F' 0C81'              	rrf	(??___flmul^(0+128)+1),f
  5266  0350' 0C80'              	rrf	??___flmul^(0+128),f
  5267  0351'                    u6840:
  5268  0351' 0B80'              	decfsz	(??___flmul+4)^(0+128),f
  5269  0352' 2800'              	goto	u6845
  5270  0353' 0800'              	movf	(??___flmul+3)^(0+128),w
  5271  0354' 0080'              	movwf	(___flmul@prod+3)^(0+128)
  5272  0355' 0800'              	movf	(??___flmul+2)^(0+128),w
  5273  0356' 0080'              	movwf	(___flmul@prod+2)^(0+128)
  5274  0357' 0800'              	movf	(??___flmul+1)^(0+128),w
  5275  0358' 0080'              	movwf	(___flmul@prod+1)^(0+128)
  5276  0359' 0800'              	movf	??___flmul^(0+128),w
  5277  035A' 0080'              	movwf	___flmul@prod^(0+128)
  5278  035B'                    l3741:
  5279  035B' 3001               	movlw	1
  5280  035C' 0780'              	addwf	___flmul@temp^(0+128),f
  5281  035D' 1803               	skipnc
  5282  035E' 0A80'              	incf	(___flmul@temp+1)^(0+128),f
  5283  035F' 3000               	movlw	0
  5284  0360' 0780'              	addwf	(___flmul@temp+1)^(0+128),f
  5285  0361'                    l3743:
  5286  0361' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  5287  0362' 3A80               	xorlw	128
  5288  0363' 00FF               	movwf	btemp+1
  5289  0364' 3080               	movlw	128
  5290  0365' 027F               	subwf	btemp+1,w
  5291  0366' 1D03               	skipz
  5292  0367' 2800'              	goto	u6855
  5293  0368' 30FF               	movlw	255
  5294  0369' 0200'              	subwf	___flmul@temp^(0+128),w
  5295  036A'                    u6855:
  5296  036A' 1C03               	skipc
  5297  036B' 2800'              	goto	u6851
  5298  036C' 2800'              	goto	u6850
  5299  036D'                    u6851:
  5300  036D' 2800'              	goto	l3747
  5301  036E'                    u6850:
  5302  036E'                    l3745:
  5303  036E' 307F               	movlw	127
  5304  036F' 1683               	bsf	3,5	;RP0=1, select bank1
  5305  0370' 1303               	bcf	3,6	;RP1=0, select bank1
  5306  0371' 0080'              	movwf	(___flmul@prod+3)^(0+128)
  5307  0372' 3080               	movlw	128
  5308  0373' 0080'              	movwf	(___flmul@prod+2)^(0+128)
  5309  0374' 3000               	movlw	0
  5310  0375' 0080'              	movwf	(___flmul@prod+1)^(0+128)
  5311  0376' 3000               	movlw	0
  5312  0377' 0080'              	movwf	___flmul@prod^(0+128)
  5313  0378' 2800'              	goto	l728
  5314  0379'                    l3747:
  5315  0379' 1683               	bsf	3,5	;RP0=1, select bank1
  5316  037A' 1303               	bcf	3,6	;RP1=0, select bank1
  5317  037B' 0800'              	movf	(___flmul@temp+1)^(0+128),w
  5318  037C' 3A80               	xorlw	128
  5319  037D' 00FF               	movwf	btemp+1
  5320  037E' 3080               	movlw	128
  5321  037F' 027F               	subwf	btemp+1,w
  5322  0380' 1D03               	skipz
  5323  0381' 2800'              	goto	u6865
  5324  0382' 3001               	movlw	1
  5325  0383' 0200'              	subwf	___flmul@temp^(0+128),w
  5326  0384'                    u6865:
  5327  0384' 1803               	skipnc
  5328  0385' 2800'              	goto	u6861
  5329  0386' 2800'              	goto	u6860
  5330  0387'                    u6861:
  5331  0387' 2800'              	goto	l3753
  5332  0388'                    u6860:
  5333  0388'                    l3749:
  5334  0388' 3000               	movlw	0
  5335  0389' 1683               	bsf	3,5	;RP0=1, select bank1
  5336  038A' 1303               	bcf	3,6	;RP1=0, select bank1
  5337  038B' 0080'              	movwf	(___flmul@prod+3)^(0+128)
  5338  038C' 3000               	movlw	0
  5339  038D' 0080'              	movwf	(___flmul@prod+2)^(0+128)
  5340  038E' 3000               	movlw	0
  5341  038F' 0080'              	movwf	(___flmul@prod+1)^(0+128)
  5342  0390' 3000               	movlw	0
  5343  0391' 0080'              	movwf	___flmul@prod^(0+128)
  5344  0392'                    l3751:
  5345  0392' 0180'              	clrf	___flmul@sign^(0+128)
  5346  0393' 2800'              	goto	l728
  5347  0394'                    l3753:
  5348  0394' 1683               	bsf	3,5	;RP0=1, select bank1
  5349  0395' 1303               	bcf	3,6	;RP1=0, select bank1
  5350  0396' 0800'              	movf	___flmul@temp^(0+128),w
  5351  0397' 0080'              	movwf	??___flmul^(0+128)
  5352  0398' 0800'              	movf	??___flmul^(0+128),w
  5353  0399' 0080'              	movwf	___flmul@bexp^(0+128)
  5354  039A' 30FF               	movlw	255
  5355  039B' 0580'              	andwf	___flmul@prod^(0+128),f
  5356  039C' 30FF               	movlw	255
  5357  039D' 0580'              	andwf	(___flmul@prod+1)^(0+128),f
  5358  039E' 307F               	movlw	127
  5359  039F' 0580'              	andwf	(___flmul@prod+2)^(0+128),f
  5360  03A0' 3000               	movlw	0
  5361  03A1' 0580'              	andwf	(___flmul@prod+3)^(0+128),f
  5362  03A2'                    l3755:
  5363  03A2' 1C00'              	btfss	___flmul@bexp^(0+128),0
  5364  03A3' 2800'              	goto	u6871
  5365  03A4' 2800'              	goto	u6870
  5366  03A5'                    u6871:
  5367  03A5' 2800'              	goto	l3759
  5368  03A6'                    u6870:
  5369  03A6'                    l3757:
  5370  03A6' 1782'              	bsf	(___flmul@prod^(0+128)+2),7
  5371  03A7'                    l3759:
  5372  03A7' 0800'              	movf	___flmul@bexp^(0+128),w
  5373  03A8' 0080'              	movwf	??___flmul^(0+128)
  5374  03A9' 1003               	clrc
  5375  03AA' 0C00'              	rrf	??___flmul^(0+128),w
  5376  03AB' 0080'              	movwf	(??___flmul+1)^(0+128)
  5377  03AC' 0800'              	movf	(??___flmul+1)^(0+128),w
  5378  03AD' 0083'              	movwf	(___flmul@prod^(0+128)+3)
  5379  03AE'                    l728:
  5380  03AE' 0800'              	movf	___flmul@sign^(0+128),w
  5381  03AF' 0080'              	movwf	??___flmul^(0+128)
  5382  03B0' 0800'              	movf	??___flmul^(0+128),w
  5383  03B1' 0483'              	iorwf	(___flmul@prod^(0+128)+3),f
  5384  03B2'                    l3761:
  5385  03B2' 0800'              	movf	(___flmul@prod+3)^(0+128),w
  5386  03B3' 0080'              	movwf	(?___flmul+3)^(0+128)
  5387  03B4' 0800'              	movf	(___flmul@prod+2)^(0+128),w
  5388  03B5' 0080'              	movwf	(?___flmul+2)^(0+128)
  5389  03B6' 0800'              	movf	(___flmul@prod+1)^(0+128),w
  5390  03B7' 0080'              	movwf	(?___flmul+1)^(0+128)
  5391  03B8' 0800'              	movf	___flmul@prod^(0+128),w
  5392  03B9' 0080'              	movwf	?___flmul^(0+128)
  5393  03BA'                    l716:
  5394  03BA' 0008               	return
  5395  03BB'                    __end_of___flmul:
  5396                           
  5397                           	psect	text9
  5398  0000'                    __ptext9:	
  5399 ;; *************** function __Umul8_16 *****************
  5400 ;; Defined at:
  5401 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  multiplier      1    wreg     unsigned char 
  5404 ;;  multiplicand    1   29[BANK0 ] unsigned char 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  multiplier      1   37[BANK0 ] unsigned char 
  5407 ;;  word_mpld       2   35[BANK0 ] unsigned int 
  5408 ;;  product         2   33[BANK0 ] unsigned int 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  2   29[BANK0 ] unsigned int 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5418 ;;      Params:         0       2       0       0       0
  5419 ;;      Locals:         0       5       0       0       0
  5420 ;;      Temps:          0       2       0       0       0
  5421 ;;      Totals:         0       9       0       0       0
  5422 ;;Total ram usage:        9 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 3
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		___flmul
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432  0000'                    __Umul8_16:	
  5433                           ;psect for function __Umul8_16
  5434                           
  5435                           
  5436                           ;incstack = 0
  5437                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5438                           ;__Umul8_16@multiplier stored from wreg
  5439  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5440  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5441  0002' 00A5'              	movwf	__Umul8_16@multiplier
  5442  0003'                    l2281:
  5443  0003' 01A1'              	clrf	__Umul8_16@product
  5444  0004' 01A2'              	clrf	__Umul8_16@product+1
  5445  0005'                    l2283:
  5446  0005' 081D'              	movf	__Umul8_16@multiplicand,w
  5447  0006' 009F'              	movwf	??__Umul8_16
  5448  0007' 01A0'              	clrf	??__Umul8_16+1
  5449  0008' 081F'              	movf	??__Umul8_16,w
  5450  0009' 00A3'              	movwf	__Umul8_16@word_mpld
  5451  000A' 0820'              	movf	??__Umul8_16+1,w
  5452  000B' 00A4'              	movwf	__Umul8_16@word_mpld+1
  5453  000C'                    l2285:
  5454  000C' 1C25'              	btfss	__Umul8_16@multiplier,0
  5455  000D' 2800'              	goto	u3341
  5456  000E' 2800'              	goto	u3340
  5457  000F'                    u3341:
  5458  000F' 2800'              	goto	l735
  5459  0010'                    u3340:
  5460  0010'                    l2287:
  5461  0010' 0823'              	movf	__Umul8_16@word_mpld,w
  5462  0011' 07A1'              	addwf	__Umul8_16@product,f
  5463  0012' 1803               	skipnc
  5464  0013' 0AA2'              	incf	__Umul8_16@product+1,f
  5465  0014' 0824'              	movf	__Umul8_16@word_mpld+1,w
  5466  0015' 07A2'              	addwf	__Umul8_16@product+1,f
  5467  0016'                    l735:
  5468  0016' 3001               	movlw	1
  5469  0017'                    u3355:
  5470  0017' 1003               	clrc
  5471  0018' 0DA3'              	rlf	__Umul8_16@word_mpld,f
  5472  0019' 0DA4'              	rlf	__Umul8_16@word_mpld+1,f
  5473  001A' 3EFF               	addlw	-1
  5474  001B' 1D03               	skipz
  5475  001C' 2800'              	goto	u3355
  5476  001D' 1003               	clrc
  5477  001E' 0CA5'              	rrf	__Umul8_16@multiplier,f
  5478  001F'                    l2289:
  5479  001F' 0825'              	movf	__Umul8_16@multiplier,w
  5480  0020' 1D03               	btfss	3,2
  5481  0021' 2800'              	goto	u3361
  5482  0022' 2800'              	goto	u3360
  5483  0023'                    u3361:
  5484  0023' 2800'              	goto	l2285
  5485  0024'                    u3360:
  5486  0024'                    l2291:
  5487  0024' 0822'              	movf	__Umul8_16@product+1,w
  5488  0025' 009E'              	movwf	?__Umul8_16+1
  5489  0026' 0821'              	movf	__Umul8_16@product,w
  5490  0027' 009D'              	movwf	?__Umul8_16
  5491  0028'                    l737:
  5492  0028' 0008               	return
  5493  0029'                    __end_of__Umul8_16:
  5494                           
  5495                           	psect	text10
  5496  0000'                    __ptext10:	
  5497 ;; *************** function __tdiv_to_l_ *****************
  5498 ;; Defined at:
  5499 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  f1              4   29[BANK0 ] float 
  5502 ;;  f2              4   33[BANK0 ] float 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  quot            4   41[BANK0 ] unsigned long 
  5505 ;;  exp1            1   46[BANK0 ] unsigned char 
  5506 ;;  cntr            1   45[BANK0 ] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  4   29[BANK0 ] unsigned long 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5516 ;;      Params:         0       8       0       0       0
  5517 ;;      Locals:         0       6       0       0       0
  5518 ;;      Temps:          0       4       0       0       0
  5519 ;;      Totals:         0      18       0       0       0
  5520 ;;Total ram usage:       18 bytes
  5521 ;; Hardware stack levels used: 1
  5522 ;; Hardware stack levels required when called: 3
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_sprintf
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530  0000'                    __tdiv_to_l_:	
  5531                           ;psect for function __tdiv_to_l_
  5532                           
  5533  0000'                    l2851:	
  5534                           ;incstack = 0
  5535                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5536                           
  5537  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5538  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5539  0002' 081D'              	movf	__tdiv_to_l_@f1,w
  5540  0003' 00A5'              	movwf	??__tdiv_to_l_
  5541  0004' 081E'              	movf	__tdiv_to_l_@f1+1,w
  5542  0005' 00A6'              	movwf	??__tdiv_to_l_+1
  5543  0006' 081F'              	movf	__tdiv_to_l_@f1+2,w
  5544  0007' 00A7'              	movwf	??__tdiv_to_l_+2
  5545  0008' 1003               	clrc
  5546  0009' 0D26'              	rlf	??__tdiv_to_l_+1,w
  5547  000A' 0D27'              	rlf	??__tdiv_to_l_+2,w
  5548  000B' 00A8'              	movwf	??__tdiv_to_l_+3
  5549  000C' 0828'              	movf	??__tdiv_to_l_+3,w
  5550  000D' 00AE'              	movwf	__tdiv_to_l_@exp1
  5551  000E' 082E'              	movf	__tdiv_to_l_@exp1,w
  5552  000F' 1D03               	btfss	3,2
  5553  0010' 2800'              	goto	u4791
  5554  0011' 2800'              	goto	u4790
  5555  0012'                    u4791:
  5556  0012' 2800'              	goto	l2857
  5557  0013'                    u4790:
  5558  0013'                    l2853:
  5559  0013' 3000               	movlw	0
  5560  0014' 00A0'              	movwf	?__tdiv_to_l_+3
  5561  0015' 3000               	movlw	0
  5562  0016' 009F'              	movwf	?__tdiv_to_l_+2
  5563  0017' 3000               	movlw	0
  5564  0018' 009E'              	movwf	?__tdiv_to_l_+1
  5565  0019' 3000               	movlw	0
  5566  001A' 009D'              	movwf	?__tdiv_to_l_
  5567  001B' 2800'              	goto	l510
  5568  001C'                    l2857:
  5569  001C' 0821'              	movf	__tdiv_to_l_@f2,w
  5570  001D' 00A5'              	movwf	??__tdiv_to_l_
  5571  001E' 0822'              	movf	__tdiv_to_l_@f2+1,w
  5572  001F' 00A6'              	movwf	??__tdiv_to_l_+1
  5573  0020' 0823'              	movf	__tdiv_to_l_@f2+2,w
  5574  0021' 00A7'              	movwf	??__tdiv_to_l_+2
  5575  0022' 1003               	clrc
  5576  0023' 0D26'              	rlf	??__tdiv_to_l_+1,w
  5577  0024' 0D27'              	rlf	??__tdiv_to_l_+2,w
  5578  0025' 00A8'              	movwf	??__tdiv_to_l_+3
  5579  0026' 0828'              	movf	??__tdiv_to_l_+3,w
  5580  0027' 00AD'              	movwf	__tdiv_to_l_@cntr
  5581  0028' 082D'              	movf	__tdiv_to_l_@cntr,w
  5582  0029' 1D03               	btfss	3,2
  5583  002A' 2800'              	goto	u4801
  5584  002B' 2800'              	goto	u4800
  5585  002C'                    u4801:
  5586  002C' 2800'              	goto	l511
  5587  002D'                    u4800:
  5588  002D' 2800'              	goto	l2853
  5589  002E'                    l511:
  5590  002E' 179E'              	bsf	__tdiv_to_l_@f1+1,7
  5591  002F'                    l2863:
  5592  002F' 30FF               	movlw	255
  5593  0030' 059D'              	andwf	__tdiv_to_l_@f1,f
  5594  0031' 30FF               	movlw	255
  5595  0032' 059E'              	andwf	__tdiv_to_l_@f1+1,f
  5596  0033' 3000               	movlw	0
  5597  0034' 059F'              	andwf	__tdiv_to_l_@f1+2,f
  5598  0035'                    l2865:
  5599  0035' 17A2'              	bsf	__tdiv_to_l_@f2+1,7
  5600  0036' 30FF               	movlw	255
  5601  0037' 05A1'              	andwf	__tdiv_to_l_@f2,f
  5602  0038' 30FF               	movlw	255
  5603  0039' 05A2'              	andwf	__tdiv_to_l_@f2+1,f
  5604  003A' 3000               	movlw	0
  5605  003B' 05A3'              	andwf	__tdiv_to_l_@f2+2,f
  5606  003C' 3000               	movlw	0
  5607  003D' 00AC'              	movwf	__tdiv_to_l_@quot+3
  5608  003E' 3000               	movlw	0
  5609  003F' 00AB'              	movwf	__tdiv_to_l_@quot+2
  5610  0040' 3000               	movlw	0
  5611  0041' 00AA'              	movwf	__tdiv_to_l_@quot+1
  5612  0042' 3000               	movlw	0
  5613  0043' 00A9'              	movwf	__tdiv_to_l_@quot
  5614  0044'                    l2867:
  5615  0044' 307F               	movlw	127
  5616  0045' 02AE'              	subwf	__tdiv_to_l_@exp1,f
  5617  0046'                    l2869:
  5618  0046' 3098               	movlw	152
  5619  0047' 072D'              	addwf	__tdiv_to_l_@cntr,w
  5620  0048' 00A5'              	movwf	??__tdiv_to_l_
  5621  0049' 0825'              	movf	??__tdiv_to_l_,w
  5622  004A' 02AE'              	subwf	__tdiv_to_l_@exp1,f
  5623  004B' 3018               	movlw	24
  5624  004C' 00A5'              	movwf	??__tdiv_to_l_
  5625  004D' 0825'              	movf	??__tdiv_to_l_,w
  5626  004E' 00AD'              	movwf	__tdiv_to_l_@cntr
  5627  004F'                    l2871:
  5628  004F' 3001               	movlw	1
  5629  0050' 00A5'              	movwf	??__tdiv_to_l_
  5630  0051'                    u4815:
  5631  0051' 1003               	clrc
  5632  0052' 0DA9'              	rlf	__tdiv_to_l_@quot,f
  5633  0053' 0DAA'              	rlf	__tdiv_to_l_@quot+1,f
  5634  0054' 0DAB'              	rlf	__tdiv_to_l_@quot+2,f
  5635  0055' 0DAC'              	rlf	__tdiv_to_l_@quot+3,f
  5636  0056' 0BA5'              	decfsz	??__tdiv_to_l_,f
  5637  0057' 2800'              	goto	u4815
  5638  0058'                    l2873:
  5639  0058' 0823'              	movf	__tdiv_to_l_@f2+2,w
  5640  0059' 021F'              	subwf	__tdiv_to_l_@f1+2,w
  5641  005A' 1D03               	skipz
  5642  005B' 2800'              	goto	u4825
  5643  005C' 0822'              	movf	__tdiv_to_l_@f2+1,w
  5644  005D' 021E'              	subwf	__tdiv_to_l_@f1+1,w
  5645  005E' 1D03               	skipz
  5646  005F' 2800'              	goto	u4825
  5647  0060' 0821'              	movf	__tdiv_to_l_@f2,w
  5648  0061' 021D'              	subwf	__tdiv_to_l_@f1,w
  5649  0062'                    u4825:
  5650  0062' 1C03               	skipc
  5651  0063' 2800'              	goto	u4821
  5652  0064' 2800'              	goto	u4820
  5653  0065'                    u4821:
  5654  0065' 2800'              	goto	l2879
  5655  0066'                    u4820:
  5656  0066'                    l2875:
  5657  0066' 0821'              	movf	__tdiv_to_l_@f2,w
  5658  0067' 029D'              	subwf	__tdiv_to_l_@f1,f
  5659  0068' 0822'              	movf	__tdiv_to_l_@f2+1,w
  5660  0069' 1C03               	skipc
  5661  006A' 0F22'              	incfsz	__tdiv_to_l_@f2+1,w
  5662  006B' 029E'              	subwf	__tdiv_to_l_@f1+1,f
  5663  006C' 0823'              	movf	__tdiv_to_l_@f2+2,w
  5664  006D' 1C03               	skipc
  5665  006E' 0A23'              	incf	__tdiv_to_l_@f2+2,w
  5666  006F' 029F'              	subwf	__tdiv_to_l_@f1+2,f
  5667  0070'                    l2877:
  5668  0070' 1429'              	bsf	__tdiv_to_l_@quot,0
  5669  0071'                    l2879:
  5670  0071' 3001               	movlw	1
  5671  0072'                    u4835:
  5672  0072' 1003               	clrc
  5673  0073' 0D9D'              	rlf	__tdiv_to_l_@f1,f
  5674  0074' 0D9E'              	rlf	__tdiv_to_l_@f1+1,f
  5675  0075' 0D9F'              	rlf	__tdiv_to_l_@f1+2,f
  5676  0076' 3EFF               	addlw	-1
  5677  0077' 1D03               	skipz
  5678  0078' 2800'              	goto	u4835
  5679  0079'                    l2881:
  5680  0079' 3001               	movlw	1
  5681  007A' 02AD'              	subwf	__tdiv_to_l_@cntr,f
  5682  007B' 1D03               	btfss	3,2
  5683  007C' 2800'              	goto	u4841
  5684  007D' 2800'              	goto	u4840
  5685  007E'                    u4841:
  5686  007E' 2800'              	goto	l2871
  5687  007F'                    u4840:
  5688  007F'                    l514:
  5689  007F' 1FAE'              	btfss	__tdiv_to_l_@exp1,7
  5690  0080' 2800'              	goto	u4851
  5691  0081' 2800'              	goto	u4850
  5692  0082'                    u4851:
  5693  0082' 2800'              	goto	l2891
  5694  0083'                    u4850:
  5695  0083'                    l2883:
  5696  0083' 082E'              	movf	__tdiv_to_l_@exp1,w
  5697  0084' 3A80               	xorlw	128
  5698  0085' 3E97               	addlw	151
  5699  0086' 1803               	skipnc
  5700  0087' 2800'              	goto	u4861
  5701  0088' 2800'              	goto	u4860
  5702  0089'                    u4861:
  5703  0089' 2800'              	goto	l2889
  5704  008A'                    u4860:
  5705  008A' 2800'              	goto	l2853
  5706  008B'                    l2889:
  5707  008B' 3001               	movlw	1
  5708  008C'                    u4875:
  5709  008C' 1003               	clrc
  5710  008D' 0CAC'              	rrf	__tdiv_to_l_@quot+3,f
  5711  008E' 0CAB'              	rrf	__tdiv_to_l_@quot+2,f
  5712  008F' 0CAA'              	rrf	__tdiv_to_l_@quot+1,f
  5713  0090' 0CA9'              	rrf	__tdiv_to_l_@quot,f
  5714  0091' 3EFF               	addlw	-1
  5715  0092' 1D03               	skipz
  5716  0093' 2800'              	goto	u4875
  5717  0094' 3001               	movlw	1
  5718  0095' 00A5'              	movwf	??__tdiv_to_l_
  5719  0096' 0825'              	movf	??__tdiv_to_l_,w
  5720  0097' 07AE'              	addwf	__tdiv_to_l_@exp1,f
  5721  0098' 1D03               	btfss	3,2
  5722  0099' 2800'              	goto	u4881
  5723  009A' 2800'              	goto	u4880
  5724  009B'                    u4881:
  5725  009B' 2800'              	goto	l2889
  5726  009C'                    u4880:
  5727  009C' 2800'              	goto	l2899
  5728  009D'                    l2891:
  5729  009D' 3018               	movlw	24
  5730  009E' 022E'              	subwf	__tdiv_to_l_@exp1,w
  5731  009F' 1C03               	skipc
  5732  00A0' 2800'              	goto	u4891
  5733  00A1' 2800'              	goto	u4890
  5734  00A2'                    u4891:
  5735  00A2' 2800'              	goto	l521
  5736  00A3'                    u4890:
  5737  00A3' 2800'              	goto	l2853
  5738  00A4'                    l2897:
  5739  00A4' 3001               	movlw	1
  5740  00A5' 00A5'              	movwf	??__tdiv_to_l_
  5741  00A6'                    u4905:
  5742  00A6' 1003               	clrc
  5743  00A7' 0DA9'              	rlf	__tdiv_to_l_@quot,f
  5744  00A8' 0DAA'              	rlf	__tdiv_to_l_@quot+1,f
  5745  00A9' 0DAB'              	rlf	__tdiv_to_l_@quot+2,f
  5746  00AA' 0DAC'              	rlf	__tdiv_to_l_@quot+3,f
  5747  00AB' 0BA5'              	decfsz	??__tdiv_to_l_,f
  5748  00AC' 2800'              	goto	u4905
  5749  00AD' 3001               	movlw	1
  5750  00AE' 02AE'              	subwf	__tdiv_to_l_@exp1,f
  5751  00AF'                    l521:
  5752  00AF' 082E'              	movf	__tdiv_to_l_@exp1,w
  5753  00B0' 1D03               	btfss	3,2
  5754  00B1' 2800'              	goto	u4911
  5755  00B2' 2800'              	goto	u4910
  5756  00B3'                    u4911:
  5757  00B3' 2800'              	goto	l2897
  5758  00B4'                    u4910:
  5759  00B4'                    l2899:
  5760  00B4' 082C'              	movf	__tdiv_to_l_@quot+3,w
  5761  00B5' 00A0'              	movwf	?__tdiv_to_l_+3
  5762  00B6' 082B'              	movf	__tdiv_to_l_@quot+2,w
  5763  00B7' 009F'              	movwf	?__tdiv_to_l_+2
  5764  00B8' 082A'              	movf	__tdiv_to_l_@quot+1,w
  5765  00B9' 009E'              	movwf	?__tdiv_to_l_+1
  5766  00BA' 0829'              	movf	__tdiv_to_l_@quot,w
  5767  00BB' 009D'              	movwf	?__tdiv_to_l_
  5768  00BC'                    l510:
  5769  00BC' 0008               	return
  5770  00BD'                    __end_of__tdiv_to_l_:
  5771                           
  5772                           	psect	text11
  5773  0000'                    __ptext11:	
  5774 ;; *************** function __div_to_l_ *****************
  5775 ;; Defined at:
  5776 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  f1              4   29[BANK0 ] unsigned long 
  5779 ;;  f2              4   33[BANK0 ] unsigned long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  quot            4   38[BANK0 ] unsigned long 
  5782 ;;  exp1            1   43[BANK0 ] unsigned char 
  5783 ;;  cntr            1   42[BANK0 ] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4   29[BANK0 ] unsigned long 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5793 ;;      Params:         0       8       0       0       0
  5794 ;;      Locals:         0       6       0       0       0
  5795 ;;      Temps:          0       1       0       0       0
  5796 ;;      Totals:         0      15       0       0       0
  5797 ;;Total ram usage:       15 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 3
  5800 ;; This function calls:
  5801 ;;		Nothing
  5802 ;; This function is called by:
  5803 ;;		_sprintf
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807  0000'                    __div_to_l_:	
  5808                           ;psect for function __div_to_l_
  5809                           
  5810  0000'                    l2903:	
  5811                           ;incstack = 0
  5812                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5813                           
  5814  0000' 1003               	clrc
  5815  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5816  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5817  0003' 0D1F'              	rlf	__div_to_l_@f1+2,w
  5818  0004' 0D20'              	rlf	__div_to_l_@f1+3,w
  5819  0005' 00A5'              	movwf	??__div_to_l_
  5820  0006' 0825'              	movf	??__div_to_l_,w
  5821  0007' 00AB'              	movwf	__div_to_l_@exp1
  5822  0008' 082B'              	movf	__div_to_l_@exp1,w
  5823  0009' 1D03               	btfss	3,2
  5824  000A' 2800'              	goto	u4921
  5825  000B' 2800'              	goto	u4920
  5826  000C'                    u4921:
  5827  000C' 2800'              	goto	l2909
  5828  000D'                    u4920:
  5829  000D'                    l2905:
  5830  000D' 3000               	movlw	0
  5831  000E' 00A0'              	movwf	?__div_to_l_+3
  5832  000F' 3000               	movlw	0
  5833  0010' 009F'              	movwf	?__div_to_l_+2
  5834  0011' 3000               	movlw	0
  5835  0012' 009E'              	movwf	?__div_to_l_+1
  5836  0013' 3000               	movlw	0
  5837  0014' 009D'              	movwf	?__div_to_l_
  5838  0015' 2800'              	goto	l463
  5839  0016'                    l2909:
  5840  0016' 1003               	clrc
  5841  0017' 0D23'              	rlf	__div_to_l_@f2+2,w
  5842  0018' 0D24'              	rlf	__div_to_l_@f2+3,w
  5843  0019' 00A5'              	movwf	??__div_to_l_
  5844  001A' 0825'              	movf	??__div_to_l_,w
  5845  001B' 00AA'              	movwf	__div_to_l_@cntr
  5846  001C' 082A'              	movf	__div_to_l_@cntr,w
  5847  001D' 1D03               	btfss	3,2
  5848  001E' 2800'              	goto	u4931
  5849  001F' 2800'              	goto	u4930
  5850  0020'                    u4931:
  5851  0020' 2800'              	goto	l464
  5852  0021'                    u4930:
  5853  0021' 2800'              	goto	l2905
  5854  0022'                    l464:
  5855  0022' 179F'              	bsf	__div_to_l_@f1+2,7
  5856  0023'                    l2915:
  5857  0023' 30FF               	movlw	255
  5858  0024' 059D'              	andwf	__div_to_l_@f1,f
  5859  0025' 30FF               	movlw	255
  5860  0026' 059E'              	andwf	__div_to_l_@f1+1,f
  5861  0027' 30FF               	movlw	255
  5862  0028' 059F'              	andwf	__div_to_l_@f1+2,f
  5863  0029' 3000               	movlw	0
  5864  002A' 05A0'              	andwf	__div_to_l_@f1+3,f
  5865  002B'                    l2917:
  5866  002B' 17A3'              	bsf	__div_to_l_@f2+2,7
  5867  002C' 30FF               	movlw	255
  5868  002D' 05A1'              	andwf	__div_to_l_@f2,f
  5869  002E' 30FF               	movlw	255
  5870  002F' 05A2'              	andwf	__div_to_l_@f2+1,f
  5871  0030' 30FF               	movlw	255
  5872  0031' 05A3'              	andwf	__div_to_l_@f2+2,f
  5873  0032' 3000               	movlw	0
  5874  0033' 05A4'              	andwf	__div_to_l_@f2+3,f
  5875  0034' 3000               	movlw	0
  5876  0035' 00A9'              	movwf	__div_to_l_@quot+3
  5877  0036' 3000               	movlw	0
  5878  0037' 00A8'              	movwf	__div_to_l_@quot+2
  5879  0038' 3000               	movlw	0
  5880  0039' 00A7'              	movwf	__div_to_l_@quot+1
  5881  003A' 3000               	movlw	0
  5882  003B' 00A6'              	movwf	__div_to_l_@quot
  5883  003C'                    l2919:
  5884  003C' 307F               	movlw	127
  5885  003D' 02AB'              	subwf	__div_to_l_@exp1,f
  5886  003E'                    l2921:
  5887  003E' 30A0               	movlw	160
  5888  003F' 072A'              	addwf	__div_to_l_@cntr,w
  5889  0040' 00A5'              	movwf	??__div_to_l_
  5890  0041' 0825'              	movf	??__div_to_l_,w
  5891  0042' 02AB'              	subwf	__div_to_l_@exp1,f
  5892  0043' 3020               	movlw	32
  5893  0044' 00A5'              	movwf	??__div_to_l_
  5894  0045' 0825'              	movf	??__div_to_l_,w
  5895  0046' 00AA'              	movwf	__div_to_l_@cntr
  5896  0047'                    l2923:
  5897  0047' 3001               	movlw	1
  5898  0048' 00A5'              	movwf	??__div_to_l_
  5899  0049'                    u4945:
  5900  0049' 1003               	clrc
  5901  004A' 0DA6'              	rlf	__div_to_l_@quot,f
  5902  004B' 0DA7'              	rlf	__div_to_l_@quot+1,f
  5903  004C' 0DA8'              	rlf	__div_to_l_@quot+2,f
  5904  004D' 0DA9'              	rlf	__div_to_l_@quot+3,f
  5905  004E' 0BA5'              	decfsz	??__div_to_l_,f
  5906  004F' 2800'              	goto	u4945
  5907  0050'                    l2925:
  5908  0050' 0824'              	movf	__div_to_l_@f2+3,w
  5909  0051' 0220'              	subwf	__div_to_l_@f1+3,w
  5910  0052' 1D03               	skipz
  5911  0053' 2800'              	goto	u4955
  5912  0054' 0823'              	movf	__div_to_l_@f2+2,w
  5913  0055' 021F'              	subwf	__div_to_l_@f1+2,w
  5914  0056' 1D03               	skipz
  5915  0057' 2800'              	goto	u4955
  5916  0058' 0822'              	movf	__div_to_l_@f2+1,w
  5917  0059' 021E'              	subwf	__div_to_l_@f1+1,w
  5918  005A' 1D03               	skipz
  5919  005B' 2800'              	goto	u4955
  5920  005C' 0821'              	movf	__div_to_l_@f2,w
  5921  005D' 021D'              	subwf	__div_to_l_@f1,w
  5922  005E'                    u4955:
  5923  005E' 1C03               	skipc
  5924  005F' 2800'              	goto	u4951
  5925  0060' 2800'              	goto	u4950
  5926  0061'                    u4951:
  5927  0061' 2800'              	goto	l2931
  5928  0062'                    u4950:
  5929  0062'                    l2927:
  5930  0062' 0821'              	movf	__div_to_l_@f2,w
  5931  0063' 029D'              	subwf	__div_to_l_@f1,f
  5932  0064' 0822'              	movf	__div_to_l_@f2+1,w
  5933  0065' 1C03               	skipc
  5934  0066' 0F22'              	incfsz	__div_to_l_@f2+1,w
  5935  0067' 029E'              	subwf	__div_to_l_@f1+1,f
  5936  0068' 0823'              	movf	__div_to_l_@f2+2,w
  5937  0069' 1C03               	skipc
  5938  006A' 0F23'              	incfsz	__div_to_l_@f2+2,w
  5939  006B' 029F'              	subwf	__div_to_l_@f1+2,f
  5940  006C' 0824'              	movf	__div_to_l_@f2+3,w
  5941  006D' 1C03               	skipc
  5942  006E' 0F24'              	incfsz	__div_to_l_@f2+3,w
  5943  006F' 02A0'              	subwf	__div_to_l_@f1+3,f
  5944  0070'                    l2929:
  5945  0070' 1426'              	bsf	__div_to_l_@quot,0
  5946  0071'                    l2931:
  5947  0071' 3001               	movlw	1
  5948  0072' 00A5'              	movwf	??__div_to_l_
  5949  0073'                    u4965:
  5950  0073' 1003               	clrc
  5951  0074' 0D9D'              	rlf	__div_to_l_@f1,f
  5952  0075' 0D9E'              	rlf	__div_to_l_@f1+1,f
  5953  0076' 0D9F'              	rlf	__div_to_l_@f1+2,f
  5954  0077' 0DA0'              	rlf	__div_to_l_@f1+3,f
  5955  0078' 0BA5'              	decfsz	??__div_to_l_,f
  5956  0079' 2800'              	goto	u4965
  5957  007A'                    l2933:
  5958  007A' 3001               	movlw	1
  5959  007B' 02AA'              	subwf	__div_to_l_@cntr,f
  5960  007C' 1D03               	btfss	3,2
  5961  007D' 2800'              	goto	u4971
  5962  007E' 2800'              	goto	u4970
  5963  007F'                    u4971:
  5964  007F' 2800'              	goto	l2923
  5965  0080'                    u4970:
  5966  0080'                    l467:
  5967  0080' 1FAB'              	btfss	__div_to_l_@exp1,7
  5968  0081' 2800'              	goto	u4981
  5969  0082' 2800'              	goto	u4980
  5970  0083'                    u4981:
  5971  0083' 2800'              	goto	l2943
  5972  0084'                    u4980:
  5973  0084'                    l2935:
  5974  0084' 082B'              	movf	__div_to_l_@exp1,w
  5975  0085' 3A80               	xorlw	128
  5976  0086' 3E9F               	addlw	159
  5977  0087' 1803               	skipnc
  5978  0088' 2800'              	goto	u4991
  5979  0089' 2800'              	goto	u4990
  5980  008A'                    u4991:
  5981  008A' 2800'              	goto	l2941
  5982  008B'                    u4990:
  5983  008B' 2800'              	goto	l2905
  5984  008C'                    l2941:
  5985  008C' 3001               	movlw	1
  5986  008D'                    u5005:
  5987  008D' 1003               	clrc
  5988  008E' 0CA9'              	rrf	__div_to_l_@quot+3,f
  5989  008F' 0CA8'              	rrf	__div_to_l_@quot+2,f
  5990  0090' 0CA7'              	rrf	__div_to_l_@quot+1,f
  5991  0091' 0CA6'              	rrf	__div_to_l_@quot,f
  5992  0092' 3EFF               	addlw	-1
  5993  0093' 1D03               	skipz
  5994  0094' 2800'              	goto	u5005
  5995  0095' 3001               	movlw	1
  5996  0096' 00A5'              	movwf	??__div_to_l_
  5997  0097' 0825'              	movf	??__div_to_l_,w
  5998  0098' 07AB'              	addwf	__div_to_l_@exp1,f
  5999  0099' 1D03               	btfss	3,2
  6000  009A' 2800'              	goto	u5011
  6001  009B' 2800'              	goto	u5010
  6002  009C'                    u5011:
  6003  009C' 2800'              	goto	l2941
  6004  009D'                    u5010:
  6005  009D' 2800'              	goto	l2951
  6006  009E'                    l2943:
  6007  009E' 3020               	movlw	32
  6008  009F' 022B'              	subwf	__div_to_l_@exp1,w
  6009  00A0' 1C03               	skipc
  6010  00A1' 2800'              	goto	u5021
  6011  00A2' 2800'              	goto	u5020
  6012  00A3'                    u5021:
  6013  00A3' 2800'              	goto	l474
  6014  00A4'                    u5020:
  6015  00A4' 2800'              	goto	l2905
  6016  00A5'                    l2949:
  6017  00A5' 3001               	movlw	1
  6018  00A6' 00A5'              	movwf	??__div_to_l_
  6019  00A7'                    u5035:
  6020  00A7' 1003               	clrc
  6021  00A8' 0DA6'              	rlf	__div_to_l_@quot,f
  6022  00A9' 0DA7'              	rlf	__div_to_l_@quot+1,f
  6023  00AA' 0DA8'              	rlf	__div_to_l_@quot+2,f
  6024  00AB' 0DA9'              	rlf	__div_to_l_@quot+3,f
  6025  00AC' 0BA5'              	decfsz	??__div_to_l_,f
  6026  00AD' 2800'              	goto	u5035
  6027  00AE' 3001               	movlw	1
  6028  00AF' 02AB'              	subwf	__div_to_l_@exp1,f
  6029  00B0'                    l474:
  6030  00B0' 082B'              	movf	__div_to_l_@exp1,w
  6031  00B1' 1D03               	btfss	3,2
  6032  00B2' 2800'              	goto	u5041
  6033  00B3' 2800'              	goto	u5040
  6034  00B4'                    u5041:
  6035  00B4' 2800'              	goto	l2949
  6036  00B5'                    u5040:
  6037  00B5'                    l2951:
  6038  00B5' 0829'              	movf	__div_to_l_@quot+3,w
  6039  00B6' 00A0'              	movwf	?__div_to_l_+3
  6040  00B7' 0828'              	movf	__div_to_l_@quot+2,w
  6041  00B8' 009F'              	movwf	?__div_to_l_+2
  6042  00B9' 0827'              	movf	__div_to_l_@quot+1,w
  6043  00BA' 009E'              	movwf	?__div_to_l_+1
  6044  00BB' 0826'              	movf	__div_to_l_@quot,w
  6045  00BC' 009D'              	movwf	?__div_to_l_
  6046  00BD'                    l463:
  6047  00BD' 0008               	return
  6048  00BE'                    __end_of__div_to_l_:
  6049                           
  6050                           	psect	text12
  6051  0000'                    __ptext12:	
  6052 ;; *************** function ___xxtofl *****************
  6053 ;; Defined at:
  6054 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  sign            1    wreg     unsigned char 
  6057 ;;  val             4   29[BANK0 ] long 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  sign            1   37[BANK0 ] unsigned char 
  6060 ;;  arg             4   39[BANK0 ] unsigned long 
  6061 ;;  exp             1   38[BANK0 ] unsigned char 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  4   29[BANK0 ] unsigned char 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6071 ;;      Params:         0       4       0       0       0
  6072 ;;      Locals:         0       6       0       0       0
  6073 ;;      Temps:          0       4       0       0       0
  6074 ;;      Totals:         0      14       0       0       0
  6075 ;;Total ram usage:       14 bytes
  6076 ;; Hardware stack levels used: 1
  6077 ;; Hardware stack levels required when called: 3
  6078 ;; This function calls:
  6079 ;;		Nothing
  6080 ;; This function is called by:
  6081 ;;		_sprintf
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085  0000'                    ___xxtofl:	
  6086                           ;psect for function ___xxtofl
  6087                           
  6088                           
  6089                           ;incstack = 0
  6090                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6091                           ;___xxtofl@sign stored from wreg
  6092  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6093  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6094  0002' 00A5'              	movwf	___xxtofl@sign
  6095  0003'                    l3095:
  6096  0003' 0825'              	movf	___xxtofl@sign,w
  6097  0004' 1903               	btfsc	3,2
  6098  0005' 2800'              	goto	u5431
  6099  0006' 2800'              	goto	u5430
  6100  0007'                    u5431:
  6101  0007' 2800'              	goto	l3101
  6102  0008'                    u5430:
  6103  0008'                    l3097:
  6104  0008' 1FA0'              	btfss	___xxtofl@val+3,7
  6105  0009' 2800'              	goto	u5441
  6106  000A' 2800'              	goto	u5440
  6107  000B'                    u5441:
  6108  000B' 2800'              	goto	l3101
  6109  000C'                    u5440:
  6110  000C'                    l3099:
  6111  000C' 091D'              	comf	___xxtofl@val,w
  6112  000D' 00A7'              	movwf	___xxtofl@arg
  6113  000E' 091E'              	comf	___xxtofl@val+1,w
  6114  000F' 00A8'              	movwf	___xxtofl@arg+1
  6115  0010' 091F'              	comf	___xxtofl@val+2,w
  6116  0011' 00A9'              	movwf	___xxtofl@arg+2
  6117  0012' 0920'              	comf	___xxtofl@val+3,w
  6118  0013' 00AA'              	movwf	___xxtofl@arg+3
  6119  0014' 0AA7'              	incf	___xxtofl@arg,f
  6120  0015' 1903               	skipnz
  6121  0016' 0AA8'              	incf	___xxtofl@arg+1,f
  6122  0017' 1903               	skipnz
  6123  0018' 0AA9'              	incf	___xxtofl@arg+2,f
  6124  0019' 1903               	skipnz
  6125  001A' 0AAA'              	incf	___xxtofl@arg+3,f
  6126  001B' 2800'              	goto	l760
  6127  001C'                    l3101:
  6128  001C' 0820'              	movf	___xxtofl@val+3,w
  6129  001D' 00AA'              	movwf	___xxtofl@arg+3
  6130  001E' 081F'              	movf	___xxtofl@val+2,w
  6131  001F' 00A9'              	movwf	___xxtofl@arg+2
  6132  0020' 081E'              	movf	___xxtofl@val+1,w
  6133  0021' 00A8'              	movwf	___xxtofl@arg+1
  6134  0022' 081D'              	movf	___xxtofl@val,w
  6135  0023' 00A7'              	movwf	___xxtofl@arg
  6136  0024'                    l760:
  6137  0024' 0820'              	movf	___xxtofl@val+3,w
  6138  0025' 041F'              	iorwf	___xxtofl@val+2,w
  6139  0026' 041E'              	iorwf	___xxtofl@val+1,w
  6140  0027' 041D'              	iorwf	___xxtofl@val,w
  6141  0028' 1D03               	skipz
  6142  0029' 2800'              	goto	u5451
  6143  002A' 2800'              	goto	u5450
  6144  002B'                    u5451:
  6145  002B' 2800'              	goto	l3107
  6146  002C'                    u5450:
  6147  002C'                    l3103:
  6148  002C' 3000               	movlw	0
  6149  002D' 00A0'              	movwf	?___xxtofl+3
  6150  002E' 3000               	movlw	0
  6151  002F' 009F'              	movwf	?___xxtofl+2
  6152  0030' 3000               	movlw	0
  6153  0031' 009E'              	movwf	?___xxtofl+1
  6154  0032' 3000               	movlw	0
  6155  0033' 009D'              	movwf	?___xxtofl
  6156  0034' 2800'              	goto	l762
  6157  0035'                    l3107:
  6158  0035' 3096               	movlw	150
  6159  0036' 00A1'              	movwf	??___xxtofl
  6160  0037' 0821'              	movf	??___xxtofl,w
  6161  0038' 00A6'              	movwf	___xxtofl@exp
  6162  0039' 2800'              	goto	l3111
  6163  003A'                    l3109:
  6164  003A' 3001               	movlw	1
  6165  003B' 00A1'              	movwf	??___xxtofl
  6166  003C' 0821'              	movf	??___xxtofl,w
  6167  003D' 07A6'              	addwf	___xxtofl@exp,f
  6168  003E' 3001               	movlw	1
  6169  003F'                    u5465:
  6170  003F' 1003               	clrc
  6171  0040' 0CAA'              	rrf	___xxtofl@arg+3,f
  6172  0041' 0CA9'              	rrf	___xxtofl@arg+2,f
  6173  0042' 0CA8'              	rrf	___xxtofl@arg+1,f
  6174  0043' 0CA7'              	rrf	___xxtofl@arg,f
  6175  0044' 3EFF               	addlw	-1
  6176  0045' 1D03               	skipz
  6177  0046' 2800'              	goto	u5465
  6178  0047'                    l3111:
  6179  0047' 30FE               	movlw	254
  6180  0048' 052A'              	andwf	___xxtofl@arg+3,w
  6181  0049' 1D03               	btfss	3,2
  6182  004A' 2800'              	goto	u5471
  6183  004B' 2800'              	goto	u5470
  6184  004C'                    u5471:
  6185  004C' 2800'              	goto	l3109
  6186  004D'                    u5470:
  6187  004D' 2800'              	goto	l766
  6188  004E'                    l3113:
  6189  004E' 3001               	movlw	1
  6190  004F' 00A1'              	movwf	??___xxtofl
  6191  0050' 0821'              	movf	??___xxtofl,w
  6192  0051' 07A6'              	addwf	___xxtofl@exp,f
  6193  0052'                    l3115:
  6194  0052' 3001               	movlw	1
  6195  0053' 07A7'              	addwf	___xxtofl@arg,f
  6196  0054' 3000               	movlw	0
  6197  0055' 1803               	skipnc
  6198  0056' 3001               	movlw	1
  6199  0057' 07A8'              	addwf	___xxtofl@arg+1,f
  6200  0058' 3000               	movlw	0
  6201  0059' 1803               	skipnc
  6202  005A' 3001               	movlw	1
  6203  005B' 07A9'              	addwf	___xxtofl@arg+2,f
  6204  005C' 3000               	movlw	0
  6205  005D' 1803               	skipnc
  6206  005E' 3001               	movlw	1
  6207  005F' 07AA'              	addwf	___xxtofl@arg+3,f
  6208  0060'                    l3117:
  6209  0060' 3001               	movlw	1
  6210  0061'                    u5485:
  6211  0061' 1003               	clrc
  6212  0062' 0CAA'              	rrf	___xxtofl@arg+3,f
  6213  0063' 0CA9'              	rrf	___xxtofl@arg+2,f
  6214  0064' 0CA8'              	rrf	___xxtofl@arg+1,f
  6215  0065' 0CA7'              	rrf	___xxtofl@arg,f
  6216  0066' 3EFF               	addlw	-1
  6217  0067' 1D03               	skipz
  6218  0068' 2800'              	goto	u5485
  6219  0069'                    l766:
  6220  0069' 30FF               	movlw	255
  6221  006A' 052A'              	andwf	___xxtofl@arg+3,w
  6222  006B' 1D03               	btfss	3,2
  6223  006C' 2800'              	goto	u5491
  6224  006D' 2800'              	goto	u5490
  6225  006E'                    u5491:
  6226  006E' 2800'              	goto	l3113
  6227  006F'                    u5490:
  6228  006F' 2800'              	goto	l3121
  6229  0070'                    l3119:
  6230  0070' 3001               	movlw	1
  6231  0071' 02A6'              	subwf	___xxtofl@exp,f
  6232  0072' 3001               	movlw	1
  6233  0073' 00A1'              	movwf	??___xxtofl
  6234  0074'                    u5505:
  6235  0074' 1003               	clrc
  6236  0075' 0DA7'              	rlf	___xxtofl@arg,f
  6237  0076' 0DA8'              	rlf	___xxtofl@arg+1,f
  6238  0077' 0DA9'              	rlf	___xxtofl@arg+2,f
  6239  0078' 0DAA'              	rlf	___xxtofl@arg+3,f
  6240  0079' 0BA1'              	decfsz	??___xxtofl,f
  6241  007A' 2800'              	goto	u5505
  6242  007B'                    l3121:
  6243  007B' 1BA9'              	btfsc	___xxtofl@arg+2,7
  6244  007C' 2800'              	goto	u5511
  6245  007D' 2800'              	goto	u5510
  6246  007E'                    u5511:
  6247  007E' 2800'              	goto	l773
  6248  007F'                    u5510:
  6249  007F'                    l3123:
  6250  007F' 3002               	movlw	2
  6251  0080' 0226'              	subwf	___xxtofl@exp,w
  6252  0081' 1803               	skipnc
  6253  0082' 2800'              	goto	u5521
  6254  0083' 2800'              	goto	u5520
  6255  0084'                    u5521:
  6256  0084' 2800'              	goto	l3119
  6257  0085'                    u5520:
  6258  0085'                    l773:
  6259  0085' 1826'              	btfsc	___xxtofl@exp,0
  6260  0086' 2800'              	goto	u5531
  6261  0087' 2800'              	goto	u5530
  6262  0088'                    u5531:
  6263  0088' 2800'              	goto	l774
  6264  0089'                    u5530:
  6265  0089'                    l3125:
  6266  0089' 30FF               	movlw	255
  6267  008A' 05A7'              	andwf	___xxtofl@arg,f
  6268  008B' 30FF               	movlw	255
  6269  008C' 05A8'              	andwf	___xxtofl@arg+1,f
  6270  008D' 307F               	movlw	127
  6271  008E' 05A9'              	andwf	___xxtofl@arg+2,f
  6272  008F' 30FF               	movlw	255
  6273  0090' 05AA'              	andwf	___xxtofl@arg+3,f
  6274  0091'                    l774:
  6275  0091' 1003               	clrc
  6276  0092' 0CA6'              	rrf	___xxtofl@exp,f
  6277  0093'                    l3127:
  6278  0093' 0826'              	movf	___xxtofl@exp,w
  6279  0094' 00A1'              	movwf	??___xxtofl
  6280  0095' 01A2'              	clrf	??___xxtofl+1
  6281  0096' 01A3'              	clrf	??___xxtofl+2
  6282  0097' 01A4'              	clrf	??___xxtofl+3
  6283  0098' 3018               	movlw	24
  6284  0099'                    u5545:
  6285  0099' 1003               	clrc
  6286  009A' 0DA1'              	rlf	??___xxtofl,f
  6287  009B' 0DA2'              	rlf	??___xxtofl+1,f
  6288  009C' 0DA3'              	rlf	??___xxtofl+2,f
  6289  009D' 0DA4'              	rlf	??___xxtofl+3,f
  6290  009E'                    u5540:
  6291  009E' 3EFF               	addlw	-1
  6292  009F' 1D03               	skipz
  6293  00A0' 2800'              	goto	u5545
  6294  00A1' 0821'              	movf	??___xxtofl,w
  6295  00A2' 04A7'              	iorwf	___xxtofl@arg,f
  6296  00A3' 0822'              	movf	??___xxtofl+1,w
  6297  00A4' 04A8'              	iorwf	___xxtofl@arg+1,f
  6298  00A5' 0823'              	movf	??___xxtofl+2,w
  6299  00A6' 04A9'              	iorwf	___xxtofl@arg+2,f
  6300  00A7' 0824'              	movf	??___xxtofl+3,w
  6301  00A8' 04AA'              	iorwf	___xxtofl@arg+3,f
  6302  00A9'                    l3129:
  6303  00A9' 0825'              	movf	___xxtofl@sign,w
  6304  00AA' 1903               	btfsc	3,2
  6305  00AB' 2800'              	goto	u5551
  6306  00AC' 2800'              	goto	u5550
  6307  00AD'                    u5551:
  6308  00AD' 2800'              	goto	l3135
  6309  00AE'                    u5550:
  6310  00AE'                    l3131:
  6311  00AE' 1FA0'              	btfss	___xxtofl@val+3,7
  6312  00AF' 2800'              	goto	u5561
  6313  00B0' 2800'              	goto	u5560
  6314  00B1'                    u5561:
  6315  00B1' 2800'              	goto	l3135
  6316  00B2'                    u5560:
  6317  00B2'                    l3133:
  6318  00B2' 17AA'              	bsf	___xxtofl@arg+3,7
  6319  00B3'                    l3135:
  6320  00B3' 082A'              	movf	___xxtofl@arg+3,w
  6321  00B4' 00A0'              	movwf	?___xxtofl+3
  6322  00B5' 0829'              	movf	___xxtofl@arg+2,w
  6323  00B6' 009F'              	movwf	?___xxtofl+2
  6324  00B7' 0828'              	movf	___xxtofl@arg+1,w
  6325  00B8' 009E'              	movwf	?___xxtofl+1
  6326  00B9' 0827'              	movf	___xxtofl@arg,w
  6327  00BA' 009D'              	movwf	?___xxtofl
  6328  00BB'                    l762:
  6329  00BB' 0008               	return
  6330  00BC'                    __end_of___xxtofl:
  6331                           
  6332                           	psect	text13
  6333  0000'                    __ptext13:	
  6334 ;; *************** function ___wmul *****************
  6335 ;; Defined at:
  6336 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  multiplier      2   29[BANK0 ] unsigned int 
  6339 ;;  multiplicand    2   31[BANK0 ] unsigned int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  product         2   33[BANK0 ] unsigned int 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  2   29[BANK0 ] unsigned int 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6351 ;;      Params:         0       4       0       0       0
  6352 ;;      Locals:         0       2       0       0       0
  6353 ;;      Temps:          0       0       0       0       0
  6354 ;;      Totals:         0       6       0       0       0
  6355 ;;Total ram usage:        6 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 3
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_sprintf
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365  0000'                    ___wmul:	
  6366                           ;psect for function ___wmul
  6367                           
  6368  0000'                    l2955:	
  6369                           ;incstack = 0
  6370                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6371                           
  6372  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6373  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6374  0002' 01A1'              	clrf	___wmul@product
  6375  0003' 01A2'              	clrf	___wmul@product+1
  6376  0004'                    l2957:
  6377  0004' 1C1D'              	btfss	___wmul@multiplier,0
  6378  0005' 2800'              	goto	u5051
  6379  0006' 2800'              	goto	u5050
  6380  0007'                    u5051:
  6381  0007' 2800'              	goto	l293
  6382  0008'                    u5050:
  6383  0008'                    l2959:
  6384  0008' 081F'              	movf	___wmul@multiplicand,w
  6385  0009' 07A1'              	addwf	___wmul@product,f
  6386  000A' 1803               	skipnc
  6387  000B' 0AA2'              	incf	___wmul@product+1,f
  6388  000C' 0820'              	movf	___wmul@multiplicand+1,w
  6389  000D' 07A2'              	addwf	___wmul@product+1,f
  6390  000E'                    l293:
  6391  000E' 3001               	movlw	1
  6392  000F'                    u5065:
  6393  000F' 1003               	clrc
  6394  0010' 0D9F'              	rlf	___wmul@multiplicand,f
  6395  0011' 0DA0'              	rlf	___wmul@multiplicand+1,f
  6396  0012' 3EFF               	addlw	-1
  6397  0013' 1D03               	skipz
  6398  0014' 2800'              	goto	u5065
  6399  0015'                    l2961:
  6400  0015' 3001               	movlw	1
  6401  0016'                    u5075:
  6402  0016' 1003               	clrc
  6403  0017' 0C9E'              	rrf	___wmul@multiplier+1,f
  6404  0018' 0C9D'              	rrf	___wmul@multiplier,f
  6405  0019' 3EFF               	addlw	-1
  6406  001A' 1D03               	skipz
  6407  001B' 2800'              	goto	u5075
  6408  001C'                    l2963:
  6409  001C' 081D'              	movf	___wmul@multiplier,w
  6410  001D' 041E'              	iorwf	___wmul@multiplier+1,w
  6411  001E' 1D03               	btfss	3,2
  6412  001F' 2800'              	goto	u5081
  6413  0020' 2800'              	goto	u5080
  6414  0021'                    u5081:
  6415  0021' 2800'              	goto	l2957
  6416  0022'                    u5080:
  6417  0022'                    l2965:
  6418  0022' 0822'              	movf	___wmul@product+1,w
  6419  0023' 009E'              	movwf	?___wmul+1
  6420  0024' 0821'              	movf	___wmul@product,w
  6421  0025' 009D'              	movwf	?___wmul
  6422  0026'                    l295:
  6423  0026' 0008               	return
  6424  0027'                    __end_of___wmul:
  6425                           
  6426                           	psect	text14
  6427  0000'                    __ptext14:	
  6428 ;; *************** function ___llmod *****************
  6429 ;; Defined at:
  6430 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  divisor         4    0[BANK1 ] unsigned long 
  6433 ;;  dividend        4    4[BANK1 ] unsigned long 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  counter         1   44[BANK0 ] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  4    0[BANK1 ] unsigned long 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         0       0       8       0       0
  6446 ;;      Locals:         0       1       0       0       0
  6447 ;;      Temps:          0       1       0       0       0
  6448 ;;      Totals:         0       2       8       0       0
  6449 ;;Total ram usage:       10 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; Hardware stack levels required when called: 3
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_sprintf
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459  0000'                    ___llmod:	
  6460                           ;psect for function ___llmod
  6461                           
  6462  0000'                    l3859:	
  6463                           ;incstack = 0
  6464                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6465                           
  6466  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  6467  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  6468  0002' 0800'              	movf	(___llmod@divisor+3)^(0+128),w
  6469  0003' 0400'              	iorwf	(___llmod@divisor+2)^(0+128),w
  6470  0004' 0400'              	iorwf	(___llmod@divisor+1)^(0+128),w
  6471  0005' 0400'              	iorwf	___llmod@divisor^(0+128),w
  6472  0006' 1903               	skipnz
  6473  0007' 2800'              	goto	u7231
  6474  0008' 2800'              	goto	u7230
  6475  0009'                    u7231:
  6476  0009' 2800'              	goto	l3875
  6477  000A'                    u7230:
  6478  000A'                    l3861:
  6479  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  6480  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  6481  000C' 01AC'              	clrf	___llmod@counter
  6482  000D' 0AAC'              	incf	___llmod@counter,f
  6483  000E' 2800'              	goto	l3865
  6484  000F'                    l3863:
  6485  000F' 3001               	movlw	1
  6486  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  6487  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  6488  0012' 00AB'              	movwf	??___llmod
  6489  0013'                    u7245:
  6490  0013' 1003               	clrc
  6491  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  6492  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  6493  0016' 0D80'              	rlf	___llmod@divisor^(0+128),f
  6494  0017' 0D80'              	rlf	(___llmod@divisor+1)^(0+128),f
  6495  0018' 0D80'              	rlf	(___llmod@divisor+2)^(0+128),f
  6496  0019' 0D80'              	rlf	(___llmod@divisor+3)^(0+128),f
  6497  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  6498  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  6499  001C' 0BAB'              	decfsz	??___llmod,f
  6500  001D' 2800'              	goto	u7245
  6501  001E' 3001               	movlw	1
  6502  001F' 00AB'              	movwf	??___llmod
  6503  0020' 082B'              	movf	??___llmod,w
  6504  0021' 07AC'              	addwf	___llmod@counter,f
  6505  0022'                    l3865:
  6506  0022' 1683               	bsf	3,5	;RP0=1, select bank1
  6507  0023' 1303               	bcf	3,6	;RP1=0, select bank1
  6508  0024' 1F80'              	btfss	(___llmod@divisor+3)^(0+128),7
  6509  0025' 2800'              	goto	u7251
  6510  0026' 2800'              	goto	u7250
  6511  0027'                    u7251:
  6512  0027' 2800'              	goto	l3863
  6513  0028'                    u7250:
  6514  0028'                    l3867:
  6515  0028' 1683               	bsf	3,5	;RP0=1, select bank1
  6516  0029' 1303               	bcf	3,6	;RP1=0, select bank1
  6517  002A' 0800'              	movf	(___llmod@divisor+3)^(0+128),w
  6518  002B' 0200'              	subwf	(___llmod@dividend+3)^(0+128),w
  6519  002C' 1D03               	skipz
  6520  002D' 2800'              	goto	u7265
  6521  002E' 0800'              	movf	(___llmod@divisor+2)^(0+128),w
  6522  002F' 0200'              	subwf	(___llmod@dividend+2)^(0+128),w
  6523  0030' 1D03               	skipz
  6524  0031' 2800'              	goto	u7265
  6525  0032' 0800'              	movf	(___llmod@divisor+1)^(0+128),w
  6526  0033' 0200'              	subwf	(___llmod@dividend+1)^(0+128),w
  6527  0034' 1D03               	skipz
  6528  0035' 2800'              	goto	u7265
  6529  0036' 0800'              	movf	___llmod@divisor^(0+128),w
  6530  0037' 0200'              	subwf	___llmod@dividend^(0+128),w
  6531  0038'                    u7265:
  6532  0038' 1C03               	skipc
  6533  0039' 2800'              	goto	u7261
  6534  003A' 2800'              	goto	u7260
  6535  003B'                    u7261:
  6536  003B' 2800'              	goto	l3871
  6537  003C'                    u7260:
  6538  003C'                    l3869:
  6539  003C' 0800'              	movf	___llmod@divisor^(0+128),w
  6540  003D' 0280'              	subwf	___llmod@dividend^(0+128),f
  6541  003E' 0800'              	movf	(___llmod@divisor+1)^(0+128),w
  6542  003F' 1C03               	skipc
  6543  0040' 0F00'              	incfsz	(___llmod@divisor+1)^(0+128),w
  6544  0041' 0280'              	subwf	(___llmod@dividend+1)^(0+128),f
  6545  0042' 0800'              	movf	(___llmod@divisor+2)^(0+128),w
  6546  0043' 1C03               	skipc
  6547  0044' 0F00'              	incfsz	(___llmod@divisor+2)^(0+128),w
  6548  0045' 0280'              	subwf	(___llmod@dividend+2)^(0+128),f
  6549  0046' 0800'              	movf	(___llmod@divisor+3)^(0+128),w
  6550  0047' 1C03               	skipc
  6551  0048' 0F00'              	incfsz	(___llmod@divisor+3)^(0+128),w
  6552  0049' 0280'              	subwf	(___llmod@dividend+3)^(0+128),f
  6553  004A'                    l3871:
  6554  004A' 3001               	movlw	1
  6555  004B'                    u7275:
  6556  004B' 1003               	clrc
  6557  004C' 0C80'              	rrf	(___llmod@divisor+3)^(0+128),f
  6558  004D' 0C80'              	rrf	(___llmod@divisor+2)^(0+128),f
  6559  004E' 0C80'              	rrf	(___llmod@divisor+1)^(0+128),f
  6560  004F' 0C80'              	rrf	___llmod@divisor^(0+128),f
  6561  0050' 3EFF               	addlw	-1
  6562  0051' 1D03               	skipz
  6563  0052' 2800'              	goto	u7275
  6564  0053'                    l3873:
  6565  0053' 3001               	movlw	1
  6566  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  6567  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  6568  0056' 02AC'              	subwf	___llmod@counter,f
  6569  0057' 1D03               	btfss	3,2
  6570  0058' 2800'              	goto	u7281
  6571  0059' 2800'              	goto	u7280
  6572  005A'                    u7281:
  6573  005A' 2800'              	goto	l3867
  6574  005B'                    u7280:
  6575  005B'                    l3875:
  6576  005B' 1683               	bsf	3,5	;RP0=1, select bank1
  6577  005C' 1303               	bcf	3,6	;RP1=0, select bank1
  6578  005D' 0800'              	movf	(___llmod@dividend+3)^(0+128),w
  6579  005E' 0080'              	movwf	(?___llmod+3)^(0+128)
  6580  005F' 0800'              	movf	(___llmod@dividend+2)^(0+128),w
  6581  0060' 0080'              	movwf	(?___llmod+2)^(0+128)
  6582  0061' 0800'              	movf	(___llmod@dividend+1)^(0+128),w
  6583  0062' 0080'              	movwf	(?___llmod+1)^(0+128)
  6584  0063' 0800'              	movf	___llmod@dividend^(0+128),w
  6585  0064' 0080'              	movwf	?___llmod^(0+128)
  6586  0065'                    l549:
  6587  0065' 0008               	return
  6588  0066'                    __end_of___llmod:
  6589                           
  6590                           	psect	text15
  6591  0000'                    __ptext15:	
  6592 ;; *************** function ___lldiv *****************
  6593 ;; Defined at:
  6594 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  divisor         4   29[BANK0 ] unsigned long 
  6597 ;;  dividend        4   33[BANK0 ] unsigned long 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  quotient        4   38[BANK0 ] unsigned long 
  6600 ;;  counter         1   42[BANK0 ] unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  4   29[BANK0 ] unsigned long 
  6603 ;; Registers used:
  6604 ;;		wreg, status,2, status,0
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6610 ;;      Params:         0       8       0       0       0
  6611 ;;      Locals:         0       5       0       0       0
  6612 ;;      Temps:          0       1       0       0       0
  6613 ;;      Totals:         0      14       0       0       0
  6614 ;;Total ram usage:       14 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; Hardware stack levels required when called: 3
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_sprintf
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624  0000'                    ___lldiv:	
  6625                           ;psect for function ___lldiv
  6626                           
  6627  0000'                    l2969:	
  6628                           ;incstack = 0
  6629                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6630                           
  6631  0000' 3000               	movlw	0
  6632  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  6633  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  6634  0003' 00A9'              	movwf	___lldiv@quotient+3
  6635  0004' 3000               	movlw	0
  6636  0005' 00A8'              	movwf	___lldiv@quotient+2
  6637  0006' 3000               	movlw	0
  6638  0007' 00A7'              	movwf	___lldiv@quotient+1
  6639  0008' 3000               	movlw	0
  6640  0009' 00A6'              	movwf	___lldiv@quotient
  6641  000A' 0820'              	movf	___lldiv@divisor+3,w
  6642  000B' 041F'              	iorwf	___lldiv@divisor+2,w
  6643  000C' 041E'              	iorwf	___lldiv@divisor+1,w
  6644  000D' 041D'              	iorwf	___lldiv@divisor,w
  6645  000E' 1903               	skipnz
  6646  000F' 2800'              	goto	u5091
  6647  0010' 2800'              	goto	u5090
  6648  0011'                    u5091:
  6649  0011' 2800'              	goto	l2989
  6650  0012'                    u5090:
  6651  0012'                    l2971:
  6652  0012' 01AA'              	clrf	___lldiv@counter
  6653  0013' 0AAA'              	incf	___lldiv@counter,f
  6654  0014' 2800'              	goto	l2975
  6655  0015'                    l2973:
  6656  0015' 3001               	movlw	1
  6657  0016' 00A5'              	movwf	??___lldiv
  6658  0017'                    u5105:
  6659  0017' 1003               	clrc
  6660  0018' 0D9D'              	rlf	___lldiv@divisor,f
  6661  0019' 0D9E'              	rlf	___lldiv@divisor+1,f
  6662  001A' 0D9F'              	rlf	___lldiv@divisor+2,f
  6663  001B' 0DA0'              	rlf	___lldiv@divisor+3,f
  6664  001C' 0BA5'              	decfsz	??___lldiv,f
  6665  001D' 2800'              	goto	u5105
  6666  001E' 3001               	movlw	1
  6667  001F' 00A5'              	movwf	??___lldiv
  6668  0020' 0825'              	movf	??___lldiv,w
  6669  0021' 07AA'              	addwf	___lldiv@counter,f
  6670  0022'                    l2975:
  6671  0022' 1FA0'              	btfss	___lldiv@divisor+3,7
  6672  0023' 2800'              	goto	u5111
  6673  0024' 2800'              	goto	u5110
  6674  0025'                    u5111:
  6675  0025' 2800'              	goto	l2973
  6676  0026'                    u5110:
  6677  0026'                    l2977:
  6678  0026' 3001               	movlw	1
  6679  0027' 00A5'              	movwf	??___lldiv
  6680  0028'                    u5125:
  6681  0028' 1003               	clrc
  6682  0029' 0DA6'              	rlf	___lldiv@quotient,f
  6683  002A' 0DA7'              	rlf	___lldiv@quotient+1,f
  6684  002B' 0DA8'              	rlf	___lldiv@quotient+2,f
  6685  002C' 0DA9'              	rlf	___lldiv@quotient+3,f
  6686  002D' 0BA5'              	decfsz	??___lldiv,f
  6687  002E' 2800'              	goto	u5125
  6688  002F'                    l2979:
  6689  002F' 0820'              	movf	___lldiv@divisor+3,w
  6690  0030' 0224'              	subwf	___lldiv@dividend+3,w
  6691  0031' 1D03               	skipz
  6692  0032' 2800'              	goto	u5135
  6693  0033' 081F'              	movf	___lldiv@divisor+2,w
  6694  0034' 0223'              	subwf	___lldiv@dividend+2,w
  6695  0035' 1D03               	skipz
  6696  0036' 2800'              	goto	u5135
  6697  0037' 081E'              	movf	___lldiv@divisor+1,w
  6698  0038' 0222'              	subwf	___lldiv@dividend+1,w
  6699  0039' 1D03               	skipz
  6700  003A' 2800'              	goto	u5135
  6701  003B' 081D'              	movf	___lldiv@divisor,w
  6702  003C' 0221'              	subwf	___lldiv@dividend,w
  6703  003D'                    u5135:
  6704  003D' 1C03               	skipc
  6705  003E' 2800'              	goto	u5131
  6706  003F' 2800'              	goto	u5130
  6707  0040'                    u5131:
  6708  0040' 2800'              	goto	l2985
  6709  0041'                    u5130:
  6710  0041'                    l2981:
  6711  0041' 081D'              	movf	___lldiv@divisor,w
  6712  0042' 02A1'              	subwf	___lldiv@dividend,f
  6713  0043' 081E'              	movf	___lldiv@divisor+1,w
  6714  0044' 1C03               	skipc
  6715  0045' 0F1E'              	incfsz	___lldiv@divisor+1,w
  6716  0046' 02A2'              	subwf	___lldiv@dividend+1,f
  6717  0047' 081F'              	movf	___lldiv@divisor+2,w
  6718  0048' 1C03               	skipc
  6719  0049' 0F1F'              	incfsz	___lldiv@divisor+2,w
  6720  004A' 02A3'              	subwf	___lldiv@dividend+2,f
  6721  004B' 0820'              	movf	___lldiv@divisor+3,w
  6722  004C' 1C03               	skipc
  6723  004D' 0F20'              	incfsz	___lldiv@divisor+3,w
  6724  004E' 02A4'              	subwf	___lldiv@dividend+3,f
  6725  004F'                    l2983:
  6726  004F' 1426'              	bsf	___lldiv@quotient,0
  6727  0050'                    l2985:
  6728  0050' 3001               	movlw	1
  6729  0051'                    u5145:
  6730  0051' 1003               	clrc
  6731  0052' 0CA0'              	rrf	___lldiv@divisor+3,f
  6732  0053' 0C9F'              	rrf	___lldiv@divisor+2,f
  6733  0054' 0C9E'              	rrf	___lldiv@divisor+1,f
  6734  0055' 0C9D'              	rrf	___lldiv@divisor,f
  6735  0056' 3EFF               	addlw	-1
  6736  0057' 1D03               	skipz
  6737  0058' 2800'              	goto	u5145
  6738  0059'                    l2987:
  6739  0059' 3001               	movlw	1
  6740  005A' 02AA'              	subwf	___lldiv@counter,f
  6741  005B' 1D03               	btfss	3,2
  6742  005C' 2800'              	goto	u5151
  6743  005D' 2800'              	goto	u5150
  6744  005E'                    u5151:
  6745  005E' 2800'              	goto	l2977
  6746  005F'                    u5150:
  6747  005F'                    l2989:
  6748  005F' 0829'              	movf	___lldiv@quotient+3,w
  6749  0060' 00A0'              	movwf	?___lldiv+3
  6750  0061' 0828'              	movf	___lldiv@quotient+2,w
  6751  0062' 009F'              	movwf	?___lldiv+2
  6752  0063' 0827'              	movf	___lldiv@quotient+1,w
  6753  0064' 009E'              	movwf	?___lldiv+1
  6754  0065' 0826'              	movf	___lldiv@quotient,w
  6755  0066' 009D'              	movwf	?___lldiv
  6756  0067'                    l329:
  6757  0067' 0008               	return
  6758  0068'                    __end_of___lldiv:
  6759                           
  6760                           	psect	text16
  6761  0000'                    __ptext16:	
  6762 ;; *************** function ___fltol *****************
  6763 ;; Defined at:
  6764 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  f1              4   45[BANK1 ] unsigned long 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  exp1            1   46[BANK0 ] unsigned char 
  6769 ;;  sign1           1   45[BANK0 ] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  4   45[BANK1 ] long 
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6779 ;;      Params:         0       0       4       0       0
  6780 ;;      Locals:         0       2       0       0       0
  6781 ;;      Temps:          0       0       5       0       0
  6782 ;;      Totals:         0       2       9       0       0
  6783 ;;Total ram usage:       11 bytes
  6784 ;; Hardware stack levels used: 1
  6785 ;; Hardware stack levels required when called: 3
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_sprintf
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793  0000'                    ___fltol:	
  6794                           ;psect for function ___fltol
  6795                           
  6796  0000'                    l3823:	
  6797                           ;incstack = 0
  6798                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6799                           
  6800  0000' 1003               	clrc
  6801  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  6802  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  6803  0003' 0D00'              	rlf	(___fltol@f1+2)^(0+128),w
  6804  0004' 0D00'              	rlf	(___fltol@f1+3)^(0+128),w
  6805  0005' 0080'              	movwf	??___fltol^(0+128)
  6806  0006' 0800'              	movf	??___fltol^(0+128),w
  6807  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  6808  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  6809  0009' 00AE'              	movwf	___fltol@exp1
  6810  000A' 082E'              	movf	___fltol@exp1,w
  6811  000B' 1D03               	btfss	3,2
  6812  000C' 2800'              	goto	u7131
  6813  000D' 2800'              	goto	u7130
  6814  000E'                    u7131:
  6815  000E' 2800'              	goto	l3829
  6816  000F'                    u7130:
  6817  000F'                    l3825:
  6818  000F' 3000               	movlw	0
  6819  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  6820  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  6821  0012' 0080'              	movwf	(?___fltol+3)^(0+128)
  6822  0013' 3000               	movlw	0
  6823  0014' 0080'              	movwf	(?___fltol+2)^(0+128)
  6824  0015' 3000               	movlw	0
  6825  0016' 0080'              	movwf	(?___fltol+1)^(0+128)
  6826  0017' 3000               	movlw	0
  6827  0018' 0080'              	movwf	?___fltol^(0+128)
  6828  0019' 2800'              	goto	l496
  6829  001A'                    l3829:
  6830  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  6831  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  6832  001C' 0800'              	movf	___fltol@f1^(0+128),w
  6833  001D' 0080'              	movwf	??___fltol^(0+128)
  6834  001E' 0800'              	movf	(___fltol@f1+1)^(0+128),w
  6835  001F' 0081'              	movwf	(??___fltol^(0+128)+1)
  6836  0020' 0800'              	movf	(___fltol@f1+2)^(0+128),w
  6837  0021' 0082'              	movwf	(??___fltol^(0+128)+2)
  6838  0022' 0800'              	movf	(___fltol@f1+3)^(0+128),w
  6839  0023' 0083'              	movwf	(??___fltol^(0+128)+3)
  6840  0024' 301F               	movlw	31
  6841  0025'                    u7145:
  6842  0025' 1003               	clrc
  6843  0026' 0C83'              	rrf	(??___fltol^(0+128)+3),f
  6844  0027' 0C82'              	rrf	(??___fltol^(0+128)+2),f
  6845  0028' 0C81'              	rrf	(??___fltol^(0+128)+1),f
  6846  0029' 0C80'              	rrf	??___fltol^(0+128),f
  6847  002A'                    u7140:
  6848  002A' 3EFF               	addlw	-1
  6849  002B' 1D03               	skipz
  6850  002C' 2800'              	goto	u7145
  6851  002D' 0800'              	movf	??___fltol^(0+128),w
  6852  002E' 0080'              	movwf	(??___fltol+4)^(0+128)
  6853  002F' 0800'              	movf	(??___fltol+4)^(0+128),w
  6854  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  6855  0031' 1303               	bcf	3,6	;RP1=0, select bank0
  6856  0032' 00AD'              	movwf	___fltol@sign1
  6857  0033'                    l3831:
  6858  0033' 1683               	bsf	3,5	;RP0=1, select bank1
  6859  0034' 1303               	bcf	3,6	;RP1=0, select bank1
  6860  0035' 1782'              	bsf	(___fltol@f1^(0+128)+2),7
  6861  0036'                    l3833:
  6862  0036' 30FF               	movlw	255
  6863  0037' 0580'              	andwf	___fltol@f1^(0+128),f
  6864  0038' 30FF               	movlw	255
  6865  0039' 0580'              	andwf	(___fltol@f1+1)^(0+128),f
  6866  003A' 30FF               	movlw	255
  6867  003B' 0580'              	andwf	(___fltol@f1+2)^(0+128),f
  6868  003C' 3000               	movlw	0
  6869  003D' 0580'              	andwf	(___fltol@f1+3)^(0+128),f
  6870  003E'                    l3835:
  6871  003E' 3096               	movlw	150
  6872  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  6873  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  6874  0041' 02AE'              	subwf	___fltol@exp1,f
  6875  0042'                    l3837:
  6876  0042' 1FAE'              	btfss	___fltol@exp1,7
  6877  0043' 2800'              	goto	u7151
  6878  0044' 2800'              	goto	u7150
  6879  0045'                    u7151:
  6880  0045' 2800'              	goto	l3847
  6881  0046'                    u7150:
  6882  0046'                    l3839:
  6883  0046' 082E'              	movf	___fltol@exp1,w
  6884  0047' 3A80               	xorlw	128
  6885  0048' 3E97               	addlw	151
  6886  0049' 1803               	skipnc
  6887  004A' 2800'              	goto	u7161
  6888  004B' 2800'              	goto	u7160
  6889  004C'                    u7161:
  6890  004C' 2800'              	goto	l3845
  6891  004D'                    u7160:
  6892  004D' 2800'              	goto	l3825
  6893  004E'                    l3845:
  6894  004E' 3001               	movlw	1
  6895  004F'                    u7175:
  6896  004F' 1003               	clrc
  6897  0050' 1683               	bsf	3,5	;RP0=1, select bank1
  6898  0051' 1303               	bcf	3,6	;RP1=0, select bank1
  6899  0052' 0C80'              	rrf	(___fltol@f1+3)^(0+128),f
  6900  0053' 0C80'              	rrf	(___fltol@f1+2)^(0+128),f
  6901  0054' 0C80'              	rrf	(___fltol@f1+1)^(0+128),f
  6902  0055' 0C80'              	rrf	___fltol@f1^(0+128),f
  6903  0056' 3EFF               	addlw	-1
  6904  0057' 1D03               	skipz
  6905  0058' 2800'              	goto	u7175
  6906  0059' 3001               	movlw	1
  6907  005A' 0080'              	movwf	??___fltol^(0+128)
  6908  005B' 0800'              	movf	??___fltol^(0+128),w
  6909  005C' 1283               	bcf	3,5	;RP0=0, select bank0
  6910  005D' 1303               	bcf	3,6	;RP1=0, select bank0
  6911  005E' 07AE'              	addwf	___fltol@exp1,f
  6912  005F' 1D03               	btfss	3,2
  6913  0060' 2800'              	goto	u7181
  6914  0061' 2800'              	goto	u7180
  6915  0062'                    u7181:
  6916  0062' 2800'              	goto	l3845
  6917  0063'                    u7180:
  6918  0063' 2800'              	goto	l3855
  6919  0064'                    l3847:
  6920  0064' 3020               	movlw	32
  6921  0065' 022E'              	subwf	___fltol@exp1,w
  6922  0066' 1C03               	skipc
  6923  0067' 2800'              	goto	u7191
  6924  0068' 2800'              	goto	u7190
  6925  0069'                    u7191:
  6926  0069' 2800'              	goto	l503
  6927  006A'                    u7190:
  6928  006A' 2800'              	goto	l3825
  6929  006B'                    l3853:
  6930  006B' 3001               	movlw	1
  6931  006C' 1683               	bsf	3,5	;RP0=1, select bank1
  6932  006D' 1303               	bcf	3,6	;RP1=0, select bank1
  6933  006E' 0080'              	movwf	??___fltol^(0+128)
  6934  006F'                    u7205:
  6935  006F' 1003               	clrc
  6936  0070' 0D80'              	rlf	___fltol@f1^(0+128),f
  6937  0071' 0D80'              	rlf	(___fltol@f1+1)^(0+128),f
  6938  0072' 0D80'              	rlf	(___fltol@f1+2)^(0+128),f
  6939  0073' 0D80'              	rlf	(___fltol@f1+3)^(0+128),f
  6940  0074' 0B80'              	decfsz	??___fltol^(0+128),f
  6941  0075' 2800'              	goto	u7205
  6942  0076' 3001               	movlw	1
  6943  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  6944  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  6945  0079' 02AE'              	subwf	___fltol@exp1,f
  6946  007A'                    l503:
  6947  007A' 082E'              	movf	___fltol@exp1,w
  6948  007B' 1D03               	btfss	3,2
  6949  007C' 2800'              	goto	u7211
  6950  007D' 2800'              	goto	u7210
  6951  007E'                    u7211:
  6952  007E' 2800'              	goto	l3853
  6953  007F'                    u7210:
  6954  007F'                    l3855:
  6955  007F' 082D'              	movf	___fltol@sign1,w
  6956  0080' 1903               	btfsc	3,2
  6957  0081' 2800'              	goto	u7221
  6958  0082' 2800'              	goto	u7220
  6959  0083'                    u7221:
  6960  0083' 2800'              	goto	l506
  6961  0084'                    u7220:
  6962  0084'                    l3857:
  6963  0084' 1683               	bsf	3,5	;RP0=1, select bank1
  6964  0085' 1303               	bcf	3,6	;RP1=0, select bank1
  6965  0086' 0980'              	comf	___fltol@f1^(0+128),f
  6966  0087' 0980'              	comf	(___fltol@f1+1)^(0+128),f
  6967  0088' 0980'              	comf	(___fltol@f1+2)^(0+128),f
  6968  0089' 0980'              	comf	(___fltol@f1+3)^(0+128),f
  6969  008A' 0A80'              	incf	___fltol@f1^(0+128),f
  6970  008B' 1903               	skipnz
  6971  008C' 0A80'              	incf	(___fltol@f1+1)^(0+128),f
  6972  008D' 1903               	skipnz
  6973  008E' 0A80'              	incf	(___fltol@f1+2)^(0+128),f
  6974  008F' 1903               	skipnz
  6975  0090' 0A80'              	incf	(___fltol@f1+3)^(0+128),f
  6976  0091'                    l506:
  6977  0091'                    l496:
  6978  0091' 0008               	return
  6979  0092'                    __end_of___fltol:
  6980                           
  6981                           	psect	text17
  6982  0000'                    __ptext17:	
  6983 ;; *************** function ___flsub *****************
  6984 ;; Defined at:
  6985 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  a               4   66[BANK1 ] long 
  6988 ;;  b               4   70[BANK1 ] long 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  4   66[BANK1 ] long 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7000 ;;      Params:         0       0       8       0       0
  7001 ;;      Locals:         0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0
  7003 ;;      Totals:         0       0       8       0       0
  7004 ;;Total ram usage:        8 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 4
  7007 ;; This function calls:
  7008 ;;		___fladd
  7009 ;; This function is called by:
  7010 ;;		_sprintf
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014  0000'                    ___flsub:	
  7015                           ;psect for function ___flsub
  7016                           
  7017  0000'                    l3089:	
  7018                           ;incstack = 0
  7019                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7020                           
  7021  0000' 3080               	movlw	128
  7022  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  7023  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  7024  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  7025  0004'                    l3091:
  7026  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  7027  0005' 0080'              	movwf	(___fladd@b+3)^(0+128)
  7028  0006' 0800'              	movf	(___flsub@b+2)^(0+128),w
  7029  0007' 0080'              	movwf	(___fladd@b+2)^(0+128)
  7030  0008' 0800'              	movf	(___flsub@b+1)^(0+128),w
  7031  0009' 0080'              	movwf	(___fladd@b+1)^(0+128)
  7032  000A' 0800'              	movf	___flsub@b^(0+128),w
  7033  000B' 0080'              	movwf	___fladd@b^(0+128)
  7034  000C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  7035  000D' 0080'              	movwf	(___fladd@a+3)^(0+128)
  7036  000E' 0800'              	movf	(___flsub@a+2)^(0+128),w
  7037  000F' 0080'              	movwf	(___fladd@a+2)^(0+128)
  7038  0010' 0800'              	movf	(___flsub@a+1)^(0+128),w
  7039  0011' 0080'              	movwf	(___fladd@a+1)^(0+128)
  7040  0012' 0800'              	movf	___flsub@a^(0+128),w
  7041  0013' 0080'              	movwf	___fladd@a^(0+128)
  7042  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  7043  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  7044  001A' 1303               	bcf	3,6	;RP1=0, select bank1
  7045  001B' 0800'              	movf	(?___fladd+3)^(0+128),w
  7046  001C' 0080'              	movwf	(?___flsub+3)^(0+128)
  7047  001D' 0800'              	movf	(?___fladd+2)^(0+128),w
  7048  001E' 0080'              	movwf	(?___flsub+2)^(0+128)
  7049  001F' 0800'              	movf	(?___fladd+1)^(0+128),w
  7050  0020' 0080'              	movwf	(?___flsub+1)^(0+128)
  7051  0021' 0800'              	movf	?___fladd^(0+128),w
  7052  0022' 0080'              	movwf	?___flsub^(0+128)
  7053  0023'                    l666:
  7054  0023' 0008               	return
  7055  0024'                    __end_of___flsub:
  7056                           
  7057                           	psect	text18
  7058  0000'                    __ptext18:	
  7059 ;; *************** function ___fladd *****************
  7060 ;; Defined at:
  7061 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  b               4   46[BANK1 ] long 
  7064 ;;  a               4   50[BANK1 ] long 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  grs             1   65[BANK1 ] unsigned char 
  7067 ;;  bexp            1   64[BANK1 ] unsigned char 
  7068 ;;  aexp            1   63[BANK1 ] unsigned char 
  7069 ;;  signs           1   62[BANK1 ] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  4   46[BANK1 ] unsigned char 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, btemp+1
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7079 ;;      Params:         0       0       8       0       0
  7080 ;;      Locals:         0       0       4       0       0
  7081 ;;      Temps:          0       0       8       0       0
  7082 ;;      Totals:         0       0      20       0       0
  7083 ;;Total ram usage:       20 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 3
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_sprintf
  7090 ;;		___flsub
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094  0000'                    ___fladd:	
  7095                           ;psect for function ___fladd
  7096                           
  7097  0000'                    l2435:	
  7098                           ;incstack = 0
  7099                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7100                           
  7101  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  7102  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  7103  0002' 0803'              	movf	(___fladd@b^(0+128)+3),w
  7104  0003' 3980               	andlw	128
  7105  0004' 0080'              	movwf	??___fladd^(0+128)
  7106  0005' 0800'              	movf	??___fladd^(0+128),w
  7107  0006' 0080'              	movwf	___fladd@signs^(0+128)
  7108  0007'                    l2437:
  7109  0007' 0803'              	movf	(___fladd@b^(0+128)+3),w
  7110  0008' 0080'              	movwf	??___fladd^(0+128)
  7111  0009' 0700'              	addwf	??___fladd^(0+128),w
  7112  000A' 0080'              	movwf	(??___fladd+1)^(0+128)
  7113  000B' 0800'              	movf	(??___fladd+1)^(0+128),w
  7114  000C' 0080'              	movwf	___fladd@bexp^(0+128)
  7115  000D'                    l2439:
  7116  000D' 1F82'              	btfss	(___fladd@b^(0+128)+2),7
  7117  000E' 2800'              	goto	u3701
  7118  000F' 2800'              	goto	u3700
  7119  0010'                    u3701:
  7120  0010' 2800'              	goto	l2443
  7121  0011'                    u3700:
  7122  0011'                    l2441:
  7123  0011' 1400'              	bsf	___fladd@bexp^(0+128),0
  7124  0012'                    l2443:
  7125  0012' 0800'              	movf	___fladd@bexp^(0+128),w
  7126  0013' 1903               	btfsc	3,2
  7127  0014' 2800'              	goto	u3711
  7128  0015' 2800'              	goto	u3710
  7129  0016'                    u3711:
  7130  0016' 2800'              	goto	l2453
  7131  0017'                    u3710:
  7132  0017'                    l2445:
  7133  0017' 0A00'              	incf	___fladd@bexp^(0+128),w
  7134  0018' 1D03               	btfss	3,2
  7135  0019' 2800'              	goto	u3721
  7136  001A' 2800'              	goto	u3720
  7137  001B'                    u3721:
  7138  001B' 2800'              	goto	l2449
  7139  001C'                    u3720:
  7140  001C'                    l2447:
  7141  001C' 3000               	movlw	0
  7142  001D' 0080'              	movwf	(___fladd@b+3)^(0+128)
  7143  001E' 3000               	movlw	0
  7144  001F' 0080'              	movwf	(___fladd@b+2)^(0+128)
  7145  0020' 3000               	movlw	0
  7146  0021' 0080'              	movwf	(___fladd@b+1)^(0+128)
  7147  0022' 3000               	movlw	0
  7148  0023' 0080'              	movwf	___fladd@b^(0+128)
  7149  0024'                    l2449:
  7150  0024' 1782'              	bsf	(___fladd@b^(0+128)+2),7
  7151  0025'                    l2451:
  7152  0025' 0183'              	clrf	(___fladd@b^(0+128)+3)
  7153  0026' 2800'              	goto	l2455
  7154  0027'                    l2453:
  7155  0027' 3000               	movlw	0
  7156  0028' 0080'              	movwf	(___fladd@b+3)^(0+128)
  7157  0029' 3000               	movlw	0
  7158  002A' 0080'              	movwf	(___fladd@b+2)^(0+128)
  7159  002B' 3000               	movlw	0
  7160  002C' 0080'              	movwf	(___fladd@b+1)^(0+128)
  7161  002D' 3000               	movlw	0
  7162  002E' 0080'              	movwf	___fladd@b^(0+128)
  7163  002F'                    l2455:
  7164  002F' 0803'              	movf	(___fladd@a^(0+128)+3),w
  7165  0030' 3980               	andlw	128
  7166  0031' 0080'              	movwf	??___fladd^(0+128)
  7167  0032' 0800'              	movf	??___fladd^(0+128),w
  7168  0033' 0080'              	movwf	___fladd@aexp^(0+128)
  7169  0034'                    l2457:
  7170  0034' 0800'              	movf	___fladd@aexp^(0+128),w
  7171  0035' 0600'              	xorwf	___fladd@signs^(0+128),w
  7172  0036' 1903               	skipnz
  7173  0037' 2800'              	goto	u3731
  7174  0038' 2800'              	goto	u3730
  7175  0039'                    u3731:
  7176  0039' 2800'              	goto	l2461
  7177  003A'                    u3730:
  7178  003A'                    l2459:
  7179  003A' 1700'              	bsf	___fladd@signs^(0+128),6
  7180  003B'                    l2461:
  7181  003B' 0803'              	movf	(___fladd@a^(0+128)+3),w
  7182  003C' 0080'              	movwf	??___fladd^(0+128)
  7183  003D' 0700'              	addwf	??___fladd^(0+128),w
  7184  003E' 0080'              	movwf	(??___fladd+1)^(0+128)
  7185  003F' 0800'              	movf	(??___fladd+1)^(0+128),w
  7186  0040' 0080'              	movwf	___fladd@aexp^(0+128)
  7187  0041'                    l2463:
  7188  0041' 1F82'              	btfss	(___fladd@a^(0+128)+2),7
  7189  0042' 2800'              	goto	u3741
  7190  0043' 2800'              	goto	u3740
  7191  0044'                    u3741:
  7192  0044' 2800'              	goto	l2467
  7193  0045'                    u3740:
  7194  0045'                    l2465:
  7195  0045' 1400'              	bsf	___fladd@aexp^(0+128),0
  7196  0046'                    l2467:
  7197  0046' 0800'              	movf	___fladd@aexp^(0+128),w
  7198  0047' 1903               	btfsc	3,2
  7199  0048' 2800'              	goto	u3751
  7200  0049' 2800'              	goto	u3750
  7201  004A'                    u3751:
  7202  004A' 2800'              	goto	l2477
  7203  004B'                    u3750:
  7204  004B'                    l2469:
  7205  004B' 0A00'              	incf	___fladd@aexp^(0+128),w
  7206  004C' 1D03               	btfss	3,2
  7207  004D' 2800'              	goto	u3761
  7208  004E' 2800'              	goto	u3760
  7209  004F'                    u3761:
  7210  004F' 2800'              	goto	l2473
  7211  0050'                    u3760:
  7212  0050'                    l2471:
  7213  0050' 3000               	movlw	0
  7214  0051' 0080'              	movwf	(___fladd@a+3)^(0+128)
  7215  0052' 3000               	movlw	0
  7216  0053' 0080'              	movwf	(___fladd@a+2)^(0+128)
  7217  0054' 3000               	movlw	0
  7218  0055' 0080'              	movwf	(___fladd@a+1)^(0+128)
  7219  0056' 3000               	movlw	0
  7220  0057' 0080'              	movwf	___fladd@a^(0+128)
  7221  0058'                    l2473:
  7222  0058' 1782'              	bsf	(___fladd@a^(0+128)+2),7
  7223  0059'                    l2475:
  7224  0059' 0183'              	clrf	(___fladd@a^(0+128)+3)
  7225  005A' 2800'              	goto	l620
  7226  005B'                    l2477:
  7227  005B' 3000               	movlw	0
  7228  005C' 0080'              	movwf	(___fladd@a+3)^(0+128)
  7229  005D' 3000               	movlw	0
  7230  005E' 0080'              	movwf	(___fladd@a+2)^(0+128)
  7231  005F' 3000               	movlw	0
  7232  0060' 0080'              	movwf	(___fladd@a+1)^(0+128)
  7233  0061' 3000               	movlw	0
  7234  0062' 0080'              	movwf	___fladd@a^(0+128)
  7235  0063'                    l620:
  7236  0063' 0800'              	movf	___fladd@bexp^(0+128),w
  7237  0064' 0200'              	subwf	___fladd@aexp^(0+128),w
  7238  0065' 1803               	skipnc
  7239  0066' 2800'              	goto	u3771
  7240  0067' 2800'              	goto	u3770
  7241  0068'                    u3771:
  7242  0068' 2800'              	goto	l2513
  7243  0069'                    u3770:
  7244  0069'                    l2479:
  7245  0069' 1F00'              	btfss	___fladd@signs^(0+128),6
  7246  006A' 2800'              	goto	u3781
  7247  006B' 2800'              	goto	u3780
  7248  006C'                    u3781:
  7249  006C' 2800'              	goto	l2483
  7250  006D'                    u3780:
  7251  006D'                    l2481:
  7252  006D' 3080               	movlw	128
  7253  006E' 0080'              	movwf	??___fladd^(0+128)
  7254  006F' 0800'              	movf	??___fladd^(0+128),w
  7255  0070' 0680'              	xorwf	___fladd@signs^(0+128),f
  7256  0071'                    l2483:
  7257  0071' 0800'              	movf	___fladd@bexp^(0+128),w
  7258  0072' 0080'              	movwf	??___fladd^(0+128)
  7259  0073' 0800'              	movf	??___fladd^(0+128),w
  7260  0074' 0080'              	movwf	___fladd@grs^(0+128)
  7261  0075'                    l2485:
  7262  0075' 0800'              	movf	___fladd@aexp^(0+128),w
  7263  0076' 0080'              	movwf	??___fladd^(0+128)
  7264  0077' 0800'              	movf	??___fladd^(0+128),w
  7265  0078' 0080'              	movwf	___fladd@bexp^(0+128)
  7266  0079'                    l2487:
  7267  0079' 0800'              	movf	___fladd@grs^(0+128),w
  7268  007A' 0080'              	movwf	??___fladd^(0+128)
  7269  007B' 0800'              	movf	??___fladd^(0+128),w
  7270  007C' 0080'              	movwf	___fladd@aexp^(0+128)
  7271  007D'                    l2489:
  7272  007D' 0800'              	movf	___fladd@b^(0+128),w
  7273  007E' 0080'              	movwf	??___fladd^(0+128)
  7274  007F' 0800'              	movf	??___fladd^(0+128),w
  7275  0080' 0080'              	movwf	___fladd@grs^(0+128)
  7276  0081'                    l2491:
  7277  0081' 0800'              	movf	___fladd@a^(0+128),w
  7278  0082' 0080'              	movwf	??___fladd^(0+128)
  7279  0083' 0800'              	movf	??___fladd^(0+128),w
  7280  0084' 0080'              	movwf	___fladd@b^(0+128)
  7281  0085'                    l2493:
  7282  0085' 0800'              	movf	___fladd@grs^(0+128),w
  7283  0086' 0080'              	movwf	??___fladd^(0+128)
  7284  0087' 0800'              	movf	??___fladd^(0+128),w
  7285  0088' 0080'              	movwf	___fladd@a^(0+128)
  7286  0089'                    l2495:
  7287  0089' 0801'              	movf	(___fladd@b^(0+128)+1),w
  7288  008A' 0080'              	movwf	??___fladd^(0+128)
  7289  008B' 0800'              	movf	??___fladd^(0+128),w
  7290  008C' 0080'              	movwf	___fladd@grs^(0+128)
  7291  008D'                    l2497:
  7292  008D' 0801'              	movf	(___fladd@a^(0+128)+1),w
  7293  008E' 0080'              	movwf	??___fladd^(0+128)
  7294  008F' 0800'              	movf	??___fladd^(0+128),w
  7295  0090' 0081'              	movwf	(___fladd@b^(0+128)+1)
  7296  0091'                    l2499:
  7297  0091' 0800'              	movf	___fladd@grs^(0+128),w
  7298  0092' 0080'              	movwf	??___fladd^(0+128)
  7299  0093' 0800'              	movf	??___fladd^(0+128),w
  7300  0094' 0081'              	movwf	(___fladd@a^(0+128)+1)
  7301  0095'                    l2501:
  7302  0095' 0802'              	movf	(___fladd@b^(0+128)+2),w
  7303  0096' 0080'              	movwf	??___fladd^(0+128)
  7304  0097' 0800'              	movf	??___fladd^(0+128),w
  7305  0098' 0080'              	movwf	___fladd@grs^(0+128)
  7306  0099'                    l2503:
  7307  0099' 0802'              	movf	(___fladd@a^(0+128)+2),w
  7308  009A' 0080'              	movwf	??___fladd^(0+128)
  7309  009B' 0800'              	movf	??___fladd^(0+128),w
  7310  009C' 0082'              	movwf	(___fladd@b^(0+128)+2)
  7311  009D'                    l2505:
  7312  009D' 0800'              	movf	___fladd@grs^(0+128),w
  7313  009E' 0080'              	movwf	??___fladd^(0+128)
  7314  009F' 0800'              	movf	??___fladd^(0+128),w
  7315  00A0' 0082'              	movwf	(___fladd@a^(0+128)+2)
  7316  00A1'                    l2507:
  7317  00A1' 0803'              	movf	(___fladd@b^(0+128)+3),w
  7318  00A2' 0080'              	movwf	??___fladd^(0+128)
  7319  00A3' 0800'              	movf	??___fladd^(0+128),w
  7320  00A4' 0080'              	movwf	___fladd@grs^(0+128)
  7321  00A5'                    l2509:
  7322  00A5' 0803'              	movf	(___fladd@a^(0+128)+3),w
  7323  00A6' 0080'              	movwf	??___fladd^(0+128)
  7324  00A7' 0800'              	movf	??___fladd^(0+128),w
  7325  00A8' 0083'              	movwf	(___fladd@b^(0+128)+3)
  7326  00A9'                    l2511:
  7327  00A9' 0800'              	movf	___fladd@grs^(0+128),w
  7328  00AA' 0080'              	movwf	??___fladd^(0+128)
  7329  00AB' 0800'              	movf	??___fladd^(0+128),w
  7330  00AC' 0083'              	movwf	(___fladd@a^(0+128)+3)
  7331  00AD'                    l2513:
  7332  00AD' 0180'              	clrf	___fladd@grs^(0+128)
  7333  00AE'                    l2515:
  7334  00AE' 0800'              	movf	___fladd@aexp^(0+128),w
  7335  00AF' 0080'              	movwf	??___fladd^(0+128)
  7336  00B0' 0181'              	clrf	(??___fladd^(0+128)+1)
  7337  00B1' 0800'              	movf	(??___fladd+1)^(0+128),w
  7338  00B2' 0081'              	movwf	((??___fladd+2)^(0+128)+1)
  7339  00B3' 0800'              	movf	___fladd@bexp^(0+128),w
  7340  00B4' 0200'              	subwf	??___fladd^(0+128),w
  7341  00B5' 0080'              	movwf	(??___fladd+2)^(0+128)
  7342  00B6' 1C03               	skipc
  7343  00B7' 0381'              	decf	((??___fladd+2)^(0+128)+1),f
  7344  00B8' 0800'              	movf	(??___fladd+3)^(0+128),w
  7345  00B9' 3A80               	xorlw	128
  7346  00BA' 00FF               	movwf	btemp+1
  7347  00BB' 3080               	movlw	128
  7348  00BC' 027F               	subwf	btemp+1,w
  7349  00BD' 1D03               	skipz
  7350  00BE' 2800'              	goto	u3795
  7351  00BF' 301A               	movlw	26
  7352  00C0' 0200'              	subwf	(??___fladd+2)^(0+128),w
  7353  00C1'                    u3795:
  7354  00C1' 1C03               	skipc
  7355  00C2' 2800'              	goto	u3791
  7356  00C3' 2800'              	goto	u3790
  7357  00C4'                    u3791:
  7358  00C4' 2800'              	goto	l2531
  7359  00C5'                    u3790:
  7360  00C5'                    l2517:
  7361  00C5' 1683               	bsf	3,5	;RP0=1, select bank1
  7362  00C6' 1303               	bcf	3,6	;RP1=0, select bank1
  7363  00C7' 0800'              	movf	(___fladd@b+3)^(0+128),w
  7364  00C8' 0400'              	iorwf	(___fladd@b+2)^(0+128),w
  7365  00C9' 0400'              	iorwf	(___fladd@b+1)^(0+128),w
  7366  00CA' 0400'              	iorwf	___fladd@b^(0+128),w
  7367  00CB' 1D03               	skipz
  7368  00CC' 2800'              	goto	u3801
  7369  00CD' 2800'              	goto	u3800
  7370  00CE'                    u3801:
  7371  00CE' 3001               	movlw	1
  7372  00CF' 2800'              	goto	u3810
  7373  00D0'                    u3800:
  7374  00D0' 3000               	movlw	0
  7375  00D1'                    u3810:
  7376  00D1' 0080'              	movwf	??___fladd^(0+128)
  7377  00D2' 0800'              	movf	??___fladd^(0+128),w
  7378  00D3' 0080'              	movwf	___fladd@grs^(0+128)
  7379  00D4' 3000               	movlw	0
  7380  00D5' 0080'              	movwf	(___fladd@b+3)^(0+128)
  7381  00D6' 3000               	movlw	0
  7382  00D7' 0080'              	movwf	(___fladd@b+2)^(0+128)
  7383  00D8' 3000               	movlw	0
  7384  00D9' 0080'              	movwf	(___fladd@b+1)^(0+128)
  7385  00DA' 3000               	movlw	0
  7386  00DB' 0080'              	movwf	___fladd@b^(0+128)
  7387  00DC' 0800'              	movf	___fladd@aexp^(0+128),w
  7388  00DD' 0080'              	movwf	??___fladd^(0+128)
  7389  00DE' 0800'              	movf	??___fladd^(0+128),w
  7390  00DF' 0080'              	movwf	___fladd@bexp^(0+128)
  7391  00E0' 2800'              	goto	l624
  7392  00E1'                    l626:
  7393  00E1' 1C00'              	btfss	___fladd@grs^(0+128),0
  7394  00E2' 2800'              	goto	u3821
  7395  00E3' 2800'              	goto	u3820
  7396  00E4'                    u3821:
  7397  00E4' 2800'              	goto	l2521
  7398  00E5'                    u3820:
  7399  00E5'                    l2519:
  7400  00E5' 0800'              	movf	___fladd@grs^(0+128),w
  7401  00E6' 0080'              	movwf	??___fladd^(0+128)
  7402  00E7' 1003               	clrc
  7403  00E8' 0C00'              	rrf	??___fladd^(0+128),w
  7404  00E9' 3801               	iorlw	1
  7405  00EA' 0080'              	movwf	(??___fladd+1)^(0+128)
  7406  00EB' 0800'              	movf	(??___fladd+1)^(0+128),w
  7407  00EC' 0080'              	movwf	___fladd@grs^(0+128)
  7408  00ED' 2800'              	goto	l2523
  7409  00EE'                    l2521:
  7410  00EE' 1003               	clrc
  7411  00EF' 0C80'              	rrf	___fladd@grs^(0+128),f
  7412  00F0'                    l2523:
  7413  00F0' 1C00'              	btfss	___fladd@b^(0+128),0
  7414  00F1' 2800'              	goto	u3831
  7415  00F2' 2800'              	goto	u3830
  7416  00F3'                    u3831:
  7417  00F3' 2800'              	goto	l2527
  7418  00F4'                    u3830:
  7419  00F4'                    l2525:
  7420  00F4' 1780'              	bsf	___fladd@grs^(0+128),7
  7421  00F5'                    l2527:
  7422  00F5' 3001               	movlw	1
  7423  00F6' 0080'              	movwf	??___fladd^(0+128)
  7424  00F7'                    u3845:
  7425  00F7' 0D00'              	rlf	(___fladd@b+3)^(0+128),w
  7426  00F8' 0C80'              	rrf	(___fladd@b+3)^(0+128),f
  7427  00F9' 0C80'              	rrf	(___fladd@b+2)^(0+128),f
  7428  00FA' 0C80'              	rrf	(___fladd@b+1)^(0+128),f
  7429  00FB' 0C80'              	rrf	___fladd@b^(0+128),f
  7430  00FC' 0B80'              	decfsz	(??___fladd^(0+128))& (0+127),f
  7431  00FD' 2800'              	goto	u3845
  7432  00FE'                    l2529:
  7433  00FE' 3001               	movlw	1
  7434  00FF' 0080'              	movwf	??___fladd^(0+128)
  7435  0100' 0800'              	movf	??___fladd^(0+128),w
  7436  0101' 0780'              	addwf	___fladd@bexp^(0+128),f
  7437  0102'                    l2531:
  7438  0102' 1683               	bsf	3,5	;RP0=1, select bank1
  7439  0103' 1303               	bcf	3,6	;RP1=0, select bank1
  7440  0104' 0800'              	movf	___fladd@aexp^(0+128),w
  7441  0105' 0200'              	subwf	___fladd@bexp^(0+128),w
  7442  0106' 1C03               	skipc
  7443  0107' 2800'              	goto	u3851
  7444  0108' 2800'              	goto	u3850
  7445  0109'                    u3851:
  7446  0109' 2800'              	goto	l626
  7447  010A'                    u3850:
  7448  010A'                    l624:
  7449  010A' 1B00'              	btfsc	___fladd@signs^(0+128),6
  7450  010B' 2800'              	goto	u3861
  7451  010C' 2800'              	goto	u3860
  7452  010D'                    u3861:
  7453  010D' 2800'              	goto	l2557
  7454  010E'                    u3860:
  7455  010E'                    l2533:
  7456  010E' 0800'              	movf	___fladd@bexp^(0+128),w
  7457  010F' 1D03               	btfss	3,2
  7458  0110' 2800'              	goto	u3871
  7459  0111' 2800'              	goto	u3870
  7460  0112'                    u3871:
  7461  0112' 2800'              	goto	l2539
  7462  0113'                    u3870:
  7463  0113'                    l2535:
  7464  0113' 3000               	movlw	0
  7465  0114' 0080'              	movwf	(?___fladd+3)^(0+128)
  7466  0115' 3000               	movlw	0
  7467  0116' 0080'              	movwf	(?___fladd+2)^(0+128)
  7468  0117' 3000               	movlw	0
  7469  0118' 0080'              	movwf	(?___fladd+1)^(0+128)
  7470  0119' 3000               	movlw	0
  7471  011A' 0080'              	movwf	?___fladd^(0+128)
  7472  011B' 2800'              	goto	l633
  7473  011C'                    l2539:
  7474  011C' 0800'              	movf	___fladd@a^(0+128),w
  7475  011D' 0780'              	addwf	___fladd@b^(0+128),f
  7476  011E' 0800'              	movf	(___fladd@a+1)^(0+128),w
  7477  011F' 1103               	clrz
  7478  0120' 1803               	skipnc
  7479  0121' 3E01               	addlw	1
  7480  0122' 1903               	skipnz
  7481  0123' 2800'              	goto	u3881
  7482  0124' 0780'              	addwf	(___fladd@b+1)^(0+128),f
  7483  0125'                    u3881:
  7484  0125' 0800'              	movf	(___fladd@a+2)^(0+128),w
  7485  0126' 1103               	clrz
  7486  0127' 1803               	skipnc
  7487  0128' 3E01               	addlw	1
  7488  0129' 1903               	skipnz
  7489  012A' 2800'              	goto	u3882
  7490  012B' 0780'              	addwf	(___fladd@b+2)^(0+128),f
  7491  012C'                    u3882:
  7492  012C' 0800'              	movf	(___fladd@a+3)^(0+128),w
  7493  012D' 1103               	clrz
  7494  012E' 1803               	skipnc
  7495  012F' 3E01               	addlw	1
  7496  0130' 1903               	skipnz
  7497  0131' 2800'              	goto	u3883
  7498  0132' 0780'              	addwf	(___fladd@b+3)^(0+128),f
  7499  0133'                    u3883:
  7500  0133'                    l2541:
  7501  0133' 1C00'              	btfss	(___fladd@b+3)^(0+128),0
  7502  0134' 2800'              	goto	u3891
  7503  0135' 2800'              	goto	u3890
  7504  0136'                    u3891:
  7505  0136' 2800'              	goto	l2591
  7506  0137'                    u3890:
  7507  0137'                    l2543:
  7508  0137' 1C00'              	btfss	___fladd@grs^(0+128),0
  7509  0138' 2800'              	goto	u3901
  7510  0139' 2800'              	goto	u3900
  7511  013A'                    u3901:
  7512  013A' 2800'              	goto	l2547
  7513  013B'                    u3900:
  7514  013B'                    l2545:
  7515  013B' 0800'              	movf	___fladd@grs^(0+128),w
  7516  013C' 0080'              	movwf	??___fladd^(0+128)
  7517  013D' 1003               	clrc
  7518  013E' 0C00'              	rrf	??___fladd^(0+128),w
  7519  013F' 3801               	iorlw	1
  7520  0140' 0080'              	movwf	(??___fladd+1)^(0+128)
  7521  0141' 0800'              	movf	(??___fladd+1)^(0+128),w
  7522  0142' 0080'              	movwf	___fladd@grs^(0+128)
  7523  0143' 2800'              	goto	l2549
  7524  0144'                    l2547:
  7525  0144' 1003               	clrc
  7526  0145' 0C80'              	rrf	___fladd@grs^(0+128),f
  7527  0146'                    l2549:
  7528  0146' 1C00'              	btfss	___fladd@b^(0+128),0
  7529  0147' 2800'              	goto	u3911
  7530  0148' 2800'              	goto	u3910
  7531  0149'                    u3911:
  7532  0149' 2800'              	goto	l2553
  7533  014A'                    u3910:
  7534  014A'                    l2551:
  7535  014A' 1780'              	bsf	___fladd@grs^(0+128),7
  7536  014B'                    l2553:
  7537  014B' 3001               	movlw	1
  7538  014C' 0080'              	movwf	??___fladd^(0+128)
  7539  014D'                    u3925:
  7540  014D' 0D00'              	rlf	(___fladd@b+3)^(0+128),w
  7541  014E' 0C80'              	rrf	(___fladd@b+3)^(0+128),f
  7542  014F' 0C80'              	rrf	(___fladd@b+2)^(0+128),f
  7543  0150' 0C80'              	rrf	(___fladd@b+1)^(0+128),f
  7544  0151' 0C80'              	rrf	___fladd@b^(0+128),f
  7545  0152' 0B80'              	decfsz	(??___fladd^(0+128))& (0+127),f
  7546  0153' 2800'              	goto	u3925
  7547  0154'                    l2555:
  7548  0154' 3001               	movlw	1
  7549  0155' 0080'              	movwf	??___fladd^(0+128)
  7550  0156' 0800'              	movf	??___fladd^(0+128),w
  7551  0157' 0780'              	addwf	___fladd@bexp^(0+128),f
  7552  0158' 2800'              	goto	l2591
  7553  0159'                    l2557:
  7554  0159' 0800'              	movf	(___fladd@b+3)^(0+128),w
  7555  015A' 3A80               	xorlw	128
  7556  015B' 00FF               	movwf	btemp+1
  7557  015C' 0800'              	movf	(___fladd@a+3)^(0+128),w
  7558  015D' 3A80               	xorlw	128
  7559  015E' 027F               	subwf	btemp+1,w
  7560  015F' 1D03               	skipz
  7561  0160' 2800'              	goto	u3933
  7562  0161' 0800'              	movf	(___fladd@a+2)^(0+128),w
  7563  0162' 0200'              	subwf	(___fladd@b+2)^(0+128),w
  7564  0163' 1D03               	skipz
  7565  0164' 2800'              	goto	u3933
  7566  0165' 0800'              	movf	(___fladd@a+1)^(0+128),w
  7567  0166' 0200'              	subwf	(___fladd@b+1)^(0+128),w
  7568  0167' 1D03               	skipz
  7569  0168' 2800'              	goto	u3933
  7570  0169' 0800'              	movf	___fladd@a^(0+128),w
  7571  016A' 0200'              	subwf	___fladd@b^(0+128),w
  7572  016B'                    u3933:
  7573  016B' 1803               	skipnc
  7574  016C' 2800'              	goto	u3931
  7575  016D' 2800'              	goto	u3930
  7576  016E'                    u3931:
  7577  016E' 2800'              	goto	l2567
  7578  016F'                    u3930:
  7579  016F'                    l2559:
  7580  016F' 30FF               	movlw	255
  7581  0170' 0080'              	movwf	??___fladd^(0+128)
  7582  0171' 30FF               	movlw	255
  7583  0172' 0081'              	movwf	(??___fladd^(0+128)+1)
  7584  0173' 30FF               	movlw	255
  7585  0174' 0082'              	movwf	(??___fladd^(0+128)+2)
  7586  0175' 30FF               	movlw	255
  7587  0176' 0083'              	movwf	(??___fladd^(0+128)+3)
  7588  0177' 0800'              	movf	___fladd@a^(0+128),w
  7589  0178' 0080'              	movwf	(??___fladd+4)^(0+128)
  7590  0179' 0800'              	movf	(___fladd@a+1)^(0+128),w
  7591  017A' 0081'              	movwf	((??___fladd+4)^(0+128)+1)
  7592  017B' 0800'              	movf	(___fladd@a+2)^(0+128),w
  7593  017C' 0082'              	movwf	((??___fladd+4)^(0+128)+2)
  7594  017D' 0800'              	movf	(___fladd@a+3)^(0+128),w
  7595  017E' 0083'              	movwf	((??___fladd+4)^(0+128)+3)
  7596  017F' 0800'              	movf	___fladd@b^(0+128),w
  7597  0180' 0280'              	subwf	(??___fladd+4)^(0+128),f
  7598  0181' 0800'              	movf	(___fladd@b+1)^(0+128),w
  7599  0182' 1C03               	skipc
  7600  0183' 0F00'              	incfsz	(___fladd@b+1)^(0+128),w
  7601  0184' 2800'              	goto	u3941
  7602  0185' 2800'              	goto	u3942
  7603  0186'                    u3941:
  7604  0186' 0281'              	subwf	((??___fladd+4)^(0+128)+1),f
  7605  0187'                    u3942:
  7606  0187' 0800'              	movf	(___fladd@b+2)^(0+128),w
  7607  0188' 1C03               	skipc
  7608  0189' 0F00'              	incfsz	(___fladd@b+2)^(0+128),w
  7609  018A' 2800'              	goto	u3943
  7610  018B' 2800'              	goto	u3944
  7611  018C'                    u3943:
  7612  018C' 0282'              	subwf	((??___fladd+4)^(0+128)+2),f
  7613  018D'                    u3944:
  7614  018D' 0800'              	movf	(___fladd@b+3)^(0+128),w
  7615  018E' 1C03               	skipc
  7616  018F' 0F00'              	incfsz	(___fladd@b+3)^(0+128),w
  7617  0190' 2800'              	goto	u3945
  7618  0191' 2800'              	goto	u3946
  7619  0192'                    u3945:
  7620  0192' 0283'              	subwf	((??___fladd+4)^(0+128)+3),f
  7621  0193'                    u3946:
  7622  0193' 0800'              	movf	(??___fladd+4)^(0+128),w
  7623  0194' 0780'              	addwf	??___fladd^(0+128),f
  7624  0195' 0800'              	movf	(??___fladd+5)^(0+128),w
  7625  0196' 1803               	skipnc
  7626  0197' 0F00'              	incfsz	(??___fladd+5)^(0+128),w
  7627  0198' 2800'              	goto	u3950
  7628  0199' 2800'              	goto	u3951
  7629  019A'                    u3950:
  7630  019A' 0781'              	addwf	(??___fladd^(0+128)+1),f
  7631  019B'                    u3951:
  7632  019B' 0800'              	movf	(??___fladd+6)^(0+128),w
  7633  019C' 1803               	skipnc
  7634  019D' 0F00'              	incfsz	(??___fladd+6)^(0+128),w
  7635  019E' 2800'              	goto	u3952
  7636  019F' 2800'              	goto	u3953
  7637  01A0'                    u3952:
  7638  01A0' 0782'              	addwf	(??___fladd^(0+128)+2),f
  7639  01A1'                    u3953:
  7640  01A1' 0800'              	movf	(??___fladd+7)^(0+128),w
  7641  01A2' 1803               	skipnc
  7642  01A3' 0A00'              	incf	(??___fladd+7)^(0+128),w
  7643  01A4' 0783'              	addwf	(??___fladd^(0+128)+3),f
  7644  01A5' 0800'              	movf	(??___fladd+3)^(0+128),w
  7645  01A6' 0080'              	movwf	(___fladd@b+3)^(0+128)
  7646  01A7' 0800'              	movf	(??___fladd+2)^(0+128),w
  7647  01A8' 0080'              	movwf	(___fladd@b+2)^(0+128)
  7648  01A9' 0800'              	movf	(??___fladd+1)^(0+128),w
  7649  01AA' 0080'              	movwf	(___fladd@b+1)^(0+128)
  7650  01AB' 0800'              	movf	??___fladd^(0+128),w
  7651  01AC' 0080'              	movwf	___fladd@b^(0+128)
  7652  01AD'                    l2561:
  7653  01AD' 3080               	movlw	128
  7654  01AE' 0080'              	movwf	??___fladd^(0+128)
  7655  01AF' 0800'              	movf	??___fladd^(0+128),w
  7656  01B0' 0680'              	xorwf	___fladd@signs^(0+128),f
  7657  01B1' 0980'              	comf	___fladd@grs^(0+128),f
  7658  01B2' 0A80'              	incf	___fladd@grs^(0+128),f
  7659  01B3'                    l2563:
  7660  01B3' 0800'              	movf	___fladd@grs^(0+128),w
  7661  01B4' 1D03               	btfss	3,2
  7662  01B5' 2800'              	goto	u3961
  7663  01B6' 2800'              	goto	u3960
  7664  01B7'                    u3961:
  7665  01B7' 2800'              	goto	l641
  7666  01B8'                    u3960:
  7667  01B8'                    l2565:
  7668  01B8' 3001               	movlw	1
  7669  01B9' 0780'              	addwf	___fladd@b^(0+128),f
  7670  01BA' 3000               	movlw	0
  7671  01BB' 1803               	skipnc
  7672  01BC' 3001               	movlw	1
  7673  01BD' 0780'              	addwf	(___fladd@b+1)^(0+128),f
  7674  01BE' 3000               	movlw	0
  7675  01BF' 1803               	skipnc
  7676  01C0' 3001               	movlw	1
  7677  01C1' 0780'              	addwf	(___fladd@b+2)^(0+128),f
  7678  01C2' 3000               	movlw	0
  7679  01C3' 1803               	skipnc
  7680  01C4' 3001               	movlw	1
  7681  01C5' 0780'              	addwf	(___fladd@b+3)^(0+128),f
  7682  01C6' 2800'              	goto	l641
  7683  01C7'                    l2567:
  7684  01C7' 0800'              	movf	___fladd@a^(0+128),w
  7685  01C8' 0280'              	subwf	___fladd@b^(0+128),f
  7686  01C9' 0800'              	movf	(___fladd@a+1)^(0+128),w
  7687  01CA' 1C03               	skipc
  7688  01CB' 0F00'              	incfsz	(___fladd@a+1)^(0+128),w
  7689  01CC' 0280'              	subwf	(___fladd@b+1)^(0+128),f
  7690  01CD' 0800'              	movf	(___fladd@a+2)^(0+128),w
  7691  01CE' 1C03               	skipc
  7692  01CF' 0F00'              	incfsz	(___fladd@a+2)^(0+128),w
  7693  01D0' 0280'              	subwf	(___fladd@b+2)^(0+128),f
  7694  01D1' 0800'              	movf	(___fladd@a+3)^(0+128),w
  7695  01D2' 1C03               	skipc
  7696  01D3' 0F00'              	incfsz	(___fladd@a+3)^(0+128),w
  7697  01D4' 0280'              	subwf	(___fladd@b+3)^(0+128),f
  7698  01D5'                    l641:
  7699  01D5' 0800'              	movf	(___fladd@b+3)^(0+128),w
  7700  01D6' 0400'              	iorwf	(___fladd@b+2)^(0+128),w
  7701  01D7' 0400'              	iorwf	(___fladd@b+1)^(0+128),w
  7702  01D8' 0400'              	iorwf	___fladd@b^(0+128),w
  7703  01D9' 1D03               	skipz
  7704  01DA' 2800'              	goto	u3971
  7705  01DB' 2800'              	goto	u3970
  7706  01DC'                    u3971:
  7707  01DC' 2800'              	goto	l2589
  7708  01DD'                    u3970:
  7709  01DD'                    l2569:
  7710  01DD' 0800'              	movf	___fladd@grs^(0+128),w
  7711  01DE' 1D03               	btfss	3,2
  7712  01DF' 2800'              	goto	u3981
  7713  01E0' 2800'              	goto	u3980
  7714  01E1'                    u3981:
  7715  01E1' 2800'              	goto	l2589
  7716  01E2'                    u3980:
  7717  01E2'                    l2571:
  7718  01E2' 3000               	movlw	0
  7719  01E3' 0080'              	movwf	(?___fladd+3)^(0+128)
  7720  01E4' 3000               	movlw	0
  7721  01E5' 0080'              	movwf	(?___fladd+2)^(0+128)
  7722  01E6' 3000               	movlw	0
  7723  01E7' 0080'              	movwf	(?___fladd+1)^(0+128)
  7724  01E8' 3000               	movlw	0
  7725  01E9' 0080'              	movwf	?___fladd^(0+128)
  7726  01EA' 2800'              	goto	l633
  7727  01EB'                    l2575:
  7728  01EB' 3001               	movlw	1
  7729  01EC' 0080'              	movwf	??___fladd^(0+128)
  7730  01ED'                    u3995:
  7731  01ED' 1003               	clrc
  7732  01EE' 0D80'              	rlf	___fladd@b^(0+128),f
  7733  01EF' 0D80'              	rlf	(___fladd@b+1)^(0+128),f
  7734  01F0' 0D80'              	rlf	(___fladd@b+2)^(0+128),f
  7735  01F1' 0D80'              	rlf	(___fladd@b+3)^(0+128),f
  7736  01F2' 0B80'              	decfsz	??___fladd^(0+128),f
  7737  01F3' 2800'              	goto	u3995
  7738  01F4'                    l2577:
  7739  01F4' 1F80'              	btfss	___fladd@grs^(0+128),7
  7740  01F5' 2800'              	goto	u4001
  7741  01F6' 2800'              	goto	u4000
  7742  01F7'                    u4001:
  7743  01F7' 2800'              	goto	l645
  7744  01F8'                    u4000:
  7745  01F8'                    l2579:
  7746  01F8' 1400'              	bsf	___fladd@b^(0+128),0
  7747  01F9'                    l645:
  7748  01F9' 1C00'              	btfss	___fladd@grs^(0+128),0
  7749  01FA' 2800'              	goto	u4011
  7750  01FB' 2800'              	goto	u4010
  7751  01FC'                    u4011:
  7752  01FC' 2800'              	goto	l2583
  7753  01FD'                    u4010:
  7754  01FD'                    l2581:
  7755  01FD' 1403               	setc
  7756  01FE' 0D80'              	rlf	___fladd@grs^(0+128),f
  7757  01FF' 2800'              	goto	l2585
  7758  0200'                    l2583:
  7759  0200' 1003               	clrc
  7760  0201' 0D80'              	rlf	___fladd@grs^(0+128),f
  7761  0202'                    l2585:
  7762  0202' 0800'              	movf	___fladd@bexp^(0+128),w
  7763  0203' 1903               	btfsc	3,2
  7764  0204' 2800'              	goto	u4021
  7765  0205' 2800'              	goto	u4020
  7766  0206'                    u4021:
  7767  0206' 2800'              	goto	l2589
  7768  0207'                    u4020:
  7769  0207'                    l2587:
  7770  0207' 3001               	movlw	1
  7771  0208' 0280'              	subwf	___fladd@bexp^(0+128),f
  7772  0209'                    l2589:
  7773  0209' 1F80'              	btfss	(___fladd@b+2)^(0+128),7
  7774  020A' 2800'              	goto	u4031
  7775  020B' 2800'              	goto	u4030
  7776  020C'                    u4031:
  7777  020C' 2800'              	goto	l2575
  7778  020D'                    u4030:
  7779  020D'                    l2591:
  7780  020D' 0180'              	clrf	___fladd@aexp^(0+128)
  7781  020E'                    l2593:
  7782  020E' 1F80'              	btfss	___fladd@grs^(0+128),7
  7783  020F' 2800'              	goto	u4041
  7784  0210' 2800'              	goto	u4040
  7785  0211'                    u4041:
  7786  0211' 2800'              	goto	l2601
  7787  0212'                    u4040:
  7788  0212'                    l2595:
  7789  0212' 0800'              	movf	___fladd@grs^(0+128),w
  7790  0213' 397F               	andlw	127
  7791  0214' 1903               	btfsc	3,2
  7792  0215' 2800'              	goto	u4051
  7793  0216' 2800'              	goto	u4050
  7794  0217'                    u4051:
  7795  0217' 2800'              	goto	l651
  7796  0218'                    u4050:
  7797  0218'                    l2597:
  7798  0218' 0180'              	clrf	___fladd@aexp^(0+128)
  7799  0219' 0A80'              	incf	___fladd@aexp^(0+128),f
  7800  021A' 2800'              	goto	l2601
  7801  021B'                    l651:
  7802  021B' 1C00'              	btfss	___fladd@b^(0+128),0
  7803  021C' 2800'              	goto	u4061
  7804  021D' 2800'              	goto	u4060
  7805  021E'                    u4061:
  7806  021E' 2800'              	goto	l2601
  7807  021F'                    u4060:
  7808  021F' 2800'              	goto	l2597
  7809  0220'                    l2601:
  7810  0220' 0800'              	movf	___fladd@aexp^(0+128),w
  7811  0221' 1903               	btfsc	3,2
  7812  0222' 2800'              	goto	u4071
  7813  0223' 2800'              	goto	u4070
  7814  0224'                    u4071:
  7815  0224' 2800'              	goto	l654
  7816  0225'                    u4070:
  7817  0225'                    l2603:
  7818  0225' 3001               	movlw	1
  7819  0226' 0780'              	addwf	___fladd@b^(0+128),f
  7820  0227' 3000               	movlw	0
  7821  0228' 1803               	skipnc
  7822  0229' 3001               	movlw	1
  7823  022A' 0780'              	addwf	(___fladd@b+1)^(0+128),f
  7824  022B' 3000               	movlw	0
  7825  022C' 1803               	skipnc
  7826  022D' 3001               	movlw	1
  7827  022E' 0780'              	addwf	(___fladd@b+2)^(0+128),f
  7828  022F' 3000               	movlw	0
  7829  0230' 1803               	skipnc
  7830  0231' 3001               	movlw	1
  7831  0232' 0780'              	addwf	(___fladd@b+3)^(0+128),f
  7832  0233'                    l2605:
  7833  0233' 1C00'              	btfss	(___fladd@b+3)^(0+128),0
  7834  0234' 2800'              	goto	u4081
  7835  0235' 2800'              	goto	u4080
  7836  0236'                    u4081:
  7837  0236' 2800'              	goto	l654
  7838  0237'                    u4080:
  7839  0237'                    l2607:
  7840  0237' 0800'              	movf	___fladd@b^(0+128),w
  7841  0238' 0080'              	movwf	??___fladd^(0+128)
  7842  0239' 0800'              	movf	(___fladd@b+1)^(0+128),w
  7843  023A' 0081'              	movwf	(??___fladd^(0+128)+1)
  7844  023B' 0800'              	movf	(___fladd@b+2)^(0+128),w
  7845  023C' 0082'              	movwf	(??___fladd^(0+128)+2)
  7846  023D' 0800'              	movf	(___fladd@b+3)^(0+128),w
  7847  023E' 0083'              	movwf	(??___fladd^(0+128)+3)
  7848  023F' 3001               	movlw	1
  7849  0240' 0080'              	movwf	(??___fladd+4)^(0+128)
  7850  0241'                    u4095:
  7851  0241' 0D03'              	rlf	(??___fladd^(0+128)+3),w
  7852  0242' 0C83'              	rrf	(??___fladd^(0+128)+3),f
  7853  0243' 0C82'              	rrf	(??___fladd^(0+128)+2),f
  7854  0244' 0C81'              	rrf	(??___fladd^(0+128)+1),f
  7855  0245' 0C80'              	rrf	??___fladd^(0+128),f
  7856  0246'                    u4090:
  7857  0246' 0B80'              	decfsz	(??___fladd+4)^(0+128),f
  7858  0247' 2800'              	goto	u4095
  7859  0248' 0800'              	movf	(??___fladd+3)^(0+128),w
  7860  0249' 0080'              	movwf	(___fladd@b+3)^(0+128)
  7861  024A' 0800'              	movf	(??___fladd+2)^(0+128),w
  7862  024B' 0080'              	movwf	(___fladd@b+2)^(0+128)
  7863  024C' 0800'              	movf	(??___fladd+1)^(0+128),w
  7864  024D' 0080'              	movwf	(___fladd@b+1)^(0+128)
  7865  024E' 0800'              	movf	??___fladd^(0+128),w
  7866  024F' 0080'              	movwf	___fladd@b^(0+128)
  7867  0250' 0A00'              	incf	___fladd@bexp^(0+128),w
  7868  0251' 1903               	btfsc	3,2
  7869  0252' 2800'              	goto	u4101
  7870  0253' 2800'              	goto	u4100
  7871  0254'                    u4101:
  7872  0254' 2800'              	goto	l654
  7873  0255'                    u4100:
  7874  0255'                    l2609:
  7875  0255' 3001               	movlw	1
  7876  0256' 0080'              	movwf	??___fladd^(0+128)
  7877  0257' 0800'              	movf	??___fladd^(0+128),w
  7878  0258' 0780'              	addwf	___fladd@bexp^(0+128),f
  7879  0259'                    l654:
  7880  0259' 0A00'              	incf	___fladd@bexp^(0+128),w
  7881  025A' 1903               	btfsc	3,2
  7882  025B' 2800'              	goto	u4111
  7883  025C' 2800'              	goto	u4110
  7884  025D'                    u4111:
  7885  025D' 2800'              	goto	l2613
  7886  025E'                    u4110:
  7887  025E'                    l2611:
  7888  025E' 0800'              	movf	___fladd@bexp^(0+128),w
  7889  025F' 1D03               	btfss	3,2
  7890  0260' 2800'              	goto	u4121
  7891  0261' 2800'              	goto	u4120
  7892  0262'                    u4121:
  7893  0262' 2800'              	goto	l2619
  7894  0263'                    u4120:
  7895  0263'                    l2613:
  7896  0263' 3000               	movlw	0
  7897  0264' 0080'              	movwf	(___fladd@b+3)^(0+128)
  7898  0265' 3000               	movlw	0
  7899  0266' 0080'              	movwf	(___fladd@b+2)^(0+128)
  7900  0267' 3000               	movlw	0
  7901  0268' 0080'              	movwf	(___fladd@b+1)^(0+128)
  7902  0269' 3000               	movlw	0
  7903  026A' 0080'              	movwf	___fladd@b^(0+128)
  7904  026B'                    l2615:
  7905  026B' 0800'              	movf	___fladd@bexp^(0+128),w
  7906  026C' 1D03               	btfss	3,2
  7907  026D' 2800'              	goto	u4131
  7908  026E' 2800'              	goto	u4130
  7909  026F'                    u4131:
  7910  026F' 2800'              	goto	l2619
  7911  0270'                    u4130:
  7912  0270'                    l2617:
  7913  0270' 0180'              	clrf	___fladd@signs^(0+128)
  7914  0271'                    l2619:
  7915  0271' 1C00'              	btfss	___fladd@bexp^(0+128),0
  7916  0272' 2800'              	goto	u4141
  7917  0273' 2800'              	goto	u4140
  7918  0274'                    u4141:
  7919  0274' 2800'              	goto	l2623
  7920  0275'                    u4140:
  7921  0275'                    l2621:
  7922  0275' 1782'              	bsf	(___fladd@b^(0+128)+2),7
  7923  0276' 2800'              	goto	l662
  7924  0277'                    l2623:
  7925  0277' 307F               	movlw	127
  7926  0278' 0080'              	movwf	??___fladd^(0+128)
  7927  0279' 0800'              	movf	??___fladd^(0+128),w
  7928  027A' 0582'              	andwf	(___fladd@b^(0+128)+2),f
  7929  027B'                    l662:
  7930  027B' 0800'              	movf	___fladd@bexp^(0+128),w
  7931  027C' 0080'              	movwf	??___fladd^(0+128)
  7932  027D' 1003               	clrc
  7933  027E' 0C00'              	rrf	??___fladd^(0+128),w
  7934  027F' 0080'              	movwf	(??___fladd+1)^(0+128)
  7935  0280' 0800'              	movf	(??___fladd+1)^(0+128),w
  7936  0281' 0083'              	movwf	(___fladd@b^(0+128)+3)
  7937  0282'                    l2625:
  7938  0282' 1F80'              	btfss	___fladd@signs^(0+128),7
  7939  0283' 2800'              	goto	u4151
  7940  0284' 2800'              	goto	u4150
  7941  0285'                    u4151:
  7942  0285' 2800'              	goto	l663
  7943  0286'                    u4150:
  7944  0286'                    l2627:
  7945  0286' 1783'              	bsf	(___fladd@b^(0+128)+3),7
  7946  0287'                    l663:
  7947  0287'                    l633:
  7948  0287' 0008               	return
  7949  0288'                    __end_of___fladd:
  7950                           
  7951                           	psect	text19
  7952  0000'                    __ptext19:	
  7953 ;; *************** function ___flneg *****************
  7954 ;; Defined at:
  7955 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  f1              4   29[BANK0 ] unsigned char 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  4   29[BANK0 ] unsigned char 
  7962 ;; Registers used:
  7963 ;;		wreg
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7969 ;;      Params:         0       4       0       0       0
  7970 ;;      Locals:         0       0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0
  7972 ;;      Totals:         0       4       0       0       0
  7973 ;;Total ram usage:        4 bytes
  7974 ;; Hardware stack levels used: 1
  7975 ;; Hardware stack levels required when called: 3
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_sprintf
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983  0000'                    ___flneg:	
  7984                           ;psect for function ___flneg
  7985                           
  7986  0000'                    l3025:	
  7987                           ;incstack = 0
  7988                           ; Regs used in ___flneg: [wreg]
  7989                           
  7990  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7991  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7992  0002' 0820'              	movf	___flneg@f1+3,w
  7993  0003' 041F'              	iorwf	___flneg@f1+2,w
  7994  0004' 041E'              	iorwf	___flneg@f1+1,w
  7995  0005' 041D'              	iorwf	___flneg@f1,w
  7996  0006' 1903               	skipnz
  7997  0007' 2800'              	goto	u5261
  7998  0008' 2800'              	goto	u5260
  7999  0009'                    u5261:
  8000  0009' 2800'              	goto	l3029
  8001  000A'                    u5260:
  8002  000A'                    l3027:
  8003  000A' 3080               	movlw	128
  8004  000B' 06A0'              	xorwf	___flneg@f1+3,f
  8005  000C'                    l3029:
  8006  000C'                    l492:
  8007  000C' 0008               	return
  8008  000D'                    __end_of___flneg:
  8009                           
  8010                           	psect	text20
  8011  0000'                    __ptext20:	
  8012 ;; *************** function ___flge *****************
  8013 ;; Defined at:
  8014 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  ff1             4   29[BANK0 ] unsigned char 
  8017 ;;  ff2             4   33[BANK0 ] unsigned char 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;		None               void
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8029 ;;      Params:         0       8       0       0       0
  8030 ;;      Locals:         0       0       0       0       0
  8031 ;;      Temps:          0       4       0       0       0
  8032 ;;      Totals:         0      12       0       0       0
  8033 ;;Total ram usage:       12 bytes
  8034 ;; Hardware stack levels used: 1
  8035 ;; Hardware stack levels required when called: 3
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_sprintf
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043  0000'                    ___flge:	
  8044                           ;psect for function ___flge
  8045                           
  8046  0000'                    l3005:	
  8047                           ;incstack = 0
  8048                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8049                           
  8050  0000' 3000               	movlw	0
  8051  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8052  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8053  0003' 051D'              	andwf	___flge@ff1,w
  8054  0004' 00A5'              	movwf	??___flge
  8055  0005' 3000               	movlw	0
  8056  0006' 051E'              	andwf	___flge@ff1+1,w
  8057  0007' 00A6'              	movwf	??___flge+1
  8058  0008' 3080               	movlw	128
  8059  0009' 051F'              	andwf	___flge@ff1+2,w
  8060  000A' 00A7'              	movwf	??___flge+2
  8061  000B' 307F               	movlw	127
  8062  000C' 0520'              	andwf	___flge@ff1+3,w
  8063  000D' 00A8'              	movwf	??___flge+3
  8064  000E' 0828'              	movf	??___flge+3,w
  8065  000F' 0427'              	iorwf	??___flge+2,w
  8066  0010' 0426'              	iorwf	??___flge+1,w
  8067  0011' 0425'              	iorwf	??___flge,w
  8068  0012' 1D03               	skipz
  8069  0013' 2800'              	goto	u5191
  8070  0014' 2800'              	goto	u5190
  8071  0015'                    u5191:
  8072  0015' 2800'              	goto	l484
  8073  0016'                    u5190:
  8074  0016'                    l3007:
  8075  0016' 3000               	movlw	0
  8076  0017' 00A0'              	movwf	___flge@ff1+3
  8077  0018' 3000               	movlw	0
  8078  0019' 009F'              	movwf	___flge@ff1+2
  8079  001A' 3000               	movlw	0
  8080  001B' 009E'              	movwf	___flge@ff1+1
  8081  001C' 3000               	movlw	0
  8082  001D' 009D'              	movwf	___flge@ff1
  8083  001E'                    l484:
  8084  001E' 3000               	movlw	0
  8085  001F' 0521'              	andwf	___flge@ff2,w
  8086  0020' 00A5'              	movwf	??___flge
  8087  0021' 3000               	movlw	0
  8088  0022' 0522'              	andwf	___flge@ff2+1,w
  8089  0023' 00A6'              	movwf	??___flge+1
  8090  0024' 3080               	movlw	128
  8091  0025' 0523'              	andwf	___flge@ff2+2,w
  8092  0026' 00A7'              	movwf	??___flge+2
  8093  0027' 307F               	movlw	127
  8094  0028' 0524'              	andwf	___flge@ff2+3,w
  8095  0029' 00A8'              	movwf	??___flge+3
  8096  002A' 0828'              	movf	??___flge+3,w
  8097  002B' 0427'              	iorwf	??___flge+2,w
  8098  002C' 0426'              	iorwf	??___flge+1,w
  8099  002D' 0425'              	iorwf	??___flge,w
  8100  002E' 1D03               	skipz
  8101  002F' 2800'              	goto	u5201
  8102  0030' 2800'              	goto	u5200
  8103  0031'                    u5201:
  8104  0031' 2800'              	goto	l3011
  8105  0032'                    u5200:
  8106  0032'                    l3009:
  8107  0032' 3000               	movlw	0
  8108  0033' 00A4'              	movwf	___flge@ff2+3
  8109  0034' 3000               	movlw	0
  8110  0035' 00A3'              	movwf	___flge@ff2+2
  8111  0036' 3000               	movlw	0
  8112  0037' 00A2'              	movwf	___flge@ff2+1
  8113  0038' 3000               	movlw	0
  8114  0039' 00A1'              	movwf	___flge@ff2
  8115  003A'                    l3011:
  8116  003A' 1FA0'              	btfss	___flge@ff1+3,7
  8117  003B' 2800'              	goto	u5211
  8118  003C' 2800'              	goto	u5210
  8119  003D'                    u5211:
  8120  003D' 2800'              	goto	l3015
  8121  003E'                    u5210:
  8122  003E'                    l3013:
  8123  003E' 3000               	movlw	0
  8124  003F' 00A5'              	movwf	??___flge
  8125  0040' 3000               	movlw	0
  8126  0041' 00A6'              	movwf	??___flge+1
  8127  0042' 3000               	movlw	0
  8128  0043' 00A7'              	movwf	??___flge+2
  8129  0044' 3080               	movlw	128
  8130  0045' 00A8'              	movwf	??___flge+3
  8131  0046' 081D'              	movf	___flge@ff1,w
  8132  0047' 02A5'              	subwf	??___flge,f
  8133  0048' 081E'              	movf	___flge@ff1+1,w
  8134  0049' 1C03               	skipc
  8135  004A' 0F1E'              	incfsz	___flge@ff1+1,w
  8136  004B' 2800'              	goto	u5221
  8137  004C' 2800'              	goto	u5222
  8138  004D'                    u5221:
  8139  004D' 02A6'              	subwf	??___flge+1,f
  8140  004E'                    u5222:
  8141  004E' 081F'              	movf	___flge@ff1+2,w
  8142  004F' 1C03               	skipc
  8143  0050' 0F1F'              	incfsz	___flge@ff1+2,w
  8144  0051' 2800'              	goto	u5223
  8145  0052' 2800'              	goto	u5224
  8146  0053'                    u5223:
  8147  0053' 02A7'              	subwf	??___flge+2,f
  8148  0054'                    u5224:
  8149  0054' 0820'              	movf	___flge@ff1+3,w
  8150  0055' 1C03               	skipc
  8151  0056' 0F20'              	incfsz	___flge@ff1+3,w
  8152  0057' 2800'              	goto	u5225
  8153  0058' 2800'              	goto	u5226
  8154  0059'                    u5225:
  8155  0059' 02A8'              	subwf	??___flge+3,f
  8156  005A'                    u5226:
  8157  005A' 0828'              	movf	??___flge+3,w
  8158  005B' 00A0'              	movwf	___flge@ff1+3
  8159  005C' 0827'              	movf	??___flge+2,w
  8160  005D' 009F'              	movwf	___flge@ff1+2
  8161  005E' 0826'              	movf	??___flge+1,w
  8162  005F' 009E'              	movwf	___flge@ff1+1
  8163  0060' 0825'              	movf	??___flge,w
  8164  0061' 009D'              	movwf	___flge@ff1
  8165  0062'                    l3015:
  8166  0062' 1FA4'              	btfss	___flge@ff2+3,7
  8167  0063' 2800'              	goto	u5231
  8168  0064' 2800'              	goto	u5230
  8169  0065'                    u5231:
  8170  0065' 2800'              	goto	l487
  8171  0066'                    u5230:
  8172  0066'                    l3017:
  8173  0066' 3000               	movlw	0
  8174  0067' 00A5'              	movwf	??___flge
  8175  0068' 3000               	movlw	0
  8176  0069' 00A6'              	movwf	??___flge+1
  8177  006A' 3000               	movlw	0
  8178  006B' 00A7'              	movwf	??___flge+2
  8179  006C' 3080               	movlw	128
  8180  006D' 00A8'              	movwf	??___flge+3
  8181  006E' 0821'              	movf	___flge@ff2,w
  8182  006F' 02A5'              	subwf	??___flge,f
  8183  0070' 0822'              	movf	___flge@ff2+1,w
  8184  0071' 1C03               	skipc
  8185  0072' 0F22'              	incfsz	___flge@ff2+1,w
  8186  0073' 2800'              	goto	u5241
  8187  0074' 2800'              	goto	u5242
  8188  0075'                    u5241:
  8189  0075' 02A6'              	subwf	??___flge+1,f
  8190  0076'                    u5242:
  8191  0076' 0823'              	movf	___flge@ff2+2,w
  8192  0077' 1C03               	skipc
  8193  0078' 0F23'              	incfsz	___flge@ff2+2,w
  8194  0079' 2800'              	goto	u5243
  8195  007A' 2800'              	goto	u5244
  8196  007B'                    u5243:
  8197  007B' 02A7'              	subwf	??___flge+2,f
  8198  007C'                    u5244:
  8199  007C' 0824'              	movf	___flge@ff2+3,w
  8200  007D' 1C03               	skipc
  8201  007E' 0F24'              	incfsz	___flge@ff2+3,w
  8202  007F' 2800'              	goto	u5245
  8203  0080' 2800'              	goto	u5246
  8204  0081'                    u5245:
  8205  0081' 02A8'              	subwf	??___flge+3,f
  8206  0082'                    u5246:
  8207  0082' 0828'              	movf	??___flge+3,w
  8208  0083' 00A4'              	movwf	___flge@ff2+3
  8209  0084' 0827'              	movf	??___flge+2,w
  8210  0085' 00A3'              	movwf	___flge@ff2+2
  8211  0086' 0826'              	movf	??___flge+1,w
  8212  0087' 00A2'              	movwf	___flge@ff2+1
  8213  0088' 0825'              	movf	??___flge,w
  8214  0089' 00A1'              	movwf	___flge@ff2
  8215  008A'                    l487:
  8216  008A' 3080               	movlw	128
  8217  008B' 06A0'              	xorwf	___flge@ff1+3,f
  8218  008C' 3080               	movlw	128
  8219  008D' 06A4'              	xorwf	___flge@ff2+3,f
  8220  008E' 0824'              	movf	___flge@ff2+3,w
  8221  008F' 0220'              	subwf	___flge@ff1+3,w
  8222  0090' 1D03               	skipz
  8223  0091' 2800'              	goto	u5255
  8224  0092' 0823'              	movf	___flge@ff2+2,w
  8225  0093' 021F'              	subwf	___flge@ff1+2,w
  8226  0094' 1D03               	skipz
  8227  0095' 2800'              	goto	u5255
  8228  0096' 0822'              	movf	___flge@ff2+1,w
  8229  0097' 021E'              	subwf	___flge@ff1+1,w
  8230  0098' 1D03               	skipz
  8231  0099' 2800'              	goto	u5255
  8232  009A' 0821'              	movf	___flge@ff2,w
  8233  009B' 021D'              	subwf	___flge@ff1,w
  8234  009C'                    u5255:
  8235  009C' 1803               	skipnc
  8236  009D' 2800'              	goto	u5251
  8237  009E' 2800'              	goto	u5250
  8238  009F'                    u5251:
  8239  009F' 2800'              	goto	l3021
  8240  00A0'                    u5250:
  8241  00A0'                    l3019:
  8242  00A0' 1003               	clrc
  8243  00A1' 2800'              	goto	l488
  8244  00A2'                    l3021:
  8245  00A2' 1403               	setc
  8246  00A3'                    l488:
  8247  00A3' 0008               	return
  8248  00A4'                    __end_of___flge:
  8249                           
  8250                           	psect	text21
  8251  0000'                    __ptext21:	
  8252 ;; *************** function ___fleq *****************
  8253 ;; Defined at:
  8254 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  ff1             4   29[BANK0 ] unsigned char 
  8257 ;;  ff2             4   33[BANK0 ] unsigned char 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;		None               void
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8269 ;;      Params:         0       8       0       0       0
  8270 ;;      Locals:         0       0       0       0       0
  8271 ;;      Temps:          0       4       0       0       0
  8272 ;;      Totals:         0      12       0       0       0
  8273 ;;Total ram usage:       12 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 3
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_sprintf
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283  0000'                    ___fleq:	
  8284                           ;psect for function ___fleq
  8285                           
  8286  0000'                    l2993:	
  8287                           ;incstack = 0
  8288                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8289                           
  8290  0000' 3000               	movlw	0
  8291  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8292  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8293  0003' 051D'              	andwf	___fleq@ff1,w
  8294  0004' 00A5'              	movwf	??___fleq
  8295  0005' 3000               	movlw	0
  8296  0006' 051E'              	andwf	___fleq@ff1+1,w
  8297  0007' 00A6'              	movwf	??___fleq+1
  8298  0008' 3080               	movlw	128
  8299  0009' 051F'              	andwf	___fleq@ff1+2,w
  8300  000A' 00A7'              	movwf	??___fleq+2
  8301  000B' 307F               	movlw	127
  8302  000C' 0520'              	andwf	___fleq@ff1+3,w
  8303  000D' 00A8'              	movwf	??___fleq+3
  8304  000E' 0828'              	movf	??___fleq+3,w
  8305  000F' 0427'              	iorwf	??___fleq+2,w
  8306  0010' 0426'              	iorwf	??___fleq+1,w
  8307  0011' 0425'              	iorwf	??___fleq,w
  8308  0012' 1D03               	skipz
  8309  0013' 2800'              	goto	u5161
  8310  0014' 2800'              	goto	u5160
  8311  0015'                    u5161:
  8312  0015' 2800'              	goto	l479
  8313  0016'                    u5160:
  8314  0016'                    l2995:
  8315  0016' 3000               	movlw	0
  8316  0017' 00A0'              	movwf	___fleq@ff1+3
  8317  0018' 3000               	movlw	0
  8318  0019' 009F'              	movwf	___fleq@ff1+2
  8319  001A' 3000               	movlw	0
  8320  001B' 009E'              	movwf	___fleq@ff1+1
  8321  001C' 3000               	movlw	0
  8322  001D' 009D'              	movwf	___fleq@ff1
  8323  001E'                    l479:
  8324  001E' 3000               	movlw	0
  8325  001F' 0521'              	andwf	___fleq@ff2,w
  8326  0020' 00A5'              	movwf	??___fleq
  8327  0021' 3000               	movlw	0
  8328  0022' 0522'              	andwf	___fleq@ff2+1,w
  8329  0023' 00A6'              	movwf	??___fleq+1
  8330  0024' 3080               	movlw	128
  8331  0025' 0523'              	andwf	___fleq@ff2+2,w
  8332  0026' 00A7'              	movwf	??___fleq+2
  8333  0027' 307F               	movlw	127
  8334  0028' 0524'              	andwf	___fleq@ff2+3,w
  8335  0029' 00A8'              	movwf	??___fleq+3
  8336  002A' 0828'              	movf	??___fleq+3,w
  8337  002B' 0427'              	iorwf	??___fleq+2,w
  8338  002C' 0426'              	iorwf	??___fleq+1,w
  8339  002D' 0425'              	iorwf	??___fleq,w
  8340  002E' 1D03               	skipz
  8341  002F' 2800'              	goto	u5171
  8342  0030' 2800'              	goto	u5170
  8343  0031'                    u5171:
  8344  0031' 2800'              	goto	l480
  8345  0032'                    u5170:
  8346  0032'                    l2997:
  8347  0032' 3000               	movlw	0
  8348  0033' 00A4'              	movwf	___fleq@ff2+3
  8349  0034' 3000               	movlw	0
  8350  0035' 00A3'              	movwf	___fleq@ff2+2
  8351  0036' 3000               	movlw	0
  8352  0037' 00A2'              	movwf	___fleq@ff2+1
  8353  0038' 3000               	movlw	0
  8354  0039' 00A1'              	movwf	___fleq@ff2
  8355  003A'                    l480:
  8356  003A' 0824'              	movf	___fleq@ff2+3,w
  8357  003B' 0620'              	xorwf	___fleq@ff1+3,w
  8358  003C' 1D03               	skipz
  8359  003D' 2800'              	goto	u5185
  8360  003E' 0823'              	movf	___fleq@ff2+2,w
  8361  003F' 061F'              	xorwf	___fleq@ff1+2,w
  8362  0040' 1D03               	skipz
  8363  0041' 2800'              	goto	u5185
  8364  0042' 0822'              	movf	___fleq@ff2+1,w
  8365  0043' 061E'              	xorwf	___fleq@ff1+1,w
  8366  0044' 1D03               	skipz
  8367  0045' 2800'              	goto	u5185
  8368  0046' 0821'              	movf	___fleq@ff2,w
  8369  0047' 061D'              	xorwf	___fleq@ff1,w
  8370  0048'                    u5185:
  8371  0048' 1903               	skipnz
  8372  0049' 2800'              	goto	u5181
  8373  004A' 2800'              	goto	u5180
  8374  004B'                    u5181:
  8375  004B' 2800'              	goto	l3001
  8376  004C'                    u5180:
  8377  004C'                    l2999:
  8378  004C' 1003               	clrc
  8379  004D' 2800'              	goto	l481
  8380  004E'                    l3001:
  8381  004E' 1403               	setc
  8382  004F'                    l481:
  8383  004F' 0008               	return
  8384  0050'                    __end_of___fleq:
  8385                           
  8386                           	psect	text22
  8387  0000'                    __ptext22:	
  8388 ;; *************** function _config *****************
  8389 ;; Defined at:
  8390 ;;		line 83 in file "newmain.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0, pclath, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8404 ;;      Params:         0       0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; Hardware stack levels required when called: 6
  8411 ;; This function calls:
  8412 ;;		_LCD_Initialize
  8413 ;;		_TIMER1_Init
  8414 ;; This function is called by:
  8415 ;;		_main
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419  0000'                    _config:	
  8420                           ;psect for function _config
  8421                           
  8422  0000'                    l3153:	
  8423                           ;incstack = 0
  8424                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  8425                           
  8426                           
  8427                           ;newmain.c: 85:     ANSEL = ANSELH = 0;
  8428  0000' 1683               	bsf	3,5	;RP0=1, select bank3
  8429  0001' 1703               	bsf	3,6	;RP1=1, select bank3
  8430  0002' 0189               	clrf	9	;volatile
  8431  0003' 0188               	clrf	8	;volatile
  8432                           
  8433                           ;newmain.c: 86:     TRISC = 0;
  8434  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  8435  0005' 1303               	bcf	3,6	;RP1=0, select bank1
  8436  0006' 0187               	clrf	7	;volatile
  8437  0007'                    l3155:
  8438                           
  8439                           ;newmain.c: 88:     TIMER1_Init();
  8440  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_TIMER1_Init
  8441  000C'                    l3157:
  8442                           
  8443                           ;newmain.c: 89:     LCD_Initialize();
  8444  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Initialize
  8445  0011'                    l3159:
  8446                           
  8447                           ;newmain.c: 92:     TMR1IE = 1;
  8448  0011' 1683               	bsf	3,5	;RP0=1, select bank1
  8449  0012' 1303               	bcf	3,6	;RP1=0, select bank1
  8450  0013' 140C               	bsf	12,0	;volatile
  8451  0014'                    l3161:
  8452                           
  8453                           ;newmain.c: 93:     TMR1IF = 0;
  8454  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  8455  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  8456  0016' 100C               	bcf	12,0	;volatile
  8457  0017'                    l3163:
  8458                           
  8459                           ;newmain.c: 95:     INTE = 1;
  8460  0017' 160B               	bsf	11,4	;volatile
  8461  0018'                    l3165:
  8462                           
  8463                           ;newmain.c: 96:     INTF = 0;
  8464  0018' 108B               	bcf	11,1	;volatile
  8465  0019'                    l3167:
  8466                           
  8467                           ;newmain.c: 97:     INTEDG = 1;
  8468  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  8469  001A' 1303               	bcf	3,6	;RP1=0, select bank1
  8470  001B' 1701               	bsf	1,6	;volatile
  8471  001C'                    l3169:
  8472                           
  8473                           ;newmain.c: 99:     PEIE = 1;
  8474  001C' 170B               	bsf	11,6	;volatile
  8475  001D'                    l3171:
  8476                           
  8477                           ;newmain.c: 100:     GIE = 1;
  8478  001D' 178B               	bsf	11,7	;volatile
  8479  001E'                    l54:
  8480  001E' 0008               	return
  8481  001F'                    __end_of_config:
  8482                           
  8483                           	psect	text23
  8484  0000'                    __ptext23:	
  8485 ;; *************** function _TIMER1_Init *****************
  8486 ;; Defined at:
  8487 ;;		line 75 in file "newmain.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;		None
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;		None
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      void 
  8494 ;; Registers used:
  8495 ;;		None
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8501 ;;      Params:         0       0       0       0       0
  8502 ;;      Locals:         0       0       0       0       0
  8503 ;;      Temps:          0       0       0       0       0
  8504 ;;      Totals:         0       0       0       0       0
  8505 ;;Total ram usage:        0 bytes
  8506 ;; Hardware stack levels used: 1
  8507 ;; Hardware stack levels required when called: 3
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_config
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515  0000'                    _TIMER1_Init:	
  8516                           ;psect for function _TIMER1_Init
  8517                           
  8518  0000'                    l2769:	
  8519                           ;incstack = 0
  8520                           ; Regs used in _TIMER1_Init: []
  8521                           
  8522                           
  8523                           ;newmain.c: 77:     T1CKPS1 = 1;
  8524  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8525  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8526  0002' 1690               	bsf	16,5	;volatile
  8527                           
  8528                           ;newmain.c: 78:     T1CKPS0 = 1;
  8529  0003' 1610               	bsf	16,4	;volatile
  8530                           
  8531                           ;newmain.c: 79:     TMR1CS = 0;
  8532  0004' 1090               	bcf	16,1	;volatile
  8533                           
  8534                           ;newmain.c: 80:     TMR1ON = 1;
  8535  0005' 1410               	bsf	16,0	;volatile
  8536                           
  8537                           ;newmain.c: 81:     TMR1 = 3036;
  8538  0006' 300B               	movlw	11
  8539  0007' 008F               	movwf	15	;volatile
  8540  0008' 30DC               	movlw	220
  8541  0009' 008E               	movwf	14	;volatile
  8542  000A'                    l51:
  8543  000A' 0008               	return
  8544  000B'                    __end_of_TIMER1_Init:
  8545                           
  8546                           	psect	text24
  8547  0000'                    __ptext24:	
  8548 ;; *************** function _LCD_Initialize *****************
  8549 ;; Defined at:
  8550 ;;		line 46 in file "lcd.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;		None
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0, pclath, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8564 ;;      Params:         0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0
  8566 ;;      Temps:          0       2       0       0       0
  8567 ;;      Totals:         0       2       0       0       0
  8568 ;;Total ram usage:        2 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 5
  8571 ;; This function calls:
  8572 ;;		_LCDPutCmd
  8573 ;; This function is called by:
  8574 ;;		_config
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578  0000'                    _LCD_Initialize:	
  8579                           ;psect for function _LCD_Initialize
  8580                           
  8581  0000'                    l2771:	
  8582                           ;incstack = 0
  8583                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8584                           
  8585                           
  8586                           ;lcd.c: 49:     PORTD = 0x00;
  8587  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8588  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8589  0002' 0188               	clrf	8	;volatile
  8590                           
  8591                           ;lcd.c: 53:     TRISD = 0x00;
  8592  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  8593  0004' 1303               	bcf	3,6	;RP1=0, select bank1
  8594  0005' 0188               	clrf	8	;volatile
  8595                           
  8596                           ;lcd.c: 54:     ANSEL = 0x00;
  8597  0006' 1683               	bsf	3,5	;RP0=1, select bank3
  8598  0007' 1703               	bsf	3,6	;RP1=1, select bank3
  8599  0008' 0188               	clrf	8	;volatile
  8600                           
  8601                           ;lcd.c: 55:     ANSELH = 0x00;
  8602  0009' 0189               	clrf	9	;volatile
  8603  000A'                    l2773:
  8604                           
  8605                           ;lcd.c: 61:     _delay((unsigned long)((15)*(16000000/4000.0)));
  8606  000A' 304E               	movlw	78
  8607  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  8608  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  8609  000D' 00A4'              	movwf	??_LCD_Initialize+1
  8610  000E' 30EA               	movlw	234
  8611  000F' 00A3'              	movwf	??_LCD_Initialize
  8612  0010'                    u7617:
  8613  0010' 0BA3'              	decfsz	??_LCD_Initialize,f
  8614  0011' 2800'              	goto	u7617
  8615  0012' 0BA4'              	decfsz	??_LCD_Initialize+1,f
  8616  0013' 2800'              	goto	u7617
  8617  0014' 0000               	nop
  8618  0015'                    l2775:
  8619                           
  8620                           ;lcd.c: 64:     LCDPutCmd(0x32);
  8621  0015' 3032               	movlw	50
  8622  0016' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutCmd
  8623  001B'                    l2777:
  8624                           
  8625                           ;lcd.c: 67:     LCDPutCmd(0x28);
  8626  001B' 3028               	movlw	40
  8627  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutCmd
  8628  0021'                    l2779:
  8629                           
  8630                           ;lcd.c: 70:     LCDPutCmd(0x0C);
  8631  0021' 300C               	movlw	12
  8632  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutCmd
  8633  0027'                    l2781:
  8634                           
  8635                           ;lcd.c: 72:     LCDPutCmd(0x01);
  8636  0027' 3001               	movlw	1
  8637  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutCmd
  8638  002D'                    l2783:
  8639                           
  8640                           ;lcd.c: 75:     LCDPutCmd(0x06);
  8641  002D' 3006               	movlw	6
  8642  002E' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutCmd
  8643  0033'                    l86:
  8644  0033' 0008               	return
  8645  0034'                    __end_of_LCD_Initialize:
  8646                           
  8647                           	psect	text25
  8648  0000'                    __ptext25:	
  8649 ;; *************** function _LCDPutStr *****************
  8650 ;; Defined at:
  8651 ;;		line 165 in file "lcd.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  str             1    wreg     PTR const unsigned char 
  8654 ;;		 -> buffer(10), 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  str             1   36[BANK0 ] PTR const unsigned char 
  8657 ;;		 -> buffer(10), 
  8658 ;;  i               1   37[BANK0 ] unsigned char 
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8668 ;;      Params:         0       0       0       0       0
  8669 ;;      Locals:         0       2       0       0       0
  8670 ;;      Temps:          0       1       0       0       0
  8671 ;;      Totals:         0       3       0       0       0
  8672 ;;Total ram usage:        3 bytes
  8673 ;; Hardware stack levels used: 1
  8674 ;; Hardware stack levels required when called: 5
  8675 ;; This function calls:
  8676 ;;		_LCDPutChar
  8677 ;; This function is called by:
  8678 ;;		_main
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682  0000'                    _LCDPutStr:	
  8683                           ;psect for function _LCDPutStr
  8684                           
  8685                           
  8686                           ;incstack = 0
  8687                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8688                           ;LCDPutStr@str stored from wreg
  8689  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8690  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8691  0002' 00A4'              	movwf	LCDPutStr@str
  8692  0003'                    l3385:
  8693                           
  8694                           ;lcd.c: 165: void LCDPutStr(const char *str);lcd.c: 166: {;lcd.c: 167:     uint8_t i=0;
  8695  0003' 01A5'              	clrf	LCDPutStr@i
  8696                           
  8697                           ;lcd.c: 170:     while (str[i])
  8698  0004' 2800'              	goto	l3391
  8699  0005'                    l3387:
  8700                           
  8701                           ;lcd.c: 171:     {;lcd.c: 173:         LCDPutChar(str[i++]);
  8702  0005' 0825'              	movf	LCDPutStr@i,w
  8703  0006' 0724'              	addwf	LCDPutStr@str,w
  8704  0007' 00A3'              	movwf	??_LCDPutStr
  8705  0008' 0823'              	movf	??_LCDPutStr,w
  8706  0009' 0084               	movwf	4
  8707  000A' 0800               	movf	0,w
  8708  000B' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutChar
  8709  0010'                    l3389:
  8710  0010' 3001               	movlw	1
  8711  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  8712  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  8713  0013' 00A3'              	movwf	??_LCDPutStr
  8714  0014' 0823'              	movf	??_LCDPutStr,w
  8715  0015' 07A5'              	addwf	LCDPutStr@i,f
  8716  0016'                    l3391:
  8717                           
  8718                           ;lcd.c: 170:     while (str[i])
  8719  0016' 0825'              	movf	LCDPutStr@i,w
  8720  0017' 0724'              	addwf	LCDPutStr@str,w
  8721  0018' 00A3'              	movwf	??_LCDPutStr
  8722  0019' 0823'              	movf	??_LCDPutStr,w
  8723  001A' 0084               	movwf	4
  8724  001B' 1783               	bsf	3,7	;select IRP bank2
  8725  001C' 0800               	movf	0,w
  8726  001D' 1D03               	btfss	3,2
  8727  001E' 2800'              	goto	u5951
  8728  001F' 2800'              	goto	u5950
  8729  0020'                    u5951:
  8730  0020' 2800'              	goto	l3387
  8731  0021'                    u5950:
  8732  0021'                    l109:
  8733  0021' 0008               	return
  8734  0022'                    __end_of_LCDPutStr:
  8735                           
  8736                           	psect	text26
  8737  0000'                    __ptext26:	
  8738 ;; *************** function _LCDPutChar *****************
  8739 ;; Defined at:
  8740 ;;		line 133 in file "lcd.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  ch              1    wreg     unsigned char 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;  ch              1   34[BANK0 ] unsigned char 
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  1    wreg      void 
  8747 ;; Registers used:
  8748 ;;		wreg, status,2, status,0, pclath, cstack
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8754 ;;      Params:         0       0       0       0       0
  8755 ;;      Locals:         0       1       0       0       0
  8756 ;;      Temps:          0       2       0       0       0
  8757 ;;      Totals:         0       3       0       0       0
  8758 ;;Total ram usage:        3 bytes
  8759 ;; Hardware stack levels used: 1
  8760 ;; Hardware stack levels required when called: 4
  8761 ;; This function calls:
  8762 ;;		_LCDWriteNibble
  8763 ;; This function is called by:
  8764 ;;		_LCDPutStr
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768  0000'                    _LCDPutChar:	
  8769                           ;psect for function _LCDPutChar
  8770                           
  8771                           
  8772                           ;incstack = 0
  8773                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  8774                           ;LCDPutChar@ch stored from wreg
  8775  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8776  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8777  0002' 00A2'              	movwf	LCDPutChar@ch
  8778  0003'                    l2785:
  8779                           
  8780                           ;lcd.c: 133: void LCDPutChar(uint8_t ch);lcd.c: 134: {;lcd.c: 135:     _delay((unsigned 
      +                          long)((5)*(16000000/4000.0)));
  8781  0003' 301A               	movlw	26
  8782  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  8783  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  8784  0006' 00A1'              	movwf	??_LCDPutChar+1
  8785  0007' 30F7               	movlw	247
  8786  0008' 00A0'              	movwf	??_LCDPutChar
  8787  0009'                    u7627:
  8788  0009' 0BA0'              	decfsz	??_LCDPutChar,f
  8789  000A' 2800'              	goto	u7627
  8790  000B' 0BA1'              	decfsz	??_LCDPutChar+1,f
  8791  000C' 2800'              	goto	u7627
  8792  000D' 2800'              	nop2
  8793  000E'                    l2787:
  8794                           
  8795                           ;lcd.c: 138:     LCDWriteNibble(ch,1);
  8796  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  8797  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  8798  0010' 019D'              	clrf	LCDWriteNibble@rs
  8799  0011' 0A9D'              	incf	LCDWriteNibble@rs,f
  8800  0012' 0822'              	movf	LCDPutChar@ch,w
  8801  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDWriteNibble
  8802  0018'                    l2789:
  8803                           
  8804                           ;lcd.c: 141:     ch = (ch << 4);
  8805  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  8806  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  8807  001A' 0822'              	movf	LCDPutChar@ch,w
  8808  001B' 00A0'              	movwf	??_LCDPutChar
  8809  001C' 3003               	movlw	3
  8810  001D'                    u4535:
  8811  001D' 1003               	clrc
  8812  001E' 0DA0'              	rlf	??_LCDPutChar,f
  8813  001F' 3EFF               	addlw	-1
  8814  0020' 1D03               	skipz
  8815  0021' 2800'              	goto	u4535
  8816  0022' 1003               	clrc
  8817  0023' 0D20'              	rlf	??_LCDPutChar,w
  8818  0024' 00A1'              	movwf	??_LCDPutChar+1
  8819  0025' 0821'              	movf	??_LCDPutChar+1,w
  8820  0026' 00A2'              	movwf	LCDPutChar@ch
  8821  0027'                    l2791:
  8822                           
  8823                           ;lcd.c: 144:     LCDWriteNibble(ch,1);
  8824  0027' 019D'              	clrf	LCDWriteNibble@rs
  8825  0028' 0A9D'              	incf	LCDWriteNibble@rs,f
  8826  0029' 0822'              	movf	LCDPutChar@ch,w
  8827  002A' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDWriteNibble
  8828  002F'                    l100:
  8829  002F' 0008               	return
  8830  0030'                    __end_of_LCDPutChar:
  8831                           
  8832                           	psect	text27
  8833  0000'                    __ptext27:	
  8834 ;; *************** function _LCDGoto *****************
  8835 ;; Defined at:
  8836 ;;		line 178 in file "lcd.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  pos             1    wreg     unsigned char 
  8839 ;;  ln              1   35[BANK0 ] unsigned char 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  pos             1   40[BANK0 ] unsigned char 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2, status,0, pclath, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8851 ;;      Params:         0       1       0       0       0
  8852 ;;      Locals:         0       3       0       0       0
  8853 ;;      Temps:          0       2       0       0       0
  8854 ;;      Totals:         0       6       0       0       0
  8855 ;;Total ram usage:        6 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 5
  8858 ;; This function calls:
  8859 ;;		_LCDPutCmd
  8860 ;; This function is called by:
  8861 ;;		_main
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865  0000'                    _LCDGoto:	
  8866                           ;psect for function _LCDGoto
  8867                           
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  8871                           ;LCDGoto@pos stored from wreg
  8872  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8873  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8874  0002' 00A8'              	movwf	LCDGoto@pos
  8875  0003'                    l3173:
  8876                           
  8877                           ;lcd.c: 178: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 179: {;lcd.c: 181:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  8878  0003' 3002               	movlw	2
  8879  0004' 0223'              	subwf	LCDGoto@ln,w
  8880  0005' 1803               	skipnc
  8881  0006' 2800'              	goto	u5601
  8882  0007' 2800'              	goto	u5600
  8883  0008'                    u5601:
  8884  0008' 2800'              	goto	l115
  8885  0009'                    u5600:
  8886  0009'                    l3175:
  8887  0009' 3010               	movlw	16
  8888  000A' 0228'              	subwf	LCDGoto@pos,w
  8889  000B' 1C03               	skipc
  8890  000C' 2800'              	goto	u5611
  8891  000D' 2800'              	goto	u5610
  8892  000E'                    u5611:
  8893  000E' 2800'              	goto	l3177
  8894  000F'                    u5610:
  8895  000F' 2800'              	goto	l115
  8896  0010'                    l3177:
  8897                           
  8898                           ;lcd.c: 188:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  8899  0010' 0323'              	decf	LCDGoto@ln,w
  8900  0011' 1903               	btfsc	3,2
  8901  0012' 2800'              	goto	u5621
  8902  0013' 2800'              	goto	u5620
  8903  0014'                    u5621:
  8904  0014' 2800'              	goto	l3181
  8905  0015'                    u5620:
  8906  0015'                    l3179:
  8907  0015' 3080               	movlw	128
  8908  0016' 0428'              	iorwf	LCDGoto@pos,w
  8909  0017' 00A6'              	movwf	_LCDGoto$138
  8910  0018' 3000               	movlw	0
  8911  0019' 00A7'              	movwf	_LCDGoto$138+1
  8912  001A' 2800'              	goto	l3183
  8913  001B'                    l3181:
  8914  001B' 30C0               	movlw	192
  8915  001C' 0428'              	iorwf	LCDGoto@pos,w
  8916  001D' 00A6'              	movwf	_LCDGoto$138
  8917  001E' 3000               	movlw	0
  8918  001F' 00A7'              	movwf	_LCDGoto$138+1
  8919  0020'                    l3183:
  8920  0020' 0826'              	movf	_LCDGoto$138,w
  8921  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDPutCmd
  8922  0026'                    l3185:
  8923                           
  8924                           ;lcd.c: 191:     _delay((unsigned long)((5)*(16000000/4000.0)));
  8925  0026' 301A               	movlw	26
  8926  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  8927  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  8928  0029' 00A5'              	movwf	??_LCDGoto+1
  8929  002A' 30F7               	movlw	247
  8930  002B' 00A4'              	movwf	??_LCDGoto
  8931  002C'                    u7637:
  8932  002C' 0BA4'              	decfsz	??_LCDGoto,f
  8933  002D' 2800'              	goto	u7637
  8934  002E' 0BA5'              	decfsz	??_LCDGoto+1,f
  8935  002F' 2800'              	goto	u7637
  8936  0030' 2800'              	nop2
  8937  0031'                    l115:
  8938  0031' 0008               	return
  8939  0032'                    __end_of_LCDGoto:
  8940                           
  8941                           	psect	text28
  8942  0000'                    __ptext28:	
  8943 ;; *************** function _LCDPutCmd *****************
  8944 ;; Defined at:
  8945 ;;		line 148 in file "lcd.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  ch              1    wreg     unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  ch              1   34[BANK0 ] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0, pclath, cstack
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8959 ;;      Params:         0       0       0       0       0
  8960 ;;      Locals:         0       1       0       0       0
  8961 ;;      Temps:          0       2       0       0       0
  8962 ;;      Totals:         0       3       0       0       0
  8963 ;;Total ram usage:        3 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; Hardware stack levels required when called: 4
  8966 ;; This function calls:
  8967 ;;		_LCDWriteNibble
  8968 ;; This function is called by:
  8969 ;;		_LCD_Initialize
  8970 ;;		_LCDGoto
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974  0000'                    _LCDPutCmd:	
  8975                           ;psect for function _LCDPutCmd
  8976                           
  8977                           
  8978                           ;incstack = 0
  8979                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  8980                           ;LCDPutCmd@ch stored from wreg
  8981  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8982  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8983  0002' 00A2'              	movwf	LCDPutCmd@ch
  8984  0003'                    l2295:
  8985                           
  8986                           ;lcd.c: 148: void LCDPutCmd(uint8_t ch);lcd.c: 149: {;lcd.c: 150:     _delay((unsigned l
      +                          ong)((5)*(16000000/4000.0)));
  8987  0003' 301A               	movlw	26
  8988  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  8989  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  8990  0006' 00A1'              	movwf	??_LCDPutCmd+1
  8991  0007' 30F7               	movlw	247
  8992  0008' 00A0'              	movwf	??_LCDPutCmd
  8993  0009'                    u7647:
  8994  0009' 0BA0'              	decfsz	??_LCDPutCmd,f
  8995  000A' 2800'              	goto	u7647
  8996  000B' 0BA1'              	decfsz	??_LCDPutCmd+1,f
  8997  000C' 2800'              	goto	u7647
  8998  000D' 2800'              	nop2
  8999  000E'                    l2297:
  9000                           
  9001                           ;lcd.c: 153:     LCDWriteNibble(ch,0);
  9002  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  9003  000F' 1303               	bcf	3,6	;RP1=0, select bank0
  9004  0010' 019D'              	clrf	LCDWriteNibble@rs
  9005  0011' 0822'              	movf	LCDPutCmd@ch,w
  9006  0012' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDWriteNibble
  9007  0017'                    l2299:
  9008                           
  9009                           ;lcd.c: 156:     ch = (ch << 4);
  9010  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  9011  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  9012  0019' 0822'              	movf	LCDPutCmd@ch,w
  9013  001A' 00A0'              	movwf	??_LCDPutCmd
  9014  001B' 3003               	movlw	3
  9015  001C'                    u3375:
  9016  001C' 1003               	clrc
  9017  001D' 0DA0'              	rlf	??_LCDPutCmd,f
  9018  001E' 3EFF               	addlw	-1
  9019  001F' 1D03               	skipz
  9020  0020' 2800'              	goto	u3375
  9021  0021' 1003               	clrc
  9022  0022' 0D20'              	rlf	??_LCDPutCmd,w
  9023  0023' 00A1'              	movwf	??_LCDPutCmd+1
  9024  0024' 0821'              	movf	??_LCDPutCmd+1,w
  9025  0025' 00A2'              	movwf	LCDPutCmd@ch
  9026  0026'                    l2301:
  9027                           
  9028                           ;lcd.c: 158:     _delay((unsigned long)((1)*(16000000/4000.0)));
  9029  0026' 3006               	movlw	6
  9030  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  9031  0028' 1303               	bcf	3,6	;RP1=0, select bank0
  9032  0029' 00A1'              	movwf	??_LCDPutCmd+1
  9033  002A' 302F               	movlw	47
  9034  002B' 00A0'              	movwf	??_LCDPutCmd
  9035  002C'                    u7657:
  9036  002C' 0BA0'              	decfsz	??_LCDPutCmd,f
  9037  002D' 2800'              	goto	u7657
  9038  002E' 0BA1'              	decfsz	??_LCDPutCmd+1,f
  9039  002F' 2800'              	goto	u7657
  9040  0030' 2800'              	nop2
  9041  0031'                    l2303:
  9042                           
  9043                           ;lcd.c: 161:     LCDWriteNibble(ch,0);
  9044  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  9045  0032' 1303               	bcf	3,6	;RP1=0, select bank0
  9046  0033' 019D'              	clrf	LCDWriteNibble@rs
  9047  0034' 0822'              	movf	LCDPutCmd@ch,w
  9048  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCDWriteNibble
  9049  003A'                    l103:
  9050  003A' 0008               	return
  9051  003B'                    __end_of_LCDPutCmd:
  9052                           
  9053                           	psect	text29
  9054  0000'                    __ptext29:	
  9055 ;; *************** function _LCDWriteNibble *****************
  9056 ;; Defined at:
  9057 ;;		line 80 in file "lcd.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  ch              1    wreg     unsigned char 
  9060 ;;  rs              1   29[BANK0 ] unsigned char 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;  ch              1   31[BANK0 ] unsigned char 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9072 ;;      Params:         0       1       0       0       0
  9073 ;;      Locals:         0       1       0       0       0
  9074 ;;      Temps:          0       1       0       0       0
  9075 ;;      Totals:         0       3       0       0       0
  9076 ;;Total ram usage:        3 bytes
  9077 ;; Hardware stack levels used: 1
  9078 ;; Hardware stack levels required when called: 3
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_LCDPutChar
  9083 ;;		_LCDPutCmd
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087  0000'                    _LCDWriteNibble:	
  9088                           ;psect for function _LCDWriteNibble
  9089                           
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  9093                           ;LCDWriteNibble@ch stored from wreg
  9094  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9095  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9096  0002' 009F'              	movwf	LCDWriteNibble@ch
  9097  0003'                    l2247:
  9098                           
  9099                           ;lcd.c: 80: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 81: {;lcd.c: 83:     ch = 
      +                          (ch & 0xF0);
  9100  0003' 081F'              	movf	LCDWriteNibble@ch,w
  9101  0004' 39F0               	andlw	240
  9102  0005' 009E'              	movwf	??_LCDWriteNibble
  9103  0006' 081E'              	movf	??_LCDWriteNibble,w
  9104  0007' 009F'              	movwf	LCDWriteNibble@ch
  9105                           
  9106                           ;lcd.c: 86:     PORTD = (PORTD & 0x0F);
  9107  0008' 0808               	movf	8,w	;volatile
  9108  0009' 390F               	andlw	15
  9109  000A' 0088               	movwf	8	;volatile
  9110  000B'                    l2249:
  9111                           
  9112                           ;lcd.c: 87:     PORTDbits.RD4 = 0;
  9113  000B' 1208               	bcf	8,4	;volatile
  9114  000C'                    l2251:
  9115                           
  9116                           ;lcd.c: 88:     PORTDbits.RD5 = 0;
  9117  000C' 1288               	bcf	8,5	;volatile
  9118  000D'                    l2253:
  9119                           
  9120                           ;lcd.c: 89:     PORTDbits.RD6 = 0;
  9121  000D' 1308               	bcf	8,6	;volatile
  9122  000E'                    l2255:
  9123                           
  9124                           ;lcd.c: 90:     PORTDbits.RD7 = 0;
  9125  000E' 1388               	bcf	8,7	;volatile
  9126  000F'                    l2257:
  9127                           
  9128                           ;lcd.c: 94:     if(((ch & 0x80)>>7)==1){
  9129  000F' 081F'              	movf	LCDWriteNibble@ch,w
  9130  0010' 009E'              	movwf	??_LCDWriteNibble
  9131  0011' 3007               	movlw	7
  9132  0012'                    u3265:
  9133  0012' 1003               	clrc
  9134  0013' 0C9E'              	rrf	??_LCDWriteNibble,f
  9135  0014' 3EFF               	addlw	-1
  9136  0015' 1D03               	skipz
  9137  0016' 2800'              	goto	u3265
  9138  0017' 1C1E'              	btfss	??_LCDWriteNibble,0
  9139  0018' 2800'              	goto	u3271
  9140  0019' 2800'              	goto	u3270
  9141  001A'                    u3271:
  9142  001A' 2800'              	goto	l89
  9143  001B'                    u3270:
  9144  001B'                    l2259:
  9145                           
  9146                           ;lcd.c: 95:         PORTDbits.RD7 = 1;
  9147  001B' 1788               	bsf	8,7	;volatile
  9148                           
  9149                           ;lcd.c: 96:     } else{
  9150  001C' 2800'              	goto	l2261
  9151  001D'                    l89:
  9152                           
  9153                           ;lcd.c: 97:         PORTDbits.RD7 = 0;
  9154  001D' 1388               	bcf	8,7	;volatile
  9155  001E'                    l2261:
  9156                           
  9157                           ;lcd.c: 100:     if(((ch & 0x40)>>6)==1){
  9158  001E' 081F'              	movf	LCDWriteNibble@ch,w
  9159  001F' 009E'              	movwf	??_LCDWriteNibble
  9160  0020' 3006               	movlw	6
  9161  0021'                    u3285:
  9162  0021' 1003               	clrc
  9163  0022' 0C9E'              	rrf	??_LCDWriteNibble,f
  9164  0023' 3EFF               	addlw	-1
  9165  0024' 1D03               	skipz
  9166  0025' 2800'              	goto	u3285
  9167  0026' 1C1E'              	btfss	??_LCDWriteNibble,0
  9168  0027' 2800'              	goto	u3291
  9169  0028' 2800'              	goto	u3290
  9170  0029'                    u3291:
  9171  0029' 2800'              	goto	l91
  9172  002A'                    u3290:
  9173  002A'                    l2263:
  9174                           
  9175                           ;lcd.c: 101:         PORTDbits.RD6 = 1;
  9176  002A' 1708               	bsf	8,6	;volatile
  9177                           
  9178                           ;lcd.c: 102:     } else{
  9179  002B' 2800'              	goto	l2265
  9180  002C'                    l91:
  9181                           
  9182                           ;lcd.c: 103:         PORTDbits.RD6 = 0;
  9183  002C' 1308               	bcf	8,6	;volatile
  9184  002D'                    l2265:
  9185                           
  9186                           ;lcd.c: 106:     if(((ch & 0x20)>>5)==1){
  9187  002D' 081F'              	movf	LCDWriteNibble@ch,w
  9188  002E' 009E'              	movwf	??_LCDWriteNibble
  9189  002F' 3005               	movlw	5
  9190  0030'                    u3305:
  9191  0030' 1003               	clrc
  9192  0031' 0C9E'              	rrf	??_LCDWriteNibble,f
  9193  0032' 3EFF               	addlw	-1
  9194  0033' 1D03               	skipz
  9195  0034' 2800'              	goto	u3305
  9196  0035' 1C1E'              	btfss	??_LCDWriteNibble,0
  9197  0036' 2800'              	goto	u3311
  9198  0037' 2800'              	goto	u3310
  9199  0038'                    u3311:
  9200  0038' 2800'              	goto	l93
  9201  0039'                    u3310:
  9202  0039'                    l2267:
  9203                           
  9204                           ;lcd.c: 107:         PORTDbits.RD5 = 1;
  9205  0039' 1688               	bsf	8,5	;volatile
  9206                           
  9207                           ;lcd.c: 108:     } else{
  9208  003A' 2800'              	goto	l2269
  9209  003B'                    l93:
  9210                           
  9211                           ;lcd.c: 109:         PORTDbits.RD5 = 0;
  9212  003B' 1288               	bcf	8,5	;volatile
  9213  003C'                    l2269:
  9214                           
  9215                           ;lcd.c: 112:     if(((ch & 0x10)>>4)==1){
  9216  003C' 081F'              	movf	LCDWriteNibble@ch,w
  9217  003D' 009E'              	movwf	??_LCDWriteNibble
  9218  003E' 3004               	movlw	4
  9219  003F'                    u3325:
  9220  003F' 1003               	clrc
  9221  0040' 0C9E'              	rrf	??_LCDWriteNibble,f
  9222  0041' 3EFF               	addlw	-1
  9223  0042' 1D03               	skipz
  9224  0043' 2800'              	goto	u3325
  9225  0044' 1C1E'              	btfss	??_LCDWriteNibble,0
  9226  0045' 2800'              	goto	u3331
  9227  0046' 2800'              	goto	u3330
  9228  0047'                    u3331:
  9229  0047' 2800'              	goto	l95
  9230  0048'                    u3330:
  9231  0048'                    l2271:
  9232                           
  9233                           ;lcd.c: 113:         PORTDbits.RD4 = 1;
  9234  0048' 1608               	bsf	8,4	;volatile
  9235                           
  9236                           ;lcd.c: 114:     } else{
  9237  0049' 2800'              	goto	l2273
  9238  004A'                    l95:
  9239                           
  9240                           ;lcd.c: 115:         PORTDbits.RD4 = 0;
  9241  004A' 1208               	bcf	8,4	;volatile
  9242  004B'                    l2273:
  9243                           
  9244                           ;lcd.c: 121:     PORTDbits.RD1 = rs;
  9245  004B' 0C1D'              	rrf	LCDWriteNibble@rs,w
  9246  004C' 1C03               	skipc
  9247  004D' 1088               	bcf	8,1	;volatile
  9248  004E' 1803               	skipnc
  9249  004F' 1488               	bsf	8,1	;volatile
  9250  0050'                    l2275:
  9251                           
  9252                           ;lcd.c: 124:     PORTDbits.RD2 = 0;
  9253  0050' 1108               	bcf	8,2	;volatile
  9254  0051'                    l2277:
  9255                           
  9256                           ;lcd.c: 127:     PORTDbits.RD3 = 1;
  9257  0051' 1588               	bsf	8,3	;volatile
  9258  0052'                    l2279:
  9259                           
  9260                           ;lcd.c: 130:     PORTDbits.RD3 = 0;
  9261  0052' 1188               	bcf	8,3	;volatile
  9262  0053'                    l97:
  9263  0053' 0008               	return
  9264  0054'                    __end_of_LCDWriteNibble:
  9265                           
  9266                           	psect	text30
  9267  0000'                    __ptext30:	
  9268 ;; *************** function _ISR *****************
  9269 ;; Defined at:
  9270 ;;		line 121 in file "newmain.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;		None
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;		None
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9284 ;;      Params:         0       0       0       0       0
  9285 ;;      Locals:         0       0       0       0       0
  9286 ;;      Temps:          0       3       0       0       0
  9287 ;;      Totals:         0       3       0       0       0
  9288 ;;Total ram usage:        3 bytes
  9289 ;; Hardware stack levels used: 1
  9290 ;; Hardware stack levels required when called: 2
  9291 ;; This function calls:
  9292 ;;		i1___flmul
  9293 ;;		i1___xxtofl
  9294 ;; This function is called by:
  9295 ;;		Interrupt level 1
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299  0000'                    _ISR:	
  9300                           ;psect for function _ISR
  9301                           
  9302  0000'                    i1l3583:
  9303                           
  9304                           ;newmain.c: 123:     if(INTF && INTE)
  9305  0000' 1C8B               	btfss	11,1	;volatile
  9306  0001' 2800'              	goto	u647_21
  9307  0002' 2800'              	goto	u647_20
  9308  0003'                    u647_21:
  9309  0003' 2800'              	goto	i1l3591
  9310  0004'                    u647_20:
  9311  0004'                    i1l3585:
  9312  0004' 1E0B               	btfss	11,4	;volatile
  9313  0005' 2800'              	goto	u648_21
  9314  0006' 2800'              	goto	u648_20
  9315  0007'                    u648_21:
  9316  0007' 2800'              	goto	i1l3591
  9317  0008'                    u648_20:
  9318  0008'                    i1l3587:
  9319                           
  9320                           ;newmain.c: 124:     {;newmain.c: 125:         Pulse++;
  9321  0008' 3001               	movlw	1
  9322  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  9323  000A' 1303               	bcf	3,6	;RP1=0, select bank1
  9324  000B' 0780'              	addwf	_Pulse^(0+128),f
  9325  000C' 1803               	skipnc
  9326  000D' 0A80'              	incf	(_Pulse+1)^(0+128),f
  9327  000E' 3000               	movlw	0
  9328  000F' 0780'              	addwf	(_Pulse+1)^(0+128),f
  9329  0010'                    i1l3589:
  9330                           
  9331                           ;newmain.c: 126:         INTF = 0;
  9332  0010' 108B               	bcf	11,1	;volatile
  9333  0011'                    i1l3591:
  9334                           
  9335                           ;newmain.c: 128:     if(TMR1IF && TMR1IE)
  9336  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  9337  0012' 1C0C               	btfss	12,0	;volatile
  9338  0013' 2800'              	goto	u649_21
  9339  0014' 2800'              	goto	u649_20
  9340  0015'                    u649_21:
  9341  0015' 2800'              	goto	i1l69
  9342  0016'                    u649_20:
  9343  0016'                    i1l3593:
  9344  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  9345  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  9346  0018' 1C0C               	btfss	12,0	;volatile
  9347  0019' 2800'              	goto	u650_21
  9348  001A' 2800'              	goto	u650_20
  9349  001B'                    u650_21:
  9350  001B' 2800'              	goto	i1l69
  9351  001C'                    u650_20:
  9352  001C'                    i1l3595:
  9353                           
  9354                           ;newmain.c: 129:     {;newmain.c: 130:     DeltaPulse = Pulse - PrePulse;
  9355  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  9356  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  9357  001E' 0800'              	movf	_PrePulse,w
  9358  001F' 1683               	bsf	3,5	;RP0=1, select bank1
  9359  0020' 1303               	bcf	3,6	;RP1=0, select bank1
  9360  0021' 0200'              	subwf	_Pulse^(0+128),w
  9361  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  9362  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  9363  0024' 0082'              	movwf	_DeltaPulse
  9364  0025' 0801'              	movf	_PrePulse+1,w
  9365  0026' 1C03               	skipc
  9366  0027' 0A01'              	incf	_PrePulse+1,w
  9367  0028' 1683               	bsf	3,5	;RP0=1, select bank1
  9368  0029' 1303               	bcf	3,6	;RP1=0, select bank1
  9369  002A' 0200'              	subwf	(_Pulse+1)^(0+128),w
  9370  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  9371  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  9372  002D' 0083'              	movwf	_DeltaPulse+1
  9373  002E'                    i1l3597:
  9374                           
  9375                           ;newmain.c: 131:     PrePulse = Pulse;
  9376  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  9377  002F' 1303               	bcf	3,6	;RP1=0, select bank1
  9378  0030' 0800'              	movf	(_Pulse+1)^(0+128),w
  9379  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  9380  0032' 1303               	bcf	3,6	;RP1=0, select bank0
  9381  0033' 0081'              	movwf	_PrePulse+1
  9382  0034' 1683               	bsf	3,5	;RP0=1, select bank1
  9383  0035' 1303               	bcf	3,6	;RP1=0, select bank1
  9384  0036' 0800'              	movf	_Pulse^(0+128),w
  9385  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  9386  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  9387  0039' 0080'              	movwf	_PrePulse
  9388  003A'                    i1l3599:
  9389                           
  9390                           ;newmain.c: 132:     Velocity = 6.0*(float)DeltaPulse;
  9391  003A' 3040               	movlw	64
  9392  003B' 0083'              	movwf	i1___flmul@b+3
  9393  003C' 30C0               	movlw	192
  9394  003D' 0082'              	movwf	i1___flmul@b+2
  9395  003E' 3000               	movlw	0
  9396  003F' 0081'              	movwf	i1___flmul@b+1
  9397  0040' 3000               	movlw	0
  9398  0041' 0080'              	movwf	i1___flmul@b
  9399  0042' 0802'              	movf	_DeltaPulse,w
  9400  0043' 0080'              	movwf	i1___xxtofl@val
  9401  0044' 0803'              	movf	_DeltaPulse+1,w
  9402  0045' 0081'              	movwf	i1___xxtofl@val+1
  9403  0046' 0182'              	clrf	i1___xxtofl@val+2
  9404  0047' 0183'              	clrf	i1___xxtofl@val+3
  9405  0048' 3000               	movlw	0
  9406  0049' 120A' 118A' 2000' 120A' 118A' 	fcall	i1___xxtofl
  9407  004E' 0803'              	movf	?i1___xxtofl+3,w
  9408  004F' 1283               	bcf	3,5	;RP0=0, select bank0
  9409  0050' 1303               	bcf	3,6	;RP1=0, select bank0
  9410  0051' 0087'              	movwf	i1___flmul@a+3
  9411  0052' 0802'              	movf	?i1___xxtofl+2,w
  9412  0053' 0086'              	movwf	i1___flmul@a+2
  9413  0054' 0801'              	movf	?i1___xxtofl+1,w
  9414  0055' 0085'              	movwf	i1___flmul@a+1
  9415  0056' 0800'              	movf	?i1___xxtofl,w
  9416  0057' 0084'              	movwf	i1___flmul@a
  9417  0058' 120A' 118A' 2000' 120A' 118A' 	fcall	i1___flmul
  9418  005D' 1283               	bcf	3,5	;RP0=0, select bank0
  9419  005E' 1303               	bcf	3,6	;RP1=0, select bank0
  9420  005F' 0803'              	movf	?i1___flmul+3,w
  9421  0060' 1683               	bsf	3,5	;RP0=1, select bank3
  9422  0061' 1703               	bsf	3,6	;RP1=1, select bank3
  9423  0062' 0080'              	movwf	(_Velocity+3)^(0+384)
  9424  0063' 1283               	bcf	3,5	;RP0=0, select bank0
  9425  0064' 1303               	bcf	3,6	;RP1=0, select bank0
  9426  0065' 0802'              	movf	?i1___flmul+2,w
  9427  0066' 1683               	bsf	3,5	;RP0=1, select bank3
  9428  0067' 1703               	bsf	3,6	;RP1=1, select bank3
  9429  0068' 0080'              	movwf	(_Velocity+2)^(0+384)
  9430  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  9431  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  9432  006B' 0801'              	movf	?i1___flmul+1,w
  9433  006C' 1683               	bsf	3,5	;RP0=1, select bank3
  9434  006D' 1703               	bsf	3,6	;RP1=1, select bank3
  9435  006E' 0080'              	movwf	(_Velocity+1)^(0+384)
  9436  006F' 1283               	bcf	3,5	;RP0=0, select bank0
  9437  0070' 1303               	bcf	3,6	;RP1=0, select bank0
  9438  0071' 0800'              	movf	?i1___flmul,w
  9439  0072' 1683               	bsf	3,5	;RP0=1, select bank3
  9440  0073' 1703               	bsf	3,6	;RP1=1, select bank3
  9441  0074' 0080'              	movwf	_Velocity^(0+384)
  9442  0075'                    i1l3601:
  9443                           
  9444                           ;newmain.c: 133:         TMR1 = 3036;
  9445  0075' 300B               	movlw	11
  9446  0076' 1283               	bcf	3,5	;RP0=0, select bank0
  9447  0077' 1303               	bcf	3,6	;RP1=0, select bank0
  9448  0078' 008F               	movwf	15	;volatile
  9449  0079' 30DC               	movlw	220
  9450  007A' 008E               	movwf	14	;volatile
  9451  007B'                    i1l3603:
  9452                           
  9453                           ;newmain.c: 134:         TMR1IF = 0;
  9454  007B' 100C               	bcf	12,0	;volatile
  9455  007C'                    i1l69:
  9456  007C' 1283               	bcf	3,5	;RP0=0, select bank0
  9457  007D' 081C'              	movf	??_ISR+2,w
  9458  007E' 00FF               	movwf	btemp+1
  9459  007F' 081B'              	movf	??_ISR+1,w
  9460  0080' 008A               	movwf	10
  9461  0081' 0E1A'              	swapf	??_ISR,w
  9462  0082' 0083               	movwf	3
  9463  0083' 0EFE               	swapf	btemp,f
  9464  0084' 0E7E               	swapf	btemp,w
  9465  0085' 0009               	retfie
  9466  0086'                    __end_of_ISR:
  9467                           
  9468                           	psect	intentry
  9469  0000'                    __pintentry:	
  9470                           ;incstack = 0
  9471                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9472                           
  9473  0000'                    interrupt_function:
  9474  007E                     saved_w	set	btemp
  9475  0000' 00FE               	movwf	btemp
  9476  0001' 0E03               	swapf	3,w
  9477  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  9478  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  9479  0004' 009A'              	movwf	??_ISR
  9480  0005' 080A               	movf	10,w
  9481  0006' 009B'              	movwf	??_ISR+1
  9482  0007' 087F               	movf	btemp+1,w
  9483  0008' 009C'              	movwf	??_ISR+2
  9484  0009' 120A' 118A' 2800'  	ljmp	_ISR
  9485                           
  9486                           	psect	text31
  9487  0000'                    __ptext31:	
  9488 ;; *************** function i1___xxtofl *****************
  9489 ;; Defined at:
  9490 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  sign            1    wreg     unsigned char 
  9493 ;;  val             4    0[COMMON] long 
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  sign            1    8[COMMON] unsigned char 
  9496 ;;  arg             4   10[COMMON] unsigned long 
  9497 ;;  exp             1    9[COMMON] unsigned char 
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  4    0[COMMON] unsigned char 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9507 ;;      Params:         4       0       0       0       0
  9508 ;;      Locals:         6       0       0       0       0
  9509 ;;      Temps:          4       0       0       0       0
  9510 ;;      Totals:        14       0       0       0       0
  9511 ;;Total ram usage:       14 bytes
  9512 ;; Hardware stack levels used: 1
  9513 ;; This function calls:
  9514 ;;		Nothing
  9515 ;; This function is called by:
  9516 ;;		_ISR
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520  0000'                    i1___xxtofl:	
  9521                           ;psect for function i1___xxtofl
  9522                           
  9523                           
  9524                           ;incstack = 0
  9525                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
  9526                           ;i1___xxtofl@sign stored from wreg
  9527  0000' 0088'              	movwf	i1___xxtofl@sign
  9528  0001'                    i1l3533:
  9529  0001' 0808'              	movf	i1___xxtofl@sign,w
  9530  0002' 1903               	btfsc	3,2
  9531  0003' 2800'              	goto	u633_21
  9532  0004' 2800'              	goto	u633_20
  9533  0005'                    u633_21:
  9534  0005' 2800'              	goto	i1l3539
  9535  0006'                    u633_20:
  9536  0006'                    i1l3535:
  9537  0006' 1F83'              	btfss	i1___xxtofl@val+3,7
  9538  0007' 2800'              	goto	u634_21
  9539  0008' 2800'              	goto	u634_20
  9540  0009'                    u634_21:
  9541  0009' 2800'              	goto	i1l3539
  9542  000A'                    u634_20:
  9543  000A'                    i1l3537:
  9544  000A' 0900'              	comf	i1___xxtofl@val,w
  9545  000B' 008A'              	movwf	i1___xxtofl@arg
  9546  000C' 0901'              	comf	i1___xxtofl@val+1,w
  9547  000D' 008B'              	movwf	i1___xxtofl@arg+1
  9548  000E' 0902'              	comf	i1___xxtofl@val+2,w
  9549  000F' 008C'              	movwf	i1___xxtofl@arg+2
  9550  0010' 0903'              	comf	i1___xxtofl@val+3,w
  9551  0011' 008D'              	movwf	i1___xxtofl@arg+3
  9552  0012' 0A8A'              	incf	i1___xxtofl@arg,f
  9553  0013' 1903               	skipnz
  9554  0014' 0A8B'              	incf	i1___xxtofl@arg+1,f
  9555  0015' 1903               	skipnz
  9556  0016' 0A8C'              	incf	i1___xxtofl@arg+2,f
  9557  0017' 1903               	skipnz
  9558  0018' 0A8D'              	incf	i1___xxtofl@arg+3,f
  9559  0019' 2800'              	goto	i1l760
  9560  001A'                    i1l3539:
  9561  001A' 0803'              	movf	i1___xxtofl@val+3,w
  9562  001B' 008D'              	movwf	i1___xxtofl@arg+3
  9563  001C' 0802'              	movf	i1___xxtofl@val+2,w
  9564  001D' 008C'              	movwf	i1___xxtofl@arg+2
  9565  001E' 0801'              	movf	i1___xxtofl@val+1,w
  9566  001F' 008B'              	movwf	i1___xxtofl@arg+1
  9567  0020' 0800'              	movf	i1___xxtofl@val,w
  9568  0021' 008A'              	movwf	i1___xxtofl@arg
  9569  0022'                    i1l760:
  9570  0022' 0803'              	movf	i1___xxtofl@val+3,w
  9571  0023' 0402'              	iorwf	i1___xxtofl@val+2,w
  9572  0024' 0401'              	iorwf	i1___xxtofl@val+1,w
  9573  0025' 0400'              	iorwf	i1___xxtofl@val,w
  9574  0026' 1D03               	skipz
  9575  0027' 2800'              	goto	u635_21
  9576  0028' 2800'              	goto	u635_20
  9577  0029'                    u635_21:
  9578  0029' 2800'              	goto	i1l3545
  9579  002A'                    u635_20:
  9580  002A'                    i1l3541:
  9581  002A' 3000               	movlw	0
  9582  002B' 0083'              	movwf	?i1___xxtofl+3
  9583  002C' 3000               	movlw	0
  9584  002D' 0082'              	movwf	?i1___xxtofl+2
  9585  002E' 3000               	movlw	0
  9586  002F' 0081'              	movwf	?i1___xxtofl+1
  9587  0030' 3000               	movlw	0
  9588  0031' 0080'              	movwf	?i1___xxtofl
  9589  0032' 2800'              	goto	i1l762
  9590  0033'                    i1l3545:
  9591  0033' 3096               	movlw	150
  9592  0034' 0084'              	movwf	??i1___xxtofl
  9593  0035' 0804'              	movf	??i1___xxtofl,w
  9594  0036' 0089'              	movwf	i1___xxtofl@exp
  9595  0037' 2800'              	goto	i1l3549
  9596  0038'                    i1l3547:
  9597  0038' 3001               	movlw	1
  9598  0039' 0084'              	movwf	??i1___xxtofl
  9599  003A' 0804'              	movf	??i1___xxtofl,w
  9600  003B' 0789'              	addwf	i1___xxtofl@exp,f
  9601  003C' 3001               	movlw	1
  9602  003D'                    u636_25:
  9603  003D' 1003               	clrc
  9604  003E' 0C8D'              	rrf	i1___xxtofl@arg+3,f
  9605  003F' 0C8C'              	rrf	i1___xxtofl@arg+2,f
  9606  0040' 0C8B'              	rrf	i1___xxtofl@arg+1,f
  9607  0041' 0C8A'              	rrf	i1___xxtofl@arg,f
  9608  0042' 3EFF               	addlw	-1
  9609  0043' 1D03               	skipz
  9610  0044' 2800'              	goto	u636_25
  9611  0045'                    i1l3549:
  9612  0045' 30FE               	movlw	254
  9613  0046' 050D'              	andwf	i1___xxtofl@arg+3,w
  9614  0047' 1D03               	btfss	3,2
  9615  0048' 2800'              	goto	u637_21
  9616  0049' 2800'              	goto	u637_20
  9617  004A'                    u637_21:
  9618  004A' 2800'              	goto	i1l3547
  9619  004B'                    u637_20:
  9620  004B' 2800'              	goto	i1l766
  9621  004C'                    i1l3551:
  9622  004C' 3001               	movlw	1
  9623  004D' 0084'              	movwf	??i1___xxtofl
  9624  004E' 0804'              	movf	??i1___xxtofl,w
  9625  004F' 0789'              	addwf	i1___xxtofl@exp,f
  9626  0050'                    i1l3553:
  9627  0050' 3001               	movlw	1
  9628  0051' 078A'              	addwf	i1___xxtofl@arg,f
  9629  0052' 3000               	movlw	0
  9630  0053' 1803               	skipnc
  9631  0054' 3001               	movlw	1
  9632  0055' 078B'              	addwf	i1___xxtofl@arg+1,f
  9633  0056' 3000               	movlw	0
  9634  0057' 1803               	skipnc
  9635  0058' 3001               	movlw	1
  9636  0059' 078C'              	addwf	i1___xxtofl@arg+2,f
  9637  005A' 3000               	movlw	0
  9638  005B' 1803               	skipnc
  9639  005C' 3001               	movlw	1
  9640  005D' 078D'              	addwf	i1___xxtofl@arg+3,f
  9641  005E'                    i1l3555:
  9642  005E' 3001               	movlw	1
  9643  005F'                    u638_25:
  9644  005F' 1003               	clrc
  9645  0060' 0C8D'              	rrf	i1___xxtofl@arg+3,f
  9646  0061' 0C8C'              	rrf	i1___xxtofl@arg+2,f
  9647  0062' 0C8B'              	rrf	i1___xxtofl@arg+1,f
  9648  0063' 0C8A'              	rrf	i1___xxtofl@arg,f
  9649  0064' 3EFF               	addlw	-1
  9650  0065' 1D03               	skipz
  9651  0066' 2800'              	goto	u638_25
  9652  0067'                    i1l766:
  9653  0067' 30FF               	movlw	255
  9654  0068' 050D'              	andwf	i1___xxtofl@arg+3,w
  9655  0069' 1D03               	btfss	3,2
  9656  006A' 2800'              	goto	u639_21
  9657  006B' 2800'              	goto	u639_20
  9658  006C'                    u639_21:
  9659  006C' 2800'              	goto	i1l3551
  9660  006D'                    u639_20:
  9661  006D' 2800'              	goto	i1l3559
  9662  006E'                    i1l3557:
  9663  006E' 3001               	movlw	1
  9664  006F' 0289'              	subwf	i1___xxtofl@exp,f
  9665  0070' 3001               	movlw	1
  9666  0071' 0084'              	movwf	??i1___xxtofl
  9667  0072'                    u640_25:
  9668  0072' 1003               	clrc
  9669  0073' 0D8A'              	rlf	i1___xxtofl@arg,f
  9670  0074' 0D8B'              	rlf	i1___xxtofl@arg+1,f
  9671  0075' 0D8C'              	rlf	i1___xxtofl@arg+2,f
  9672  0076' 0D8D'              	rlf	i1___xxtofl@arg+3,f
  9673  0077' 0B84'              	decfsz	??i1___xxtofl,f
  9674  0078' 2800'              	goto	u640_25
  9675  0079'                    i1l3559:
  9676  0079' 1B8C'              	btfsc	i1___xxtofl@arg+2,7
  9677  007A' 2800'              	goto	u641_21
  9678  007B' 2800'              	goto	u641_20
  9679  007C'                    u641_21:
  9680  007C' 2800'              	goto	i1l773
  9681  007D'                    u641_20:
  9682  007D'                    i1l3561:
  9683  007D' 3002               	movlw	2
  9684  007E' 0209'              	subwf	i1___xxtofl@exp,w
  9685  007F' 1803               	skipnc
  9686  0080' 2800'              	goto	u642_21
  9687  0081' 2800'              	goto	u642_20
  9688  0082'                    u642_21:
  9689  0082' 2800'              	goto	i1l3557
  9690  0083'                    u642_20:
  9691  0083'                    i1l773:
  9692  0083' 1809'              	btfsc	i1___xxtofl@exp,0
  9693  0084' 2800'              	goto	u643_21
  9694  0085' 2800'              	goto	u643_20
  9695  0086'                    u643_21:
  9696  0086' 2800'              	goto	i1l774
  9697  0087'                    u643_20:
  9698  0087'                    i1l3563:
  9699  0087' 30FF               	movlw	255
  9700  0088' 058A'              	andwf	i1___xxtofl@arg,f
  9701  0089' 30FF               	movlw	255
  9702  008A' 058B'              	andwf	i1___xxtofl@arg+1,f
  9703  008B' 307F               	movlw	127
  9704  008C' 058C'              	andwf	i1___xxtofl@arg+2,f
  9705  008D' 30FF               	movlw	255
  9706  008E' 058D'              	andwf	i1___xxtofl@arg+3,f
  9707  008F'                    i1l774:
  9708  008F' 1003               	clrc
  9709  0090' 0C89'              	rrf	i1___xxtofl@exp,f
  9710  0091'                    i1l3565:
  9711  0091' 0809'              	movf	i1___xxtofl@exp,w
  9712  0092' 0084'              	movwf	??i1___xxtofl
  9713  0093' 0185'              	clrf	??i1___xxtofl+1
  9714  0094' 0186'              	clrf	??i1___xxtofl+2
  9715  0095' 0187'              	clrf	??i1___xxtofl+3
  9716  0096' 3018               	movlw	24
  9717  0097'                    u644_25:
  9718  0097' 1003               	clrc
  9719  0098' 0D84'              	rlf	??i1___xxtofl,f
  9720  0099' 0D85'              	rlf	??i1___xxtofl+1,f
  9721  009A' 0D86'              	rlf	??i1___xxtofl+2,f
  9722  009B' 0D87'              	rlf	??i1___xxtofl+3,f
  9723  009C'                    u644_20:
  9724  009C' 3EFF               	addlw	-1
  9725  009D' 1D03               	skipz
  9726  009E' 2800'              	goto	u644_25
  9727  009F' 0804'              	movf	??i1___xxtofl,w
  9728  00A0' 048A'              	iorwf	i1___xxtofl@arg,f
  9729  00A1' 0805'              	movf	??i1___xxtofl+1,w
  9730  00A2' 048B'              	iorwf	i1___xxtofl@arg+1,f
  9731  00A3' 0806'              	movf	??i1___xxtofl+2,w
  9732  00A4' 048C'              	iorwf	i1___xxtofl@arg+2,f
  9733  00A5' 0807'              	movf	??i1___xxtofl+3,w
  9734  00A6' 048D'              	iorwf	i1___xxtofl@arg+3,f
  9735  00A7'                    i1l3567:
  9736  00A7' 0808'              	movf	i1___xxtofl@sign,w
  9737  00A8' 1903               	btfsc	3,2
  9738  00A9' 2800'              	goto	u645_21
  9739  00AA' 2800'              	goto	u645_20
  9740  00AB'                    u645_21:
  9741  00AB' 2800'              	goto	i1l3573
  9742  00AC'                    u645_20:
  9743  00AC'                    i1l3569:
  9744  00AC' 1F83'              	btfss	i1___xxtofl@val+3,7
  9745  00AD' 2800'              	goto	u646_21
  9746  00AE' 2800'              	goto	u646_20
  9747  00AF'                    u646_21:
  9748  00AF' 2800'              	goto	i1l3573
  9749  00B0'                    u646_20:
  9750  00B0'                    i1l3571:
  9751  00B0' 178D'              	bsf	i1___xxtofl@arg+3,7
  9752  00B1'                    i1l3573:
  9753  00B1' 080D'              	movf	i1___xxtofl@arg+3,w
  9754  00B2' 0083'              	movwf	?i1___xxtofl+3
  9755  00B3' 080C'              	movf	i1___xxtofl@arg+2,w
  9756  00B4' 0082'              	movwf	?i1___xxtofl+2
  9757  00B5' 080B'              	movf	i1___xxtofl@arg+1,w
  9758  00B6' 0081'              	movwf	?i1___xxtofl+1
  9759  00B7' 080A'              	movf	i1___xxtofl@arg,w
  9760  00B8' 0080'              	movwf	?i1___xxtofl
  9761  00B9'                    i1l762:
  9762  00B9' 0008               	return
  9763  00BA'                    __end_ofi1___xxtofl:
  9764                           
  9765                           	psect	text32
  9766  0000'                    __ptext32:	
  9767 ;; *************** function i1___flmul *****************
  9768 ;; Defined at:
  9769 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  b               4    0[BANK0 ] unsigned char 
  9772 ;;  a               4    4[BANK0 ] unsigned char 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;  prod            4   20[BANK0 ] struct .
  9775 ;;  grs             4   14[BANK0 ] unsigned long 
  9776 ;;  temp            2   24[BANK0 ] struct .
  9777 ;;  bexp            1   19[BANK0 ] unsigned char 
  9778 ;;  aexp            1   18[BANK0 ] unsigned char 
  9779 ;;  sign            1   13[BANK0 ] unsigned char 
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  4    0[BANK0 ] unsigned char 
  9782 ;; Registers used:
  9783 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9789 ;;      Params:         0       8       0       0       0
  9790 ;;      Locals:         0      13       0       0       0
  9791 ;;      Temps:          0       5       0       0       0
  9792 ;;      Totals:         0      26       0       0       0
  9793 ;;Total ram usage:       26 bytes
  9794 ;; Hardware stack levels used: 1
  9795 ;; Hardware stack levels required when called: 1
  9796 ;; This function calls:
  9797 ;;		i1__Umul8_16
  9798 ;; This function is called by:
  9799 ;;		_ISR
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803  0000'                    i1___flmul:	
  9804                           ;psect for function i1___flmul
  9805                           
  9806  0000'                    i1l3393:	
  9807                           ;incstack = 0
  9808                           ; Regs used in i1___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9809                           
  9810  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9811  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9812  0002' 0803'              	movf	i1___flmul@b+3,w
  9813  0003' 3980               	andlw	128
  9814  0004' 0088'              	movwf	??i1___flmul
  9815  0005' 0808'              	movf	??i1___flmul,w
  9816  0006' 008D'              	movwf	i1___flmul@sign
  9817  0007'                    i1l3395:
  9818  0007' 0803'              	movf	i1___flmul@b+3,w
  9819  0008' 0088'              	movwf	??i1___flmul
  9820  0009' 0708'              	addwf	??i1___flmul,w
  9821  000A' 0089'              	movwf	??i1___flmul+1
  9822  000B' 0809'              	movf	??i1___flmul+1,w
  9823  000C' 0093'              	movwf	i1___flmul@bexp
  9824  000D'                    i1l3397:
  9825  000D' 1F82'              	btfss	i1___flmul@b+2,7
  9826  000E' 2800'              	goto	u596_21
  9827  000F' 2800'              	goto	u596_20
  9828  0010'                    u596_21:
  9829  0010' 2800'              	goto	i1l3401
  9830  0011'                    u596_20:
  9831  0011'                    i1l3399:
  9832  0011' 1413'              	bsf	i1___flmul@bexp,0
  9833  0012'                    i1l3401:
  9834  0012' 0813'              	movf	i1___flmul@bexp,w
  9835  0013' 1903               	btfsc	3,2
  9836  0014' 2800'              	goto	u597_21
  9837  0015' 2800'              	goto	u597_20
  9838  0016'                    u597_21:
  9839  0016' 2800'              	goto	i1l3409
  9840  0017'                    u597_20:
  9841  0017'                    i1l3403:
  9842  0017' 0A13'              	incf	i1___flmul@bexp,w
  9843  0018' 1D03               	btfss	3,2
  9844  0019' 2800'              	goto	u598_21
  9845  001A' 2800'              	goto	u598_20
  9846  001B'                    u598_21:
  9847  001B' 2800'              	goto	i1l3407
  9848  001C'                    u598_20:
  9849  001C'                    i1l3405:
  9850  001C' 3000               	movlw	0
  9851  001D' 0083'              	movwf	i1___flmul@b+3
  9852  001E' 3000               	movlw	0
  9853  001F' 0082'              	movwf	i1___flmul@b+2
  9854  0020' 3000               	movlw	0
  9855  0021' 0081'              	movwf	i1___flmul@b+1
  9856  0022' 3000               	movlw	0
  9857  0023' 0080'              	movwf	i1___flmul@b
  9858  0024'                    i1l3407:
  9859  0024' 1782'              	bsf	i1___flmul@b+2,7
  9860  0025' 2800'              	goto	i1l3411
  9861  0026'                    i1l3409:
  9862  0026' 3000               	movlw	0
  9863  0027' 0083'              	movwf	i1___flmul@b+3
  9864  0028' 3000               	movlw	0
  9865  0029' 0082'              	movwf	i1___flmul@b+2
  9866  002A' 3000               	movlw	0
  9867  002B' 0081'              	movwf	i1___flmul@b+1
  9868  002C' 3000               	movlw	0
  9869  002D' 0080'              	movwf	i1___flmul@b
  9870  002E'                    i1l3411:
  9871  002E' 0807'              	movf	i1___flmul@a+3,w
  9872  002F' 3980               	andlw	128
  9873  0030' 0088'              	movwf	??i1___flmul
  9874  0031' 0808'              	movf	??i1___flmul,w
  9875  0032' 068D'              	xorwf	i1___flmul@sign,f
  9876  0033'                    i1l3413:
  9877  0033' 0807'              	movf	i1___flmul@a+3,w
  9878  0034' 0088'              	movwf	??i1___flmul
  9879  0035' 0708'              	addwf	??i1___flmul,w
  9880  0036' 0089'              	movwf	??i1___flmul+1
  9881  0037' 0809'              	movf	??i1___flmul+1,w
  9882  0038' 0092'              	movwf	i1___flmul@aexp
  9883  0039'                    i1l3415:
  9884  0039' 1F86'              	btfss	i1___flmul@a+2,7
  9885  003A' 2800'              	goto	u599_21
  9886  003B' 2800'              	goto	u599_20
  9887  003C'                    u599_21:
  9888  003C' 2800'              	goto	i1l3419
  9889  003D'                    u599_20:
  9890  003D'                    i1l3417:
  9891  003D' 1412'              	bsf	i1___flmul@aexp,0
  9892  003E'                    i1l3419:
  9893  003E' 0812'              	movf	i1___flmul@aexp,w
  9894  003F' 1903               	btfsc	3,2
  9895  0040' 2800'              	goto	u600_21
  9896  0041' 2800'              	goto	u600_20
  9897  0042'                    u600_21:
  9898  0042' 2800'              	goto	i1l3427
  9899  0043'                    u600_20:
  9900  0043'                    i1l3421:
  9901  0043' 0A12'              	incf	i1___flmul@aexp,w
  9902  0044' 1D03               	btfss	3,2
  9903  0045' 2800'              	goto	u601_21
  9904  0046' 2800'              	goto	u601_20
  9905  0047'                    u601_21:
  9906  0047' 2800'              	goto	i1l3425
  9907  0048'                    u601_20:
  9908  0048'                    i1l3423:
  9909  0048' 3000               	movlw	0
  9910  0049' 0087'              	movwf	i1___flmul@a+3
  9911  004A' 3000               	movlw	0
  9912  004B' 0086'              	movwf	i1___flmul@a+2
  9913  004C' 3000               	movlw	0
  9914  004D' 0085'              	movwf	i1___flmul@a+1
  9915  004E' 3000               	movlw	0
  9916  004F' 0084'              	movwf	i1___flmul@a
  9917  0050'                    i1l3425:
  9918  0050' 1786'              	bsf	i1___flmul@a+2,7
  9919  0051' 2800'              	goto	i1l3429
  9920  0052'                    i1l3427:
  9921  0052' 3000               	movlw	0
  9922  0053' 0087'              	movwf	i1___flmul@a+3
  9923  0054' 3000               	movlw	0
  9924  0055' 0086'              	movwf	i1___flmul@a+2
  9925  0056' 3000               	movlw	0
  9926  0057' 0085'              	movwf	i1___flmul@a+1
  9927  0058' 3000               	movlw	0
  9928  0059' 0084'              	movwf	i1___flmul@a
  9929  005A'                    i1l3429:
  9930  005A' 0812'              	movf	i1___flmul@aexp,w
  9931  005B' 1903               	btfsc	3,2
  9932  005C' 2800'              	goto	u602_21
  9933  005D' 2800'              	goto	u602_20
  9934  005E'                    u602_21:
  9935  005E' 2800'              	goto	i1l3433
  9936  005F'                    u602_20:
  9937  005F'                    i1l3431:
  9938  005F' 0813'              	movf	i1___flmul@bexp,w
  9939  0060' 1D03               	btfss	3,2
  9940  0061' 2800'              	goto	u603_21
  9941  0062' 2800'              	goto	u603_20
  9942  0063'                    u603_21:
  9943  0063' 2800'              	goto	i1l3437
  9944  0064'                    u603_20:
  9945  0064'                    i1l3433:
  9946  0064' 3000               	movlw	0
  9947  0065' 0083'              	movwf	?i1___flmul+3
  9948  0066' 3000               	movlw	0
  9949  0067' 0082'              	movwf	?i1___flmul+2
  9950  0068' 3000               	movlw	0
  9951  0069' 0081'              	movwf	?i1___flmul+1
  9952  006A' 3000               	movlw	0
  9953  006B' 0080'              	movwf	?i1___flmul
  9954  006C' 2800'              	goto	i1l716
  9955  006D'                    i1l3437:
  9956  006D' 0800'              	movf	i1___flmul@b,w
  9957  006E' 0088'              	movwf	??i1___flmul
  9958  006F' 0808'              	movf	??i1___flmul,w
  9959  0070' 0080'              	movwf	i1__Umul8_16@multiplicand
  9960  0071' 0806'              	movf	i1___flmul@a+2,w
  9961  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
  9962  0077' 0801'              	movf	?i1__Umul8_16+1,w
  9963  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  9964  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  9965  007A' 0099'              	movwf	i1___flmul@temp+1
  9966  007B' 0800'              	movf	?i1__Umul8_16,w
  9967  007C' 0098'              	movwf	i1___flmul@temp
  9968  007D'                    i1l3439:
  9969  007D' 0818'              	movf	i1___flmul@temp,w
  9970  007E' 0088'              	movwf	??i1___flmul
  9971  007F' 0189'              	clrf	??i1___flmul+1
  9972  0080' 018A'              	clrf	??i1___flmul+2
  9973  0081' 018B'              	clrf	??i1___flmul+3
  9974  0082' 080B'              	movf	??i1___flmul+3,w
  9975  0083' 0091'              	movwf	i1___flmul@grs+3
  9976  0084' 080A'              	movf	??i1___flmul+2,w
  9977  0085' 0090'              	movwf	i1___flmul@grs+2
  9978  0086' 0809'              	movf	??i1___flmul+1,w
  9979  0087' 008F'              	movwf	i1___flmul@grs+1
  9980  0088' 0808'              	movf	??i1___flmul,w
  9981  0089' 008E'              	movwf	i1___flmul@grs
  9982  008A'                    i1l3441:
  9983  008A' 0819'              	movf	i1___flmul@temp+1,w
  9984  008B' 0088'              	movwf	??i1___flmul
  9985  008C' 0189'              	clrf	??i1___flmul+1
  9986  008D' 018A'              	clrf	??i1___flmul+2
  9987  008E' 018B'              	clrf	??i1___flmul+3
  9988  008F' 080B'              	movf	??i1___flmul+3,w
  9989  0090' 0097'              	movwf	i1___flmul@prod+3
  9990  0091' 080A'              	movf	??i1___flmul+2,w
  9991  0092' 0096'              	movwf	i1___flmul@prod+2
  9992  0093' 0809'              	movf	??i1___flmul+1,w
  9993  0094' 0095'              	movwf	i1___flmul@prod+1
  9994  0095' 0808'              	movf	??i1___flmul,w
  9995  0096' 0094'              	movwf	i1___flmul@prod
  9996  0097' 0801'              	movf	i1___flmul@b+1,w
  9997  0098' 0088'              	movwf	??i1___flmul
  9998  0099' 0808'              	movf	??i1___flmul,w
  9999  009A' 0080'              	movwf	i1__Umul8_16@multiplicand
 10000  009B' 0805'              	movf	i1___flmul@a+1,w
 10001  009C' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10002  00A1' 0801'              	movf	?i1__Umul8_16+1,w
 10003  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
 10004  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
 10005  00A4' 0099'              	movwf	i1___flmul@temp+1
 10006  00A5' 0800'              	movf	?i1__Umul8_16,w
 10007  00A6' 0098'              	movwf	i1___flmul@temp
 10008  00A7'                    i1l3443:
 10009  00A7' 0818'              	movf	i1___flmul@temp,w
 10010  00A8' 0088'              	movwf	??i1___flmul
 10011  00A9' 0189'              	clrf	??i1___flmul+1
 10012  00AA' 018A'              	clrf	??i1___flmul+2
 10013  00AB' 018B'              	clrf	??i1___flmul+3
 10014  00AC' 0808'              	movf	??i1___flmul,w
 10015  00AD' 078E'              	addwf	i1___flmul@grs,f
 10016  00AE' 0809'              	movf	??i1___flmul+1,w
 10017  00AF' 1103               	clrz
 10018  00B0' 1803               	skipnc
 10019  00B1' 3E01               	addlw	1
 10020  00B2' 1903               	skipnz
 10021  00B3' 2800'              	goto	u604_21
 10022  00B4' 078F'              	addwf	i1___flmul@grs+1,f
 10023  00B5'                    u604_21:
 10024  00B5' 080A'              	movf	??i1___flmul+2,w
 10025  00B6' 1103               	clrz
 10026  00B7' 1803               	skipnc
 10027  00B8' 3E01               	addlw	1
 10028  00B9' 1903               	skipnz
 10029  00BA' 2800'              	goto	u604_22
 10030  00BB' 0790'              	addwf	i1___flmul@grs+2,f
 10031  00BC'                    u604_22:
 10032  00BC' 080B'              	movf	??i1___flmul+3,w
 10033  00BD' 1103               	clrz
 10034  00BE' 1803               	skipnc
 10035  00BF' 3E01               	addlw	1
 10036  00C0' 1903               	skipnz
 10037  00C1' 2800'              	goto	u604_23
 10038  00C2' 0791'              	addwf	i1___flmul@grs+3,f
 10039  00C3'                    u604_23:
 10040  00C3'                    i1l3445:
 10041  00C3' 0819'              	movf	i1___flmul@temp+1,w
 10042  00C4' 0088'              	movwf	??i1___flmul
 10043  00C5' 0189'              	clrf	??i1___flmul+1
 10044  00C6' 018A'              	clrf	??i1___flmul+2
 10045  00C7' 018B'              	clrf	??i1___flmul+3
 10046  00C8' 0808'              	movf	??i1___flmul,w
 10047  00C9' 0794'              	addwf	i1___flmul@prod,f
 10048  00CA' 0809'              	movf	??i1___flmul+1,w
 10049  00CB' 1103               	clrz
 10050  00CC' 1803               	skipnc
 10051  00CD' 3E01               	addlw	1
 10052  00CE' 1903               	skipnz
 10053  00CF' 2800'              	goto	u605_21
 10054  00D0' 0795'              	addwf	i1___flmul@prod+1,f
 10055  00D1'                    u605_21:
 10056  00D1' 080A'              	movf	??i1___flmul+2,w
 10057  00D2' 1103               	clrz
 10058  00D3' 1803               	skipnc
 10059  00D4' 3E01               	addlw	1
 10060  00D5' 1903               	skipnz
 10061  00D6' 2800'              	goto	u605_22
 10062  00D7' 0796'              	addwf	i1___flmul@prod+2,f
 10063  00D8'                    u605_22:
 10064  00D8' 080B'              	movf	??i1___flmul+3,w
 10065  00D9' 1103               	clrz
 10066  00DA' 1803               	skipnc
 10067  00DB' 3E01               	addlw	1
 10068  00DC' 1903               	skipnz
 10069  00DD' 2800'              	goto	u605_23
 10070  00DE' 0797'              	addwf	i1___flmul@prod+3,f
 10071  00DF'                    u605_23:
 10072  00DF' 0802'              	movf	i1___flmul@b+2,w
 10073  00E0' 0088'              	movwf	??i1___flmul
 10074  00E1' 0808'              	movf	??i1___flmul,w
 10075  00E2' 0080'              	movwf	i1__Umul8_16@multiplicand
 10076  00E3' 0804'              	movf	i1___flmul@a,w
 10077  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10078  00E9' 0801'              	movf	?i1__Umul8_16+1,w
 10079  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
 10080  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
 10081  00EC' 0099'              	movwf	i1___flmul@temp+1
 10082  00ED' 0800'              	movf	?i1__Umul8_16,w
 10083  00EE' 0098'              	movwf	i1___flmul@temp
 10084  00EF'                    i1l3447:
 10085  00EF' 0818'              	movf	i1___flmul@temp,w
 10086  00F0' 0088'              	movwf	??i1___flmul
 10087  00F1' 0189'              	clrf	??i1___flmul+1
 10088  00F2' 018A'              	clrf	??i1___flmul+2
 10089  00F3' 018B'              	clrf	??i1___flmul+3
 10090  00F4' 0808'              	movf	??i1___flmul,w
 10091  00F5' 078E'              	addwf	i1___flmul@grs,f
 10092  00F6' 0809'              	movf	??i1___flmul+1,w
 10093  00F7' 1103               	clrz
 10094  00F8' 1803               	skipnc
 10095  00F9' 3E01               	addlw	1
 10096  00FA' 1903               	skipnz
 10097  00FB' 2800'              	goto	u606_21
 10098  00FC' 078F'              	addwf	i1___flmul@grs+1,f
 10099  00FD'                    u606_21:
 10100  00FD' 080A'              	movf	??i1___flmul+2,w
 10101  00FE' 1103               	clrz
 10102  00FF' 1803               	skipnc
 10103  0100' 3E01               	addlw	1
 10104  0101' 1903               	skipnz
 10105  0102' 2800'              	goto	u606_22
 10106  0103' 0790'              	addwf	i1___flmul@grs+2,f
 10107  0104'                    u606_22:
 10108  0104' 080B'              	movf	??i1___flmul+3,w
 10109  0105' 1103               	clrz
 10110  0106' 1803               	skipnc
 10111  0107' 3E01               	addlw	1
 10112  0108' 1903               	skipnz
 10113  0109' 2800'              	goto	u606_23
 10114  010A' 0791'              	addwf	i1___flmul@grs+3,f
 10115  010B'                    u606_23:
 10116  010B'                    i1l3449:
 10117  010B' 0819'              	movf	i1___flmul@temp+1,w
 10118  010C' 0088'              	movwf	??i1___flmul
 10119  010D' 0189'              	clrf	??i1___flmul+1
 10120  010E' 018A'              	clrf	??i1___flmul+2
 10121  010F' 018B'              	clrf	??i1___flmul+3
 10122  0110' 0808'              	movf	??i1___flmul,w
 10123  0111' 0794'              	addwf	i1___flmul@prod,f
 10124  0112' 0809'              	movf	??i1___flmul+1,w
 10125  0113' 1103               	clrz
 10126  0114' 1803               	skipnc
 10127  0115' 3E01               	addlw	1
 10128  0116' 1903               	skipnz
 10129  0117' 2800'              	goto	u607_21
 10130  0118' 0795'              	addwf	i1___flmul@prod+1,f
 10131  0119'                    u607_21:
 10132  0119' 080A'              	movf	??i1___flmul+2,w
 10133  011A' 1103               	clrz
 10134  011B' 1803               	skipnc
 10135  011C' 3E01               	addlw	1
 10136  011D' 1903               	skipnz
 10137  011E' 2800'              	goto	u607_22
 10138  011F' 0796'              	addwf	i1___flmul@prod+2,f
 10139  0120'                    u607_22:
 10140  0120' 080B'              	movf	??i1___flmul+3,w
 10141  0121' 1103               	clrz
 10142  0122' 1803               	skipnc
 10143  0123' 3E01               	addlw	1
 10144  0124' 1903               	skipnz
 10145  0125' 2800'              	goto	u607_23
 10146  0126' 0797'              	addwf	i1___flmul@prod+3,f
 10147  0127'                    u607_23:
 10148  0127'                    i1l3451:
 10149  0127' 3008               	movlw	8
 10150  0128' 0088'              	movwf	??i1___flmul
 10151  0129'                    u608_25:
 10152  0129' 1003               	clrc
 10153  012A' 0D8E'              	rlf	i1___flmul@grs,f
 10154  012B' 0D8F'              	rlf	i1___flmul@grs+1,f
 10155  012C' 0D90'              	rlf	i1___flmul@grs+2,f
 10156  012D' 0D91'              	rlf	i1___flmul@grs+3,f
 10157  012E' 0B88'              	decfsz	??i1___flmul,f
 10158  012F' 2800'              	goto	u608_25
 10159  0130'                    i1l3453:
 10160  0130' 0801'              	movf	i1___flmul@b+1,w
 10161  0131' 0088'              	movwf	??i1___flmul
 10162  0132' 0808'              	movf	??i1___flmul,w
 10163  0133' 0080'              	movwf	i1__Umul8_16@multiplicand
 10164  0134' 0804'              	movf	i1___flmul@a,w
 10165  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10166  013A' 0801'              	movf	?i1__Umul8_16+1,w
 10167  013B' 1283               	bcf	3,5	;RP0=0, select bank0
 10168  013C' 1303               	bcf	3,6	;RP1=0, select bank0
 10169  013D' 0099'              	movwf	i1___flmul@temp+1
 10170  013E' 0800'              	movf	?i1__Umul8_16,w
 10171  013F' 0098'              	movwf	i1___flmul@temp
 10172  0140'                    i1l3455:
 10173  0140' 0818'              	movf	i1___flmul@temp,w
 10174  0141' 0088'              	movwf	??i1___flmul
 10175  0142' 0819'              	movf	i1___flmul@temp+1,w
 10176  0143' 0089'              	movwf	??i1___flmul+1
 10177  0144' 018A'              	clrf	??i1___flmul+2
 10178  0145' 018B'              	clrf	??i1___flmul+3
 10179  0146' 0808'              	movf	??i1___flmul,w
 10180  0147' 078E'              	addwf	i1___flmul@grs,f
 10181  0148' 0809'              	movf	??i1___flmul+1,w
 10182  0149' 1103               	clrz
 10183  014A' 1803               	skipnc
 10184  014B' 3E01               	addlw	1
 10185  014C' 1903               	skipnz
 10186  014D' 2800'              	goto	u609_21
 10187  014E' 078F'              	addwf	i1___flmul@grs+1,f
 10188  014F'                    u609_21:
 10189  014F' 080A'              	movf	??i1___flmul+2,w
 10190  0150' 1103               	clrz
 10191  0151' 1803               	skipnc
 10192  0152' 3E01               	addlw	1
 10193  0153' 1903               	skipnz
 10194  0154' 2800'              	goto	u609_22
 10195  0155' 0790'              	addwf	i1___flmul@grs+2,f
 10196  0156'                    u609_22:
 10197  0156' 080B'              	movf	??i1___flmul+3,w
 10198  0157' 1103               	clrz
 10199  0158' 1803               	skipnc
 10200  0159' 3E01               	addlw	1
 10201  015A' 1903               	skipnz
 10202  015B' 2800'              	goto	u609_23
 10203  015C' 0791'              	addwf	i1___flmul@grs+3,f
 10204  015D'                    u609_23:
 10205  015D'                    i1l3457:
 10206  015D' 0800'              	movf	i1___flmul@b,w
 10207  015E' 0088'              	movwf	??i1___flmul
 10208  015F' 0808'              	movf	??i1___flmul,w
 10209  0160' 0080'              	movwf	i1__Umul8_16@multiplicand
 10210  0161' 0805'              	movf	i1___flmul@a+1,w
 10211  0162' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10212  0167' 0801'              	movf	?i1__Umul8_16+1,w
 10213  0168' 1283               	bcf	3,5	;RP0=0, select bank0
 10214  0169' 1303               	bcf	3,6	;RP1=0, select bank0
 10215  016A' 0099'              	movwf	i1___flmul@temp+1
 10216  016B' 0800'              	movf	?i1__Umul8_16,w
 10217  016C' 0098'              	movwf	i1___flmul@temp
 10218  016D'                    i1l3459:
 10219  016D' 0818'              	movf	i1___flmul@temp,w
 10220  016E' 0088'              	movwf	??i1___flmul
 10221  016F' 0819'              	movf	i1___flmul@temp+1,w
 10222  0170' 0089'              	movwf	??i1___flmul+1
 10223  0171' 018A'              	clrf	??i1___flmul+2
 10224  0172' 018B'              	clrf	??i1___flmul+3
 10225  0173' 0808'              	movf	??i1___flmul,w
 10226  0174' 078E'              	addwf	i1___flmul@grs,f
 10227  0175' 0809'              	movf	??i1___flmul+1,w
 10228  0176' 1103               	clrz
 10229  0177' 1803               	skipnc
 10230  0178' 3E01               	addlw	1
 10231  0179' 1903               	skipnz
 10232  017A' 2800'              	goto	u610_21
 10233  017B' 078F'              	addwf	i1___flmul@grs+1,f
 10234  017C'                    u610_21:
 10235  017C' 080A'              	movf	??i1___flmul+2,w
 10236  017D' 1103               	clrz
 10237  017E' 1803               	skipnc
 10238  017F' 3E01               	addlw	1
 10239  0180' 1903               	skipnz
 10240  0181' 2800'              	goto	u610_22
 10241  0182' 0790'              	addwf	i1___flmul@grs+2,f
 10242  0183'                    u610_22:
 10243  0183' 080B'              	movf	??i1___flmul+3,w
 10244  0184' 1103               	clrz
 10245  0185' 1803               	skipnc
 10246  0186' 3E01               	addlw	1
 10247  0187' 1903               	skipnz
 10248  0188' 2800'              	goto	u610_23
 10249  0189' 0791'              	addwf	i1___flmul@grs+3,f
 10250  018A'                    u610_23:
 10251  018A'                    i1l3461:
 10252  018A' 3008               	movlw	8
 10253  018B' 0088'              	movwf	??i1___flmul
 10254  018C'                    u611_25:
 10255  018C' 1003               	clrc
 10256  018D' 0D8E'              	rlf	i1___flmul@grs,f
 10257  018E' 0D8F'              	rlf	i1___flmul@grs+1,f
 10258  018F' 0D90'              	rlf	i1___flmul@grs+2,f
 10259  0190' 0D91'              	rlf	i1___flmul@grs+3,f
 10260  0191' 0B88'              	decfsz	??i1___flmul,f
 10261  0192' 2800'              	goto	u611_25
 10262  0193' 0800'              	movf	i1___flmul@b,w
 10263  0194' 0088'              	movwf	??i1___flmul
 10264  0195' 0808'              	movf	??i1___flmul,w
 10265  0196' 0080'              	movwf	i1__Umul8_16@multiplicand
 10266  0197' 0804'              	movf	i1___flmul@a,w
 10267  0198' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10268  019D' 0801'              	movf	?i1__Umul8_16+1,w
 10269  019E' 1283               	bcf	3,5	;RP0=0, select bank0
 10270  019F' 1303               	bcf	3,6	;RP1=0, select bank0
 10271  01A0' 0099'              	movwf	i1___flmul@temp+1
 10272  01A1' 0800'              	movf	?i1__Umul8_16,w
 10273  01A2' 0098'              	movwf	i1___flmul@temp
 10274  01A3'                    i1l3463:
 10275  01A3' 0818'              	movf	i1___flmul@temp,w
 10276  01A4' 0088'              	movwf	??i1___flmul
 10277  01A5' 0819'              	movf	i1___flmul@temp+1,w
 10278  01A6' 0089'              	movwf	??i1___flmul+1
 10279  01A7' 018A'              	clrf	??i1___flmul+2
 10280  01A8' 018B'              	clrf	??i1___flmul+3
 10281  01A9' 0808'              	movf	??i1___flmul,w
 10282  01AA' 078E'              	addwf	i1___flmul@grs,f
 10283  01AB' 0809'              	movf	??i1___flmul+1,w
 10284  01AC' 1103               	clrz
 10285  01AD' 1803               	skipnc
 10286  01AE' 3E01               	addlw	1
 10287  01AF' 1903               	skipnz
 10288  01B0' 2800'              	goto	u612_21
 10289  01B1' 078F'              	addwf	i1___flmul@grs+1,f
 10290  01B2'                    u612_21:
 10291  01B2' 080A'              	movf	??i1___flmul+2,w
 10292  01B3' 1103               	clrz
 10293  01B4' 1803               	skipnc
 10294  01B5' 3E01               	addlw	1
 10295  01B6' 1903               	skipnz
 10296  01B7' 2800'              	goto	u612_22
 10297  01B8' 0790'              	addwf	i1___flmul@grs+2,f
 10298  01B9'                    u612_22:
 10299  01B9' 080B'              	movf	??i1___flmul+3,w
 10300  01BA' 1103               	clrz
 10301  01BB' 1803               	skipnc
 10302  01BC' 3E01               	addlw	1
 10303  01BD' 1903               	skipnz
 10304  01BE' 2800'              	goto	u612_23
 10305  01BF' 0791'              	addwf	i1___flmul@grs+3,f
 10306  01C0'                    u612_23:
 10307  01C0'                    i1l3465:
 10308  01C0' 0801'              	movf	i1___flmul@b+1,w
 10309  01C1' 0088'              	movwf	??i1___flmul
 10310  01C2' 0808'              	movf	??i1___flmul,w
 10311  01C3' 0080'              	movwf	i1__Umul8_16@multiplicand
 10312  01C4' 0806'              	movf	i1___flmul@a+2,w
 10313  01C5' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10314  01CA' 0801'              	movf	?i1__Umul8_16+1,w
 10315  01CB' 1283               	bcf	3,5	;RP0=0, select bank0
 10316  01CC' 1303               	bcf	3,6	;RP1=0, select bank0
 10317  01CD' 0099'              	movwf	i1___flmul@temp+1
 10318  01CE' 0800'              	movf	?i1__Umul8_16,w
 10319  01CF' 0098'              	movwf	i1___flmul@temp
 10320  01D0' 0818'              	movf	i1___flmul@temp,w
 10321  01D1' 0088'              	movwf	??i1___flmul
 10322  01D2' 0819'              	movf	i1___flmul@temp+1,w
 10323  01D3' 0089'              	movwf	??i1___flmul+1
 10324  01D4' 018A'              	clrf	??i1___flmul+2
 10325  01D5' 018B'              	clrf	??i1___flmul+3
 10326  01D6' 0808'              	movf	??i1___flmul,w
 10327  01D7' 0794'              	addwf	i1___flmul@prod,f
 10328  01D8' 0809'              	movf	??i1___flmul+1,w
 10329  01D9' 1103               	clrz
 10330  01DA' 1803               	skipnc
 10331  01DB' 3E01               	addlw	1
 10332  01DC' 1903               	skipnz
 10333  01DD' 2800'              	goto	u613_21
 10334  01DE' 0795'              	addwf	i1___flmul@prod+1,f
 10335  01DF'                    u613_21:
 10336  01DF' 080A'              	movf	??i1___flmul+2,w
 10337  01E0' 1103               	clrz
 10338  01E1' 1803               	skipnc
 10339  01E2' 3E01               	addlw	1
 10340  01E3' 1903               	skipnz
 10341  01E4' 2800'              	goto	u613_22
 10342  01E5' 0796'              	addwf	i1___flmul@prod+2,f
 10343  01E6'                    u613_22:
 10344  01E6' 080B'              	movf	??i1___flmul+3,w
 10345  01E7' 1103               	clrz
 10346  01E8' 1803               	skipnc
 10347  01E9' 3E01               	addlw	1
 10348  01EA' 1903               	skipnz
 10349  01EB' 2800'              	goto	u613_23
 10350  01EC' 0797'              	addwf	i1___flmul@prod+3,f
 10351  01ED'                    u613_23:
 10352  01ED'                    i1l3467:
 10353  01ED' 0802'              	movf	i1___flmul@b+2,w
 10354  01EE' 0088'              	movwf	??i1___flmul
 10355  01EF' 0808'              	movf	??i1___flmul,w
 10356  01F0' 0080'              	movwf	i1__Umul8_16@multiplicand
 10357  01F1' 0805'              	movf	i1___flmul@a+1,w
 10358  01F2' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10359  01F7' 0801'              	movf	?i1__Umul8_16+1,w
 10360  01F8' 1283               	bcf	3,5	;RP0=0, select bank0
 10361  01F9' 1303               	bcf	3,6	;RP1=0, select bank0
 10362  01FA' 0099'              	movwf	i1___flmul@temp+1
 10363  01FB' 0800'              	movf	?i1__Umul8_16,w
 10364  01FC' 0098'              	movwf	i1___flmul@temp
 10365  01FD'                    i1l3469:
 10366  01FD' 0818'              	movf	i1___flmul@temp,w
 10367  01FE' 0088'              	movwf	??i1___flmul
 10368  01FF' 0819'              	movf	i1___flmul@temp+1,w
 10369  0200' 0089'              	movwf	??i1___flmul+1
 10370  0201' 018A'              	clrf	??i1___flmul+2
 10371  0202' 018B'              	clrf	??i1___flmul+3
 10372  0203' 0808'              	movf	??i1___flmul,w
 10373  0204' 0794'              	addwf	i1___flmul@prod,f
 10374  0205' 0809'              	movf	??i1___flmul+1,w
 10375  0206' 1103               	clrz
 10376  0207' 1803               	skipnc
 10377  0208' 3E01               	addlw	1
 10378  0209' 1903               	skipnz
 10379  020A' 2800'              	goto	u614_21
 10380  020B' 0795'              	addwf	i1___flmul@prod+1,f
 10381  020C'                    u614_21:
 10382  020C' 080A'              	movf	??i1___flmul+2,w
 10383  020D' 1103               	clrz
 10384  020E' 1803               	skipnc
 10385  020F' 3E01               	addlw	1
 10386  0210' 1903               	skipnz
 10387  0211' 2800'              	goto	u614_22
 10388  0212' 0796'              	addwf	i1___flmul@prod+2,f
 10389  0213'                    u614_22:
 10390  0213' 080B'              	movf	??i1___flmul+3,w
 10391  0214' 1103               	clrz
 10392  0215' 1803               	skipnc
 10393  0216' 3E01               	addlw	1
 10394  0217' 1903               	skipnz
 10395  0218' 2800'              	goto	u614_23
 10396  0219' 0797'              	addwf	i1___flmul@prod+3,f
 10397  021A'                    u614_23:
 10398  021A' 0802'              	movf	i1___flmul@b+2,w
 10399  021B' 0088'              	movwf	??i1___flmul
 10400  021C' 0808'              	movf	??i1___flmul,w
 10401  021D' 0080'              	movwf	i1__Umul8_16@multiplicand
 10402  021E' 0806'              	movf	i1___flmul@a+2,w
 10403  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	i1__Umul8_16
 10404  0224' 0801'              	movf	?i1__Umul8_16+1,w
 10405  0225' 1283               	bcf	3,5	;RP0=0, select bank0
 10406  0226' 1303               	bcf	3,6	;RP1=0, select bank0
 10407  0227' 0099'              	movwf	i1___flmul@temp+1
 10408  0228' 0800'              	movf	?i1__Umul8_16,w
 10409  0229' 0098'              	movwf	i1___flmul@temp
 10410  022A'                    i1l3471:
 10411  022A' 0818'              	movf	i1___flmul@temp,w
 10412  022B' 0088'              	movwf	??i1___flmul
 10413  022C' 0819'              	movf	i1___flmul@temp+1,w
 10414  022D' 0089'              	movwf	??i1___flmul+1
 10415  022E' 018A'              	clrf	??i1___flmul+2
 10416  022F' 018B'              	clrf	??i1___flmul+3
 10417  0230' 3008               	movlw	8
 10418  0231'                    u615_25:
 10419  0231' 1003               	clrc
 10420  0232' 0D88'              	rlf	??i1___flmul,f
 10421  0233' 0D89'              	rlf	??i1___flmul+1,f
 10422  0234' 0D8A'              	rlf	??i1___flmul+2,f
 10423  0235' 0D8B'              	rlf	??i1___flmul+3,f
 10424  0236'                    u615_20:
 10425  0236' 3EFF               	addlw	-1
 10426  0237' 1D03               	skipz
 10427  0238' 2800'              	goto	u615_25
 10428  0239' 0808'              	movf	??i1___flmul,w
 10429  023A' 0794'              	addwf	i1___flmul@prod,f
 10430  023B' 0809'              	movf	??i1___flmul+1,w
 10431  023C' 1103               	clrz
 10432  023D' 1803               	skipnc
 10433  023E' 3E01               	addlw	1
 10434  023F' 1903               	skipnz
 10435  0240' 2800'              	goto	u616_21
 10436  0241' 0795'              	addwf	i1___flmul@prod+1,f
 10437  0242'                    u616_21:
 10438  0242' 080A'              	movf	??i1___flmul+2,w
 10439  0243' 1103               	clrz
 10440  0244' 1803               	skipnc
 10441  0245' 3E01               	addlw	1
 10442  0246' 1903               	skipnz
 10443  0247' 2800'              	goto	u616_22
 10444  0248' 0796'              	addwf	i1___flmul@prod+2,f
 10445  0249'                    u616_22:
 10446  0249' 080B'              	movf	??i1___flmul+3,w
 10447  024A' 1103               	clrz
 10448  024B' 1803               	skipnc
 10449  024C' 3E01               	addlw	1
 10450  024D' 1903               	skipnz
 10451  024E' 2800'              	goto	u616_23
 10452  024F' 0797'              	addwf	i1___flmul@prod+3,f
 10453  0250'                    u616_23:
 10454  0250'                    i1l3473:
 10455  0250' 080E'              	movf	i1___flmul@grs,w
 10456  0251' 0088'              	movwf	??i1___flmul
 10457  0252' 080F'              	movf	i1___flmul@grs+1,w
 10458  0253' 0089'              	movwf	??i1___flmul+1
 10459  0254' 0810'              	movf	i1___flmul@grs+2,w
 10460  0255' 008A'              	movwf	??i1___flmul+2
 10461  0256' 0811'              	movf	i1___flmul@grs+3,w
 10462  0257' 008B'              	movwf	??i1___flmul+3
 10463  0258' 3018               	movlw	24
 10464  0259'                    u617_25:
 10465  0259' 1003               	clrc
 10466  025A' 0C8B'              	rrf	??i1___flmul+3,f
 10467  025B' 0C8A'              	rrf	??i1___flmul+2,f
 10468  025C' 0C89'              	rrf	??i1___flmul+1,f
 10469  025D' 0C88'              	rrf	??i1___flmul,f
 10470  025E'                    u617_20:
 10471  025E' 3EFF               	addlw	-1
 10472  025F' 1D03               	skipz
 10473  0260' 2800'              	goto	u617_25
 10474  0261' 0808'              	movf	??i1___flmul,w
 10475  0262' 0794'              	addwf	i1___flmul@prod,f
 10476  0263' 0809'              	movf	??i1___flmul+1,w
 10477  0264' 1103               	clrz
 10478  0265' 1803               	skipnc
 10479  0266' 3E01               	addlw	1
 10480  0267' 1903               	skipnz
 10481  0268' 2800'              	goto	u618_21
 10482  0269' 0795'              	addwf	i1___flmul@prod+1,f
 10483  026A'                    u618_21:
 10484  026A' 080A'              	movf	??i1___flmul+2,w
 10485  026B' 1103               	clrz
 10486  026C' 1803               	skipnc
 10487  026D' 3E01               	addlw	1
 10488  026E' 1903               	skipnz
 10489  026F' 2800'              	goto	u618_22
 10490  0270' 0796'              	addwf	i1___flmul@prod+2,f
 10491  0271'                    u618_22:
 10492  0271' 080B'              	movf	??i1___flmul+3,w
 10493  0272' 1103               	clrz
 10494  0273' 1803               	skipnc
 10495  0274' 3E01               	addlw	1
 10496  0275' 1903               	skipnz
 10497  0276' 2800'              	goto	u618_23
 10498  0277' 0797'              	addwf	i1___flmul@prod+3,f
 10499  0278'                    u618_23:
 10500  0278'                    i1l3475:
 10501  0278' 3008               	movlw	8
 10502  0279' 0088'              	movwf	??i1___flmul
 10503  027A'                    u619_25:
 10504  027A' 1003               	clrc
 10505  027B' 0D8E'              	rlf	i1___flmul@grs,f
 10506  027C' 0D8F'              	rlf	i1___flmul@grs+1,f
 10507  027D' 0D90'              	rlf	i1___flmul@grs+2,f
 10508  027E' 0D91'              	rlf	i1___flmul@grs+3,f
 10509  027F' 0B88'              	decfsz	??i1___flmul,f
 10510  0280' 2800'              	goto	u619_25
 10511  0281'                    i1l3477:
 10512  0281' 0813'              	movf	i1___flmul@bexp,w
 10513  0282' 0712'              	addwf	i1___flmul@aexp,w
 10514  0283' 0088'              	movwf	??i1___flmul
 10515  0284' 0189'              	clrf	??i1___flmul+1
 10516  0285' 0D89'              	rlf	??i1___flmul+1,f
 10517  0286' 0808'              	movf	??i1___flmul,w
 10518  0287' 3E82               	addlw	130
 10519  0288' 0098'              	movwf	i1___flmul@temp
 10520  0289' 0809'              	movf	??i1___flmul+1,w
 10521  028A' 1803               	skipnc
 10522  028B' 3E01               	addlw	1
 10523  028C' 3EFF               	addlw	255
 10524  028D' 0099'              	movwf	i1___flmul@temp+1
 10525  028E' 2800'              	goto	i1l3489
 10526  028F'                    i1l3479:
 10527  028F' 3001               	movlw	1
 10528  0290' 0088'              	movwf	??i1___flmul
 10529  0291'                    u620_25:
 10530  0291' 1003               	clrc
 10531  0292' 0D94'              	rlf	i1___flmul@prod,f
 10532  0293' 0D95'              	rlf	i1___flmul@prod+1,f
 10533  0294' 0D96'              	rlf	i1___flmul@prod+2,f
 10534  0295' 0D97'              	rlf	i1___flmul@prod+3,f
 10535  0296' 0B88'              	decfsz	??i1___flmul,f
 10536  0297' 2800'              	goto	u620_25
 10537  0298'                    i1l3481:
 10538  0298' 1F91'              	btfss	i1___flmul@grs+3,7
 10539  0299' 2800'              	goto	u621_21
 10540  029A' 2800'              	goto	u621_20
 10541  029B'                    u621_21:
 10542  029B' 2800'              	goto	i1l3485
 10543  029C'                    u621_20:
 10544  029C'                    i1l3483:
 10545  029C' 1414'              	bsf	i1___flmul@prod,0
 10546  029D'                    i1l3485:
 10547  029D' 3001               	movlw	1
 10548  029E' 0088'              	movwf	??i1___flmul
 10549  029F'                    u622_25:
 10550  029F' 1003               	clrc
 10551  02A0' 0D8E'              	rlf	i1___flmul@grs,f
 10552  02A1' 0D8F'              	rlf	i1___flmul@grs+1,f
 10553  02A2' 0D90'              	rlf	i1___flmul@grs+2,f
 10554  02A3' 0D91'              	rlf	i1___flmul@grs+3,f
 10555  02A4' 0B88'              	decfsz	??i1___flmul,f
 10556  02A5' 2800'              	goto	u622_25
 10557  02A6'                    i1l3487:
 10558  02A6' 30FF               	movlw	255
 10559  02A7' 0798'              	addwf	i1___flmul@temp,f
 10560  02A8' 1803               	skipnc
 10561  02A9' 0A99'              	incf	i1___flmul@temp+1,f
 10562  02AA' 30FF               	movlw	255
 10563  02AB' 0799'              	addwf	i1___flmul@temp+1,f
 10564  02AC'                    i1l3489:
 10565  02AC' 1F96'              	btfss	i1___flmul@prod+2,7
 10566  02AD' 2800'              	goto	u623_21
 10567  02AE' 2800'              	goto	u623_20
 10568  02AF'                    u623_21:
 10569  02AF' 2800'              	goto	i1l3479
 10570  02B0'                    u623_20:
 10571  02B0'                    i1l3491:
 10572  02B0' 0192'              	clrf	i1___flmul@aexp
 10573  02B1'                    i1l3493:
 10574  02B1' 1F91'              	btfss	i1___flmul@grs+3,7
 10575  02B2' 2800'              	goto	u624_21
 10576  02B3' 2800'              	goto	u624_20
 10577  02B4'                    u624_21:
 10578  02B4' 2800'              	goto	i1l3501
 10579  02B5'                    u624_20:
 10580  02B5'                    i1l3495:
 10581  02B5' 30FF               	movlw	255
 10582  02B6' 050E'              	andwf	i1___flmul@grs,w
 10583  02B7' 0088'              	movwf	??i1___flmul
 10584  02B8' 30FF               	movlw	255
 10585  02B9' 050F'              	andwf	i1___flmul@grs+1,w
 10586  02BA' 0089'              	movwf	??i1___flmul+1
 10587  02BB' 30FF               	movlw	255
 10588  02BC' 0510'              	andwf	i1___flmul@grs+2,w
 10589  02BD' 008A'              	movwf	??i1___flmul+2
 10590  02BE' 307F               	movlw	127
 10591  02BF' 0511'              	andwf	i1___flmul@grs+3,w
 10592  02C0' 008B'              	movwf	??i1___flmul+3
 10593  02C1' 080B'              	movf	??i1___flmul+3,w
 10594  02C2' 040A'              	iorwf	??i1___flmul+2,w
 10595  02C3' 0409'              	iorwf	??i1___flmul+1,w
 10596  02C4' 0408'              	iorwf	??i1___flmul,w
 10597  02C5' 1903               	skipnz
 10598  02C6' 2800'              	goto	u625_21
 10599  02C7' 2800'              	goto	u625_20
 10600  02C8'                    u625_21:
 10601  02C8' 2800'              	goto	i1l722
 10602  02C9'                    u625_20:
 10603  02C9'                    i1l3497:
 10604  02C9' 0192'              	clrf	i1___flmul@aexp
 10605  02CA' 0A92'              	incf	i1___flmul@aexp,f
 10606  02CB' 2800'              	goto	i1l3501
 10607  02CC'                    i1l722:
 10608  02CC' 1C14'              	btfss	i1___flmul@prod,0
 10609  02CD' 2800'              	goto	u626_21
 10610  02CE' 2800'              	goto	u626_20
 10611  02CF'                    u626_21:
 10612  02CF' 2800'              	goto	i1l3501
 10613  02D0'                    u626_20:
 10614  02D0' 2800'              	goto	i1l3497
 10615  02D1'                    i1l3501:
 10616  02D1' 0812'              	movf	i1___flmul@aexp,w
 10617  02D2' 1903               	btfsc	3,2
 10618  02D3' 2800'              	goto	u627_21
 10619  02D4' 2800'              	goto	u627_20
 10620  02D5'                    u627_21:
 10621  02D5' 2800'              	goto	i1l3511
 10622  02D6'                    u627_20:
 10623  02D6'                    i1l3503:
 10624  02D6' 3001               	movlw	1
 10625  02D7' 0794'              	addwf	i1___flmul@prod,f
 10626  02D8' 3000               	movlw	0
 10627  02D9' 1803               	skipnc
 10628  02DA' 3001               	movlw	1
 10629  02DB' 0795'              	addwf	i1___flmul@prod+1,f
 10630  02DC' 3000               	movlw	0
 10631  02DD' 1803               	skipnc
 10632  02DE' 3001               	movlw	1
 10633  02DF' 0796'              	addwf	i1___flmul@prod+2,f
 10634  02E0' 3000               	movlw	0
 10635  02E1' 1803               	skipnc
 10636  02E2' 3001               	movlw	1
 10637  02E3' 0797'              	addwf	i1___flmul@prod+3,f
 10638  02E4'                    i1l3505:
 10639  02E4' 1C17'              	btfss	i1___flmul@prod+3,0
 10640  02E5' 2800'              	goto	u628_21
 10641  02E6' 2800'              	goto	u628_20
 10642  02E7'                    u628_21:
 10643  02E7' 2800'              	goto	i1l3511
 10644  02E8'                    u628_20:
 10645  02E8'                    i1l3507:
 10646  02E8' 0814'              	movf	i1___flmul@prod,w
 10647  02E9' 0088'              	movwf	??i1___flmul
 10648  02EA' 0815'              	movf	i1___flmul@prod+1,w
 10649  02EB' 0089'              	movwf	??i1___flmul+1
 10650  02EC' 0816'              	movf	i1___flmul@prod+2,w
 10651  02ED' 008A'              	movwf	??i1___flmul+2
 10652  02EE' 0817'              	movf	i1___flmul@prod+3,w
 10653  02EF' 008B'              	movwf	??i1___flmul+3
 10654  02F0' 3001               	movlw	1
 10655  02F1' 008C'              	movwf	??i1___flmul+4
 10656  02F2'                    u629_25:
 10657  02F2' 0D0B'              	rlf	??i1___flmul+3,w
 10658  02F3' 0C8B'              	rrf	??i1___flmul+3,f
 10659  02F4' 0C8A'              	rrf	??i1___flmul+2,f
 10660  02F5' 0C89'              	rrf	??i1___flmul+1,f
 10661  02F6' 0C88'              	rrf	??i1___flmul,f
 10662  02F7'                    u629_20:
 10663  02F7' 0B8C'              	decfsz	??i1___flmul+4,f
 10664  02F8' 2800'              	goto	u629_25
 10665  02F9' 080B'              	movf	??i1___flmul+3,w
 10666  02FA' 0097'              	movwf	i1___flmul@prod+3
 10667  02FB' 080A'              	movf	??i1___flmul+2,w
 10668  02FC' 0096'              	movwf	i1___flmul@prod+2
 10669  02FD' 0809'              	movf	??i1___flmul+1,w
 10670  02FE' 0095'              	movwf	i1___flmul@prod+1
 10671  02FF' 0808'              	movf	??i1___flmul,w
 10672  0300' 0094'              	movwf	i1___flmul@prod
 10673  0301'                    i1l3509:
 10674  0301' 3001               	movlw	1
 10675  0302' 0798'              	addwf	i1___flmul@temp,f
 10676  0303' 1803               	skipnc
 10677  0304' 0A99'              	incf	i1___flmul@temp+1,f
 10678  0305' 3000               	movlw	0
 10679  0306' 0799'              	addwf	i1___flmul@temp+1,f
 10680  0307'                    i1l3511:
 10681  0307' 0819'              	movf	i1___flmul@temp+1,w
 10682  0308' 3A80               	xorlw	128
 10683  0309' 00FF               	movwf	btemp+1
 10684  030A' 3080               	movlw	128
 10685  030B' 027F               	subwf	btemp+1,w
 10686  030C' 1D03               	skipz
 10687  030D' 2800'              	goto	u630_25
 10688  030E' 30FF               	movlw	255
 10689  030F' 0218'              	subwf	i1___flmul@temp,w
 10690  0310'                    u630_25:
 10691  0310' 1C03               	skipc
 10692  0311' 2800'              	goto	u630_21
 10693  0312' 2800'              	goto	u630_20
 10694  0313'                    u630_21:
 10695  0313' 2800'              	goto	i1l3515
 10696  0314'                    u630_20:
 10697  0314'                    i1l3513:
 10698  0314' 307F               	movlw	127
 10699  0315' 1283               	bcf	3,5	;RP0=0, select bank0
 10700  0316' 1303               	bcf	3,6	;RP1=0, select bank0
 10701  0317' 0097'              	movwf	i1___flmul@prod+3
 10702  0318' 3080               	movlw	128
 10703  0319' 0096'              	movwf	i1___flmul@prod+2
 10704  031A' 3000               	movlw	0
 10705  031B' 0095'              	movwf	i1___flmul@prod+1
 10706  031C' 3000               	movlw	0
 10707  031D' 0094'              	movwf	i1___flmul@prod
 10708  031E' 2800'              	goto	i1l728
 10709  031F'                    i1l3515:
 10710  031F' 1283               	bcf	3,5	;RP0=0, select bank0
 10711  0320' 1303               	bcf	3,6	;RP1=0, select bank0
 10712  0321' 0819'              	movf	i1___flmul@temp+1,w
 10713  0322' 3A80               	xorlw	128
 10714  0323' 00FF               	movwf	btemp+1
 10715  0324' 3080               	movlw	128
 10716  0325' 027F               	subwf	btemp+1,w
 10717  0326' 1D03               	skipz
 10718  0327' 2800'              	goto	u631_25
 10719  0328' 3001               	movlw	1
 10720  0329' 0218'              	subwf	i1___flmul@temp,w
 10721  032A'                    u631_25:
 10722  032A' 1803               	skipnc
 10723  032B' 2800'              	goto	u631_21
 10724  032C' 2800'              	goto	u631_20
 10725  032D'                    u631_21:
 10726  032D' 2800'              	goto	i1l3521
 10727  032E'                    u631_20:
 10728  032E'                    i1l3517:
 10729  032E' 3000               	movlw	0
 10730  032F' 1283               	bcf	3,5	;RP0=0, select bank0
 10731  0330' 1303               	bcf	3,6	;RP1=0, select bank0
 10732  0331' 0097'              	movwf	i1___flmul@prod+3
 10733  0332' 3000               	movlw	0
 10734  0333' 0096'              	movwf	i1___flmul@prod+2
 10735  0334' 3000               	movlw	0
 10736  0335' 0095'              	movwf	i1___flmul@prod+1
 10737  0336' 3000               	movlw	0
 10738  0337' 0094'              	movwf	i1___flmul@prod
 10739  0338'                    i1l3519:
 10740  0338' 018D'              	clrf	i1___flmul@sign
 10741  0339' 2800'              	goto	i1l728
 10742  033A'                    i1l3521:
 10743  033A' 1283               	bcf	3,5	;RP0=0, select bank0
 10744  033B' 1303               	bcf	3,6	;RP1=0, select bank0
 10745  033C' 0818'              	movf	i1___flmul@temp,w
 10746  033D' 0088'              	movwf	??i1___flmul
 10747  033E' 0808'              	movf	??i1___flmul,w
 10748  033F' 0093'              	movwf	i1___flmul@bexp
 10749  0340' 30FF               	movlw	255
 10750  0341' 0594'              	andwf	i1___flmul@prod,f
 10751  0342' 30FF               	movlw	255
 10752  0343' 0595'              	andwf	i1___flmul@prod+1,f
 10753  0344' 307F               	movlw	127
 10754  0345' 0596'              	andwf	i1___flmul@prod+2,f
 10755  0346' 3000               	movlw	0
 10756  0347' 0597'              	andwf	i1___flmul@prod+3,f
 10757  0348'                    i1l3523:
 10758  0348' 1C13'              	btfss	i1___flmul@bexp,0
 10759  0349' 2800'              	goto	u632_21
 10760  034A' 2800'              	goto	u632_20
 10761  034B'                    u632_21:
 10762  034B' 2800'              	goto	i1l3527
 10763  034C'                    u632_20:
 10764  034C'                    i1l3525:
 10765  034C' 1796'              	bsf	i1___flmul@prod+2,7
 10766  034D'                    i1l3527:
 10767  034D' 0813'              	movf	i1___flmul@bexp,w
 10768  034E' 0088'              	movwf	??i1___flmul
 10769  034F' 1003               	clrc
 10770  0350' 0C08'              	rrf	??i1___flmul,w
 10771  0351' 0089'              	movwf	??i1___flmul+1
 10772  0352' 0809'              	movf	??i1___flmul+1,w
 10773  0353' 0097'              	movwf	i1___flmul@prod+3
 10774  0354'                    i1l728:
 10775  0354' 080D'              	movf	i1___flmul@sign,w
 10776  0355' 0088'              	movwf	??i1___flmul
 10777  0356' 0808'              	movf	??i1___flmul,w
 10778  0357' 0497'              	iorwf	i1___flmul@prod+3,f
 10779  0358'                    i1l3529:
 10780  0358' 0817'              	movf	i1___flmul@prod+3,w
 10781  0359' 0083'              	movwf	?i1___flmul+3
 10782  035A' 0816'              	movf	i1___flmul@prod+2,w
 10783  035B' 0082'              	movwf	?i1___flmul+2
 10784  035C' 0815'              	movf	i1___flmul@prod+1,w
 10785  035D' 0081'              	movwf	?i1___flmul+1
 10786  035E' 0814'              	movf	i1___flmul@prod,w
 10787  035F' 0080'              	movwf	?i1___flmul
 10788  0360'                    i1l716:
 10789  0360' 0008               	return
 10790  0361'                    __end_ofi1___flmul:
 10791                           
 10792                           	psect	text33
 10793  0000'                    __ptext33:	
 10794 ;; *************** function i1__Umul8_16 *****************
 10795 ;; Defined at:
 10796 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  multiplier      1    wreg     unsigned char 
 10799 ;;  multiplicand    1    0[COMMON] unsigned char 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  multiplier      1    8[COMMON] unsigned char 
 10802 ;;  word_mpld       2    6[COMMON] unsigned int 
 10803 ;;  product         2    4[COMMON] unsigned int 
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  2    0[COMMON] unsigned int 
 10806 ;; Registers used:
 10807 ;;		wreg, status,2, status,0
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10813 ;;      Params:         2       0       0       0       0
 10814 ;;      Locals:         5       0       0       0       0
 10815 ;;      Temps:          2       0       0       0       0
 10816 ;;      Totals:         9       0       0       0       0
 10817 ;;Total ram usage:        9 bytes
 10818 ;; Hardware stack levels used: 1
 10819 ;; This function calls:
 10820 ;;		Nothing
 10821 ;; This function is called by:
 10822 ;;		i1___flmul
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826  0000'                    i1__Umul8_16:	
 10827                           ;psect for function i1__Umul8_16
 10828                           
 10829                           
 10830                           ;incstack = 0
 10831                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 10832                           ;i1__Umul8_16@multiplier stored from wreg
 10833  0000' 0088'              	movwf	i1__Umul8_16@multiplier
 10834  0001'                    i1l3139:
 10835  0001' 0184'              	clrf	i1__Umul8_16@product
 10836  0002' 0185'              	clrf	i1__Umul8_16@product+1
 10837  0003'                    i1l3141:
 10838  0003' 0800'              	movf	i1__Umul8_16@multiplicand,w
 10839  0004' 0082'              	movwf	??i1__Umul8_16
 10840  0005' 0183'              	clrf	??i1__Umul8_16+1
 10841  0006' 0802'              	movf	??i1__Umul8_16,w
 10842  0007' 0086'              	movwf	i1__Umul8_16@word_mpld
 10843  0008' 0803'              	movf	??i1__Umul8_16+1,w
 10844  0009' 0087'              	movwf	i1__Umul8_16@word_mpld+1
 10845  000A'                    i1l3143:
 10846  000A' 1C08'              	btfss	i1__Umul8_16@multiplier,0
 10847  000B' 2800'              	goto	u557_21
 10848  000C' 2800'              	goto	u557_20
 10849  000D'                    u557_21:
 10850  000D' 2800'              	goto	i1l735
 10851  000E'                    u557_20:
 10852  000E'                    i1l3145:
 10853  000E' 0806'              	movf	i1__Umul8_16@word_mpld,w
 10854  000F' 0784'              	addwf	i1__Umul8_16@product,f
 10855  0010' 1803               	skipnc
 10856  0011' 0A85'              	incf	i1__Umul8_16@product+1,f
 10857  0012' 0807'              	movf	i1__Umul8_16@word_mpld+1,w
 10858  0013' 0785'              	addwf	i1__Umul8_16@product+1,f
 10859  0014'                    i1l735:
 10860  0014' 3001               	movlw	1
 10861  0015'                    u558_25:
 10862  0015' 1003               	clrc
 10863  0016' 0D86'              	rlf	i1__Umul8_16@word_mpld,f
 10864  0017' 0D87'              	rlf	i1__Umul8_16@word_mpld+1,f
 10865  0018' 3EFF               	addlw	-1
 10866  0019' 1D03               	skipz
 10867  001A' 2800'              	goto	u558_25
 10868  001B' 1003               	clrc
 10869  001C' 0C88'              	rrf	i1__Umul8_16@multiplier,f
 10870  001D'                    i1l3147:
 10871  001D' 0808'              	movf	i1__Umul8_16@multiplier,w
 10872  001E' 1D03               	btfss	3,2
 10873  001F' 2800'              	goto	u559_21
 10874  0020' 2800'              	goto	u559_20
 10875  0021'                    u559_21:
 10876  0021' 2800'              	goto	i1l3143
 10877  0022'                    u559_20:
 10878  0022'                    i1l3149:
 10879  0022' 0805'              	movf	i1__Umul8_16@product+1,w
 10880  0023' 0081'              	movwf	?i1__Umul8_16+1
 10881  0024' 0804'              	movf	i1__Umul8_16@product,w
 10882  0025' 0080'              	movwf	?i1__Umul8_16
 10883  0026'                    i1l737:
 10884  0026' 0008               	return
 10885  0027'                    __end_ofi1__Umul8_16:
 10886  007E                     btemp	set	126	;btemp
 10887  007E                     wtemp0	set	126
 10888                           
 10889                           	psect	idloc
 10890                           
 10891                           ;Config register IDLOC0 @ 0x2000
 10892                           ;	unspecified, using default values
 10893  2000                     	org	8192
 10894  2000  3FFF               	dw	16383
 10895                           
 10896                           ;Config register IDLOC1 @ 0x2001
 10897                           ;	unspecified, using default values
 10898  2001                     	org	8193
 10899  2001  3FFF               	dw	16383
 10900                           
 10901                           ;Config register IDLOC2 @ 0x2002
 10902                           ;	unspecified, using default values
 10903  2002                     	org	8194
 10904  2002  3FFF               	dw	16383
 10905                           
 10906                           ;Config register IDLOC3 @ 0x2003
 10907                           ;	unspecified, using default values
 10908  2003                     	org	8195
 10909  2003  3FFF               	dw	16383
 10910                           
 10911                           	psect	config
 10912                           
 10913                           ;Config register CONFIG1 @ 0x2007
 10914                           ;	Oscillator Selection bits
 10915                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10916                           ;	Watchdog Timer Enable bit
 10917                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10918                           ;	Power-up Timer Enable bit
 10919                           ;	PWRTE = OFF, PWRT disabled
 10920                           ;	RE3/MCLR pin function select bit
 10921                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10922                           ;	Code Protection bit
 10923                           ;	CP = OFF, Program memory code protection is disabled
 10924                           ;	Data Code Protection bit
 10925                           ;	CPD = OFF, Data memory code protection is disabled
 10926                           ;	Brown Out Reset Selection bits
 10927                           ;	BOREN = OFF, BOR disabled
 10928                           ;	Internal External Switchover bit
 10929                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10930                           ;	Fail-Safe Clock Monitor Enabled bit
 10931                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10932                           ;	Low Voltage Programming Enable bit
 10933                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10934                           ;	In-Circuit Debugger Mode bit
 10935                           ;	DEBUG = 0x1, unprogrammed default
 10936  2007                     	org	8199
 10937  2007  20D2               	dw	8402
 10938                           
 10939                           ;Config register CONFIG2 @ 0x2008
 10940                           ;	Brown-out Reset Selection bit
 10941                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10942                           ;	Flash Program Memory Self Write Enable bits
 10943                           ;	WRT = OFF, Write protection off
 10944  2008                     	org	8200
 10945  2008  3FFF               	dw	16383
 10946                           
 10947                           	psect	text1_split_1
 10948  0000'                    l3963:
 10949                           
 10950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10951  0000' 1683               	bsf	3,5	;RP0=1, select bank3
 10952  0001' 1703               	bsf	3,6	;RP1=1, select bank3
 10953  0002' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10954  0003' 1683               	bsf	3,5	;RP0=1, select bank1
 10955  0004' 1303               	bcf	3,6	;RP1=0, select bank1
 10956  0005' 0080'              	movwf	(___fltol@f1+3)^(0+128)
 10957  0006' 1683               	bsf	3,5	;RP0=1, select bank3
 10958  0007' 1703               	bsf	3,6	;RP1=1, select bank3
 10959  0008' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10960  0009' 1683               	bsf	3,5	;RP0=1, select bank1
 10961  000A' 1303               	bcf	3,6	;RP1=0, select bank1
 10962  000B' 0080'              	movwf	(___fltol@f1+2)^(0+128)
 10963  000C' 1683               	bsf	3,5	;RP0=1, select bank3
 10964  000D' 1703               	bsf	3,6	;RP1=1, select bank3
 10965  000E' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10966  000F' 1683               	bsf	3,5	;RP0=1, select bank1
 10967  0010' 1303               	bcf	3,6	;RP1=0, select bank1
 10968  0011' 0080'              	movwf	(___fltol@f1+1)^(0+128)
 10969  0012' 1683               	bsf	3,5	;RP0=1, select bank3
 10970  0013' 1703               	bsf	3,6	;RP1=1, select bank3
 10971  0014' 0800'              	movf	sprintf@fval^(0+384),w
 10972  0015' 1683               	bsf	3,5	;RP0=1, select bank1
 10973  0016' 1303               	bcf	3,6	;RP1=0, select bank1
 10974  0017' 0080'              	movwf	___fltol@f1^(0+128)
 10975  0018' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10976  001D' 1683               	bsf	3,5	;RP0=1, select bank1
 10977  001E' 1303               	bcf	3,6	;RP1=0, select bank1
 10978  001F' 0800'              	movf	(?___fltol+3)^(0+128),w
 10979  0020' 1683               	bsf	3,5	;RP0=1, select bank3
 10980  0021' 1703               	bsf	3,6	;RP1=1, select bank3
 10981  0022' 0080'              	movwf	(sprintf@val+3)^(0+384)
 10982  0023' 1683               	bsf	3,5	;RP0=1, select bank1
 10983  0024' 1303               	bcf	3,6	;RP1=0, select bank1
 10984  0025' 0800'              	movf	(?___fltol+2)^(0+128),w
 10985  0026' 1683               	bsf	3,5	;RP0=1, select bank3
 10986  0027' 1703               	bsf	3,6	;RP1=1, select bank3
 10987  0028' 0080'              	movwf	(sprintf@val+2)^(0+384)
 10988  0029' 1683               	bsf	3,5	;RP0=1, select bank1
 10989  002A' 1303               	bcf	3,6	;RP1=0, select bank1
 10990  002B' 0800'              	movf	(?___fltol+1)^(0+128),w
 10991  002C' 1683               	bsf	3,5	;RP0=1, select bank3
 10992  002D' 1703               	bsf	3,6	;RP1=1, select bank3
 10993  002E' 0080'              	movwf	(sprintf@val+1)^(0+384)
 10994  002F' 1683               	bsf	3,5	;RP0=1, select bank1
 10995  0030' 1303               	bcf	3,6	;RP1=0, select bank1
 10996  0031' 0800'              	movf	?___fltol^(0+128),w
 10997  0032' 1683               	bsf	3,5	;RP0=1, select bank3
 10998  0033' 1703               	bsf	3,6	;RP1=1, select bank3
 10999  0034' 0080'              	movwf	sprintf@val^(0+384)
 11000  0035'                    l3965:
 11001                           
 11002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 11003  0035' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11004  0036' 1283               	bcf	3,5	;RP0=0, select bank0
 11005  0037' 1303               	bcf	3,6	;RP1=0, select bank0
 11006  0038' 00A0'              	movwf	___xxtofl@val+3
 11007  0039' 1683               	bsf	3,5	;RP0=1, select bank3
 11008  003A' 1703               	bsf	3,6	;RP1=1, select bank3
 11009  003B' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11010  003C' 1283               	bcf	3,5	;RP0=0, select bank0
 11011  003D' 1303               	bcf	3,6	;RP1=0, select bank0
 11012  003E' 009F'              	movwf	___xxtofl@val+2
 11013  003F' 1683               	bsf	3,5	;RP0=1, select bank3
 11014  0040' 1703               	bsf	3,6	;RP1=1, select bank3
 11015  0041' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11016  0042' 1283               	bcf	3,5	;RP0=0, select bank0
 11017  0043' 1303               	bcf	3,6	;RP1=0, select bank0
 11018  0044' 009E'              	movwf	___xxtofl@val+1
 11019  0045' 1683               	bsf	3,5	;RP0=1, select bank3
 11020  0046' 1703               	bsf	3,6	;RP1=1, select bank3
 11021  0047' 0800'              	movf	sprintf@val^(0+384),w
 11022  0048' 1283               	bcf	3,5	;RP0=0, select bank0
 11023  0049' 1303               	bcf	3,6	;RP1=0, select bank0
 11024  004A' 009D'              	movwf	___xxtofl@val
 11025  004B' 3000               	movlw	0
 11026  004C' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
 11027  0051' 1283               	bcf	3,5	;RP0=0, select bank0
 11028  0052' 1303               	bcf	3,6	;RP1=0, select bank0
 11029  0053' 0820'              	movf	?___xxtofl+3,w
 11030  0054' 1683               	bsf	3,5	;RP0=1, select bank1
 11031  0055' 1303               	bcf	3,6	;RP1=0, select bank1
 11032  0056' 0080'              	movwf	(___flsub@a+3)^(0+128)
 11033  0057' 1283               	bcf	3,5	;RP0=0, select bank0
 11034  0058' 1303               	bcf	3,6	;RP1=0, select bank0
 11035  0059' 081F'              	movf	?___xxtofl+2,w
 11036  005A' 1683               	bsf	3,5	;RP0=1, select bank1
 11037  005B' 1303               	bcf	3,6	;RP1=0, select bank1
 11038  005C' 0080'              	movwf	(___flsub@a+2)^(0+128)
 11039  005D' 1283               	bcf	3,5	;RP0=0, select bank0
 11040  005E' 1303               	bcf	3,6	;RP1=0, select bank0
 11041  005F' 081E'              	movf	?___xxtofl+1,w
 11042  0060' 1683               	bsf	3,5	;RP0=1, select bank1
 11043  0061' 1303               	bcf	3,6	;RP1=0, select bank1
 11044  0062' 0080'              	movwf	(___flsub@a+1)^(0+128)
 11045  0063' 1283               	bcf	3,5	;RP0=0, select bank0
 11046  0064' 1303               	bcf	3,6	;RP1=0, select bank0
 11047  0065' 081D'              	movf	?___xxtofl,w
 11048  0066' 1683               	bsf	3,5	;RP0=1, select bank1
 11049  0067' 1303               	bcf	3,6	;RP1=0, select bank1
 11050  0068' 0080'              	movwf	___flsub@a^(0+128)
 11051  0069' 1683               	bsf	3,5	;RP0=1, select bank3
 11052  006A' 1703               	bsf	3,6	;RP1=1, select bank3
 11053  006B' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 11054  006C' 1683               	bsf	3,5	;RP0=1, select bank1
 11055  006D' 1303               	bcf	3,6	;RP1=0, select bank1
 11056  006E' 0080'              	movwf	(___flsub@b+3)^(0+128)
 11057  006F' 1683               	bsf	3,5	;RP0=1, select bank3
 11058  0070' 1703               	bsf	3,6	;RP1=1, select bank3
 11059  0071' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 11060  0072' 1683               	bsf	3,5	;RP0=1, select bank1
 11061  0073' 1303               	bcf	3,6	;RP1=0, select bank1
 11062  0074' 0080'              	movwf	(___flsub@b+2)^(0+128)
 11063  0075' 1683               	bsf	3,5	;RP0=1, select bank3
 11064  0076' 1703               	bsf	3,6	;RP1=1, select bank3
 11065  0077' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 11066  0078' 1683               	bsf	3,5	;RP0=1, select bank1
 11067  0079' 1303               	bcf	3,6	;RP1=0, select bank1
 11068  007A' 0080'              	movwf	(___flsub@b+1)^(0+128)
 11069  007B' 1683               	bsf	3,5	;RP0=1, select bank3
 11070  007C' 1703               	bsf	3,6	;RP1=1, select bank3
 11071  007D' 0800'              	movf	sprintf@fval^(0+384),w
 11072  007E' 1683               	bsf	3,5	;RP0=1, select bank1
 11073  007F' 1303               	bcf	3,6	;RP1=0, select bank1
 11074  0080' 0080'              	movwf	___flsub@b^(0+128)
 11075  0081' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
 11076  0086' 1683               	bsf	3,5	;RP0=1, select bank1
 11077  0087' 1303               	bcf	3,6	;RP1=0, select bank1
 11078  0088' 0800'              	movf	(?___flsub+3)^(0+128),w
 11079  0089' 1683               	bsf	3,5	;RP0=1, select bank3
 11080  008A' 1703               	bsf	3,6	;RP1=1, select bank3
 11081  008B' 0080'              	movwf	(sprintf@fval+3)^(0+384)
 11082  008C' 1683               	bsf	3,5	;RP0=1, select bank1
 11083  008D' 1303               	bcf	3,6	;RP1=0, select bank1
 11084  008E' 0800'              	movf	(?___flsub+2)^(0+128),w
 11085  008F' 1683               	bsf	3,5	;RP0=1, select bank3
 11086  0090' 1703               	bsf	3,6	;RP1=1, select bank3
 11087  0091' 0080'              	movwf	(sprintf@fval+2)^(0+384)
 11088  0092' 1683               	bsf	3,5	;RP0=1, select bank1
 11089  0093' 1303               	bcf	3,6	;RP1=0, select bank1
 11090  0094' 0800'              	movf	(?___flsub+1)^(0+128),w
 11091  0095' 1683               	bsf	3,5	;RP0=1, select bank3
 11092  0096' 1703               	bsf	3,6	;RP1=1, select bank3
 11093  0097' 0080'              	movwf	(sprintf@fval+1)^(0+384)
 11094  0098' 1683               	bsf	3,5	;RP0=1, select bank1
 11095  0099' 1303               	bcf	3,6	;RP1=0, select bank1
 11096  009A' 0800'              	movf	?___flsub^(0+128),w
 11097  009B' 1683               	bsf	3,5	;RP0=1, select bank3
 11098  009C' 1703               	bsf	3,6	;RP1=1, select bank3
 11099  009D' 0080'              	movwf	sprintf@fval^(0+384)
 11100  009E'                    l3967:
 11101                           
 11102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 11103  009E' 0180'              	clrf	sprintf@eexp^(0+384)
 11104  009F' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
 11105  00A0'                    l3969:
 11106                           
 11107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11108  00A0' 0180'              	clrf	sprintf@c^(0+384)
 11109  00A1' 0A80'              	incf	sprintf@c^(0+384),f
 11110  00A2'                    l3975:
 11111                           
 11112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 11113  00A2' 0800'              	movf	sprintf@c^(0+384),w
 11114  00A3' 0080'              	movwf	??_sprintf^(0+384)
 11115  00A4' 3001               	movlw	1
 11116  00A5'                    u7415:
 11117  00A5' 1003               	clrc
 11118  00A6' 0D80'              	rlf	??_sprintf^(0+384),f
 11119  00A7' 3EFF               	addlw	-1
 11120  00A8' 1D03               	skipz
 11121  00A9' 2800'              	goto	u7415
 11122  00AA' 1003               	clrc
 11123  00AB' 0D00'              	rlf	??_sprintf^(0+384),w
 11124  00AC' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11125  00AD' 0084               	movwf	4
 11126  00AE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11127  00B3' 0080'              	movwf	(??_sprintf+1)^(0+384)
 11128  00B4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11129  00B9' 0081'              	movwf	((??_sprintf+1)^(0+384)+1)
 11130  00BA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11131  00BF' 0082'              	movwf	((??_sprintf+1)^(0+384)+2)
 11132  00C0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11133  00C5' 0083'              	movwf	((??_sprintf+1)^(0+384)+3)
 11134  00C6' 0800'              	movf	(??_sprintf+4)^(0+384),w
 11135  00C7' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 11136  00C8' 1D03               	skipz
 11137  00C9' 2800'              	goto	u7425
 11138  00CA' 0800'              	movf	(??_sprintf+3)^(0+384),w
 11139  00CB' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 11140  00CC' 1D03               	skipz
 11141  00CD' 2800'              	goto	u7425
 11142  00CE' 0800'              	movf	(??_sprintf+2)^(0+384),w
 11143  00CF' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 11144  00D0' 1D03               	skipz
 11145  00D1' 2800'              	goto	u7425
 11146  00D2' 0800'              	movf	(??_sprintf+1)^(0+384),w
 11147  00D3' 0200'              	subwf	sprintf@val^(0+384),w
 11148  00D4'                    u7425:
 11149  00D4' 1803               	skipnc
 11150  00D5' 2800'              	goto	u7421
 11151  00D6' 2800'              	goto	u7420
 11152  00D7'                    u7421:
 11153  00D7' 2800'              	goto	l3979
 11154  00D8'                    u7420:
 11155  00D8' 2800'              	goto	l3981
 11156  00D9'                    l3979:
 11157  00D9' 3001               	movlw	1
 11158  00DA' 0080'              	movwf	??_sprintf^(0+384)
 11159  00DB' 0800'              	movf	??_sprintf^(0+384),w
 11160  00DC' 0780'              	addwf	sprintf@c^(0+384),f
 11161  00DD' 300A               	movlw	10
 11162  00DE' 0600'              	xorwf	sprintf@c^(0+384),w
 11163  00DF' 1D03               	btfss	3,2
 11164  00E0' 2800'              	goto	u7431
 11165  00E1' 2800'              	goto	u7430
 11166  00E2'                    u7431:
 11167  00E2' 2800'              	goto	l3975
 11168  00E3'                    u7430:
 11169  00E3'                    l3981:
 11170                           
 11171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
 11172  00E3' 3003               	movlw	3
 11173  00E4' 0500'              	andwf	sprintf@flag^(0+384),w
 11174  00E5' 0080'              	movwf	??_sprintf^(0+384)
 11175  00E6' 3000               	movlw	0
 11176  00E7' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 11177  00E8' 0080'              	movwf	(??_sprintf+1)^(0+384)
 11178  00E9' 0800'              	movf	??_sprintf^(0+384),w
 11179  00EA' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 11180  00EB' 1903               	btfsc	3,2
 11181  00EC' 2800'              	goto	u7441
 11182  00ED' 2800'              	goto	u7440
 11183  00EE'                    u7441:
 11184  00EE' 2800'              	goto	l266
 11185  00EF'                    u7440:
 11186  00EF'                    l3983:
 11187                           
 11188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11189  00EF' 302D               	movlw	45
 11190  00F0' 0080'              	movwf	??_sprintf^(0+384)
 11191  00F1' 0800'              	movf	sprintf@sp^(0+384),w
 11192  00F2' 0084               	movwf	4
 11193  00F3' 0800'              	movf	??_sprintf^(0+384),w
 11194  00F4' 1783               	bsf	3,7	;select IRP bank2
 11195  00F5' 0080               	movwf	0
 11196  00F6'                    l3985:
 11197  00F6' 3001               	movlw	1
 11198  00F7' 0080'              	movwf	??_sprintf^(0+384)
 11199  00F8' 0800'              	movf	??_sprintf^(0+384),w
 11200  00F9' 0780'              	addwf	sprintf@sp^(0+384),f
 11201  00FA' 2800'              	goto	l266
 11202  00FB'                    l3987:
 11203                           
 11204                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11205  00FB' 0800'              	movf	sprintf@c^(0+384),w
 11206  00FC' 0080'              	movwf	??_sprintf^(0+384)
 11207  00FD' 3001               	movlw	1
 11208  00FE'                    u7455:
 11209  00FE' 1003               	clrc
 11210  00FF' 0D80'              	rlf	??_sprintf^(0+384),f
 11211  0100' 3EFF               	addlw	-1
 11212  0101' 1D03               	skipz
 11213  0102' 2800'              	goto	u7455
 11214  0103' 1003               	clrc
 11215  0104' 0D00'              	rlf	??_sprintf^(0+384),w
 11216  0105' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11217  0106' 0084               	movwf	4
 11218  0107' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11219  010C' 1283               	bcf	3,5	;RP0=0, select bank0
 11220  010D' 1303               	bcf	3,6	;RP1=0, select bank0
 11221  010E' 009D'              	movwf	___lldiv@divisor
 11222  010F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11223  0114' 009E'              	movwf	___lldiv@divisor+1
 11224  0115' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11225  011A' 009F'              	movwf	___lldiv@divisor+2
 11226  011B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11227  0120' 00A0'              	movwf	___lldiv@divisor+3
 11228  0121' 1683               	bsf	3,5	;RP0=1, select bank3
 11229  0122' 1703               	bsf	3,6	;RP1=1, select bank3
 11230  0123' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11231  0124' 1283               	bcf	3,5	;RP0=0, select bank0
 11232  0125' 1303               	bcf	3,6	;RP1=0, select bank0
 11233  0126' 00A4'              	movwf	___lldiv@dividend+3
 11234  0127' 1683               	bsf	3,5	;RP0=1, select bank3
 11235  0128' 1703               	bsf	3,6	;RP1=1, select bank3
 11236  0129' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11237  012A' 1283               	bcf	3,5	;RP0=0, select bank0
 11238  012B' 1303               	bcf	3,6	;RP1=0, select bank0
 11239  012C' 00A3'              	movwf	___lldiv@dividend+2
 11240  012D' 1683               	bsf	3,5	;RP0=1, select bank3
 11241  012E' 1703               	bsf	3,6	;RP1=1, select bank3
 11242  012F' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11243  0130' 1283               	bcf	3,5	;RP0=0, select bank0
 11244  0131' 1303               	bcf	3,6	;RP1=0, select bank0
 11245  0132' 00A2'              	movwf	___lldiv@dividend+1
 11246  0133' 1683               	bsf	3,5	;RP0=1, select bank3
 11247  0134' 1703               	bsf	3,6	;RP1=1, select bank3
 11248  0135' 0800'              	movf	sprintf@val^(0+384),w
 11249  0136' 1283               	bcf	3,5	;RP0=0, select bank0
 11250  0137' 1303               	bcf	3,6	;RP1=0, select bank0
 11251  0138' 00A1'              	movwf	___lldiv@dividend
 11252  0139' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11253  013E' 1283               	bcf	3,5	;RP0=0, select bank0
 11254  013F' 1303               	bcf	3,6	;RP1=0, select bank0
 11255  0140' 0820'              	movf	?___lldiv+3,w
 11256  0141' 1683               	bsf	3,5	;RP0=1, select bank3
 11257  0142' 1703               	bsf	3,6	;RP1=1, select bank3
 11258  0143' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11259  0144' 1283               	bcf	3,5	;RP0=0, select bank0
 11260  0145' 1303               	bcf	3,6	;RP1=0, select bank0
 11261  0146' 081F'              	movf	?___lldiv+2,w
 11262  0147' 1683               	bsf	3,5	;RP0=1, select bank3
 11263  0148' 1703               	bsf	3,6	;RP1=1, select bank3
 11264  0149' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11265  014A' 1283               	bcf	3,5	;RP0=0, select bank0
 11266  014B' 1303               	bcf	3,6	;RP1=0, select bank0
 11267  014C' 081E'              	movf	?___lldiv+1,w
 11268  014D' 1683               	bsf	3,5	;RP0=1, select bank3
 11269  014E' 1703               	bsf	3,6	;RP1=1, select bank3
 11270  014F' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11271  0150' 1283               	bcf	3,5	;RP0=0, select bank0
 11272  0151' 1303               	bcf	3,6	;RP1=0, select bank0
 11273  0152' 081D'              	movf	?___lldiv,w
 11274  0153' 1683               	bsf	3,5	;RP0=1, select bank3
 11275  0154' 1703               	bsf	3,6	;RP1=1, select bank3
 11276  0155' 0080'              	movwf	sprintf@tmpval^(0+384)
 11277  0156'                    l3989:
 11278                           
 11279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11280  0156' 3000               	movlw	0
 11281  0157' 1683               	bsf	3,5	;RP0=1, select bank1
 11282  0158' 1303               	bcf	3,6	;RP1=0, select bank1
 11283  0159' 0080'              	movwf	(___llmod@divisor+3)^(0+128)
 11284  015A' 3000               	movlw	0
 11285  015B' 0080'              	movwf	(___llmod@divisor+2)^(0+128)
 11286  015C' 3000               	movlw	0
 11287  015D' 0080'              	movwf	(___llmod@divisor+1)^(0+128)
 11288  015E' 300A               	movlw	10
 11289  015F' 0080'              	movwf	___llmod@divisor^(0+128)
 11290  0160' 1683               	bsf	3,5	;RP0=1, select bank3
 11291  0161' 1703               	bsf	3,6	;RP1=1, select bank3
 11292  0162' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 11293  0163' 1683               	bsf	3,5	;RP0=1, select bank1
 11294  0164' 1303               	bcf	3,6	;RP1=0, select bank1
 11295  0165' 0080'              	movwf	(___llmod@dividend+3)^(0+128)
 11296  0166' 1683               	bsf	3,5	;RP0=1, select bank3
 11297  0167' 1703               	bsf	3,6	;RP1=1, select bank3
 11298  0168' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 11299  0169' 1683               	bsf	3,5	;RP0=1, select bank1
 11300  016A' 1303               	bcf	3,6	;RP1=0, select bank1
 11301  016B' 0080'              	movwf	(___llmod@dividend+2)^(0+128)
 11302  016C' 1683               	bsf	3,5	;RP0=1, select bank3
 11303  016D' 1703               	bsf	3,6	;RP1=1, select bank3
 11304  016E' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 11305  016F' 1683               	bsf	3,5	;RP0=1, select bank1
 11306  0170' 1303               	bcf	3,6	;RP1=0, select bank1
 11307  0171' 0080'              	movwf	(___llmod@dividend+1)^(0+128)
 11308  0172' 1683               	bsf	3,5	;RP0=1, select bank3
 11309  0173' 1703               	bsf	3,6	;RP1=1, select bank3
 11310  0174' 0800'              	movf	sprintf@tmpval^(0+384),w
 11311  0175' 1683               	bsf	3,5	;RP0=1, select bank1
 11312  0176' 1303               	bcf	3,6	;RP1=0, select bank1
 11313  0177' 0080'              	movwf	___llmod@dividend^(0+128)
 11314  0178' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11315  017D' 1683               	bsf	3,5	;RP0=1, select bank1
 11316  017E' 1303               	bcf	3,6	;RP1=0, select bank1
 11317  017F' 0800'              	movf	(?___llmod+3)^(0+128),w
 11318  0180' 1683               	bsf	3,5	;RP0=1, select bank3
 11319  0181' 1703               	bsf	3,6	;RP1=1, select bank3
 11320  0182' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11321  0183' 1683               	bsf	3,5	;RP0=1, select bank1
 11322  0184' 1303               	bcf	3,6	;RP1=0, select bank1
 11323  0185' 0800'              	movf	(?___llmod+2)^(0+128),w
 11324  0186' 1683               	bsf	3,5	;RP0=1, select bank3
 11325  0187' 1703               	bsf	3,6	;RP1=1, select bank3
 11326  0188' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11327  0189' 1683               	bsf	3,5	;RP0=1, select bank1
 11328  018A' 1303               	bcf	3,6	;RP1=0, select bank1
 11329  018B' 0800'              	movf	(?___llmod+1)^(0+128),w
 11330  018C' 1683               	bsf	3,5	;RP0=1, select bank3
 11331  018D' 1703               	bsf	3,6	;RP1=1, select bank3
 11332  018E' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11333  018F' 1683               	bsf	3,5	;RP0=1, select bank1
 11334  0190' 1303               	bcf	3,6	;RP1=0, select bank1
 11335  0191' 0800'              	movf	?___llmod^(0+128),w
 11336  0192' 1683               	bsf	3,5	;RP0=1, select bank3
 11337  0193' 1703               	bsf	3,6	;RP1=1, select bank3
 11338  0194' 0080'              	movwf	sprintf@tmpval^(0+384)
 11339  0195'                    l3991:
 11340                           
 11341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11342  0195' 0800'              	movf	sprintf@tmpval^(0+384),w
 11343  0196' 3E30               	addlw	48
 11344  0197' 0080'              	movwf	??_sprintf^(0+384)
 11345  0198' 0800'              	movf	sprintf@sp^(0+384),w
 11346  0199' 0084               	movwf	4
 11347  019A' 0800'              	movf	??_sprintf^(0+384),w
 11348  019B' 1783               	bsf	3,7	;select IRP bank2
 11349  019C' 0080               	movwf	0
 11350  019D' 3001               	movlw	1
 11351  019E' 0080'              	movwf	??_sprintf^(0+384)
 11352  019F' 0800'              	movf	??_sprintf^(0+384),w
 11353  01A0' 0780'              	addwf	sprintf@sp^(0+384),f
 11354  01A1'                    l266:	
 11355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1232:    }
 11356                           
 11357                           
 11358                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11359  01A1' 3001               	movlw	1
 11360  01A2' 0280'              	subwf	sprintf@c^(0+384),f
 11361  01A3' 0A00'              	incf	sprintf@c^(0+384),w
 11362  01A4' 1D03               	btfss	3,2
 11363  01A5' 2800'              	goto	u7461
 11364  01A6' 2800'              	goto	u7460
 11365  01A7'                    u7461:
 11366  01A7' 2800'              	goto	l3987
 11367  01A8'                    u7460:
 11368  01A8' 2800'              	goto	l3999
 11369  01A9'                    l3993:
 11370                           
 11371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11372  01A9' 3030               	movlw	48
 11373  01AA' 1683               	bsf	3,5	;RP0=1, select bank3
 11374  01AB' 1703               	bsf	3,6	;RP1=1, select bank3
 11375  01AC' 0080'              	movwf	??_sprintf^(0+384)
 11376  01AD' 0800'              	movf	sprintf@sp^(0+384),w
 11377  01AE' 0084               	movwf	4
 11378  01AF' 0800'              	movf	??_sprintf^(0+384),w
 11379  01B0' 1783               	bsf	3,7	;select IRP bank2
 11380  01B1' 0080               	movwf	0
 11381  01B2'                    l3995:
 11382  01B2' 3001               	movlw	1
 11383  01B3' 0080'              	movwf	??_sprintf^(0+384)
 11384  01B4' 0800'              	movf	??_sprintf^(0+384),w
 11385  01B5' 0780'              	addwf	sprintf@sp^(0+384),f
 11386  01B6'                    l3997:
 11387                           
 11388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11389  01B6' 30FF               	movlw	255
 11390  01B7' 0780'              	addwf	sprintf@eexp^(0+384),f
 11391  01B8' 1803               	skipnc
 11392  01B9' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
 11393  01BA' 30FF               	movlw	255
 11394  01BB' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
 11395  01BC'                    l3999:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11398  01BC' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 11399  01BD' 3A80               	xorlw	128
 11400  01BE' 00FF               	movwf	btemp+1
 11401  01BF' 3080               	movlw	128
 11402  01C0' 027F               	subwf	btemp+1,w
 11403  01C1' 1D03               	skipz
 11404  01C2' 2800'              	goto	u7475
 11405  01C3' 3001               	movlw	1
 11406  01C4' 0200'              	subwf	sprintf@eexp^(0+384),w
 11407  01C5'                    u7475:
 11408  01C5' 1803               	skipnc
 11409  01C6' 2800'              	goto	u7471
 11410  01C7' 2800'              	goto	u7470
 11411  01C8'                    u7471:
 11412  01C8' 2800'              	goto	l3993
 11413  01C9'                    u7470:
 11414  01C9'                    l4001:
 11415                           
 11416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11417  01C9' 1683               	bsf	3,5	;RP0=1, select bank3
 11418  01CA' 1703               	bsf	3,6	;RP1=1, select bank3
 11419  01CB' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 11420  01CC' 3A80               	xorlw	128
 11421  01CD' 00FF               	movwf	btemp+1
 11422  01CE' 3080               	movlw	128
 11423  01CF' 027F               	subwf	btemp+1,w
 11424  01D0' 1D03               	skipz
 11425  01D1' 2800'              	goto	u7485
 11426  01D2' 3009               	movlw	9
 11427  01D3' 0200'              	subwf	sprintf@prec^(0+384),w
 11428  01D4'                    u7485:
 11429  01D4' 1C03               	skipc
 11430  01D5' 2800'              	goto	u7481
 11431  01D6' 2800'              	goto	u7480
 11432  01D7'                    u7481:
 11433  01D7' 2800'              	goto	l4005
 11434  01D8'                    u7480:
 11435  01D8'                    l4003:
 11436                           
 11437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11438  01D8' 3008               	movlw	8
 11439  01D9' 1683               	bsf	3,5	;RP0=1, select bank3
 11440  01DA' 1703               	bsf	3,6	;RP1=1, select bank3
 11441  01DB' 0080'              	movwf	??_sprintf^(0+384)
 11442  01DC' 0800'              	movf	??_sprintf^(0+384),w
 11443  01DD' 0080'              	movwf	sprintf@c^(0+384)
 11444  01DE' 2800'              	goto	l273
 11445  01DF'                    l4005:
 11446                           
 11447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11448  01DF' 1683               	bsf	3,5	;RP0=1, select bank3
 11449  01E0' 1703               	bsf	3,6	;RP1=1, select bank3
 11450  01E1' 0800'              	movf	sprintf@prec^(0+384),w
 11451  01E2' 0080'              	movwf	??_sprintf^(0+384)
 11452  01E3' 0800'              	movf	??_sprintf^(0+384),w
 11453  01E4' 0080'              	movwf	sprintf@c^(0+384)
 11454  01E5'                    l273:
 11455                           
 11456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11457  01E5' 0800'              	movf	sprintf@c^(0+384),w
 11458  01E6' 0080'              	movwf	??_sprintf^(0+384)
 11459  01E7' 0181'              	clrf	(??_sprintf^(0+384)+1)
 11460  01E8' 0800'              	movf	??_sprintf^(0+384),w
 11461  01E9' 0280'              	subwf	sprintf@prec^(0+384),f
 11462  01EA' 0800'              	movf	(??_sprintf+1)^(0+384),w
 11463  01EB' 1C03               	skipc
 11464  01EC' 0380'              	decf	(sprintf@prec+1)^(0+384),f
 11465  01ED' 0280'              	subwf	(sprintf@prec+1)^(0+384),f
 11466  01EE'                    l4007:
 11467                           
 11468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11469  01EE' 0800'              	movf	sprintf@c^(0+384),w
 11470  01EF' 1903               	btfsc	3,2
 11471  01F0' 2800'              	goto	u7491
 11472  01F1' 2800'              	goto	u7490
 11473  01F2'                    u7491:
 11474  01F2' 2800'              	goto	l4013
 11475  01F3'                    u7490:
 11476  01F3'                    l4009:
 11477                           
 11478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11479  01F3' 302E               	movlw	46
 11480  01F4' 0080'              	movwf	??_sprintf^(0+384)
 11481  01F5' 0800'              	movf	sprintf@sp^(0+384),w
 11482  01F6' 0084               	movwf	4
 11483  01F7' 0800'              	movf	??_sprintf^(0+384),w
 11484  01F8' 1783               	bsf	3,7	;select IRP bank2
 11485  01F9' 0080               	movwf	0
 11486  01FA'                    l4011:
 11487  01FA' 3001               	movlw	1
 11488  01FB' 0080'              	movwf	??_sprintf^(0+384)
 11489  01FC' 0800'              	movf	??_sprintf^(0+384),w
 11490  01FD' 0780'              	addwf	sprintf@sp^(0+384),f
 11491  01FE'                    l4013:
 11492                           
 11493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11494  01FE' 0800'              	movf	sprintf@c^(0+384),w
 11495  01FF' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11496  0204' 1683               	bsf	3,5	;RP0=1, select bank1
 11497  0205' 1303               	bcf	3,6	;RP1=0, select bank1
 11498  0206' 0800'              	movf	(?_scale+3)^(0+128),w
 11499  0207' 1683               	bsf	3,5	;RP0=1, select bank3
 11500  0208' 1703               	bsf	3,6	;RP1=1, select bank3
 11501  0209' 0080'              	movwf	(_sprintf$821+3)^(0+384)
 11502  020A' 1683               	bsf	3,5	;RP0=1, select bank1
 11503  020B' 1303               	bcf	3,6	;RP1=0, select bank1
 11504  020C' 0800'              	movf	(?_scale+2)^(0+128),w
 11505  020D' 1683               	bsf	3,5	;RP0=1, select bank3
 11506  020E' 1703               	bsf	3,6	;RP1=1, select bank3
 11507  020F' 0080'              	movwf	(_sprintf$821+2)^(0+384)
 11508  0210' 1683               	bsf	3,5	;RP0=1, select bank1
 11509  0211' 1303               	bcf	3,6	;RP1=0, select bank1
 11510  0212' 0800'              	movf	(?_scale+1)^(0+128),w
 11511  0213' 1683               	bsf	3,5	;RP0=1, select bank3
 11512  0214' 1703               	bsf	3,6	;RP1=1, select bank3
 11513  0215' 0080'              	movwf	(_sprintf$821+1)^(0+384)
 11514  0216' 1683               	bsf	3,5	;RP0=1, select bank1
 11515  0217' 1303               	bcf	3,6	;RP1=0, select bank1
 11516  0218' 0800'              	movf	?_scale^(0+128),w
 11517  0219' 1683               	bsf	3,5	;RP0=1, select bank3
 11518  021A' 1703               	bsf	3,6	;RP1=1, select bank3
 11519  021B' 0080'              	movwf	_sprintf$821^(0+384)
 11520  021C'                    l4015:
 11521                           
 11522                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11523  021C' 0800'              	movf	(_sprintf$821+3)^(0+384),w
 11524  021D' 1683               	bsf	3,5	;RP0=1, select bank1
 11525  021E' 1303               	bcf	3,6	;RP1=0, select bank1
 11526  021F' 0080'              	movwf	(___flmul@a+3)^(0+128)
 11527  0220' 1683               	bsf	3,5	;RP0=1, select bank3
 11528  0221' 1703               	bsf	3,6	;RP1=1, select bank3
 11529  0222' 0800'              	movf	(_sprintf$821+2)^(0+384),w
 11530  0223' 1683               	bsf	3,5	;RP0=1, select bank1
 11531  0224' 1303               	bcf	3,6	;RP1=0, select bank1
 11532  0225' 0080'              	movwf	(___flmul@a+2)^(0+128)
 11533  0226' 1683               	bsf	3,5	;RP0=1, select bank3
 11534  0227' 1703               	bsf	3,6	;RP1=1, select bank3
 11535  0228' 0800'              	movf	(_sprintf$821+1)^(0+384),w
 11536  0229' 1683               	bsf	3,5	;RP0=1, select bank1
 11537  022A' 1303               	bcf	3,6	;RP1=0, select bank1
 11538  022B' 0080'              	movwf	(___flmul@a+1)^(0+128)
 11539  022C' 1683               	bsf	3,5	;RP0=1, select bank3
 11540  022D' 1703               	bsf	3,6	;RP1=1, select bank3
 11541  022E' 0800'              	movf	_sprintf$821^(0+384),w
 11542  022F' 1683               	bsf	3,5	;RP0=1, select bank1
 11543  0230' 1303               	bcf	3,6	;RP1=0, select bank1
 11544  0231' 0080'              	movwf	___flmul@a^(0+128)
 11545  0232' 1683               	bsf	3,5	;RP0=1, select bank3
 11546  0233' 1703               	bsf	3,6	;RP1=1, select bank3
 11547  0234' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 11548  0235' 1683               	bsf	3,5	;RP0=1, select bank1
 11549  0236' 1303               	bcf	3,6	;RP1=0, select bank1
 11550  0237' 0080'              	movwf	(___flmul@b+3)^(0+128)
 11551  0238' 1683               	bsf	3,5	;RP0=1, select bank3
 11552  0239' 1703               	bsf	3,6	;RP1=1, select bank3
 11553  023A' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 11554  023B' 1683               	bsf	3,5	;RP0=1, select bank1
 11555  023C' 1303               	bcf	3,6	;RP1=0, select bank1
 11556  023D' 0080'              	movwf	(___flmul@b+2)^(0+128)
 11557  023E' 1683               	bsf	3,5	;RP0=1, select bank3
 11558  023F' 1703               	bsf	3,6	;RP1=1, select bank3
 11559  0240' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 11560  0241' 1683               	bsf	3,5	;RP0=1, select bank1
 11561  0242' 1303               	bcf	3,6	;RP1=0, select bank1
 11562  0243' 0080'              	movwf	(___flmul@b+1)^(0+128)
 11563  0244' 1683               	bsf	3,5	;RP0=1, select bank3
 11564  0245' 1703               	bsf	3,6	;RP1=1, select bank3
 11565  0246' 0800'              	movf	sprintf@fval^(0+384),w
 11566  0247' 1683               	bsf	3,5	;RP0=1, select bank1
 11567  0248' 1303               	bcf	3,6	;RP1=0, select bank1
 11568  0249' 0080'              	movwf	___flmul@b^(0+128)
 11569  024A' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
 11570  024F' 1683               	bsf	3,5	;RP0=1, select bank1
 11571  0250' 1303               	bcf	3,6	;RP1=0, select bank1
 11572  0251' 0800'              	movf	(?___flmul+3)^(0+128),w
 11573  0252' 0080'              	movwf	(___fltol@f1+3)^(0+128)
 11574  0253' 0800'              	movf	(?___flmul+2)^(0+128),w
 11575  0254' 0080'              	movwf	(___fltol@f1+2)^(0+128)
 11576  0255' 0800'              	movf	(?___flmul+1)^(0+128),w
 11577  0256' 0080'              	movwf	(___fltol@f1+1)^(0+128)
 11578  0257' 0800'              	movf	?___flmul^(0+128),w
 11579  0258' 0080'              	movwf	___fltol@f1^(0+128)
 11580  0259' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11581  025E' 1683               	bsf	3,5	;RP0=1, select bank1
 11582  025F' 1303               	bcf	3,6	;RP1=0, select bank1
 11583  0260' 0800'              	movf	(?___fltol+3)^(0+128),w
 11584  0261' 1683               	bsf	3,5	;RP0=1, select bank3
 11585  0262' 1703               	bsf	3,6	;RP1=1, select bank3
 11586  0263' 0080'              	movwf	(sprintf@val+3)^(0+384)
 11587  0264' 1683               	bsf	3,5	;RP0=1, select bank1
 11588  0265' 1303               	bcf	3,6	;RP1=0, select bank1
 11589  0266' 0800'              	movf	(?___fltol+2)^(0+128),w
 11590  0267' 1683               	bsf	3,5	;RP0=1, select bank3
 11591  0268' 1703               	bsf	3,6	;RP1=1, select bank3
 11592  0269' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11593  026A' 1683               	bsf	3,5	;RP0=1, select bank1
 11594  026B' 1303               	bcf	3,6	;RP1=0, select bank1
 11595  026C' 0800'              	movf	(?___fltol+1)^(0+128),w
 11596  026D' 1683               	bsf	3,5	;RP0=1, select bank3
 11597  026E' 1703               	bsf	3,6	;RP1=1, select bank3
 11598  026F' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11599  0270' 1683               	bsf	3,5	;RP0=1, select bank1
 11600  0271' 1303               	bcf	3,6	;RP1=0, select bank1
 11601  0272' 0800'              	movf	?___fltol^(0+128),w
 11602  0273' 1683               	bsf	3,5	;RP0=1, select bank3
 11603  0274' 1703               	bsf	3,6	;RP1=1, select bank3
 11604  0275' 0080'              	movwf	sprintf@val^(0+384)
 11605                           
 11606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11607  0276' 2800'              	goto	l4025
 11608  0277'                    l4017:
 11609                           
 11610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11611  0277' 0800'              	movf	sprintf@c^(0+384),w
 11612  0278' 0080'              	movwf	??_sprintf^(0+384)
 11613  0279' 3001               	movlw	1
 11614  027A'                    u7505:
 11615  027A' 1003               	clrc
 11616  027B' 0D80'              	rlf	??_sprintf^(0+384),f
 11617  027C' 3EFF               	addlw	-1
 11618  027D' 1D03               	skipz
 11619  027E' 2800'              	goto	u7505
 11620  027F' 1003               	clrc
 11621  0280' 0D00'              	rlf	??_sprintf^(0+384),w
 11622  0281' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11623  0282' 0084               	movwf	4
 11624  0283' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11625  0288' 1283               	bcf	3,5	;RP0=0, select bank0
 11626  0289' 1303               	bcf	3,6	;RP1=0, select bank0
 11627  028A' 009D'              	movwf	___lldiv@divisor
 11628  028B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11629  0290' 009E'              	movwf	___lldiv@divisor+1
 11630  0291' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11631  0296' 009F'              	movwf	___lldiv@divisor+2
 11632  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11633  029C' 00A0'              	movwf	___lldiv@divisor+3
 11634  029D' 1683               	bsf	3,5	;RP0=1, select bank3
 11635  029E' 1703               	bsf	3,6	;RP1=1, select bank3
 11636  029F' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11637  02A0' 1283               	bcf	3,5	;RP0=0, select bank0
 11638  02A1' 1303               	bcf	3,6	;RP1=0, select bank0
 11639  02A2' 00A4'              	movwf	___lldiv@dividend+3
 11640  02A3' 1683               	bsf	3,5	;RP0=1, select bank3
 11641  02A4' 1703               	bsf	3,6	;RP1=1, select bank3
 11642  02A5' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11643  02A6' 1283               	bcf	3,5	;RP0=0, select bank0
 11644  02A7' 1303               	bcf	3,6	;RP1=0, select bank0
 11645  02A8' 00A3'              	movwf	___lldiv@dividend+2
 11646  02A9' 1683               	bsf	3,5	;RP0=1, select bank3
 11647  02AA' 1703               	bsf	3,6	;RP1=1, select bank3
 11648  02AB' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11649  02AC' 1283               	bcf	3,5	;RP0=0, select bank0
 11650  02AD' 1303               	bcf	3,6	;RP1=0, select bank0
 11651  02AE' 00A2'              	movwf	___lldiv@dividend+1
 11652  02AF' 1683               	bsf	3,5	;RP0=1, select bank3
 11653  02B0' 1703               	bsf	3,6	;RP1=1, select bank3
 11654  02B1' 0800'              	movf	sprintf@val^(0+384),w
 11655  02B2' 1283               	bcf	3,5	;RP0=0, select bank0
 11656  02B3' 1303               	bcf	3,6	;RP1=0, select bank0
 11657  02B4' 00A1'              	movwf	___lldiv@dividend
 11658  02B5' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11659  02BA' 1283               	bcf	3,5	;RP0=0, select bank0
 11660  02BB' 1303               	bcf	3,6	;RP1=0, select bank0
 11661  02BC' 0820'              	movf	?___lldiv+3,w
 11662  02BD' 1683               	bsf	3,5	;RP0=1, select bank3
 11663  02BE' 1703               	bsf	3,6	;RP1=1, select bank3
 11664  02BF' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11665  02C0' 1283               	bcf	3,5	;RP0=0, select bank0
 11666  02C1' 1303               	bcf	3,6	;RP1=0, select bank0
 11667  02C2' 081F'              	movf	?___lldiv+2,w
 11668  02C3' 1683               	bsf	3,5	;RP0=1, select bank3
 11669  02C4' 1703               	bsf	3,6	;RP1=1, select bank3
 11670  02C5' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11671  02C6' 1283               	bcf	3,5	;RP0=0, select bank0
 11672  02C7' 1303               	bcf	3,6	;RP1=0, select bank0
 11673  02C8' 081E'              	movf	?___lldiv+1,w
 11674  02C9' 1683               	bsf	3,5	;RP0=1, select bank3
 11675  02CA' 1703               	bsf	3,6	;RP1=1, select bank3
 11676  02CB' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11677  02CC' 1283               	bcf	3,5	;RP0=0, select bank0
 11678  02CD' 1303               	bcf	3,6	;RP1=0, select bank0
 11679  02CE' 081D'              	movf	?___lldiv,w
 11680  02CF' 1683               	bsf	3,5	;RP0=1, select bank3
 11681  02D0' 1703               	bsf	3,6	;RP1=1, select bank3
 11682  02D1' 0080'              	movwf	sprintf@tmpval^(0+384)
 11683  02D2'                    l4019:
 11684                           
 11685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11686  02D2' 3000               	movlw	0
 11687  02D3' 1683               	bsf	3,5	;RP0=1, select bank1
 11688  02D4' 1303               	bcf	3,6	;RP1=0, select bank1
 11689  02D5' 0080'              	movwf	(___llmod@divisor+3)^(0+128)
 11690  02D6' 3000               	movlw	0
 11691  02D7' 0080'              	movwf	(___llmod@divisor+2)^(0+128)
 11692  02D8' 3000               	movlw	0
 11693  02D9' 0080'              	movwf	(___llmod@divisor+1)^(0+128)
 11694  02DA' 300A               	movlw	10
 11695  02DB' 0080'              	movwf	___llmod@divisor^(0+128)
 11696  02DC' 1683               	bsf	3,5	;RP0=1, select bank3
 11697  02DD' 1703               	bsf	3,6	;RP1=1, select bank3
 11698  02DE' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 11699  02DF' 1683               	bsf	3,5	;RP0=1, select bank1
 11700  02E0' 1303               	bcf	3,6	;RP1=0, select bank1
 11701  02E1' 0080'              	movwf	(___llmod@dividend+3)^(0+128)
 11702  02E2' 1683               	bsf	3,5	;RP0=1, select bank3
 11703  02E3' 1703               	bsf	3,6	;RP1=1, select bank3
 11704  02E4' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 11705  02E5' 1683               	bsf	3,5	;RP0=1, select bank1
 11706  02E6' 1303               	bcf	3,6	;RP1=0, select bank1
 11707  02E7' 0080'              	movwf	(___llmod@dividend+2)^(0+128)
 11708  02E8' 1683               	bsf	3,5	;RP0=1, select bank3
 11709  02E9' 1703               	bsf	3,6	;RP1=1, select bank3
 11710  02EA' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 11711  02EB' 1683               	bsf	3,5	;RP0=1, select bank1
 11712  02EC' 1303               	bcf	3,6	;RP1=0, select bank1
 11713  02ED' 0080'              	movwf	(___llmod@dividend+1)^(0+128)
 11714  02EE' 1683               	bsf	3,5	;RP0=1, select bank3
 11715  02EF' 1703               	bsf	3,6	;RP1=1, select bank3
 11716  02F0' 0800'              	movf	sprintf@tmpval^(0+384),w
 11717  02F1' 1683               	bsf	3,5	;RP0=1, select bank1
 11718  02F2' 1303               	bcf	3,6	;RP1=0, select bank1
 11719  02F3' 0080'              	movwf	___llmod@dividend^(0+128)
 11720  02F4' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11721  02F9' 1683               	bsf	3,5	;RP0=1, select bank1
 11722  02FA' 1303               	bcf	3,6	;RP1=0, select bank1
 11723  02FB' 0800'              	movf	(?___llmod+3)^(0+128),w
 11724  02FC' 1683               	bsf	3,5	;RP0=1, select bank3
 11725  02FD' 1703               	bsf	3,6	;RP1=1, select bank3
 11726  02FE' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11727  02FF' 1683               	bsf	3,5	;RP0=1, select bank1
 11728  0300' 1303               	bcf	3,6	;RP1=0, select bank1
 11729  0301' 0800'              	movf	(?___llmod+2)^(0+128),w
 11730  0302' 1683               	bsf	3,5	;RP0=1, select bank3
 11731  0303' 1703               	bsf	3,6	;RP1=1, select bank3
 11732  0304' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11733  0305' 1683               	bsf	3,5	;RP0=1, select bank1
 11734  0306' 1303               	bcf	3,6	;RP1=0, select bank1
 11735  0307' 0800'              	movf	(?___llmod+1)^(0+128),w
 11736  0308' 1683               	bsf	3,5	;RP0=1, select bank3
 11737  0309' 1703               	bsf	3,6	;RP1=1, select bank3
 11738  030A' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11739  030B' 1683               	bsf	3,5	;RP0=1, select bank1
 11740  030C' 1303               	bcf	3,6	;RP1=0, select bank1
 11741  030D' 0800'              	movf	?___llmod^(0+128),w
 11742  030E' 1683               	bsf	3,5	;RP0=1, select bank3
 11743  030F' 1703               	bsf	3,6	;RP1=1, select bank3
 11744  0310' 0080'              	movwf	sprintf@tmpval^(0+384)
 11745  0311'                    l4021:
 11746                           
 11747                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11748  0311' 0800'              	movf	sprintf@tmpval^(0+384),w
 11749  0312' 3E30               	addlw	48
 11750  0313' 0080'              	movwf	??_sprintf^(0+384)
 11751  0314' 0800'              	movf	sprintf@sp^(0+384),w
 11752  0315' 0084               	movwf	4
 11753  0316' 0800'              	movf	??_sprintf^(0+384),w
 11754  0317' 1783               	bsf	3,7	;select IRP bank2
 11755  0318' 0080               	movwf	0
 11756  0319' 3001               	movlw	1
 11757  031A' 0080'              	movwf	??_sprintf^(0+384)
 11758  031B' 0800'              	movf	??_sprintf^(0+384),w
 11759  031C' 0780'              	addwf	sprintf@sp^(0+384),f
 11760  031D'                    l4023:
 11761                           
 11762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11763  031D' 0800'              	movf	sprintf@c^(0+384),w
 11764  031E' 0080'              	movwf	??_sprintf^(0+384)
 11765  031F' 3001               	movlw	1
 11766  0320'                    u7515:
 11767  0320' 1003               	clrc
 11768  0321' 0D80'              	rlf	??_sprintf^(0+384),f
 11769  0322' 3EFF               	addlw	-1
 11770  0323' 1D03               	skipz
 11771  0324' 2800'              	goto	u7515
 11772  0325' 1003               	clrc
 11773  0326' 0D00'              	rlf	??_sprintf^(0+384),w
 11774  0327' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11775  0328' 0084               	movwf	4
 11776  0329' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11777  032E' 1683               	bsf	3,5	;RP0=1, select bank1
 11778  032F' 1303               	bcf	3,6	;RP1=0, select bank1
 11779  0330' 0080'              	movwf	___llmod@divisor^(0+128)
 11780  0331' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11781  0336' 0080'              	movwf	(___llmod@divisor+1)^(0+128)
 11782  0337' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11783  033C' 0080'              	movwf	(___llmod@divisor+2)^(0+128)
 11784  033D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11785  0342' 0080'              	movwf	(___llmod@divisor+3)^(0+128)
 11786  0343' 1683               	bsf	3,5	;RP0=1, select bank3
 11787  0344' 1703               	bsf	3,6	;RP1=1, select bank3
 11788  0345' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11789  0346' 1683               	bsf	3,5	;RP0=1, select bank1
 11790  0347' 1303               	bcf	3,6	;RP1=0, select bank1
 11791  0348' 0080'              	movwf	(___llmod@dividend+3)^(0+128)
 11792  0349' 1683               	bsf	3,5	;RP0=1, select bank3
 11793  034A' 1703               	bsf	3,6	;RP1=1, select bank3
 11794  034B' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11795  034C' 1683               	bsf	3,5	;RP0=1, select bank1
 11796  034D' 1303               	bcf	3,6	;RP1=0, select bank1
 11797  034E' 0080'              	movwf	(___llmod@dividend+2)^(0+128)
 11798  034F' 1683               	bsf	3,5	;RP0=1, select bank3
 11799  0350' 1703               	bsf	3,6	;RP1=1, select bank3
 11800  0351' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11801  0352' 1683               	bsf	3,5	;RP0=1, select bank1
 11802  0353' 1303               	bcf	3,6	;RP1=0, select bank1
 11803  0354' 0080'              	movwf	(___llmod@dividend+1)^(0+128)
 11804  0355' 1683               	bsf	3,5	;RP0=1, select bank3
 11805  0356' 1703               	bsf	3,6	;RP1=1, select bank3
 11806  0357' 0800'              	movf	sprintf@val^(0+384),w
 11807  0358' 1683               	bsf	3,5	;RP0=1, select bank1
 11808  0359' 1303               	bcf	3,6	;RP1=0, select bank1
 11809  035A' 0080'              	movwf	___llmod@dividend^(0+128)
 11810  035B' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11811  0360' 1683               	bsf	3,5	;RP0=1, select bank1
 11812  0361' 1303               	bcf	3,6	;RP1=0, select bank1
 11813  0362' 0800'              	movf	(?___llmod+3)^(0+128),w
 11814  0363' 1683               	bsf	3,5	;RP0=1, select bank3
 11815  0364' 1703               	bsf	3,6	;RP1=1, select bank3
 11816  0365' 0080'              	movwf	(sprintf@val+3)^(0+384)
 11817  0366' 1683               	bsf	3,5	;RP0=1, select bank1
 11818  0367' 1303               	bcf	3,6	;RP1=0, select bank1
 11819  0368' 0800'              	movf	(?___llmod+2)^(0+128),w
 11820  0369' 1683               	bsf	3,5	;RP0=1, select bank3
 11821  036A' 1703               	bsf	3,6	;RP1=1, select bank3
 11822  036B' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11823  036C' 1683               	bsf	3,5	;RP0=1, select bank1
 11824  036D' 1303               	bcf	3,6	;RP1=0, select bank1
 11825  036E' 0800'              	movf	(?___llmod+1)^(0+128),w
 11826  036F' 1683               	bsf	3,5	;RP0=1, select bank3
 11827  0370' 1703               	bsf	3,6	;RP1=1, select bank3
 11828  0371' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11829  0372' 1683               	bsf	3,5	;RP0=1, select bank1
 11830  0373' 1303               	bcf	3,6	;RP1=0, select bank1
 11831  0374' 0800'              	movf	?___llmod^(0+128),w
 11832  0375' 1683               	bsf	3,5	;RP0=1, select bank3
 11833  0376' 1703               	bsf	3,6	;RP1=1, select bank3
 11834  0377' 0080'              	movwf	sprintf@val^(0+384)
 11835  0378'                    l4025:
 11836                           
 11837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11838  0378' 3001               	movlw	1
 11839  0379' 0280'              	subwf	sprintf@c^(0+384),f
 11840  037A' 0A00'              	incf	sprintf@c^(0+384),w
 11841  037B' 1D03               	btfss	3,2
 11842  037C' 2800'              	goto	u7521
 11843  037D' 2800'              	goto	u7520
 11844  037E'                    u7521:
 11845  037E' 2800'              	goto	l4017
 11846  037F'                    u7520:
 11847  037F' 2800'              	goto	l4033
 11848  0380'                    l4027:
 11849                           
 11850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11851  0380' 3030               	movlw	48
 11852  0381' 0080'              	movwf	??_sprintf^(0+384)
 11853  0382' 0800'              	movf	sprintf@sp^(0+384),w
 11854  0383' 0084               	movwf	4
 11855  0384' 0800'              	movf	??_sprintf^(0+384),w
 11856  0385' 1783               	bsf	3,7	;select IRP bank2
 11857  0386' 0080               	movwf	0
 11858  0387'                    l4029:
 11859  0387' 3001               	movlw	1
 11860  0388' 0080'              	movwf	??_sprintf^(0+384)
 11861  0389' 0800'              	movf	??_sprintf^(0+384),w
 11862  038A' 0780'              	addwf	sprintf@sp^(0+384),f
 11863  038B'                    l4031:
 11864                           
 11865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11866  038B' 30FF               	movlw	255
 11867  038C' 0780'              	addwf	sprintf@prec^(0+384),f
 11868  038D' 1803               	skipnc
 11869  038E' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 11870  038F' 30FF               	movlw	255
 11871  0390' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 11872  0391'                    l4033:
 11873                           
 11874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11875  0391' 0800'              	movf	sprintf@prec^(0+384),w
 11876  0392' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 11877  0393' 1D03               	btfss	3,2
 11878  0394' 2800'              	goto	u7531
 11879  0395' 2800'              	goto	u7530
 11880  0396'                    u7531:
 11881  0396' 2800'              	goto	l4027
 11882  0397'                    u7530:
 11883  0397' 2800'              	goto	l4067
 11884  0398'                    l4035:
 11885                           
 11886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11887  0398' 0800'              	movf	sprintf@ap^(0+384),w
 11888  0399' 0084               	movwf	4
 11889  039A' 1783               	bsf	3,7	;select IRP bank2
 11890  039B' 0800               	movf	0,w
 11891  039C' 0080'              	movwf	??_sprintf^(0+384)
 11892  039D' 0A84               	incf	4,f
 11893  039E' 0800               	movf	0,w
 11894  039F' 0081'              	movwf	(??_sprintf^(0+384)+1)
 11895  03A0' 0800'              	movf	??_sprintf^(0+384),w
 11896  03A1' 0080'              	movwf	sprintf@val^(0+384)
 11897  03A2' 0800'              	movf	(??_sprintf+1)^(0+384),w
 11898  03A3' 0081'              	movwf	(sprintf@val^(0+384)+1)
 11899  03A4' 0182'              	clrf	(sprintf@val^(0+384)+2)
 11900  03A5' 0183'              	clrf	(sprintf@val^(0+384)+3)
 11901  03A6'                    l4037:
 11902  03A6' 3002               	movlw	2
 11903  03A7' 0080'              	movwf	??_sprintf^(0+384)
 11904  03A8' 0800'              	movf	??_sprintf^(0+384),w
 11905  03A9' 0780'              	addwf	sprintf@ap^(0+384),f
 11906  03AA'                    l4039:
 11907                           
 11908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
 11909  03AA' 0180'              	clrf	sprintf@c^(0+384)
 11910  03AB' 0A80'              	incf	sprintf@c^(0+384),f
 11911  03AC'                    l4045:
 11912                           
 11913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11914  03AC' 0800'              	movf	sprintf@c^(0+384),w
 11915  03AD' 0080'              	movwf	??_sprintf^(0+384)
 11916  03AE' 3001               	movlw	1
 11917  03AF'                    u7545:
 11918  03AF' 1003               	clrc
 11919  03B0' 0D80'              	rlf	??_sprintf^(0+384),f
 11920  03B1' 3EFF               	addlw	-1
 11921  03B2' 1D03               	skipz
 11922  03B3' 2800'              	goto	u7545
 11923  03B4' 1003               	clrc
 11924  03B5' 0D00'              	rlf	??_sprintf^(0+384),w
 11925  03B6' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11926  03B7' 0084               	movwf	4
 11927  03B8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11928  03BD' 0080'              	movwf	(??_sprintf+1)^(0+384)
 11929  03BE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11930  03C3' 0081'              	movwf	((??_sprintf+1)^(0+384)+1)
 11931  03C4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11932  03C9' 0082'              	movwf	((??_sprintf+1)^(0+384)+2)
 11933  03CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11934  03CF' 0083'              	movwf	((??_sprintf+1)^(0+384)+3)
 11935  03D0' 0800'              	movf	(??_sprintf+4)^(0+384),w
 11936  03D1' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 11937  03D2' 1D03               	skipz
 11938  03D3' 2800'              	goto	u7555
 11939  03D4' 0800'              	movf	(??_sprintf+3)^(0+384),w
 11940  03D5' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 11941  03D6' 1D03               	skipz
 11942  03D7' 2800'              	goto	u7555
 11943  03D8' 0800'              	movf	(??_sprintf+2)^(0+384),w
 11944  03D9' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 11945  03DA' 1D03               	skipz
 11946  03DB' 2800'              	goto	u7555
 11947  03DC' 0800'              	movf	(??_sprintf+1)^(0+384),w
 11948  03DD' 0200'              	subwf	sprintf@val^(0+384),w
 11949  03DE'                    u7555:
 11950  03DE' 1803               	skipnc
 11951  03DF' 2800'              	goto	u7551
 11952  03E0' 2800'              	goto	u7550
 11953  03E1'                    u7551:
 11954  03E1' 2800'              	goto	l4049
 11955  03E2'                    u7550:
 11956  03E2' 2800'              	goto	l4051
 11957  03E3'                    l4049:
 11958  03E3' 3001               	movlw	1
 11959  03E4' 0080'              	movwf	??_sprintf^(0+384)
 11960  03E5' 0800'              	movf	??_sprintf^(0+384),w
 11961  03E6' 0780'              	addwf	sprintf@c^(0+384),f
 11962  03E7' 300A               	movlw	10
 11963  03E8' 0600'              	xorwf	sprintf@c^(0+384),w
 11964  03E9' 1D03               	btfss	3,2
 11965  03EA' 2800'              	goto	u7561
 11966  03EB' 2800'              	goto	u7560
 11967  03EC'                    u7561:
 11968  03EC' 2800'              	goto	l4045
 11969  03ED'                    u7560:
 11970  03ED'                    l4051:
 11971                           
 11972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 11973  03ED' 3003               	movlw	3
 11974  03EE' 0500'              	andwf	sprintf@flag^(0+384),w
 11975  03EF' 0080'              	movwf	??_sprintf^(0+384)
 11976  03F0' 3000               	movlw	0
 11977  03F1' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 11978  03F2' 0080'              	movwf	(??_sprintf+1)^(0+384)
 11979  03F3' 0800'              	movf	??_sprintf^(0+384),w
 11980  03F4' 0401'              	iorwf	(??_sprintf^(0+384)+1),w
 11981  03F5' 1903               	btfsc	3,2
 11982  03F6' 2800'              	goto	u7571
 11983  03F7' 2800'              	goto	u7570
 11984  03F8'                    u7571:
 11985  03F8' 2800'              	goto	l4057
 11986  03F9'                    u7570:
 11987  03F9'                    l4053:
 11988                           
 11989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11990  03F9' 302D               	movlw	45
 11991  03FA' 0080'              	movwf	??_sprintf^(0+384)
 11992  03FB' 0800'              	movf	sprintf@sp^(0+384),w
 11993  03FC' 0084               	movwf	4
 11994  03FD' 0800'              	movf	??_sprintf^(0+384),w
 11995  03FE' 1783               	bsf	3,7	;select IRP bank2
 11996  03FF' 0080               	movwf	0
 11997  0400'                    l4055:
 11998  0400' 3001               	movlw	1
 11999  0401' 0080'              	movwf	??_sprintf^(0+384)
 12000  0402' 0800'              	movf	??_sprintf^(0+384),w
 12001  0403' 0780'              	addwf	sprintf@sp^(0+384),f
 12002  0404'                    l4057:
 12003                           
 12004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
 12005  0404' 0800'              	movf	sprintf@c^(0+384),w
 12006  0405' 0080'              	movwf	??_sprintf^(0+384)
 12007  0406' 0181'              	clrf	(??_sprintf^(0+384)+1)
 12008  0407' 0800'              	movf	??_sprintf^(0+384),w
 12009  0408' 0080'              	movwf	sprintf@prec^(0+384)
 12010  0409' 0800'              	movf	(??_sprintf+1)^(0+384),w
 12011  040A' 0080'              	movwf	(sprintf@prec+1)^(0+384)
 12012                           
 12013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 12014  040B' 2800'              	goto	l4065
 12015  040C'                    l4059:
 12016                           
 12017                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 12018  040C' 3000               	movlw	0
 12019  040D' 1683               	bsf	3,5	;RP0=1, select bank1
 12020  040E' 1303               	bcf	3,6	;RP1=0, select bank1
 12021  040F' 0080'              	movwf	(___llmod@divisor+3)^(0+128)
 12022  0410' 3000               	movlw	0
 12023  0411' 0080'              	movwf	(___llmod@divisor+2)^(0+128)
 12024  0412' 3000               	movlw	0
 12025  0413' 0080'              	movwf	(___llmod@divisor+1)^(0+128)
 12026  0414' 300A               	movlw	10
 12027  0415' 0080'              	movwf	___llmod@divisor^(0+128)
 12028  0416' 1683               	bsf	3,5	;RP0=1, select bank3
 12029  0417' 1703               	bsf	3,6	;RP1=1, select bank3
 12030  0418' 0800'              	movf	sprintf@prec^(0+384),w
 12031  0419' 0080'              	movwf	??_sprintf^(0+384)
 12032  041A' 3001               	movlw	1
 12033  041B'                    u7585:
 12034  041B' 1003               	clrc
 12035  041C' 0D80'              	rlf	??_sprintf^(0+384),f
 12036  041D' 3EFF               	addlw	-1
 12037  041E' 1D03               	skipz
 12038  041F' 2800'              	goto	u7585
 12039  0420' 1003               	clrc
 12040  0421' 0D00'              	rlf	??_sprintf^(0+384),w
 12041  0422' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12042  0423' 0084               	movwf	4
 12043  0424' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12044  0429' 1283               	bcf	3,5	;RP0=0, select bank0
 12045  042A' 1303               	bcf	3,6	;RP1=0, select bank0
 12046  042B' 009D'              	movwf	___lldiv@divisor
 12047  042C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12048  0431' 009E'              	movwf	___lldiv@divisor+1
 12049  0432' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12050  0437' 009F'              	movwf	___lldiv@divisor+2
 12051  0438' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12052  043D' 00A0'              	movwf	___lldiv@divisor+3
 12053  043E' 1683               	bsf	3,5	;RP0=1, select bank3
 12054  043F' 1703               	bsf	3,6	;RP1=1, select bank3
 12055  0440' 0800'              	movf	(sprintf@val+3)^(0+384),w
 12056  0441' 1283               	bcf	3,5	;RP0=0, select bank0
 12057  0442' 1303               	bcf	3,6	;RP1=0, select bank0
 12058  0443' 00A4'              	movwf	___lldiv@dividend+3
 12059  0444' 1683               	bsf	3,5	;RP0=1, select bank3
 12060  0445' 1703               	bsf	3,6	;RP1=1, select bank3
 12061  0446' 0800'              	movf	(sprintf@val+2)^(0+384),w
 12062  0447' 1283               	bcf	3,5	;RP0=0, select bank0
 12063  0448' 1303               	bcf	3,6	;RP1=0, select bank0
 12064  0449' 00A3'              	movwf	___lldiv@dividend+2
 12065  044A' 1683               	bsf	3,5	;RP0=1, select bank3
 12066  044B' 1703               	bsf	3,6	;RP1=1, select bank3
 12067  044C' 0800'              	movf	(sprintf@val+1)^(0+384),w
 12068  044D' 1283               	bcf	3,5	;RP0=0, select bank0
 12069  044E' 1303               	bcf	3,6	;RP1=0, select bank0
 12070  044F' 00A2'              	movwf	___lldiv@dividend+1
 12071  0450' 1683               	bsf	3,5	;RP0=1, select bank3
 12072  0451' 1703               	bsf	3,6	;RP1=1, select bank3
 12073  0452' 0800'              	movf	sprintf@val^(0+384),w
 12074  0453' 1283               	bcf	3,5	;RP0=0, select bank0
 12075  0454' 1303               	bcf	3,6	;RP1=0, select bank0
 12076  0455' 00A1'              	movwf	___lldiv@dividend
 12077  0456' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 12078  045B' 1283               	bcf	3,5	;RP0=0, select bank0
 12079  045C' 1303               	bcf	3,6	;RP1=0, select bank0
 12080  045D' 0820'              	movf	?___lldiv+3,w
 12081  045E' 1683               	bsf	3,5	;RP0=1, select bank1
 12082  045F' 1303               	bcf	3,6	;RP1=0, select bank1
 12083  0460' 0080'              	movwf	(___llmod@dividend+3)^(0+128)
 12084  0461' 1283               	bcf	3,5	;RP0=0, select bank0
 12085  0462' 1303               	bcf	3,6	;RP1=0, select bank0
 12086  0463' 081F'              	movf	?___lldiv+2,w
 12087  0464' 1683               	bsf	3,5	;RP0=1, select bank1
 12088  0465' 1303               	bcf	3,6	;RP1=0, select bank1
 12089  0466' 0080'              	movwf	(___llmod@dividend+2)^(0+128)
 12090  0467' 1283               	bcf	3,5	;RP0=0, select bank0
 12091  0468' 1303               	bcf	3,6	;RP1=0, select bank0
 12092  0469' 081E'              	movf	?___lldiv+1,w
 12093  046A' 1683               	bsf	3,5	;RP0=1, select bank1
 12094  046B' 1303               	bcf	3,6	;RP1=0, select bank1
 12095  046C' 0080'              	movwf	(___llmod@dividend+1)^(0+128)
 12096  046D' 1283               	bcf	3,5	;RP0=0, select bank0
 12097  046E' 1303               	bcf	3,6	;RP1=0, select bank0
 12098  046F' 081D'              	movf	?___lldiv,w
 12099  0470' 1683               	bsf	3,5	;RP0=1, select bank1
 12100  0471' 1303               	bcf	3,6	;RP1=0, select bank1
 12101  0472' 0080'              	movwf	___llmod@dividend^(0+128)
 12102  0473' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12103  0478' 1683               	bsf	3,5	;RP0=1, select bank1
 12104  0479' 1303               	bcf	3,6	;RP1=0, select bank1
 12105  047A' 0800'              	movf	?___llmod^(0+128),w
 12106  047B' 3E30               	addlw	48
 12107  047C' 1683               	bsf	3,5	;RP0=1, select bank3
 12108  047D' 1703               	bsf	3,6	;RP1=1, select bank3
 12109  047E' 0080'              	movwf	(??_sprintf+1)^(0+384)
 12110  047F' 0800'              	movf	(??_sprintf+1)^(0+384),w
 12111  0480' 0080'              	movwf	sprintf@c^(0+384)
 12112  0481'                    l4061:
 12113                           
 12114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 12115  0481' 0800'              	movf	sprintf@c^(0+384),w
 12116  0482' 0080'              	movwf	??_sprintf^(0+384)
 12117  0483' 0800'              	movf	sprintf@sp^(0+384),w
 12118  0484' 0084               	movwf	4
 12119  0485' 0800'              	movf	??_sprintf^(0+384),w
 12120  0486' 1783               	bsf	3,7	;select IRP bank2
 12121  0487' 0080               	movwf	0
 12122  0488'                    l4063:
 12123  0488' 3001               	movlw	1
 12124  0489' 0080'              	movwf	??_sprintf^(0+384)
 12125  048A' 0800'              	movf	??_sprintf^(0+384),w
 12126  048B' 0780'              	addwf	sprintf@sp^(0+384),f
 12127  048C'                    l4065:
 12128                           
 12129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 12130  048C' 30FF               	movlw	255
 12131  048D' 0780'              	addwf	sprintf@prec^(0+384),f
 12132  048E' 1803               	skipnc
 12133  048F' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 12134  0490' 30FF               	movlw	255
 12135  0491' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 12136  0492' 0A00'              	incf	sprintf@prec^(0+384),w
 12137  0493' 1D03               	skipz
 12138  0494' 2800'              	goto	u7591
 12139  0495' 0A00'              	incf	(sprintf@prec+1)^(0+384),w
 12140  0496' 1D03               	btfss	3,2
 12141  0497' 2800'              	goto	u7591
 12142  0498' 2800'              	goto	u7590
 12143  0499'                    u7591:
 12144  0499' 2800'              	goto	l4059
 12145  049A'                    u7590:
 12146  049A'                    l4067:
 12147                           
 12148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12149  049A' 3001               	movlw	1
 12150  049B' 0780'              	addwf	sprintf@f^(0+384),f
 12151  049C' 30FF               	movlw	-1
 12152  049D' 0700'              	addwf	sprintf@f^(0+384),w
 12153  049E' 0084               	movwf	4
 12154  049F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12155  04A4' 0080'              	movwf	??_sprintf^(0+384)
 12156  04A5' 0800'              	movf	??_sprintf^(0+384),w
 12157  04A6' 0080'              	movwf	sprintf@c^(0+384)
 12158  04A7' 0800'              	movf	sprintf@c^(0+384),w
 12159  04A8' 1D03               	btfss	3,2
 12160  04A9' 2800'              	goto	u7601
 12161  04AA' 2800'              	goto	u7600
 12162  04AB'                    u7601:
 12163  04AB' 120A' 118A' 2800'  	goto	l3881
 12164  04AE'                    u7600:
 12165  04AE'                    l4069:
 12166                           
 12167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12168  04AE' 0800'              	movf	sprintf@sp^(0+384),w
 12169  04AF' 0084               	movwf	4
 12170  04B0' 1783               	bsf	3,7	;select IRP bank2
 12171  04B1' 0180               	clrf	0
 12172  04B2'                    l289:
 12173  04B2' 0008               	return
 12174  04B3'                    __end_of_sprintf:

Data Sizes:
    Strings     10
    Constant    144
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      51
    BANK1            80     75      77
    BANK3            96     37      51
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK3[2]), 

    LCDPutStr@str	PTR const unsigned char  size(1) Largest target is 10
		 -> buffer(BANK3[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___xxtofl
    i1___flmul->i1___xxtofl

Critical Paths under _main in BANK0

    _sprintf->___fltol
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___llmod->___lldiv
    _config->_LCD_Initialize
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _ISR in BANK0

    _ISR->i1___flmul

Critical Paths under _main in BANK1

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   37533
                                             74 BANK1      1     1      0
                            _LCDGoto
                          _LCDPutStr
                             _config
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    37      7   35688
                                              0 BANK3     37    30      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8823
                                             26 BANK1     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             36 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7205
                                             26 BANK1     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                             35 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5622
                                              0 BANK1     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                             29 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                             29 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                             29 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     448
                                             29 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                             43 BANK0      2     2      0
                                              0 BANK1      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                             29 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             45 BANK0      2     2      0
                                             45 BANK1      9     5      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             66 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             46 BANK1     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     504
                     _LCD_Initialize
                        _TIMER1_Init
 ---------------------------------------------------------------------------------
 (2) _TIMER1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       2     2      0     504
                                             35 BANK0      2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            3     3      0     627
                                             35 BANK0      3     3      0
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     504
                                             32 BANK0      3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1     714
                                             35 BANK0      6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (3) _LCDPutCmd                                            3     3      0     504
                                             32 BANK0      3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (4) _LCDWriteNibble                                       3     2      1     437
                                             29 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0    2215
                                             26 BANK0      3     3      0
                          i1___flmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (6) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) i1___flmul                                           26    18      8    1867
                                              0 BANK0     26    18      8
                        i1__Umul8_16
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) i1__Umul8_16                                          9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _config
     _LCD_Initialize
       _LCDPutCmd
     _TIMER1_Init
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _scale

 _ISR (ROOT)
   i1___flmul
     i1__Umul8_16
     i1___xxtofl (ARG)
   i1___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C1       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4B      4D       7       96.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60     25      33       9       53.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C1      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Nov 06 02:04:18 2022

          _LCD_Initialize 0000                         pc 0002                        l51 000A  
             ?_LCDPutChar 0000                        l54 001E                        l91 002C  
                      l59 0005                        l93 003B                        l86 0033  
                      l95 004A                        l97 0053                        l89 001D  
            ___awdiv@sign 002A               i1___flmul@a 0004               i1___flmul@b 0000  
                      fsr 0004       ___wmul@multiplicand 001F       __Umul8_16@word_mpld 0023  
              i1___xxtofl 0000                       l100 002F                       l103 003A  
                     l115 0031                       l109 0021                       l240 001F  
                     l226 03B2                       l219 0248                       l510 00BC  
                     l503 007A                       l511 002E                       l329 0067  
                     l521 00AF                       l273 01E5                       l506 0091  
                     l514 007F                       l266 01A1                       l620 0063  
                     l293 000E                       l446 0068                       l295 0026  
                     l463 00BD                       l480 003A                       l624 010A  
                     l464 0022                       l481 004F                       l641 01D5  
                     l633 0287                       l609 003B                       l289 04B2  
                     l626 00E1                       l474 00B0                       l722 0326  
                     l651 021B                       l467 0080                       l459 005A  
                     l484 001E                       l492 000C                       l716 03BA  
                     l645 01F9                       l549 0065                       l662 027B  
                     l654 0259                       l479 001E                       l487 008A  
                     l663 0287                       l735 0016                       l488 00A3  
                     l496 0091                       l760 0024                       l728 03AE  
                     l737 0028                       l666 0023                       l762 00BB  
                     l773 0085                       l774 0091                       l766 0069  
                     l599 0045                       _GIE 005F                       _ISR 0000  
                     fsr0 0004                       indf 0000              ___awmod@sign 0023  
            ___flmul@aexp 000E               _sprintf$821 000C              ___flmul@bexp 0013  
            ___flmul@sign 000D              ___flmul@temp 0018              ___flmul@prod 0014  
         __end_of_LCDGoto 0032                      ?_ISR 0000              ___fltol@exp1 002E  
                    l3001 004E                      l3011 003A                      l2301 0026  
                    l3021 00A2                      l3013 003E                      l3005 0000  
                    l3101 001C                      l2303 0031                      l3015 0062  
                    l3007 0016                      l3111 0047                      l3103 002C  
                    l2311 000C                      l3017 0066                      l3009 0032  
                    l3025 0000                      l3121 007B                      l3113 004E  
                    l2401 002D                      l2321 001D                      l2313 000E  
                    l2305 0000                      l4001 01C9                      l2251 000C  
                    l3019 00A0                      l3027 000A                      l3131 00AE  
                    l3123 007F                      l3115 0052                      l3107 0035  
                    l2403 0033                      l2331 0035                      l2323 0023  
                    l2315 0012                      l2307 0003                      l4011 01FA  
                    l4003 01D8                      l2261 001E                      l2253 000D  
                    l3029 000C                      l2501 0095                      l3133 00B2  
                    l3125 0089                      l3117 0060                      l3109 003A  
                    l2405 0034                      l2421 0016                      l2413 0000  
                    l2333 0046                      l2325 0026                      l2341 005A  
                    l2317 0017                      l2309 0007                      l4021 0311  
                    l4013 01FE                      l4005 01DF                      l2271 0048  
                    l2263 002A                      l2255 000E                      l2247 0003  
                    l2511 00A9                      l2503 0099                      l3135 00B3  
                    l3127 0093                      l3119 0070                      l2407 003B  
                    l2423 001A                      l2415 0008                      l2431 0037  
                    l2343 005F                      l2335 004C                      l2327 002D  
                    l2319 001B                      l2351 0003                      l4031 038B  
                    l4023 031D                      l4015 021C                      l4007 01EE  
                    l2273 004B                      l2265 002D                      l2257 000F  
                    l2249 000B                      l3161 0014                      l3153 0000  
                    l2601 0220                      l2521 00EE                      l2505 009D  
                    l2513 00AD                      l2441 0011                      l3129 00A9  
                    l2281 0003                      l2409 0041                      l2425 0024  
                    l2417 000B                      l2345 0064                      l2337 004D  
                    l2329 0031                      l2361 0017                      l2353 0007  
                    l4033 0391                      l4017 0277                      l4025 0378  
                    l4009 01F3                      l2275 0050                      l2267 0039  
                    l2259 001B                      l3171 001D                      l3163 0017  
                    l3155 0007                      l2611 025E                      l2603 0225  
                    l2523 00F0                      l2531 0102                      l2515 00AE  
                    l2507 00A1                      l2451 0025                      l2443 0012  
                    l2435 0000                      l3091 0004                      l2291 0024  
                    l2283 0005                      l2427 002A                      l2419 0012  
                    l2339 0054                      l2371 002F                      l2363 001D  
                    l2355 000C                      l4051 03ED                      l4027 0380  
                    l4019 02D2                      l4035 0398                      l4115 0038  
                    l2277 0051                      l2269 003C                      l3181 001B  
                    l3173 0003                      l3165 0018                      l3157 000C  
                    l2621 0275                      l2613 0263                      l2605 0233  
                    l2541 0133                      l2533 010E                      l2525 00F4  
                    l2517 00C5                      l2509 00A5                      l2461 003B  
                    l2445 0017                      l2453 0027                      l2437 0007  
                    l2285 000C                      l2429 0031                      l2381 0051  
                    l2373 0039                      l2365 0020                      l2357 000E  
                    l2349 0000                      l4061 0481                      l4053 03F9  
                    l4045 03AC                      l4037 03A6                      l4029 0387  
                    l2279 0052                      l2295 0003                      l3183 0020  
                    l3175 0009                      l3167 0019                      l3159 0011  
                    l2623 0277                      l2615 026B                      l2607 0237  
                    l2551 014A                      l2543 0137                      l2535 0113  
                    l2527 00F5                      l2519 00E5                      l2471 0050  
                    l2463 0041                      l2455 002F                      l2447 001C  
                    l2439 000D                      l3095 0003                      l2287 0010  
                    l2391 000A                      l2383 0056                      l2375 003F  
                    l2367 0027                      l2359 0012                      l4063 0488  
                    l4055 0400                      l4039 03AA                      l2297 000E  
                    l3185 0026                      l3177 0010                      l3169 001C  
                    l2625 0282                      l2617 0270                      l2609 0255  
                    l2561 01AD                      l2553 014B                      l2545 013B  
                    l2529 00FE                      l2481 006D                      l2473 0058  
                    l2465 0045                      l2457 0034                      l2449 0024  
                    l3089 0000                      l3097 0008                      l2289 001F  
                    l2393 000D                      l2377 0046                      l2369 002B  
                    l4065 048C                      l4057 0404                      l4049 03E3  
                    l4081 000E                      l2299 0017                      l3179 0015  
                    l2627 0286                      l2619 0271                      l2571 01E2  
                    l2563 01B3                      l2555 0154                      l2547 0144  
                    l2539 011C                      l2491 0081                      l2483 0071  
                    l2475 0059                      l2467 0046                      l2459 003A  
                    l3099 000C                      l2395 0014                      l2387 0000  
                    l2379 004C                      l4059 040C                      l4067 049A  
                    l4083 0030                      l2581 01FD                      l2565 01B8  
                    l2549 0146                      l2557 0159                      l2493 0085  
                    l2485 0075                      l2469 004B                      l2477 005B  
                    l3701 024D                      l2397 0018                      l2389 0004  
                    l4069 04AE                      l3391 0016                      l2583 0200  
                    l2575 01EB                      l2559 016F                      l2567 01C7  
                    l2591 020D                      l2495 0089                      l2487 0079  
                    l2479 0069                      l2903 0000                      l3711 02E9  
                    l3703 0284                      l3631 0011                      l2399 001C  
                    l4079 0000                      l3385 0003                      l2593 020E  
                    l2585 0202                      l2577 01F4                      l2569 01DD  
                    l2497 008D                      l2489 007D                      l2921 003E  
                    l2905 000D                      l3713 02F2                      l3721 0306  
                    l3705 02AA                      l3641 0026                      l3633 0012  
                    l3625 0000                      l3801 01B1                      l3387 0005  
                    l2771 0000                      l2595 0212                      l2587 0207  
                    l2579 01F8                      l2499 0091                      l2931 0071  
                    l2923 0047                      l2915 0023                      l2851 0000  
                    l3723 030A                      l3715 02F6                      l3707 02D2  
                    l3651 003E                      l3643 002E                      l3635 0017  
                    l3627 0007                      l3389 0010                      l2781 0027  
                    l2773 000A                      l2597 0218                      l2589 0209  
                    l2941 008C                      l2933 007A                      l2925 0050  
                    l2917 002B                      l2909 0016                      l2853 0013  
                    l3741 035B                      l3733 032B                      l3725 030B  
                    l3717 02F7                      l3709 02DB                      l3661 005A  
                    l3653 0043                      l3645 0033                      l3637 001C  
                    l3629 000D                      l3813 02E7                      l3805 01DE  
                    l3901 0063                      l2791 0027                      l2783 002D  
                    l2775 0015                      l3831 0033                      l3823 0000  
                    l2951 00B5                      l2935 0084                      l2943 009E  
                    l2927 0062                      l2919 003C                      l2871 004F  
                    l2863 002F                      l3751 0392                      l3735 0330  
                    l3743 0361                      l3727 030F                      l3719 0300  
                    l3671 0087                      l3663 005F                      l3655 0048  
                    l3647 0039                      l3639 0024                      l3815 02EE  
                    l3807 01E5                      l3911 00CB                      l3903 0067  
                    l2785 0003                      l2777 001B                      l2769 0000  
                    l3833 0036                      l3825 000F                      l2961 0015  
                    l2929 0070                      l2881 0079                      l2873 0058  
                    l2865 0035                      l2857 001C                      l3761 03B2  
                    l3753 0394                      l3745 036E                      l3737 033E  
                    l3729 0323                      l3681 0129                      l3673 0094  
                    l3665 0064                      l3657 0050                      l3649 003D  
                    l3921 0149                      l3913 00F2                      l3905 008E  
                    l2787 000E                      l2779 0021                      l3835 003E  
                    l2971 0012                      l2963 001C                      l2955 0000  
                    l2883 0083                      l2891 009D                      l2875 0066  
                    l2867 0044                      l3755 03A2                      l3747 0379  
                    l3739 0342                      l3691 019F                      l3683 0145  
                    l3675 00BB                      l3659 0052                      l3819 0386  
                    l3931 01E4                      l3923 014D                      l3915 00FD  
                    l3907 00C3                      l2789 0018                      l3853 006B  
                    l3845 004E                      l3837 0042                      l3829 001A  
                    l2981 0041                      l2973 0015                      l3861 000A  
                    l2965 0022                      l2957 0004                      l2949 00A5  
                    l2877 0070                      l2869 0046                      l3757 03A6  
                    l3749 0388                      l3693 01BC                      l3685 014E  
                    l3677 00D7                      l3669 006D                      l3773 013C  
                    l3765 0003                      l3941 0263                      l3933 01ED  
                    l3925 0153                      l3917 0103                      l3909 00C7  
                    l3855 007F                      l3839 0046                      l3847 0064  
                    l2983 004F                      l2975 0022                      l3871 004A  
                    l3863 000F                      l2959 0008                      l2879 0071  
                    l3759 03A7                      l3695 01DF                      l3687 0168  
                    l3679 010D                      l3775 0142                      l3767 0009  
                    l3783 0003                      l3951 02FA                      l3943 0270  
                    l3935 0216                      l3927 0172                      l3919 0126  
                    l2993 0000                      l3857 0084                      l2985 0050  
                    l2977 0026                      l2969 0000                      l3873 0053  
                    l3865 0022                      l2897 00A4                      l2889 008B  
                    l3697 01FC                      l3689 0185                      l3785 0007  
                    l3961 0374                      l3953 0303                      l3945 029B  
                    l3929 01BD                      l3937 021E                      l3881 000A  
                    l2995 0016                      l2987 0059                      l2979 002F  
                    l3867 0028                      l3875 005B                      l3859 0000  
                    l2899 00B4                      l3699 0233                      l3779 0205  
                    l3795 0112                      l3787 0009                      l3955 030B  
                    l3947 02C2                      l3963 0000                      l3939 021E  
                    l3883 0010                      l2997 0032                      l2989 005F  
                    l3869 003C                      l3797 0119                      l3789 0010  
                    l3981 00E3                      l3965 0035                      l3957 0329  
                    l3949 02D1                      l3893 0026                      l3885 0017  
                    l2999 004C                      l3991 0195                      l3983 00EF  
                    l3975 00A2                      l3967 009E                      l3895 0043  
                    l3887 001C                      l3879 0003                      l3993 01A9  
                    l3985 00F6                      l3969 00A0                      l3897 0051  
                    l3889 0021                      l3995 01B2                      l3987 00FB  
                    l3979 00D9                      l3899 0055                      l3997 01B6  
                    l3989 0156                      l3999 01BC                      STR_1 0096  
                    u4000 01F8                      u4001 01F7                      u4010 01FD  
                    u4011 01FC                      u4100 0255                      u4020 0207  
                    u4101 0254                      u4021 0206                      u3310 0039  
                    u4110 025E                      u4030 020D                      u3311 0038  
                    u4111 025D                      u4031 020C                      u4120 0263  
                    u4040 0212                      u3400 0023                      u3305 0030  
                    u4121 0262                      u4041 0211                      u3401 0022  
                    u3330 0048                      u4130 0270                      u4050 0218  
                    u5010 009D                      u3331 0047                      u4131 026F  
                    u4051 0217                      u5011 009C                      u4140 0275  
                    u4060 021F                      u5020 00A4                      u3340 0010  
                    u3420 0035                      u3500 001D                      u3325 003F  
                    u4141 0274                      u4061 021E                      u5021 00A3  
                    u5005 008D                      u3341 000F                      u3421 0034  
                    u3501 001C                      u3270 001B                      u4150 0286  
                    u4070 0225                      u5110 0026                      u3271 001A  
                    u4151 0285                      u4071 0224                      u5111 0025  
                    u3415 0027                      u5200 0032                      u4080 0237  
                    u5040 00B5                      u3360 0024                      u3440 0046  
                    u3520 002F                      u3265 0012                      u5201 0031  
                    u4081 0236                      u5105 0017                      u5041 00B4  
                    u3361 0023                      u3441 0045                      u3521 002E  
                    u3290 002A                      u5210 003E                      u4090 0246  
                    u5130 0041                      u5050 0008                      u3610 002D  
                    u3530 0039                      u3291 0029                      u5211 003D  
                    u5131 0040                      u5051 0007                      u5035 00A7  
                    u3355 0017                      u3611 002C                      u3435 0036  
                    u3531 0038                      u3515 0021                      u3700 0011  
                    u3460 005A                      u3380 0007                      u3285 0021  
                    u5221 004D                      u3701 0010                      u5125 0028  
                    u3605 001D                      u3461 0059                      u3445 0042  
                    u3381 0006                      u5230 0066                      u5222 004E  
                    u3710 0017                      u5150 005F                      u3630 0041  
                    u3470 005F                      u3390 0012                      u3550 004C  
                    u3375 001C                      u5231 0065                      u5223 0053  
                    u4095 0241                      u3711 0016                      u5151 005E  
                    u5135 003D                      u3631 0040                      u3615 0029  
                    u3471 005E                      u3455 004E                      u3391 0011  
                    u3551 004B                      u3535 0035                      u5160 0016  
                    u5224 0054                      u3800 00D0                      u3720 001C  
                    u5080 0022                      u3640 0008                      u3560 0051  
                    u3480 0007                      u5161 0015                      u5241 0075  
                    u5225 0059                      u3801 00CE                      u3721 001B  
                    u5145 0051                      u5081 0021                      u5065 000F  
                    u3625 0035                      u3641 0007                      u3561 0050  
                    u3545 0040                      u3481 0006                      u5170 0032  
                    u5250 00A0                      u5242 0076                      u5226 005A  
                    u3810 00D1                      u3730 003A                      u5090 0012  
                    u3570 000A                      u3490 0012                      u7010 0119  
                    u5171 0031                      u5251 009F                      u5243 007B  
                    u3731 0039                      u5091 0011                      u5075 0016  
                    u3571 0009                      u3491 0011                      u7011 0118  
                    _PEIE 005E                      u5180 004C                      u5244 007C  
                    u5260 000A                      u3900 013B                      u3820 00E5  
                    u3740 0045                      u3660 001A                      u5181 004B  
                    u5245 0081                      u5261 0009                      u3901 013A  
                    u3821 00E4                      u3741 0044                      u3661 0019  
                    u7005 00D1                      _INTE 005C                      u5246 0082  
                    u5190 0016                      u3910 014A                      u3830 00F4  
                    u3750 004B                      u5510 007F                      u5430 0008  
                    u3590 001C                      u3670 0024                      _INTF 0059  
                    u4535 001D                      u5255 009C                      u5191 0015  
                    u3911 0149                      u3831 00F3                      u3751 004A  
                    u5511 007E                      u5431 0007                      u3591 001B  
                    u3671 0023                      u3655 000C                      u5600 0009  
                    u3760 0050                      u5520 0085                      u5440 000C  
                    u4800 002D                      u5601 0008                      u5185 0048  
                    u3761 004F                      u5521 0084                      u5505 0074  
                    u5441 000B                      u4801 002C                      u3585 000E  
                    u7105 0309                      u7025 0134                      u5610 000F  
                    u3930 016F                      u3850 010A                      u3770 0069  
                    u7210 007F                      u7130 000F                      u5530 0089  
                    u5450 002C                      u3690 0037                      u7050 01E5  
                    u5611 000E                      u3931 016E                      u3851 0109  
                    u3771 0068                      u7211 007E                      u7131 000E  
                    u5531 0088                      u5451 002B                      u3691 0036  
                    u3675 0020                      u7115 034D                      u7051 01E4  
                    u7035 0178                      u5620 0015                      u3860 010E  
                    u3780 006D                      u7220 0084                      u7140 002A  
                    u5540 009E                      u4820 0066                      u7300 0051  
                    u5621 0014                      u3941 0186                      u3933 016B  
                    u3925 014D                      u3861 010D                      u3845 00F7  
                    u3781 006C                      u7221 0083                      u7205 006F  
                    u4821 0065                      u3685 002B                      u7125 0389  
                    u7045 01B4                      u7301 004E                      u3950 019A  
                    u3942 0187                      u3870 0113                      u3790 00C5  
                    u7150 0046                      u7230 000A                      u5550 00AE  
                    u5470 004D                      u4910 00B4                      u6510 0011  
                    u7310 008E                      u3951 019B                      u3943 018C  
                    u3871 0112                      u3791 00C4                      u7151 0045  
                    u7231 0009                      u5551 00AD                      u5471 004C  
                    u4911 00B3                      u4815 0051                      u6511 0010  
                    u7311 008D                      u3960 01B8                      u3952 01A0  
                    u3944 018D                      u7160 004D                      u5560 00B2  
                    u4920 000D                      u4840 007F                      u6520 0017  
                    u7400 02FA                      u7320 00F2                      u3961 01B7  
                    u3953 01A1                      u3945 0192                      u3881 0125  
                    u7161 004C                      u7145 0025                      u5561 00B1  
                    u5545 0099                      u5465 003F                      u4921 000C  
                    u4905 00A6                      u4841 007E                      u4825 0062  
                    u6601 00E5                      u6521 0016                      u7065 020F  
                    u7401 02F9                      u7321 00F1                      u3970 01DD  
                    u3946 0193                      u3890 0137                      u3882 012C  
                    u7250 0028                      u5490 006F                      u4930 0021  
                    u4850 0083                      u6602 00EC                      u6530 001C  
                    u7090 02EE                      u7330 014D                      u3971 01DC  
                    u3891 0136                      u3883 0133                      u3795 00C1  
                    u7251 0027                      u5491 006E                      u4931 0020  
                    u4851 0082                      u4835 0072                      u6611 011B  
                    u6603 00F3                      u6531 001B                      u7091 02ED  
                    u7075 0253                      u7331 014C                      u3980 01E2  
                    u7180 0063                      u7260 003C                      u4860 008A  
                    u6700 0290                      u6612 0122                      u6540 003D  
                    u7420 00D8                      u7340 01E4                      i1l69 007C  
                    u3981 01E1                      u7181 0062                      u7261 003B  
                    u7245 0013                      u5485 0061                      u4861 0089  
                    u6621 0137                      u6613 0129                      u6541 003C  
                    u7085 02A6                      u7421 00D7                      u7341 01E3  
                    u7190 006A                      u4950 0062                      u4790 0013  
                    u6622 013E                      u6550 0043                      u7430 00E3  
                    u7350 0216                      u7191 0069                      u7175 004F  
                    u4951 0061                      u4791 0012                      u6711 029C  
                    u6623 0145                      u6551 0042                      u7431 00E2  
                    u7415 00A5                      u7351 0215                      u7280 005B  
                    u4880 009C                      u6800 0323                      u6720 02B8  
                    u6712 02A3                      u6560 0048                      u7600 04AE  
                    u7520 037F                      u7440 00EF                      u7360 0270  
                    u7281 005A                      u7265 0038                      u4945 0049  
                    u4881 009B                      u6801 0322                      u6713 02AA  
                    u6705 028B                      u6641 0177                      u6561 0047  
                    u7601 04AB                      u7521 037E                      u7505 027A  
                    u7441 00EE                      u7425 00D4                      u7361 026F  
                    u4970 0080                      u4890 00A3                      u6810 032A  
                    u6642 017E                      u6570 005F                      u7530 0397  
                    u7370 029B                      u7290 0010                      u3995 01ED  
                    u7275 004B                      u4971 007F                      u4955 005E  
                    u4891 00A2                      u4875 008C                      u6811 0329  
                    u6731 02C4                      u6651 01AE                      u6643 0185  
                    u6635 0147                      u6571 005E                      u7531 0396  
                    u7515 0320                      u7371 0298                      u7291 000F  
                    u4980 0084                      u6820 0330                      u6732 02CB  
                    u6652 01B5                      u6580 0064                      u7460 01A8  
                    u7380 02C2                      u4981 0083                      u4965 0073  
                    u6821 032F                      u6733 02D2                      u6725 02B3  
                    u6653 01BC                      u6581 0063                      u7461 01A7  
                    u7381 02C1                      u7365 026C                      u5950 0021  
                    u4990 008B                      u6830 0342                      u7550 03E2  
                    u7470 01C9                      u7390 02D1                      u5951 0020  
                    u4991 008A                      u6831 0341                      u6671 01EE  
                    u6591 00C9                      u7551 03E1                      u7471 01C8  
                    u7455 00FE                      u7391 02D0                      u6840 0351  
                    u6760 02F6                      u6672 01F5                      u6592 00D0  
                    u6920 0142                      u7560 03ED                      u7480 01D8  
                    u7617 0010                      u6761 02F5                      u6745 02D4  
                    u6681 0225                      u6673 01FC                      u6665 01BE  
                    u6593 00D7                      u6921 0141                      u6905 009A  
                    u7561 03EC                      u7545 03AF                      u7481 01D7  
                    u6850 036E                      u6682 022C                      u7570 03F9  
                    u7490 01F3                      u7627 0009                      u6851 036D  
                    u6755 02EB                      u6691 025C                      u6683 0233  
                    u6915 00FB                      u7571 03F8                      u7555 03DE  
                    u7491 01F2                      u7475 01C5                      u7395 02CD  
                    u6860 0388                      u6780 030A                      u6692 0263  
                    u7637 002C                      u6861 0387                      u6845 034C  
                    u6781 0309                      u6693 026A                      u7485 01D4  
                    u6870 03A6                      u6790 030F                      u7590 049A  
                    u7647 0009                      u6871 03A5                      u6855 036A  
                    u6791 030E                      u6775 02F9                      u6935 016B  
                    u7591 0499                      u6880 0009                      u6960 0007  
                    u7657 002C                      u6865 0384                      u6945 01C4  
                    u6881 0008                      u6961 0006                      u7585 041B  
                    u6970 0010                      u6955 0210                      u6971 000F  
                    u6895 0032                      u6985 003A                      u6995 007E  
                    _TMR1 000E                      _main 0000             i1___flmul@grs 000E  
                    btemp 007E                      start 0000*               _DeltaPulse 0002  
  __end_of_LCD_Initialize 0034                     ??_ISR 001A               LCDPutCmd@ch 0022  
           ___fltol@sign1 002D           __end_of___fladd 0288                     ?_main 0000  
         __end_of___awdiv 0069           __end_of___flneg 000D           __end_of___awmod 005B  
         __end_of___flmul 03BB           __end_of___flsub 0024           __end_of___fltol 0092  
                   _ANSEL 0188           __end_of___lldiv 0068           ___awdiv@divisor 0024  
         __end_of___llmod 0066           __end_of___lwdiv 0046           __end_of___lwmod 003C  
                   i1l722 02CC                     i1l716 0360                     i1l735 0014  
                   i1l728 0354                     i1l760 0022                     i1l737 0026  
                   i1l762 00B9                     i1l773 0083                     i1l774 008F  
                   i1l766 0067           ___awdiv@counter 0029                     _PORTD 0008  
                   _TRISC 0087                     _TRISD 0088                     _Pulse 0000  
         __end_of_dpowers 0096            i1___flmul@aexp 0012            i1___flmul@bexp 0013  
                   _scale 0000            i1___flmul@sign 000D            i1___flmul@temp 0018  
          i1___flmul@prod 0014                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 04B3           ?_LCD_Initialize 0000  
         __initialization 0000              __end_of_main 003A                    ??_main 004A  
             ?i1___xxtofl 0000              ?_TIMER1_Init 0000                 ??_LCDGoto 0024  
       __end_of_LCDPutCmd 003B              LCDPutChar@ch 0022         __end_of_LCDPutStr 0022  
        ___llmod@dividend 0004                    ?_scale 001A          ___awdiv@dividend 0026  
                  _ANSELH 0189                    i1l3141 0003                    i1l3143 000A  
                  i1l3145 000E                    i1l3401 0012                    i1l3147 001D  
                  i1l3139 0001                    i1l3411 002E                    i1l3403 0017  
                  i1l3149 0022                    i1l3501 02D1                    i1l3421 0043  
                  i1l3413 0033                    i1l3405 001C                    i1l3503 02D6  
                  i1l3511 0307                    i1l3431 005F                    i1l3423 0048  
                  i1l3415 0039                    i1l3407 0024                    i1l3521 033A  
                  i1l3513 0314                    i1l3505 02E4                    i1l3441 008A  
                  i1l3433 0064                    i1l3425 0050                    i1l3417 003D  
                  i1l3409 0026                    i1l3601 0075                    i1l3523 0348  
                  i1l3515 031F                    i1l3507 02E8                    i1l3451 0127  
                  i1l3443 00A7                    i1l3427 0052                    i1l3419 003E  
                  i1l3603 007B                    i1l3525 034C                    i1l3517 032E  
                  i1l3509 0301                    i1l3461 018A                    i1l3453 0130  
                  i1l3445 00C3                    i1l3437 006D                    i1l3429 005A  
                  i1l3541 002A                    i1l3533 0001                    i1l3527 034D  
                  i1l3519 0338                    i1l3471 022A                    i1l3463 01A3  
                  i1l3455 0140                    i1l3447 00EF                    i1l3439 007D  
                  i1l3551 004C                    i1l3535 0006                    i1l3529 0358  
                  i1l3481 0298                    i1l3473 0250                    i1l3465 01C0  
                  i1l3457 015D                    i1l3449 010B                    i1l3393 0000  
                  i1l3561 007D                    i1l3553 0050                    i1l3545 0033  
                  i1l3537 000A                    i1l3491 02B0                    i1l3483 029C  
                  i1l3475 0278                    i1l3467 01ED                    i1l3459 016D  
                  i1l3395 0007                    i1l3571 00B0                    i1l3563 0087  
                  i1l3555 005E                    i1l3547 0038                    i1l3539 001A  
                  i1l3493 02B1                    i1l3485 029D                    i1l3477 0281  
                  i1l3469 01FD                    i1l3397 000D                    i1l3573 00B1  
                  i1l3565 0091                    i1l3557 006E                    i1l3549 0045  
                  i1l3495 02B5                    i1l3487 02A6                    i1l3479 028F  
                  i1l3399 0011                    i1l3567 00A7                    i1l3559 0079  
                  i1l3591 0011                    i1l3583 0000                    i1l3497 02C9  
                  i1l3489 02AC                    i1l3569 00AC                    i1l3593 0016  
                  i1l3585 0004                    i1l3595 001C                    i1l3587 0008  
                  i1l3597 002E                    i1l3589 0010                    i1l3599 003A  
                  _INTEDG 040E                    u600_20 0043                    u600_21 0042  
                  u601_20 0048                    u601_21 0047                    u602_20 005F  
                  u610_21 017C                    u602_21 005E                    u610_22 0183  
                  u610_23 018A                    u603_20 0064                    u603_21 0063  
                  u611_25 018C                    u612_21 01B2                    u604_21 00B5  
                  u612_22 01B9                    u604_22 00BC                    u612_23 01C0  
                  u604_23 00C3                    u620_25 0291                    u621_20 029C  
                  u621_21 029B                    u613_21 01DF                    u605_21 00D1  
                  u613_22 01E6                    u605_22 00D8                    u613_23 01ED  
                  u605_23 00DF                    u630_20 0314                    u630_21 0313  
                  u614_21 020C                    u606_21 00FD                    u614_22 0213  
                  u606_22 0104                    u614_23 021A                    u606_23 010B  
                  u630_25 0310                    u622_25 029F                    u631_20 032E  
                  u623_20 02B0                    u615_20 0236                    u631_21 032D  
                  u623_21 02AF                    u607_21 0119                    u607_22 0120  
                  u607_23 0127                    u631_25 032A                    u615_25 0231  
                  u632_20 034C                    u624_20 02B5                    u632_21 034B  
                  u624_21 02B4                    u616_21 0242                    u616_22 0249  
                  u616_23 0250                    u608_25 0129                    u640_25 0072  
                  u625_20 02C9                    u617_20 025E                    u641_20 007D  
                  u633_20 0006                    u625_21 02C8                    u609_21 014F  
                  u641_21 007C                    u633_21 0005                    u609_22 0156  
                  u609_23 015D                    u617_25 0259                    u626_20 02D0  
                  u642_20 0083                    u634_20 000A                    u650_20 001C  
                  u626_21 02CF                    u618_21 026A                    u642_21 0082  
                  u634_21 0009                    u650_21 001B                    u618_22 0271  
                  u618_23 0278                    u627_20 02D6                    u643_20 0087  
                  u635_20 002A                    u627_21 02D5                    u643_21 0086  
                  u635_21 0029                    u619_25 027A                    u628_20 02E8  
                  u644_20 009C                    u628_21 02E7                    u644_25 0097  
                  u636_25 003D                    u557_20 000E                    u629_20 02F7  
                  u645_20 00AC                    u637_20 004B                    u557_21 000D  
                  u645_21 00AB                    u637_21 004A                    u629_25 02F2  
                  u646_20 00B0                    u646_21 00AF                    u558_25 0015  
                  u638_25 005F                    u559_20 0022                    u639_20 006D  
                  u647_20 0004                    u559_21 0021                    u639_21 006C  
                  u647_21 0003                    u648_20 0008                    u648_21 0007  
                  u649_20 0016                    u649_21 0015                    u596_20 0011  
                  u596_21 0010                    u597_20 0017                    u597_21 0016  
                  _TMR1IE 0460                    _TMR1IF 0060                    _TMR1CS 0081  
                  u598_20 001C                    u598_21 001B                    u599_20 003D  
                  u599_21 003C                    _TMR1ON 0080              LCDPutStr@str 0024  
        __end_of___xxtofl 00BC            _LCDWriteNibble 0000          __end_of__powers_ 003A  
                  ___flge 0000                    ___fleq 0000                 ??___fladd 0036  
                  ___wmul 0000                 ??___awdiv 0028                 ??___flneg 0021  
               ??___awmod 0021                 ??___flmul 0008                 ??___flsub 002D  
               ??___fltol 0031                 ??___lldiv 0025                 ??___llmod 002B  
               ??___lwdiv 0027                 ??___lwmod 0021                    _config 0000  
                  _buffer 0004                    _fround 0000          ___awdiv@quotient 002B  
         ___awmod@divisor 001D           ___awmod@counter 0022         __end_ofi1___flmul 0361  
                  saved_w 007E                 ??_sprintf 0007                ___flge@ff1 001D  
              ___flge@ff2 0021              ___xxtofl@arg 0027              ___xxtofl@exp 0026  
            ___xxtofl@val 001D                ___fleq@ff1 001D                ___fleq@ff2 0021  
  __end_of_LCDWriteNibble 0054   __end_of__initialization 001A                ___flneg@f1 001D  
              ___fltol@f1 002D              ?i1__Umul8_16 0000                 LCDGoto@ln 0023  
          __pcstackCOMMON 0000             __end_of_scale 03B3              ??_LCDPutChar 0020  
              __div_to_l_ 0000           __div_to_l_@exp1 002B           __div_to_l_@cntr 002A  
                 ??_scale 001E           __div_to_l_@quot 0026                __pbssBANK0 0000  
              __pbssBANK1 0000                __pbssBANK3 0000           ?_LCDWriteNibble 001D  
      __end_of_LCDPutChar 0030            i1___xxtofl@arg 000A            i1___xxtofl@exp 0009  
          i1___xxtofl@val 0000             __div_to_l_@f1 001D             __div_to_l_@f2 0021  
       __end_of__Umul8_16 0029                __pmaintext 0000                   ?___flge 001D  
                 ?___fleq 001D                   ?___wmul 001D                __pintentry 0000  
                 ?_config 0000                   ?_fround 001A                   _T1CKPS0 0084  
                 _T1CKPS1 0085                   _LCDGoto 0000                 ?___xxtofl 001D  
     i1__Umul8_16@product 0004                __stringtab 0000          ??_LCD_Initialize 0023  
       __end_of__npowers_ 006E                   ___fladd 0000                   ___awdiv 0000  
                 ___flneg 0000                   ___awmod 0000                   ___flmul 0000  
                 ___flsub 0000                   ___fltol 0000                   ___lldiv 0000  
                 ___llmod 0000                   ___lwdiv 0000                _fround$818 0029  
              _fround$819 0025                   ___lwmod 0000              ??i1___xxtofl 0004  
                 __ptext1 0000                   __ptext2 0000                   __ptext3 0000  
                 __ptext4 0000                   __ptext5 0000                   __ptext6 0000  
                 __ptext7 0000                   __ptext8 0000                   __ptext9 0000  
             ?__div_to_l_ 001D                   _dpowers 006E                ??___xxtofl 0021  
        ___awmod@dividend 001F                 _LCDPutCmd 0000                   _sprintf 0000  
               _LCDPutStr 0000      end_of_initialization 001A           ___lldiv@divisor 001D  
      __end_ofi1___xxtofl 00BA           ___lldiv@counter 002A                   psplit$0 C0030  
          __tdiv_to_l_@f1 001D            __tdiv_to_l_@f2 0021             ??__tdiv_to_l_ 0025  
   i1__Umul8_16@word_mpld 0006                 _PORTDbits 0008               ___fladd@grs 0041  
           ___xxtofl@sign 0025                 i1___flmul 0000                ?_LCDPutCmd 0000  
              ?_LCDPutStr 0000               ___flmul@grs 000F                LCDGoto@pos 0028  
          __end_of___flge 00A4            __end_of___fleq 0050                LCDPutStr@i 0025  
          __end_of___wmul 0027         pnum$text1_split_1 0030            __end_of_config 001F  
          __end_of_fround 0249       start_initialization 0000               __end_of_ISR 0086  
     __end_of__tdiv_to_l_ 00BD          ??_LCDWriteNibble 001E                ?i1___flmul 0000  
         ___llmod@divisor 0000           ___llmod@counter 002C                  ??___flge 0025  
                ??___fleq 0025                  ??___wmul 0021                 __Umul8_16 0000  
                ??_config 0025                  ??_fround 001E             sprintf@tmpval 001B  
               ___fladd@a 0032                 ___fladd@b 002E                fround@prec 002D  
                ?_LCDGoto 0023                 ___flmul@a 0004                 ___flmul@b 0000  
               ___flsub@a 0042                 ___flsub@b 0046                 ___latbits 0002  
           __pcstackBANK0 0000             __pcstackBANK1 0000             __pcstackBANK3 0000  
             ??_LCDPutCmd 0020               ??_LCDPutStr 0023           i1___xxtofl@sign 0008  
             sprintf@flag 0011               sprintf@eexp 0019               sprintf@fval 0020  
             sprintf@prec 0013          ___lwdiv@dividend 0025  i1__Umul8_16@multiplicand 0000  
                ?___fladd 002E                  ?___awdiv 0024                  ?___flneg 001D  
                ?___awmod 001D                  ?___flmul 0000                  ?___flsub 0042  
                ?___fltol 002D                  ?___lldiv 001D                  ?___llmod 0000  
               __npowers_ 003A                ?__Umul8_16 001D                  ?___lwdiv 0023  
                ?___lwmod 001D          LCDWriteNibble@ch 001F          LCDWriteNibble@rs 001D  
               __pstrings 0000               __tdiv_to_l_ 0000             ??_TIMER1_Init 001D  
            ??__div_to_l_ 0025                 _scale$820 0028               ??i1___flmul 0008  
        ___lwdiv@quotient 0028                  ?_sprintf 0000         interrupt_function 0000  
          ___wmul@product 0021               _LCDGoto$138 0026        __end_of__div_to_l_ 00BE  
             __stringbase 0005         ___wmul@multiplier 001D       __end_of_TIMER1_Init 000B  
           ??i1__Umul8_16 0002                  _PrePulse 0000                  _Velocity 0000  
             ??__Umul8_16 001F        __end_of__stringtab 0006                sprintf@val 0015  
                ___xxtofl 0000           ___lwdiv@divisor 0023           ___lwdiv@counter 002A  
                __ptext10 0000                  __ptext11 0000                  __ptext20 0000  
                __ptext12 0000                  __ptext21 0000                  __ptext13 0000  
                __ptext30 0000                  __ptext22 0000                  __ptext14 0000  
                __ptext31 0000                  __ptext23 0000                  __ptext15 0000  
                __ptext32 0000                  __ptext24 0000                  __ptext16 0000  
                __ptext33 0000                  __ptext25 0000                  __ptext17 0000  
                __ptext26 0000                  __ptext18 0000                  __ptext27 0000  
                __ptext19 0000                  __ptext28 0000                  __ptext29 0000  
                __powers_ 0006                 pnum$text1 000C       __end_ofi1__Umul8_16 0027  
              _LCDPutChar 0000               _TIMER1_Init 0000                  scale@scl 002C  
                intlevel1 0000*                sprintf@ap 0010          __tdiv_to_l_@exp1 002E  
        __tdiv_to_l_@cntr 002D                 sprintf@sp 001F          __tdiv_to_l_@quot 0029  
  i1__Umul8_16@multiplier 0008          ___lwmod@dividend 001F          ___lldiv@dividend 0021  
               stringcode 0000              ?__tdiv_to_l_ 001D    __Umul8_16@multiplicand 001D  
                sprintf@c 0024                  sprintf@f 0000          ___lldiv@quotient 0026  
         ___lwmod@divisor 001D           ___lwmod@counter 0022                  stringdir 0000  
                stringtab 0000             ___fladd@signs 003E              ___fladd@aexp 003F  
            ___fladd@bexp 0040      __Umul8_16@multiplier 0025               i1__Umul8_16 0000  
       __Umul8_16@product 0021  
