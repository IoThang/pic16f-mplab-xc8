

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Mar 28 10:37:00 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1509 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0197                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0216                     	;# 
   168  0217                     	;# 
   169  0217                     	;# 
   170  0391                     	;# 
   171  0392                     	;# 
   172  0393                     	;# 
   173  0394                     	;# 
   174  0395                     	;# 
   175  0396                     	;# 
   176  0498                     	;# 
   177  0498                     	;# 
   178  0499                     	;# 
   179  049A                     	;# 
   180  049B                     	;# 
   181  049B                     	;# 
   182  049C                     	;# 
   183  049D                     	;# 
   184  049E                     	;# 
   185  049F                     	;# 
   186  0611                     	;# 
   187  0612                     	;# 
   188  0613                     	;# 
   189  0613                     	;# 
   190  0614                     	;# 
   191  0615                     	;# 
   192  0616                     	;# 
   193  0616                     	;# 
   194  0617                     	;# 
   195  0618                     	;# 
   196  0619                     	;# 
   197  0619                     	;# 
   198  061A                     	;# 
   199  061B                     	;# 
   200  061C                     	;# 
   201  061C                     	;# 
   202  0691                     	;# 
   203  0692                     	;# 
   204  0693                     	;# 
   205  0694                     	;# 
   206  0695                     	;# 
   207  0F0F                     	;# 
   208  0F10                     	;# 
   209  0F11                     	;# 
   210  0F12                     	;# 
   211  0F13                     	;# 
   212  0F14                     	;# 
   213  0F15                     	;# 
   214  0F16                     	;# 
   215  0F17                     	;# 
   216  0F18                     	;# 
   217  0F19                     	;# 
   218  0F1A                     	;# 
   219  0F1B                     	;# 
   220  0F1C                     	;# 
   221  0F1D                     	;# 
   222  0F1E                     	;# 
   223  0F1F                     	;# 
   224  0F20                     	;# 
   225  0F21                     	;# 
   226  0F22                     	;# 
   227  0F23                     	;# 
   228  0F24                     	;# 
   229  0F25                     	;# 
   230  0F26                     	;# 
   231  0F27                     	;# 
   232  0F28                     	;# 
   233  0F29                     	;# 
   234  0F2A                     	;# 
   235  0F2B                     	;# 
   236  0F2C                     	;# 
   237  0F2D                     	;# 
   238  0F2E                     	;# 
   239  0F2F                     	;# 
   240  0F8C                     	;# 
   241  0F8D                     	;# 
   242  0F91                     	;# 
   243  0F95                     	;# 
   244  0F96                     	;# 
   245  0F97                     	;# 
   246  0F9C                     	;# 
   247  0F9D                     	;# 
   248  0F9E                     	;# 
   249  0FE3                     	;# 
   250  0FE4                     	;# 
   251  0FE5                     	;# 
   252  0FE6                     	;# 
   253  0FE7                     	;# 
   254  0FE8                     	;# 
   255  0FE9                     	;# 
   256  0FEA                     	;# 
   257  0FEB                     	;# 
   258  0FED                     	;# 
   259  0FEE                     	;# 
   260  0FEF                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0016                     	;# 
   282  0017                     	;# 
   283  0018                     	;# 
   284  0019                     	;# 
   285  001A                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  0111                     	;# 
   309  0112                     	;# 
   310  0113                     	;# 
   311  0114                     	;# 
   312  0115                     	;# 
   313  0116                     	;# 
   314  0117                     	;# 
   315  0118                     	;# 
   316  0119                     	;# 
   317  011D                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  018E                     	;# 
   321  0191                     	;# 
   322  0191                     	;# 
   323  0192                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0197                     	;# 
   330  0199                     	;# 
   331  019A                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019D                     	;# 
   336  019E                     	;# 
   337  019F                     	;# 
   338  020C                     	;# 
   339  020D                     	;# 
   340  0211                     	;# 
   341  0211                     	;# 
   342  0212                     	;# 
   343  0212                     	;# 
   344  0213                     	;# 
   345  0213                     	;# 
   346  0214                     	;# 
   347  0214                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  0391                     	;# 
   356  0392                     	;# 
   357  0393                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  0498                     	;# 
   362  0498                     	;# 
   363  0499                     	;# 
   364  049A                     	;# 
   365  049B                     	;# 
   366  049B                     	;# 
   367  049C                     	;# 
   368  049D                     	;# 
   369  049E                     	;# 
   370  049F                     	;# 
   371  0611                     	;# 
   372  0612                     	;# 
   373  0613                     	;# 
   374  0613                     	;# 
   375  0614                     	;# 
   376  0615                     	;# 
   377  0616                     	;# 
   378  0616                     	;# 
   379  0617                     	;# 
   380  0618                     	;# 
   381  0619                     	;# 
   382  0619                     	;# 
   383  061A                     	;# 
   384  061B                     	;# 
   385  061C                     	;# 
   386  061C                     	;# 
   387  0691                     	;# 
   388  0692                     	;# 
   389  0693                     	;# 
   390  0694                     	;# 
   391  0695                     	;# 
   392  0F0F                     	;# 
   393  0F10                     	;# 
   394  0F11                     	;# 
   395  0F12                     	;# 
   396  0F13                     	;# 
   397  0F14                     	;# 
   398  0F15                     	;# 
   399  0F16                     	;# 
   400  0F17                     	;# 
   401  0F18                     	;# 
   402  0F19                     	;# 
   403  0F1A                     	;# 
   404  0F1B                     	;# 
   405  0F1C                     	;# 
   406  0F1D                     	;# 
   407  0F1E                     	;# 
   408  0F1F                     	;# 
   409  0F20                     	;# 
   410  0F21                     	;# 
   411  0F22                     	;# 
   412  0F23                     	;# 
   413  0F24                     	;# 
   414  0F25                     	;# 
   415  0F26                     	;# 
   416  0F27                     	;# 
   417  0F28                     	;# 
   418  0F29                     	;# 
   419  0F2A                     	;# 
   420  0F2B                     	;# 
   421  0F2C                     	;# 
   422  0F2D                     	;# 
   423  0F2E                     	;# 
   424  0F2F                     	;# 
   425  0F8C                     	;# 
   426  0F8D                     	;# 
   427  0F91                     	;# 
   428  0F95                     	;# 
   429  0F96                     	;# 
   430  0F97                     	;# 
   431  0F9C                     	;# 
   432  0F9D                     	;# 
   433  0F9E                     	;# 
   434  0FE3                     	;# 
   435  0FE4                     	;# 
   436  0FE5                     	;# 
   437  0FE6                     	;# 
   438  0FE7                     	;# 
   439  0FE8                     	;# 
   440  0FE9                     	;# 
   441  0FEA                     	;# 
   442  0FEB                     	;# 
   443  0FED                     	;# 
   444  0FEE                     	;# 
   445  0FEF                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0013                     	;# 
   464  0015                     	;# 
   465  0016                     	;# 
   466  0016                     	;# 
   467  0017                     	;# 
   468  0018                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  008C                     	;# 
   474  008D                     	;# 
   475  008E                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0093                     	;# 
   479  0095                     	;# 
   480  0096                     	;# 
   481  0097                     	;# 
   482  0099                     	;# 
   483  009A                     	;# 
   484  009B                     	;# 
   485  009B                     	;# 
   486  009C                     	;# 
   487  009D                     	;# 
   488  009E                     	;# 
   489  009F                     	;# 
   490  010C                     	;# 
   491  010D                     	;# 
   492  010E                     	;# 
   493  0111                     	;# 
   494  0112                     	;# 
   495  0113                     	;# 
   496  0114                     	;# 
   497  0115                     	;# 
   498  0116                     	;# 
   499  0117                     	;# 
   500  0118                     	;# 
   501  0119                     	;# 
   502  011D                     	;# 
   503  018C                     	;# 
   504  018D                     	;# 
   505  018E                     	;# 
   506  0191                     	;# 
   507  0191                     	;# 
   508  0192                     	;# 
   509  0193                     	;# 
   510  0193                     	;# 
   511  0194                     	;# 
   512  0195                     	;# 
   513  0196                     	;# 
   514  0197                     	;# 
   515  0199                     	;# 
   516  019A                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019C                     	;# 
   520  019D                     	;# 
   521  019E                     	;# 
   522  019F                     	;# 
   523  020C                     	;# 
   524  020D                     	;# 
   525  0211                     	;# 
   526  0211                     	;# 
   527  0212                     	;# 
   528  0212                     	;# 
   529  0213                     	;# 
   530  0213                     	;# 
   531  0214                     	;# 
   532  0214                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0216                     	;# 
   537  0216                     	;# 
   538  0217                     	;# 
   539  0217                     	;# 
   540  0391                     	;# 
   541  0392                     	;# 
   542  0393                     	;# 
   543  0394                     	;# 
   544  0395                     	;# 
   545  0396                     	;# 
   546  0498                     	;# 
   547  0498                     	;# 
   548  0499                     	;# 
   549  049A                     	;# 
   550  049B                     	;# 
   551  049B                     	;# 
   552  049C                     	;# 
   553  049D                     	;# 
   554  049E                     	;# 
   555  049F                     	;# 
   556  0611                     	;# 
   557  0612                     	;# 
   558  0613                     	;# 
   559  0613                     	;# 
   560  0614                     	;# 
   561  0615                     	;# 
   562  0616                     	;# 
   563  0616                     	;# 
   564  0617                     	;# 
   565  0618                     	;# 
   566  0619                     	;# 
   567  0619                     	;# 
   568  061A                     	;# 
   569  061B                     	;# 
   570  061C                     	;# 
   571  061C                     	;# 
   572  0691                     	;# 
   573  0692                     	;# 
   574  0693                     	;# 
   575  0694                     	;# 
   576  0695                     	;# 
   577  0F0F                     	;# 
   578  0F10                     	;# 
   579  0F11                     	;# 
   580  0F12                     	;# 
   581  0F13                     	;# 
   582  0F14                     	;# 
   583  0F15                     	;# 
   584  0F16                     	;# 
   585  0F17                     	;# 
   586  0F18                     	;# 
   587  0F19                     	;# 
   588  0F1A                     	;# 
   589  0F1B                     	;# 
   590  0F1C                     	;# 
   591  0F1D                     	;# 
   592  0F1E                     	;# 
   593  0F1F                     	;# 
   594  0F20                     	;# 
   595  0F21                     	;# 
   596  0F22                     	;# 
   597  0F23                     	;# 
   598  0F24                     	;# 
   599  0F25                     	;# 
   600  0F26                     	;# 
   601  0F27                     	;# 
   602  0F28                     	;# 
   603  0F29                     	;# 
   604  0F2A                     	;# 
   605  0F2B                     	;# 
   606  0F2C                     	;# 
   607  0F2D                     	;# 
   608  0F2E                     	;# 
   609  0F2F                     	;# 
   610  0F8C                     	;# 
   611  0F8D                     	;# 
   612  0F91                     	;# 
   613  0F95                     	;# 
   614  0F96                     	;# 
   615  0F97                     	;# 
   616  0F9C                     	;# 
   617  0F9D                     	;# 
   618  0F9E                     	;# 
   619  0FE3                     	;# 
   620  0FE4                     	;# 
   621  0FE5                     	;# 
   622  0FE6                     	;# 
   623  0FE7                     	;# 
   624  0FE8                     	;# 
   625  0FE9                     	;# 
   626  0FEA                     	;# 
   627  0FEB                     	;# 
   628  0FED                     	;# 
   629  0FEE                     	;# 
   630  0FEF                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0008                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  0011                     	;# 
   647  0012                     	;# 
   648  0013                     	;# 
   649  0015                     	;# 
   650  0016                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001C                     	;# 
   658  008C                     	;# 
   659  008D                     	;# 
   660  008E                     	;# 
   661  0091                     	;# 
   662  0092                     	;# 
   663  0093                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009B                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009E                     	;# 
   674  009F                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  0111                     	;# 
   679  0112                     	;# 
   680  0113                     	;# 
   681  0114                     	;# 
   682  0115                     	;# 
   683  0116                     	;# 
   684  0117                     	;# 
   685  0118                     	;# 
   686  0119                     	;# 
   687  011D                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0194                     	;# 
   697  0195                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019C                     	;# 
   705  019D                     	;# 
   706  019E                     	;# 
   707  019F                     	;# 
   708  020C                     	;# 
   709  020D                     	;# 
   710  0211                     	;# 
   711  0211                     	;# 
   712  0212                     	;# 
   713  0212                     	;# 
   714  0213                     	;# 
   715  0213                     	;# 
   716  0214                     	;# 
   717  0214                     	;# 
   718  0215                     	;# 
   719  0215                     	;# 
   720  0215                     	;# 
   721  0216                     	;# 
   722  0216                     	;# 
   723  0217                     	;# 
   724  0217                     	;# 
   725  0391                     	;# 
   726  0392                     	;# 
   727  0393                     	;# 
   728  0394                     	;# 
   729  0395                     	;# 
   730  0396                     	;# 
   731  0498                     	;# 
   732  0498                     	;# 
   733  0499                     	;# 
   734  049A                     	;# 
   735  049B                     	;# 
   736  049B                     	;# 
   737  049C                     	;# 
   738  049D                     	;# 
   739  049E                     	;# 
   740  049F                     	;# 
   741  0611                     	;# 
   742  0612                     	;# 
   743  0613                     	;# 
   744  0613                     	;# 
   745  0614                     	;# 
   746  0615                     	;# 
   747  0616                     	;# 
   748  0616                     	;# 
   749  0617                     	;# 
   750  0618                     	;# 
   751  0619                     	;# 
   752  0619                     	;# 
   753  061A                     	;# 
   754  061B                     	;# 
   755  061C                     	;# 
   756  061C                     	;# 
   757  0691                     	;# 
   758  0692                     	;# 
   759  0693                     	;# 
   760  0694                     	;# 
   761  0695                     	;# 
   762  0F0F                     	;# 
   763  0F10                     	;# 
   764  0F11                     	;# 
   765  0F12                     	;# 
   766  0F13                     	;# 
   767  0F14                     	;# 
   768  0F15                     	;# 
   769  0F16                     	;# 
   770  0F17                     	;# 
   771  0F18                     	;# 
   772  0F19                     	;# 
   773  0F1A                     	;# 
   774  0F1B                     	;# 
   775  0F1C                     	;# 
   776  0F1D                     	;# 
   777  0F1E                     	;# 
   778  0F1F                     	;# 
   779  0F20                     	;# 
   780  0F21                     	;# 
   781  0F22                     	;# 
   782  0F23                     	;# 
   783  0F24                     	;# 
   784  0F25                     	;# 
   785  0F26                     	;# 
   786  0F27                     	;# 
   787  0F28                     	;# 
   788  0F29                     	;# 
   789  0F2A                     	;# 
   790  0F2B                     	;# 
   791  0F2C                     	;# 
   792  0F2D                     	;# 
   793  0F2E                     	;# 
   794  0F2F                     	;# 
   795  0F8C                     	;# 
   796  0F8D                     	;# 
   797  0F91                     	;# 
   798  0F95                     	;# 
   799  0F96                     	;# 
   800  0F97                     	;# 
   801  0F9C                     	;# 
   802  0F9D                     	;# 
   803  0F9E                     	;# 
   804  0FE3                     	;# 
   805  0FE4                     	;# 
   806  0FE5                     	;# 
   807  0FE6                     	;# 
   808  0FE7                     	;# 
   809  0FE8                     	;# 
   810  0FE9                     	;# 
   811  0FEA                     	;# 
   812  0FEB                     	;# 
   813  0FED                     	;# 
   814  0FEE                     	;# 
   815  0FEF                     	;# 
   816  0000                     	;# 
   817  0001                     	;# 
   818  0002                     	;# 
   819  0003                     	;# 
   820  0004                     	;# 
   821  0005                     	;# 
   822  0006                     	;# 
   823  0007                     	;# 
   824  0008                     	;# 
   825  0009                     	;# 
   826  000A                     	;# 
   827  000B                     	;# 
   828  000C                     	;# 
   829  000D                     	;# 
   830  000E                     	;# 
   831  0011                     	;# 
   832  0012                     	;# 
   833  0013                     	;# 
   834  0015                     	;# 
   835  0016                     	;# 
   836  0016                     	;# 
   837  0017                     	;# 
   838  0018                     	;# 
   839  0019                     	;# 
   840  001A                     	;# 
   841  001B                     	;# 
   842  001C                     	;# 
   843  008C                     	;# 
   844  008D                     	;# 
   845  008E                     	;# 
   846  0091                     	;# 
   847  0092                     	;# 
   848  0093                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0099                     	;# 
   853  009A                     	;# 
   854  009B                     	;# 
   855  009B                     	;# 
   856  009C                     	;# 
   857  009D                     	;# 
   858  009E                     	;# 
   859  009F                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  010E                     	;# 
   863  0111                     	;# 
   864  0112                     	;# 
   865  0113                     	;# 
   866  0114                     	;# 
   867  0115                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  0118                     	;# 
   871  0119                     	;# 
   872  011D                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  018E                     	;# 
   876  0191                     	;# 
   877  0191                     	;# 
   878  0192                     	;# 
   879  0193                     	;# 
   880  0193                     	;# 
   881  0194                     	;# 
   882  0195                     	;# 
   883  0196                     	;# 
   884  0197                     	;# 
   885  0199                     	;# 
   886  019A                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019D                     	;# 
   891  019E                     	;# 
   892  019F                     	;# 
   893  020C                     	;# 
   894  020D                     	;# 
   895  0211                     	;# 
   896  0211                     	;# 
   897  0212                     	;# 
   898  0212                     	;# 
   899  0213                     	;# 
   900  0213                     	;# 
   901  0214                     	;# 
   902  0214                     	;# 
   903  0215                     	;# 
   904  0215                     	;# 
   905  0215                     	;# 
   906  0216                     	;# 
   907  0216                     	;# 
   908  0217                     	;# 
   909  0217                     	;# 
   910  0391                     	;# 
   911  0392                     	;# 
   912  0393                     	;# 
   913  0394                     	;# 
   914  0395                     	;# 
   915  0396                     	;# 
   916  0498                     	;# 
   917  0498                     	;# 
   918  0499                     	;# 
   919  049A                     	;# 
   920  049B                     	;# 
   921  049B                     	;# 
   922  049C                     	;# 
   923  049D                     	;# 
   924  049E                     	;# 
   925  049F                     	;# 
   926  0611                     	;# 
   927  0612                     	;# 
   928  0613                     	;# 
   929  0613                     	;# 
   930  0614                     	;# 
   931  0615                     	;# 
   932  0616                     	;# 
   933  0616                     	;# 
   934  0617                     	;# 
   935  0618                     	;# 
   936  0619                     	;# 
   937  0619                     	;# 
   938  061A                     	;# 
   939  061B                     	;# 
   940  061C                     	;# 
   941  061C                     	;# 
   942  0691                     	;# 
   943  0692                     	;# 
   944  0693                     	;# 
   945  0694                     	;# 
   946  0695                     	;# 
   947  0F0F                     	;# 
   948  0F10                     	;# 
   949  0F11                     	;# 
   950  0F12                     	;# 
   951  0F13                     	;# 
   952  0F14                     	;# 
   953  0F15                     	;# 
   954  0F16                     	;# 
   955  0F17                     	;# 
   956  0F18                     	;# 
   957  0F19                     	;# 
   958  0F1A                     	;# 
   959  0F1B                     	;# 
   960  0F1C                     	;# 
   961  0F1D                     	;# 
   962  0F1E                     	;# 
   963  0F1F                     	;# 
   964  0F20                     	;# 
   965  0F21                     	;# 
   966  0F22                     	;# 
   967  0F23                     	;# 
   968  0F24                     	;# 
   969  0F25                     	;# 
   970  0F26                     	;# 
   971  0F27                     	;# 
   972  0F28                     	;# 
   973  0F29                     	;# 
   974  0F2A                     	;# 
   975  0F2B                     	;# 
   976  0F2C                     	;# 
   977  0F2D                     	;# 
   978  0F2E                     	;# 
   979  0F2F                     	;# 
   980  0F8C                     	;# 
   981  0F8D                     	;# 
   982  0F91                     	;# 
   983  0F95                     	;# 
   984  0F96                     	;# 
   985  0F97                     	;# 
   986  0F9C                     	;# 
   987  0F9D                     	;# 
   988  0F9E                     	;# 
   989  0FE3                     	;# 
   990  0FE4                     	;# 
   991  0FE5                     	;# 
   992  0FE6                     	;# 
   993  0FE7                     	;# 
   994  0FE8                     	;# 
   995  0FE9                     	;# 
   996  0FEA                     	;# 
   997  0FEB                     	;# 
   998  0FED                     	;# 
   999  0FEE                     	;# 
  1000  0FEF                     	;# 
  1001  0000                     	;# 
  1002  0001                     	;# 
  1003  0002                     	;# 
  1004  0003                     	;# 
  1005  0004                     	;# 
  1006  0005                     	;# 
  1007  0006                     	;# 
  1008  0007                     	;# 
  1009  0008                     	;# 
  1010  0009                     	;# 
  1011  000A                     	;# 
  1012  000B                     	;# 
  1013  000C                     	;# 
  1014  000D                     	;# 
  1015  000E                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0013                     	;# 
  1019  0015                     	;# 
  1020  0016                     	;# 
  1021  0016                     	;# 
  1022  0017                     	;# 
  1023  0018                     	;# 
  1024  0019                     	;# 
  1025  001A                     	;# 
  1026  001B                     	;# 
  1027  001C                     	;# 
  1028  008C                     	;# 
  1029  008D                     	;# 
  1030  008E                     	;# 
  1031  0091                     	;# 
  1032  0092                     	;# 
  1033  0093                     	;# 
  1034  0095                     	;# 
  1035  0096                     	;# 
  1036  0097                     	;# 
  1037  0099                     	;# 
  1038  009A                     	;# 
  1039  009B                     	;# 
  1040  009B                     	;# 
  1041  009C                     	;# 
  1042  009D                     	;# 
  1043  009E                     	;# 
  1044  009F                     	;# 
  1045  010C                     	;# 
  1046  010D                     	;# 
  1047  010E                     	;# 
  1048  0111                     	;# 
  1049  0112                     	;# 
  1050  0113                     	;# 
  1051  0114                     	;# 
  1052  0115                     	;# 
  1053  0116                     	;# 
  1054  0117                     	;# 
  1055  0118                     	;# 
  1056  0119                     	;# 
  1057  011D                     	;# 
  1058  018C                     	;# 
  1059  018D                     	;# 
  1060  018E                     	;# 
  1061  0191                     	;# 
  1062  0191                     	;# 
  1063  0192                     	;# 
  1064  0193                     	;# 
  1065  0193                     	;# 
  1066  0194                     	;# 
  1067  0195                     	;# 
  1068  0196                     	;# 
  1069  0197                     	;# 
  1070  0199                     	;# 
  1071  019A                     	;# 
  1072  019B                     	;# 
  1073  019B                     	;# 
  1074  019C                     	;# 
  1075  019D                     	;# 
  1076  019E                     	;# 
  1077  019F                     	;# 
  1078  020C                     	;# 
  1079  020D                     	;# 
  1080  0211                     	;# 
  1081  0211                     	;# 
  1082  0212                     	;# 
  1083  0212                     	;# 
  1084  0213                     	;# 
  1085  0213                     	;# 
  1086  0214                     	;# 
  1087  0214                     	;# 
  1088  0215                     	;# 
  1089  0215                     	;# 
  1090  0215                     	;# 
  1091  0216                     	;# 
  1092  0216                     	;# 
  1093  0217                     	;# 
  1094  0217                     	;# 
  1095  0391                     	;# 
  1096  0392                     	;# 
  1097  0393                     	;# 
  1098  0394                     	;# 
  1099  0395                     	;# 
  1100  0396                     	;# 
  1101  0498                     	;# 
  1102  0498                     	;# 
  1103  0499                     	;# 
  1104  049A                     	;# 
  1105  049B                     	;# 
  1106  049B                     	;# 
  1107  049C                     	;# 
  1108  049D                     	;# 
  1109  049E                     	;# 
  1110  049F                     	;# 
  1111  0611                     	;# 
  1112  0612                     	;# 
  1113  0613                     	;# 
  1114  0613                     	;# 
  1115  0614                     	;# 
  1116  0615                     	;# 
  1117  0616                     	;# 
  1118  0616                     	;# 
  1119  0617                     	;# 
  1120  0618                     	;# 
  1121  0619                     	;# 
  1122  0619                     	;# 
  1123  061A                     	;# 
  1124  061B                     	;# 
  1125  061C                     	;# 
  1126  061C                     	;# 
  1127  0691                     	;# 
  1128  0692                     	;# 
  1129  0693                     	;# 
  1130  0694                     	;# 
  1131  0695                     	;# 
  1132  0F0F                     	;# 
  1133  0F10                     	;# 
  1134  0F11                     	;# 
  1135  0F12                     	;# 
  1136  0F13                     	;# 
  1137  0F14                     	;# 
  1138  0F15                     	;# 
  1139  0F16                     	;# 
  1140  0F17                     	;# 
  1141  0F18                     	;# 
  1142  0F19                     	;# 
  1143  0F1A                     	;# 
  1144  0F1B                     	;# 
  1145  0F1C                     	;# 
  1146  0F1D                     	;# 
  1147  0F1E                     	;# 
  1148  0F1F                     	;# 
  1149  0F20                     	;# 
  1150  0F21                     	;# 
  1151  0F22                     	;# 
  1152  0F23                     	;# 
  1153  0F24                     	;# 
  1154  0F25                     	;# 
  1155  0F26                     	;# 
  1156  0F27                     	;# 
  1157  0F28                     	;# 
  1158  0F29                     	;# 
  1159  0F2A                     	;# 
  1160  0F2B                     	;# 
  1161  0F2C                     	;# 
  1162  0F2D                     	;# 
  1163  0F2E                     	;# 
  1164  0F2F                     	;# 
  1165  0F8C                     	;# 
  1166  0F8D                     	;# 
  1167  0F91                     	;# 
  1168  0F95                     	;# 
  1169  0F96                     	;# 
  1170  0F97                     	;# 
  1171  0F9C                     	;# 
  1172  0F9D                     	;# 
  1173  0F9E                     	;# 
  1174  0FE3                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186                           
  1187                           	psect	stringtext1
  1188  034C                     __pstringtext1:
  1189  034C                     _dpowers:
  1190  034C  3401               	retlw	1
  1191  034D  3400               	retlw	0
  1192  034E  340A               	retlw	10
  1193  034F  3400               	retlw	0
  1194  0350  3464               	retlw	100
  1195  0351  3400               	retlw	0
  1196  0352  34E8               	retlw	232
  1197  0353  3403               	retlw	3
  1198  0354  3410               	retlw	16
  1199  0355  3427               	retlw	39
  1200  0356                     __end_of_dpowers:
  1201                           
  1202                           	psect	nvBANK0
  1203  0049                     __pnvBANK0:
  1204  0049                     _ADC_InterruptHandler:
  1205  0049                     	ds	2
  1206  000E                     _PORTCbits	set	14
  1207  000E                     _PORTC	set	14
  1208  0011                     _PIR1bits	set	17
  1209  000B                     _INTCONbits	set	11
  1210  009D                     _ADCON0bits	set	157
  1211  009D                     _ADCON0	set	157
  1212  009C                     _ADRESH	set	156
  1213  009B                     _ADRESL	set	155
  1214  009F                     _ADCON2	set	159
  1215  009E                     _ADCON1	set	158
  1216  0091                     _PIE1bits	set	145
  1217  0095                     _OPTION_REGbits	set	149
  1218  008E                     _TRISC	set	142
  1219  008D                     _TRISB	set	141
  1220  008C                     _TRISA	set	140
  1221  0097                     _WDTCON	set	151
  1222  0099                     _OSCCON	set	153
  1223  011D                     _APFCON	set	285
  1224  010E                     _LATC	set	270
  1225  010D                     _LATB	set	269
  1226  010C                     _LATA	set	268
  1227  0116                     _BORCON	set	278
  1228  018C                     _ANSELA	set	396
  1229  018D                     _ANSELB	set	397
  1230  018E                     _ANSELC	set	398
  1231  020C                     _WPUA	set	524
  1232  020D                     _WPUB	set	525
  1233                           
  1234                           	psect	stringtext2
  1235  0366                     __pstringtext2:
  1236  0366                     STR_1:
  1237  0366  3425               	retlw	37	;'%'
  1238  0367  3475               	retlw	117	;'u'
  1239  0368  3400               	retlw	0
  1240                           
  1241                           	psect	stringtext3
  1242  0000                     __pstringtext3:
  1243                           
  1244                           	psect	cinit
  1245  001B                     start_initialization:	
  1246                           ; #config settings
  1247                           
  1248  001B                     __initialization:
  1249                           
  1250                           ; Clear objects allocated to COMMON
  1251  001B  01FC               	clrf	__pbssCOMMON& (0+127)
  1252                           
  1253                           ; Clear objects allocated to BANK0
  1254  001C  0020               	movlb	0	; select bank0
  1255  001D  01BF               	clrf	__pbssBANK0& (0+127)
  1256  001E  01C0               	clrf	(__pbssBANK0+1)& (0+127)
  1257  001F  01C1               	clrf	(__pbssBANK0+2)& (0+127)
  1258  0020  01C2               	clrf	(__pbssBANK0+3)& (0+127)
  1259  0021  01C3               	clrf	(__pbssBANK0+4)& (0+127)
  1260  0022  01C4               	clrf	(__pbssBANK0+5)& (0+127)
  1261  0023  01C5               	clrf	(__pbssBANK0+6)& (0+127)
  1262  0024  01C6               	clrf	(__pbssBANK0+7)& (0+127)
  1263  0025  01C7               	clrf	(__pbssBANK0+8)& (0+127)
  1264  0026  01C8               	clrf	(__pbssBANK0+9)& (0+127)
  1265  0027                     end_of_initialization:	
  1266                           ;End of C runtime variable initialization code
  1267                           
  1268  0027                     __end_of__initialization:
  1269  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1270  0028  0020               	movlb	0
  1271  0029  3181  29C3         	ljmp	_main	;jump to C main() function
  1272                           
  1273                           	psect	bssCOMMON
  1274  007C                     __pbssCOMMON:
  1275  007C                     _temp:
  1276  007C                     	ds	1
  1277                           
  1278                           	psect	bssBANK0
  1279  003F                     __pbssBANK0:
  1280  003F                     _buffer:
  1281  003F                     	ds	10
  1282                           
  1283                           	psect	cstackCOMMON
  1284  0070                     __pcstackCOMMON:
  1285  0070                     ?_PIN_MANAGER_Initialize:
  1286  0070                     ?_OSCILLATOR_Initialize:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_WDT_Initialize:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_ADC_Initialize:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_ADC_ISR:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_ADC_DefaultInterruptHandler:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ??_ADC_DefaultInterruptHandler:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_LCD_Initialize:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_LCDPutStr:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?_LCDPutCmd:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_SYSTEM_Initialize:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_INTERRUPT_InterruptManager:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_ADC_SelectChannel:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_ADC_StartConversion:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_My_ADC_ISR:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_main:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?_LCDPutChar:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_ADC_GetConversion:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?___awdiv:	
  1338                           ; 2 bytes @ 0x0
  1339                           
  1340  0070                     ___awdiv@divisor:	
  1341                           ; 2 bytes @ 0x0
  1342                           
  1343                           
  1344                           ; 2 bytes @ 0x0
  1345  0070                     	ds	2
  1346  0072                     ??_ADC_GetConversion:
  1347  0072                     ___awdiv@dividend:	
  1348                           ; 1 bytes @ 0x2
  1349                           
  1350                           
  1351                           ; 2 bytes @ 0x2
  1352  0072                     	ds	1
  1353  0073                     ADC_GetConversion@channel:
  1354                           
  1355                           ; 1 bytes @ 0x3
  1356  0073                     	ds	1
  1357  0074                     ??___awdiv:
  1358                           
  1359                           ; 1 bytes @ 0x4
  1360  0074                     	ds	1
  1361  0075                     ___awdiv@counter:
  1362                           
  1363                           ; 1 bytes @ 0x5
  1364  0075                     	ds	1
  1365  0076                     ___awdiv@sign:
  1366                           
  1367                           ; 1 bytes @ 0x6
  1368  0076                     	ds	1
  1369  0077                     ___awdiv@quotient:
  1370                           
  1371                           ; 2 bytes @ 0x7
  1372  0077                     	ds	2
  1373  0079                     ??_My_ADC_ISR:
  1374                           
  1375                           ; 1 bytes @ 0x9
  1376  0079                     	ds	3
  1377  007C                     ??_ADC_ISR:
  1378  007C                     ??_INTERRUPT_InterruptManager:	
  1379                           ; 1 bytes @ 0xC
  1380                           
  1381                           
  1382                           	psect	cstackBANK0
  1383  0020                     __pcstackBANK0:	
  1384                           ; 1 bytes @ 0xC
  1385                           
  1386  0020                     ??_PIN_MANAGER_Initialize:
  1387  0020                     ??_OSCILLATOR_Initialize:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0020                     ??_WDT_Initialize:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0020                     ?_ADC_SetInterruptHandler:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0020                     ??_ADC_SelectChannel:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0020                     ??_ADC_StartConversion:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0020                     ?_LCDWriteNibble:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0020                     ?___lwdiv:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0020                     LCDWriteNibble@rs:	
  1409                           ; 2 bytes @ 0x0
  1410                           
  1411  0020                     ADC_SetInterruptHandler@InterruptHandler:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0020                     ___lwdiv@divisor:	
  1415                           ; 2 bytes @ 0x0
  1416                           
  1417                           
  1418                           ; 2 bytes @ 0x0
  1419  0020                     	ds	1
  1420  0021                     ??_LCDWriteNibble:
  1421  0021                     ADC_SelectChannel@channel:	
  1422                           ; 1 bytes @ 0x1
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0x1
  1426  0021                     	ds	1
  1427  0022                     ??_ADC_Initialize:
  1428  0022                     ??_ADC_SetInterruptHandler:	
  1429                           ; 1 bytes @ 0x2
  1430                           
  1431  0022                     ??_SYSTEM_Initialize:	
  1432                           ; 1 bytes @ 0x2
  1433                           
  1434  0022                     ___lwdiv@dividend:	
  1435                           ; 1 bytes @ 0x2
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x2
  1439  0022                     	ds	1
  1440  0023                     LCDWriteNibble@ch:
  1441                           
  1442                           ; 1 bytes @ 0x3
  1443  0023                     	ds	1
  1444  0024                     ??_LCDPutCmd:
  1445  0024                     ??_LCDPutChar:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448  0024                     ??___lwdiv:	
  1449                           ; 1 bytes @ 0x4
  1450                           
  1451                           
  1452                           ; 1 bytes @ 0x4
  1453  0024                     	ds	1
  1454  0025                     ___lwdiv@quotient:
  1455                           
  1456                           ; 2 bytes @ 0x5
  1457  0025                     	ds	1
  1458  0026                     LCDPutChar@ch:
  1459  0026                     LCDPutCmd@ch:	
  1460                           ; 1 bytes @ 0x6
  1461                           
  1462                           
  1463                           ; 1 bytes @ 0x6
  1464  0026                     	ds	1
  1465  0027                     ??_LCD_Initialize:
  1466  0027                     ?_LCDGoto:	
  1467                           ; 1 bytes @ 0x7
  1468                           
  1469  0027                     ??_LCDPutStr:	
  1470                           ; 1 bytes @ 0x7
  1471                           
  1472  0027                     LCDGoto@ln:	
  1473                           ; 1 bytes @ 0x7
  1474                           
  1475  0027                     ___lwdiv@counter:	
  1476                           ; 1 bytes @ 0x7
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x7
  1480  0027                     	ds	1
  1481  0028                     ??_LCDGoto:
  1482  0028                     ?___lwmod:	
  1483                           ; 1 bytes @ 0x8
  1484                           
  1485  0028                     LCDPutStr@str:	
  1486                           ; 2 bytes @ 0x8
  1487                           
  1488  0028                     _LCDGoto$432:	
  1489                           ; 1 bytes @ 0x8
  1490                           
  1491  0028                     ___lwmod@divisor:	
  1492                           ; 2 bytes @ 0x8
  1493                           
  1494                           
  1495                           ; 2 bytes @ 0x8
  1496  0028                     	ds	1
  1497  0029                     LCDPutStr@i:
  1498                           
  1499                           ; 1 bytes @ 0x9
  1500  0029                     	ds	1
  1501  002A                     LCDGoto@pos:
  1502  002A                     ___lwmod@dividend:	
  1503                           ; 1 bytes @ 0xA
  1504                           
  1505                           
  1506                           ; 2 bytes @ 0xA
  1507  002A                     	ds	2
  1508  002C                     ??___lwmod:
  1509                           
  1510                           ; 1 bytes @ 0xC
  1511  002C                     	ds	1
  1512  002D                     ___lwmod@counter:
  1513                           
  1514                           ; 1 bytes @ 0xD
  1515  002D                     	ds	1
  1516  002E                     ?_sprintf:
  1517  002E                     sprintf@f:	
  1518                           ; 2 bytes @ 0xE
  1519                           
  1520                           
  1521                           ; 2 bytes @ 0xE
  1522  002E                     	ds	4
  1523  0032                     ??_sprintf:
  1524                           
  1525                           ; 1 bytes @ 0x12
  1526  0032                     	ds	4
  1527  0036                     sprintf@flag:
  1528                           
  1529                           ; 1 bytes @ 0x16
  1530  0036                     	ds	1
  1531  0037                     sprintf@ap:
  1532                           
  1533                           ; 1 bytes @ 0x17
  1534  0037                     	ds	1
  1535  0038                     sprintf@val:
  1536                           
  1537                           ; 2 bytes @ 0x18
  1538  0038                     	ds	2
  1539  003A                     sprintf@prec:
  1540                           
  1541                           ; 1 bytes @ 0x1A
  1542  003A                     	ds	1
  1543  003B                     sprintf@sp:
  1544                           
  1545                           ; 1 bytes @ 0x1B
  1546  003B                     	ds	1
  1547  003C                     sprintf@c:
  1548                           
  1549                           ; 1 bytes @ 0x1C
  1550  003C                     	ds	1
  1551  003D                     ??_main:
  1552                           
  1553                           ; 1 bytes @ 0x1D
  1554  003D                     	ds	2
  1555                           
  1556                           	psect	maintext
  1557  01C3                     __pmaintext:	
  1558 ;;
  1559 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1560 ;;
  1561 ;; *************** function _main *****************
  1562 ;; Defined at:
  1563 ;;		line 80 in file "main.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : B1F/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1577 ;;      Params:         0       0       0       0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0       0       0       0
  1579 ;;      Temps:          0       2       0       0       0       0       0       0
  1580 ;;      Totals:         0       2       0       0       0       0       0       0
  1581 ;;Total ram usage:        2 bytes
  1582 ;; Hardware stack levels required when called: 7
  1583 ;; This function calls:
  1584 ;;		_ADC_SelectChannel
  1585 ;;		_ADC_SetInterruptHandler
  1586 ;;		_ADC_StartConversion
  1587 ;;		_LCDGoto
  1588 ;;		_LCDPutStr
  1589 ;;		_LCD_Initialize
  1590 ;;		_SYSTEM_Initialize
  1591 ;;		_sprintf
  1592 ;; This function is called by:
  1593 ;;		Startup code after reset
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597  01C3                     _main:	
  1598                           ;psect for function _main
  1599                           
  1600  01C3                     l1420:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1603                           
  1604                           
  1605                           ;main.c: 83:     SYSTEM_Initialize();
  1606  01C3  3183  233F  3181   	fcall	_SYSTEM_Initialize
  1607  01C6                     l1422:
  1608                           
  1609                           ;main.c: 85:     (INTCONbits.GIE = 1);
  1610  01C6  178B               	bsf	11,7	;volatile
  1611  01C7                     l1424:
  1612                           
  1613                           ;main.c: 88:     (INTCONbits.PEIE = 1);
  1614  01C7  170B               	bsf	11,6	;volatile
  1615                           
  1616                           ;main.c: 95:     LCD_Initialize();
  1617  01C8  3182  221F  3181   	fcall	_LCD_Initialize
  1618                           
  1619                           ;main.c: 97:     ADC_SelectChannel(channel_AN0);
  1620  01CB  3000               	movlw	0
  1621  01CC  3183  2321  3181   	fcall	_ADC_SelectChannel
  1622                           
  1623                           ;main.c: 98:     ADC_SetInterruptHandler(My_ADC_ISR);
  1624  01CF  30C5               	movlw	low _My_ADC_ISR
  1625  01D0  0020               	movlb	0	; select bank0
  1626  01D1  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler
  1627  01D2  3002               	movlw	high _My_ADC_ISR
  1628  01D3  00A1               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  1629  01D4  3183  235C  3181   	fcall	_ADC_SetInterruptHandler
  1630  01D7                     l1426:
  1631                           
  1632                           ;main.c: 100:     {;main.c: 101:         ADC_StartConversion();
  1633  01D7  3183  2369  3181   	fcall	_ADC_StartConversion
  1634  01DA                     l1428:
  1635                           
  1636                           ;main.c: 102:         LCDGoto(5, 0);
  1637  01DA  0020               	movlb	0	; select bank0
  1638  01DB  01A7               	clrf	LCDGoto@ln
  1639  01DC  3005               	movlw	5
  1640  01DD  3181  21F7  3181   	fcall	_LCDGoto
  1641  01E0                     l1430:
  1642                           
  1643                           ;main.c: 103:         sprintf(buffer, "%u", temp);
  1644  01E0  3066               	movlw	low (STR_1| (0+32768))
  1645  01E1  0020               	movlb	0	; select bank0
  1646  01E2  00AE               	movwf	sprintf@f
  1647  01E3  3083               	movlw	high (STR_1| (0+32768))
  1648  01E4  00AF               	movwf	sprintf@f+1
  1649  01E5  087C               	movf	_temp,w
  1650  01E6  00BD               	movwf	??_main
  1651  01E7  01BE               	clrf	??_main+1
  1652  01E8  083D               	movf	??_main,w
  1653  01E9  00B0               	movwf	?_sprintf+2
  1654  01EA  083E               	movf	??_main+1,w
  1655  01EB  00B1               	movwf	?_sprintf+3
  1656  01EC  303F               	movlw	(low (_buffer| 0))& (0+255)
  1657  01ED  3180  202B  3181   	fcall	_sprintf
  1658  01F0                     l1432:
  1659                           
  1660                           ;main.c: 104:         LCDPutStr(buffer);
  1661  01F0  303F               	movlw	(low (_buffer| 0))& (0+255)
  1662  01F1  3182  22A6  3181   	fcall	_LCDPutStr
  1663  01F4  29D7               	goto	l1426
  1664  01F5  3180  2819         	ljmp	start
  1665  01F7                     __end_of_main:
  1666                           
  1667                           	psect	text1
  1668  002B                     __ptext1:	
  1669 ;; *************** function _sprintf *****************
  1670 ;; Defined at:
  1671 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  sp              1    wreg     PTR unsigned char 
  1674 ;;		 -> buffer(10), 
  1675 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  1676 ;;		 -> STR_1(3), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1679 ;;		 -> buffer(10), 
  1680 ;;  tmpval          4    0        struct .
  1681 ;;  val             2   24[BANK0 ] unsigned int 
  1682 ;;  cp              2    0        PTR const unsigned char 
  1683 ;;  len             2    0        unsigned int 
  1684 ;;  c               1   28[BANK0 ] unsigned char 
  1685 ;;  prec            1   26[BANK0 ] char 
  1686 ;;  ap              1   23[BANK0 ] PTR void [1]
  1687 ;;		 -> ?_sprintf(2), 
  1688 ;;  flag            1   22[BANK0 ] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2   14[BANK0 ] int 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1698 ;;      Params:         0       4       0       0       0       0       0       0
  1699 ;;      Locals:         0       7       0       0       0       0       0       0
  1700 ;;      Temps:          0       4       0       0       0       0       0       0
  1701 ;;      Totals:         0      15       0       0       0       0       0       0
  1702 ;;Total ram usage:       15 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 5
  1705 ;; This function calls:
  1706 ;;		___lwdiv
  1707 ;;		___lwmod
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713  002B                     _sprintf:	
  1714                           ;psect for function _sprintf
  1715                           
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1719                           ;sprintf@sp stored from wreg
  1720  002B  0020               	movlb	0	; select bank0
  1721  002C  00BB               	movwf	sprintf@sp
  1722  002D                     l1352:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1725  002D  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1726  002E  00B2               	movwf	??_sprintf
  1727  002F  0832               	movf	??_sprintf,w
  1728  0030  00B7               	movwf	sprintf@ap
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1731  0031  28D9               	goto	l1394
  1732  0032                     l1354:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1735  0032  3025               	movlw	37
  1736  0033  063C               	xorwf	sprintf@c,w
  1737  0034  1903               	btfsc	3,2
  1738  0035  2837               	goto	u721
  1739  0036  2838               	goto	u720
  1740  0037                     u721:
  1741  0037  2844               	goto	l1360
  1742  0038                     u720:
  1743  0038                     l1356:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1746  0038  083C               	movf	sprintf@c,w
  1747  0039  00B2               	movwf	??_sprintf
  1748  003A  083B               	movf	sprintf@sp,w
  1749  003B  0086               	movwf	6
  1750  003C  0187               	clrf	7
  1751  003D  0832               	movf	??_sprintf,w
  1752  003E  0081               	movwf	1
  1753  003F                     l1358:
  1754  003F  3001               	movlw	1
  1755  0040  00B2               	movwf	??_sprintf
  1756  0041  0832               	movf	??_sprintf,w
  1757  0042  07BB               	addwf	sprintf@sp,f
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1760  0043  28D9               	goto	l1394
  1761  0044                     l1360:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1764  0044  01B6               	clrf	sprintf@flag
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1767  0045  284B               	goto	l1366
  1768  0046                     l1362:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1771  0046  30C0               	movlw	192
  1772  0047  00B2               	movwf	??_sprintf
  1773  0048  0832               	movf	??_sprintf,w
  1774  0049  04B6               	iorwf	sprintf@flag,f
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 845:    break;
  1777  004A  2867               	goto	l1368
  1778  004B                     l1366:
  1779  004B  082F               	movf	sprintf@f+1,w
  1780  004C  00B3               	movwf	??_sprintf+1
  1781  004D  082E               	movf	sprintf@f,w
  1782  004E  00B2               	movwf	??_sprintf
  1783  004F  0AAE               	incf	sprintf@f,f
  1784  0050  1903               	skipnz
  1785  0051  0AAF               	incf	sprintf@f+1,f
  1786  0052  0832               	movf	??_sprintf,w
  1787  0053  0084               	movwf	4
  1788  0054  0833               	movf	??_sprintf+1,w
  1789  0055  0085               	movwf	5
  1790  0056  0800               	movf	0,w	;code access
  1791  0057  00BC               	movwf	sprintf@c
  1792  0058  00B4               	movwf	??_sprintf+2
  1793  0059  01B5               	clrf	??_sprintf+3
  1794                           
  1795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1796                           ; Switch size 1, requested type "simple"
  1797                           ; Number of cases is 1, Range of values is 0 to 0
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte            4     3 (average)
  1801                           ; direct_byte            8     6 (fixed)
  1802                           ; jumptable            260     6 (fixed)
  1803                           ;	Chosen strategy is simple_byte
  1804  005A  0835               	movf	??_sprintf+3,w
  1805  005B  3A00               	xorlw	0	; case 0
  1806  005C  1903               	skipnz
  1807  005D  285F               	goto	l1454
  1808  005E  28D9               	goto	l1394
  1809  005F                     l1454:
  1810                           
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 2, Range of values is 0 to 117
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte            7     4 (average)
  1816                           ; direct_byte          242     6 (fixed)
  1817                           ; jumptable            260     6 (fixed)
  1818                           ;	Chosen strategy is simple_byte
  1819  005F  0834               	movf	??_sprintf+2,w
  1820  0060  3A00               	xorlw	0	; case 0
  1821  0061  1903               	skipnz
  1822  0062  28ED               	goto	l1396
  1823  0063  3A75               	xorlw	117	; case 117
  1824  0064  1903               	skipnz
  1825  0065  2846               	goto	l1362
  1826  0066  28D9               	goto	l1394
  1827  0067                     l1368:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1830  0067  0837               	movf	sprintf@ap,w
  1831  0068  0086               	movwf	6
  1832  0069  0187               	clrf	7
  1833  006A  3F40               	moviw [0]fsr1
  1834  006B  00B8               	movwf	sprintf@val
  1835  006C  3F41               	moviw [1]fsr1
  1836  006D  00B9               	movwf	sprintf@val+1
  1837  006E                     l1370:
  1838  006E  3002               	movlw	2
  1839  006F  00B2               	movwf	??_sprintf
  1840  0070  0832               	movf	??_sprintf,w
  1841  0071  07B7               	addwf	sprintf@ap,f
  1842  0072                     l1372:
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1845  0072  01BC               	clrf	sprintf@c
  1846  0073  0ABC               	incf	sprintf@c,f
  1847  0074                     l1378:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1850  0074  083C               	movf	sprintf@c,w
  1851  0075  00B2               	movwf	??_sprintf
  1852  0076  01B3               	clrf	??_sprintf+1
  1853  0077  35B2               	lslf	??_sprintf,f
  1854  0078  0DB3               	rlf	??_sprintf+1,f
  1855  0079  304C               	movlw	low (_dpowers| (0+32768))
  1856  007A  0732               	addwf	??_sprintf,w
  1857  007B  0084               	movwf	4
  1858  007C  3083               	movlw	high (_dpowers| (0+32768))
  1859  007D  3D33               	addwfc	??_sprintf+1,w
  1860  007E  0085               	movwf	5
  1861  007F  3F00               	moviw [0]fsr0
  1862  0080  00B4               	movwf	??_sprintf+2
  1863  0081  3F01               	moviw [1]fsr0
  1864  0082  00B5               	movwf	??_sprintf+3
  1865  0083  0835               	movf	??_sprintf+3,w
  1866  0084  0239               	subwf	sprintf@val+1,w
  1867  0085  1D03               	skipz
  1868  0086  2889               	goto	u735
  1869  0087  0834               	movf	??_sprintf+2,w
  1870  0088  0238               	subwf	sprintf@val,w
  1871  0089                     u735:
  1872  0089  1803               	skipnc
  1873  008A  288C               	goto	u731
  1874  008B  288D               	goto	u730
  1875  008C                     u731:
  1876  008C  288E               	goto	l1382
  1877  008D                     u730:
  1878  008D  2898               	goto	l1384
  1879  008E                     l1382:
  1880  008E  3001               	movlw	1
  1881  008F  00B2               	movwf	??_sprintf
  1882  0090  0832               	movf	??_sprintf,w
  1883  0091  07BC               	addwf	sprintf@c,f
  1884  0092  3005               	movlw	5
  1885  0093  063C               	xorwf	sprintf@c,w
  1886  0094  1D03               	btfss	3,2
  1887  0095  2897               	goto	u741
  1888  0096  2898               	goto	u740
  1889  0097                     u741:
  1890  0097  2874               	goto	l1378
  1891  0098                     u740:
  1892  0098                     l1384:
  1893                           
  1894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1895  0098  083C               	movf	sprintf@c,w
  1896  0099  00B2               	movwf	??_sprintf
  1897  009A  0832               	movf	??_sprintf,w
  1898  009B  00BA               	movwf	sprintf@prec
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1901  009C  28D0               	goto	l1392
  1902  009D                     l1386:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1905  009D  300A               	movlw	10
  1906  009E  00A8               	movwf	___lwmod@divisor
  1907  009F  3000               	movlw	0
  1908  00A0  00A9               	movwf	___lwmod@divisor+1
  1909  00A1  083A               	movf	sprintf@prec,w
  1910  00A2  00B2               	movwf	??_sprintf
  1911  00A3  01B3               	clrf	??_sprintf+1
  1912  00A4  35B2               	lslf	??_sprintf,f
  1913  00A5  0DB3               	rlf	??_sprintf+1,f
  1914  00A6  304C               	movlw	low (_dpowers| (0+32768))
  1915  00A7  0732               	addwf	??_sprintf,w
  1916  00A8  0084               	movwf	4
  1917  00A9  3083               	movlw	high (_dpowers| (0+32768))
  1918  00AA  3D33               	addwfc	??_sprintf+1,w
  1919  00AB  0085               	movwf	5
  1920  00AC  3F00               	moviw [0]fsr0
  1921  00AD  00A0               	movwf	___lwdiv@divisor
  1922  00AE  3F01               	moviw [1]fsr0
  1923  00AF  00A1               	movwf	___lwdiv@divisor+1
  1924  00B0  0839               	movf	sprintf@val+1,w
  1925  00B1  00A3               	movwf	___lwdiv@dividend+1
  1926  00B2  0838               	movf	sprintf@val,w
  1927  00B3  00A2               	movwf	___lwdiv@dividend
  1928  00B4  3181  2151  3180   	fcall	___lwdiv
  1929  00B7  0020               	movlb	0	; select bank0
  1930  00B8  0821               	movf	?___lwdiv+1,w
  1931  00B9  00AB               	movwf	___lwmod@dividend+1
  1932  00BA  0820               	movf	?___lwdiv,w
  1933  00BB  00AA               	movwf	___lwmod@dividend
  1934  00BC  3181  218E  3180   	fcall	___lwmod
  1935  00BF  0020               	movlb	0	; select bank0
  1936  00C0  0828               	movf	?___lwmod,w
  1937  00C1  3E30               	addlw	48
  1938  00C2  00B4               	movwf	??_sprintf+2
  1939  00C3  0834               	movf	??_sprintf+2,w
  1940  00C4  00BC               	movwf	sprintf@c
  1941  00C5                     l1388:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1944  00C5  083C               	movf	sprintf@c,w
  1945  00C6  00B2               	movwf	??_sprintf
  1946  00C7  083B               	movf	sprintf@sp,w
  1947  00C8  0086               	movwf	6
  1948  00C9  0187               	clrf	7
  1949  00CA  0832               	movf	??_sprintf,w
  1950  00CB  0081               	movwf	1
  1951  00CC                     l1390:
  1952  00CC  3001               	movlw	1
  1953  00CD  00B2               	movwf	??_sprintf
  1954  00CE  0832               	movf	??_sprintf,w
  1955  00CF  07BB               	addwf	sprintf@sp,f
  1956  00D0                     l1392:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1959  00D0  30FF               	movlw	255
  1960  00D1  00B2               	movwf	??_sprintf
  1961  00D2  0832               	movf	??_sprintf,w
  1962  00D3  07BA               	addwf	sprintf@prec,f
  1963  00D4  0A3A               	incf	sprintf@prec,w
  1964  00D5  1D03               	btfss	3,2
  1965  00D6  28D8               	goto	u751
  1966  00D7  28D9               	goto	u750
  1967  00D8                     u751:
  1968  00D8  289D               	goto	l1386
  1969  00D9                     u750:
  1970  00D9                     l1394:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1973  00D9  082F               	movf	sprintf@f+1,w
  1974  00DA  00B3               	movwf	??_sprintf+1
  1975  00DB  082E               	movf	sprintf@f,w
  1976  00DC  00B2               	movwf	??_sprintf
  1977  00DD  0AAE               	incf	sprintf@f,f
  1978  00DE  1903               	skipnz
  1979  00DF  0AAF               	incf	sprintf@f+1,f
  1980  00E0  0832               	movf	??_sprintf,w
  1981  00E1  0084               	movwf	4
  1982  00E2  0833               	movf	??_sprintf+1,w
  1983  00E3  0085               	movwf	5
  1984  00E4  0800               	movf	0,w	;code access
  1985  00E5  00B4               	movwf	??_sprintf+2
  1986  00E6  0834               	movf	??_sprintf+2,w
  1987  00E7  00BC               	movwf	sprintf@c
  1988  00E8  083C               	movf	sprintf@c,w
  1989  00E9  1D03               	btfss	3,2
  1990  00EA  28EC               	goto	u761
  1991  00EB  28ED               	goto	u760
  1992  00EC                     u761:
  1993  00EC  2832               	goto	l1354
  1994  00ED                     u760:
  1995  00ED                     l1396:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1998  00ED  083B               	movf	sprintf@sp,w
  1999  00EE  0086               	movwf	6
  2000  00EF  0187               	clrf	7
  2001  00F0  0181               	clrf	1
  2002  00F1                     l290:
  2003  00F1  0008               	return
  2004  00F2                     __end_of_sprintf:
  2005                           
  2006                           	psect	text2
  2007  018E                     __ptext2:	
  2008 ;; *************** function ___lwmod *****************
  2009 ;; Defined at:
  2010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  divisor         2    8[BANK0 ] unsigned int 
  2013 ;;  dividend        2   10[BANK0 ] unsigned int 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  counter         1   13[BANK0 ] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  2    8[BANK0 ] unsigned int 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2025 ;;      Params:         0       4       0       0       0       0       0       0
  2026 ;;      Locals:         0       1       0       0       0       0       0       0
  2027 ;;      Temps:          0       1       0       0       0       0       0       0
  2028 ;;      Totals:         0       6       0       0       0       0       0       0
  2029 ;;Total ram usage:        6 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 4
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_sprintf
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039  018E                     ___lwmod:	
  2040                           ;psect for function ___lwmod
  2041                           
  2042  018E                     l1286:	
  2043                           ;incstack = 0
  2044                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2045                           
  2046  018E  0020               	movlb	0	; select bank0
  2047  018F  0828               	movf	___lwmod@divisor,w
  2048  0190  0429               	iorwf	___lwmod@divisor+1,w
  2049  0191  1903               	btfsc	3,2
  2050  0192  2994               	goto	u621
  2051  0193  2995               	goto	u620
  2052  0194                     u621:
  2053  0194  29BE               	goto	l1304
  2054  0195                     u620:
  2055  0195                     l1288:
  2056  0195  01AD               	clrf	___lwmod@counter
  2057  0196  0AAD               	incf	___lwmod@counter,f
  2058  0197  29A1               	goto	l1294
  2059  0198                     l1290:
  2060  0198  3001               	movlw	1
  2061  0199                     u635:
  2062  0199  35A8               	lslf	___lwmod@divisor,f
  2063  019A  0DA9               	rlf	___lwmod@divisor+1,f
  2064  019B  0B89               	decfsz	9,f
  2065  019C  2999               	goto	u635
  2066  019D                     l1292:
  2067  019D  3001               	movlw	1
  2068  019E  00AC               	movwf	??___lwmod
  2069  019F  082C               	movf	??___lwmod,w
  2070  01A0  07AD               	addwf	___lwmod@counter,f
  2071  01A1                     l1294:
  2072  01A1  1FA9               	btfss	___lwmod@divisor+1,7
  2073  01A2  29A4               	goto	u641
  2074  01A3  29A5               	goto	u640
  2075  01A4                     u641:
  2076  01A4  2998               	goto	l1290
  2077  01A5                     u640:
  2078  01A5                     l1296:
  2079  01A5  0829               	movf	___lwmod@divisor+1,w
  2080  01A6  022B               	subwf	___lwmod@dividend+1,w
  2081  01A7  1D03               	skipz
  2082  01A8  29AB               	goto	u655
  2083  01A9  0828               	movf	___lwmod@divisor,w
  2084  01AA  022A               	subwf	___lwmod@dividend,w
  2085  01AB                     u655:
  2086  01AB  1C03               	skipc
  2087  01AC  29AE               	goto	u651
  2088  01AD  29AF               	goto	u650
  2089  01AE                     u651:
  2090  01AE  29B3               	goto	l1300
  2091  01AF                     u650:
  2092  01AF                     l1298:
  2093  01AF  0828               	movf	___lwmod@divisor,w
  2094  01B0  02AA               	subwf	___lwmod@dividend,f
  2095  01B1  0829               	movf	___lwmod@divisor+1,w
  2096  01B2  3BAB               	subwfb	___lwmod@dividend+1,f
  2097  01B3                     l1300:
  2098  01B3  3001               	movlw	1
  2099  01B4                     u665:
  2100  01B4  36A9               	lsrf	___lwmod@divisor+1,f
  2101  01B5  0CA8               	rrf	___lwmod@divisor,f
  2102  01B6  0B89               	decfsz	9,f
  2103  01B7  29B4               	goto	u665
  2104  01B8                     l1302:
  2105  01B8  3001               	movlw	1
  2106  01B9  02AD               	subwf	___lwmod@counter,f
  2107  01BA  1D03               	btfss	3,2
  2108  01BB  29BD               	goto	u671
  2109  01BC  29BE               	goto	u670
  2110  01BD                     u671:
  2111  01BD  29A5               	goto	l1296
  2112  01BE                     u670:
  2113  01BE                     l1304:
  2114  01BE  082B               	movf	___lwmod@dividend+1,w
  2115  01BF  00A9               	movwf	?___lwmod+1
  2116  01C0  082A               	movf	___lwmod@dividend,w
  2117  01C1  00A8               	movwf	?___lwmod
  2118  01C2                     l576:
  2119  01C2  0008               	return
  2120  01C3                     __end_of___lwmod:
  2121                           
  2122                           	psect	text3
  2123  0151                     __ptext3:	
  2124 ;; *************** function ___lwdiv *****************
  2125 ;; Defined at:
  2126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  divisor         2    0[BANK0 ] unsigned int 
  2129 ;;  dividend        2    2[BANK0 ] unsigned int 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  quotient        2    5[BANK0 ] unsigned int 
  2132 ;;  counter         1    7[BANK0 ] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2    0[BANK0 ] unsigned int 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2142 ;;      Params:         0       4       0       0       0       0       0       0
  2143 ;;      Locals:         0       3       0       0       0       0       0       0
  2144 ;;      Temps:          0       1       0       0       0       0       0       0
  2145 ;;      Totals:         0       8       0       0       0       0       0       0
  2146 ;;Total ram usage:        8 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 4
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_sprintf
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156  0151                     ___lwdiv:	
  2157                           ;psect for function ___lwdiv
  2158                           
  2159  0151                     l1260:	
  2160                           ;incstack = 0
  2161                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2162                           
  2163  0151  0020               	movlb	0	; select bank0
  2164  0152  01A5               	clrf	___lwdiv@quotient
  2165  0153  01A6               	clrf	___lwdiv@quotient+1
  2166  0154                     l1262:
  2167  0154  0820               	movf	___lwdiv@divisor,w
  2168  0155  0421               	iorwf	___lwdiv@divisor+1,w
  2169  0156  1903               	btfsc	3,2
  2170  0157  2959               	goto	u551
  2171  0158  295A               	goto	u550
  2172  0159                     u551:
  2173  0159  2989               	goto	l1282
  2174  015A                     u550:
  2175  015A                     l1264:
  2176  015A  01A7               	clrf	___lwdiv@counter
  2177  015B  0AA7               	incf	___lwdiv@counter,f
  2178  015C  2966               	goto	l1270
  2179  015D                     l1266:
  2180  015D  3001               	movlw	1
  2181  015E                     u565:
  2182  015E  35A0               	lslf	___lwdiv@divisor,f
  2183  015F  0DA1               	rlf	___lwdiv@divisor+1,f
  2184  0160  0B89               	decfsz	9,f
  2185  0161  295E               	goto	u565
  2186  0162                     l1268:
  2187  0162  3001               	movlw	1
  2188  0163  00A4               	movwf	??___lwdiv
  2189  0164  0824               	movf	??___lwdiv,w
  2190  0165  07A7               	addwf	___lwdiv@counter,f
  2191  0166                     l1270:
  2192  0166  1FA1               	btfss	___lwdiv@divisor+1,7
  2193  0167  2969               	goto	u571
  2194  0168  296A               	goto	u570
  2195  0169                     u571:
  2196  0169  295D               	goto	l1266
  2197  016A                     u570:
  2198  016A                     l1272:
  2199  016A  3001               	movlw	1
  2200  016B                     u585:
  2201  016B  35A5               	lslf	___lwdiv@quotient,f
  2202  016C  0DA6               	rlf	___lwdiv@quotient+1,f
  2203  016D  0B89               	decfsz	9,f
  2204  016E  296B               	goto	u585
  2205  016F  0821               	movf	___lwdiv@divisor+1,w
  2206  0170  0223               	subwf	___lwdiv@dividend+1,w
  2207  0171  1D03               	skipz
  2208  0172  2975               	goto	u595
  2209  0173  0820               	movf	___lwdiv@divisor,w
  2210  0174  0222               	subwf	___lwdiv@dividend,w
  2211  0175                     u595:
  2212  0175  1C03               	skipc
  2213  0176  2978               	goto	u591
  2214  0177  2979               	goto	u590
  2215  0178                     u591:
  2216  0178  297E               	goto	l1278
  2217  0179                     u590:
  2218  0179                     l1274:
  2219  0179  0820               	movf	___lwdiv@divisor,w
  2220  017A  02A2               	subwf	___lwdiv@dividend,f
  2221  017B  0821               	movf	___lwdiv@divisor+1,w
  2222  017C  3BA3               	subwfb	___lwdiv@dividend+1,f
  2223  017D                     l1276:
  2224  017D  1425               	bsf	___lwdiv@quotient,0
  2225  017E                     l1278:
  2226  017E  3001               	movlw	1
  2227  017F                     u605:
  2228  017F  36A1               	lsrf	___lwdiv@divisor+1,f
  2229  0180  0CA0               	rrf	___lwdiv@divisor,f
  2230  0181  0B89               	decfsz	9,f
  2231  0182  297F               	goto	u605
  2232  0183                     l1280:
  2233  0183  3001               	movlw	1
  2234  0184  02A7               	subwf	___lwdiv@counter,f
  2235  0185  1D03               	btfss	3,2
  2236  0186  2988               	goto	u611
  2237  0187  2989               	goto	u610
  2238  0188                     u611:
  2239  0188  296A               	goto	l1272
  2240  0189                     u610:
  2241  0189                     l1282:
  2242  0189  0826               	movf	___lwdiv@quotient+1,w
  2243  018A  00A1               	movwf	?___lwdiv+1
  2244  018B  0825               	movf	___lwdiv@quotient,w
  2245  018C  00A0               	movwf	?___lwdiv
  2246  018D                     l566:
  2247  018D  0008               	return
  2248  018E                     __end_of___lwdiv:
  2249                           
  2250                           	psect	text4
  2251  033F                     __ptext4:	
  2252 ;; *************** function _SYSTEM_Initialize *****************
  2253 ;; Defined at:
  2254 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2268 ;;      Params:         0       0       0       0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0
  2271 ;;      Totals:         0       0       0       0       0       0       0       0
  2272 ;;Total ram usage:        0 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 6
  2275 ;; This function calls:
  2276 ;;		_ADC_Initialize
  2277 ;;		_OSCILLATOR_Initialize
  2278 ;;		_PIN_MANAGER_Initialize
  2279 ;;		_WDT_Initialize
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285  033F                     _SYSTEM_Initialize:	
  2286                           ;psect for function _SYSTEM_Initialize
  2287                           
  2288  033F                     l1308:	
  2289                           ;incstack = 0
  2290                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2291                           
  2292                           
  2293                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2294  033F  3182  22F8  3183   	fcall	_PIN_MANAGER_Initialize
  2295                           
  2296                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2297  0342  3183  2356  3183   	fcall	_OSCILLATOR_Initialize
  2298                           
  2299                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2300  0345  3183  2362  3183   	fcall	_WDT_Initialize
  2301                           
  2302                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  2303  0348  3183  230F  3183   	fcall	_ADC_Initialize
  2304  034B                     l17:
  2305  034B  0008               	return
  2306  034C                     __end_of_SYSTEM_Initialize:
  2307                           
  2308                           	psect	text5
  2309  0362                     __ptext5:	
  2310 ;; *************** function _WDT_Initialize *****************
  2311 ;; Defined at:
  2312 ;;		line 67 in file "mcc_generated_files/mcc.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2326 ;;      Params:         0       0       0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 4
  2333 ;; This function calls:
  2334 ;;		Nothing
  2335 ;; This function is called by:
  2336 ;;		_SYSTEM_Initialize
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340  0362                     _WDT_Initialize:	
  2341                           ;psect for function _WDT_Initialize
  2342                           
  2343  0362                     l1224:	
  2344                           ;incstack = 0
  2345                           ; Regs used in _WDT_Initialize: [wreg]
  2346                           
  2347                           
  2348                           ;mcc_generated_files/mcc.c: 70:     WDTCON = 0x16;
  2349  0362  3016               	movlw	22
  2350  0363  0021               	movlb	1	; select bank1
  2351  0364  0097               	movwf	23	;volatile
  2352  0365                     l23:
  2353  0365  0008               	return
  2354  0366                     __end_of_WDT_Initialize:
  2355                           
  2356                           	psect	text6
  2357  02F8                     __ptext6:	
  2358 ;; *************** function _PIN_MANAGER_Initialize *****************
  2359 ;; Defined at:
  2360 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2374 ;;      Params:         0       0       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 4
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_SYSTEM_Initialize
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388  02F8                     _PIN_MANAGER_Initialize:	
  2389                           ;psect for function _PIN_MANAGER_Initialize
  2390                           
  2391  02F8                     l1204:	
  2392                           ;incstack = 0
  2393                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2394                           
  2395                           
  2396                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2397  02F8  0022               	movlb	2	; select bank2
  2398  02F9  018C               	clrf	12	;volatile
  2399                           
  2400                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2401  02FA  018D               	clrf	13	;volatile
  2402                           
  2403                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2404  02FB  018E               	clrf	14	;volatile
  2405  02FC                     l1206:
  2406                           
  2407                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  2408  02FC  303F               	movlw	63
  2409  02FD  0021               	movlb	1	; select bank1
  2410  02FE  008C               	movwf	12	;volatile
  2411  02FF                     l1208:
  2412                           
  2413                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xC0;
  2414  02FF  30C0               	movlw	192
  2415  0300  008D               	movwf	13	;volatile
  2416                           
  2417                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  2418  0301  018E               	clrf	14	;volatile
  2419                           
  2420                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  2421  0302  0023               	movlb	3	; select bank3
  2422  0303  018E               	clrf	14	;volatile
  2423                           
  2424                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  2425  0304  018D               	clrf	13	;volatile
  2426  0305                     l1210:
  2427                           
  2428                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x01;
  2429  0305  3001               	movlw	1
  2430  0306  008C               	movwf	12	;volatile
  2431  0307                     l1212:
  2432                           
  2433                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2434  0307  0024               	movlb	4	; select bank4
  2435  0308  018D               	clrf	13	;volatile
  2436  0309                     l1214:
  2437                           
  2438                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  2439  0309  018C               	clrf	12	;volatile
  2440  030A                     l1216:
  2441                           
  2442                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  2443  030A  0021               	movlb	1	; select bank1
  2444  030B  1795               	bsf	21,7	;volatile
  2445  030C                     l1218:
  2446                           
  2447                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  2448  030C  0022               	movlb	2	; select bank2
  2449  030D  019D               	clrf	29	;volatile
  2450  030E                     l52:
  2451  030E  0008               	return
  2452  030F                     __end_of_PIN_MANAGER_Initialize:
  2453                           
  2454                           	psect	text7
  2455  0356                     __ptext7:	
  2456 ;; *************** function _OSCILLATOR_Initialize *****************
  2457 ;; Defined at:
  2458 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2472 ;;      Params:         0       0       0       0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 4
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_SYSTEM_Initialize
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486  0356                     _OSCILLATOR_Initialize:	
  2487                           ;psect for function _OSCILLATOR_Initialize
  2488                           
  2489  0356                     l1220:	
  2490                           ;incstack = 0
  2491                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2492                           
  2493                           
  2494                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x5A;
  2495  0356  305A               	movlw	90
  2496  0357  0021               	movlb	1	; select bank1
  2497  0358  0099               	movwf	25	;volatile
  2498  0359                     l1222:
  2499                           
  2500                           ;mcc_generated_files/mcc.c: 64:     BORCON = 0x00;
  2501  0359  0022               	movlb	2	; select bank2
  2502  035A  0196               	clrf	22	;volatile
  2503  035B                     l20:
  2504  035B  0008               	return
  2505  035C                     __end_of_OSCILLATOR_Initialize:
  2506                           
  2507                           	psect	text8
  2508  030F                     __ptext8:	
  2509 ;; *************** function _ADC_Initialize *****************
  2510 ;; Defined at:
  2511 ;;		line 67 in file "mcc_generated_files/adc.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, pclath, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2525 ;;      Params:         0       0       0       0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 5
  2532 ;; This function calls:
  2533 ;;		_ADC_SetInterruptHandler
  2534 ;; This function is called by:
  2535 ;;		_SYSTEM_Initialize
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539  030F                     _ADC_Initialize:	
  2540                           ;psect for function _ADC_Initialize
  2541                           
  2542  030F                     l1226:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2545                           
  2546                           
  2547                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x80;
  2548  030F  3080               	movlw	128
  2549  0310  0021               	movlb	1	; select bank1
  2550  0311  009E               	movwf	30	;volatile
  2551  0312                     l1228:
  2552                           
  2553                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  2554  0312  019F               	clrf	31	;volatile
  2555  0313                     l1230:
  2556                           
  2557                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  2558  0313  019B               	clrf	27	;volatile
  2559  0314                     l1232:
  2560                           
  2561                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  2562  0314  019C               	clrf	28	;volatile
  2563  0315                     l1234:
  2564                           
  2565                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  2566  0315  3001               	movlw	1
  2567  0316  009D               	movwf	29	;volatile
  2568  0317                     l1236:
  2569                           
  2570                           ;mcc_generated_files/adc.c: 87:     PIE1bits.ADIE = 1;
  2571  0317  1711               	bsf	17,6	;volatile
  2572  0318                     l1238:
  2573                           
  2574                           ;mcc_generated_files/adc.c: 90:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  2575  0318  306C               	movlw	low _ADC_DefaultInterruptHandler
  2576  0319  0020               	movlb	0	; select bank0
  2577  031A  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler
  2578  031B  3003               	movlw	high _ADC_DefaultInterruptHandler
  2579  031C  00A1               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  2580  031D  3183  235C  3183   	fcall	_ADC_SetInterruptHandler
  2581  0320                     l97:
  2582  0320  0008               	return
  2583  0321                     __end_of_ADC_Initialize:
  2584                           
  2585                           	psect	text9
  2586  035C                     __ptext9:	
  2587 ;; *************** function _ADC_SetInterruptHandler *****************
  2588 ;; Defined at:
  2589 ;;		line 159 in file "mcc_generated_files/adc.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2592 ;;		 -> My_ADC_ISR(1), ADC_DefaultInterruptHandler(1), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2604 ;;      Params:         0       2       0       0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0
  2607 ;;      Totals:         0       2       0       0       0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 4
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_ADC_Initialize
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619  035C                     _ADC_SetInterruptHandler:	
  2620                           ;psect for function _ADC_SetInterruptHandler
  2621                           
  2622  035C                     l1132:	
  2623                           ;incstack = 0
  2624                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  2625                           
  2626                           
  2627                           ;mcc_generated_files/adc.c: 160:     ADC_InterruptHandler = InterruptHandler;
  2628  035C  0020               	movlb	0	; select bank0
  2629  035D  0821               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  2630  035E  00CA               	movwf	_ADC_InterruptHandler+1
  2631  035F  0820               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  2632  0360  00C9               	movwf	_ADC_InterruptHandler
  2633  0361                     l125:
  2634  0361  0008               	return
  2635  0362                     __end_of_ADC_SetInterruptHandler:
  2636                           
  2637                           	psect	text10
  2638  021F                     __ptext10:	
  2639 ;; *************** function _LCD_Initialize *****************
  2640 ;; Defined at:
  2641 ;;		line 46 in file "lcd.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2655 ;;      Params:         0       0       0       0       0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0
  2657 ;;      Temps:          0       1       0       0       0       0       0       0
  2658 ;;      Totals:         0       1       0       0       0       0       0       0
  2659 ;;Total ram usage:        1 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 6
  2662 ;; This function calls:
  2663 ;;		_LCDPutCmd
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669  021F                     _LCD_Initialize:	
  2670                           ;psect for function _LCD_Initialize
  2671                           
  2672  021F                     l1322:	
  2673                           ;incstack = 0
  2674                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2675                           
  2676                           
  2677                           ;lcd.c: 49:     PORTC = 0;
  2678  021F  0020               	movlb	0	; select bank0
  2679  0220  018E               	clrf	14	;volatile
  2680                           
  2681                           ;lcd.c: 51:     TRISC = 0x00;
  2682  0221  0021               	movlb	1	; select bank1
  2683  0222  018E               	clrf	14	;volatile
  2684  0223                     l1324:
  2685                           
  2686                           ;lcd.c: 54:     PORTCbits.RC7 = 1;
  2687  0223  0020               	movlb	0	; select bank0
  2688  0224  178E               	bsf	14,7	;volatile
  2689  0225                     l1326:
  2690                           
  2691                           ;lcd.c: 57:     _delay((unsigned long)((15)*(1000000/4000.0)));
  2692  0225  3005               	movlw	5
  2693  0226  0020               	movlb	0	; select bank0
  2694  0227  00A7               	movwf	??_LCD_Initialize
  2695  0228  30DD               	movlw	221
  2696  0229                     u817:
  2697  0229  0B89               	decfsz	9,f
  2698  022A  2A29               	goto	u817
  2699  022B  0BA7               	decfsz	??_LCD_Initialize,f
  2700  022C  2A29               	goto	u817
  2701  022D  3200               	nop2
  2702  022E                     l1328:
  2703                           
  2704                           ;lcd.c: 60:     LCDPutCmd(0x32);
  2705  022E  3032               	movlw	50
  2706  022F  3182  2243  3182   	fcall	_LCDPutCmd
  2707  0232                     l1330:
  2708                           
  2709                           ;lcd.c: 63:     LCDPutCmd(0x28);
  2710  0232  3028               	movlw	40
  2711  0233  3182  2243  3182   	fcall	_LCDPutCmd
  2712  0236                     l1332:
  2713                           
  2714                           ;lcd.c: 66:     LCDPutCmd(0x0C);
  2715  0236  300C               	movlw	12
  2716  0237  3182  2243  3182   	fcall	_LCDPutCmd
  2717  023A                     l1334:
  2718                           
  2719                           ;lcd.c: 68:     LCDPutCmd(0x01);
  2720  023A  3001               	movlw	1
  2721  023B  3182  2243  3182   	fcall	_LCDPutCmd
  2722  023E                     l1336:
  2723                           
  2724                           ;lcd.c: 71:     LCDPutCmd(0x06);
  2725  023E  3006               	movlw	6
  2726  023F  3182  2243  3182   	fcall	_LCDPutCmd
  2727  0242                     l176:
  2728  0242  0008               	return
  2729  0243                     __end_of_LCD_Initialize:
  2730                           
  2731                           	psect	text11
  2732  02A6                     __ptext11:	
  2733 ;; *************** function _LCDPutStr *****************
  2734 ;; Defined at:
  2735 ;;		line 135 in file "lcd.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  str             1    wreg     PTR const unsigned char 
  2738 ;;		 -> buffer(10), 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  str             1    8[BANK0 ] PTR const unsigned char 
  2741 ;;		 -> buffer(10), 
  2742 ;;  i               1    9[BANK0 ] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2752 ;;      Params:         0       0       0       0       0       0       0       0
  2753 ;;      Locals:         0       2       0       0       0       0       0       0
  2754 ;;      Temps:          0       1       0       0       0       0       0       0
  2755 ;;      Totals:         0       3       0       0       0       0       0       0
  2756 ;;Total ram usage:        3 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 6
  2759 ;; This function calls:
  2760 ;;		_LCDPutChar
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766  02A6                     _LCDPutStr:	
  2767                           ;psect for function _LCDPutStr
  2768                           
  2769                           
  2770                           ;incstack = 0
  2771                           ; Regs used in _LCDPutStr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2772                           ;LCDPutStr@str stored from wreg
  2773  02A6  0020               	movlb	0	; select bank0
  2774  02A7  00A8               	movwf	LCDPutStr@str
  2775  02A8                     l1404:
  2776                           
  2777                           ;lcd.c: 135: void LCDPutStr(const char *str);lcd.c: 136: {;lcd.c: 137:     uint8_t i=0;
  2778  02A8  01A9               	clrf	LCDPutStr@i
  2779                           
  2780                           ;lcd.c: 140:     while (str[i])
  2781  02A9  2AB9               	goto	l1410
  2782  02AA                     l1406:
  2783                           
  2784                           ;lcd.c: 141:     {;lcd.c: 143:         LCDPutChar(str[i++]);
  2785  02AA  0829               	movf	LCDPutStr@i,w
  2786  02AB  0728               	addwf	LCDPutStr@str,w
  2787  02AC  00A7               	movwf	??_LCDPutStr
  2788  02AD  0827               	movf	??_LCDPutStr,w
  2789  02AE  0086               	movwf	6
  2790  02AF  0187               	clrf	7
  2791  02B0  0801               	movf	1,w
  2792  02B1  3182  2266  3182   	fcall	_LCDPutChar
  2793  02B4                     l1408:
  2794  02B4  3001               	movlw	1
  2795  02B5  0020               	movlb	0	; select bank0
  2796  02B6  00A7               	movwf	??_LCDPutStr
  2797  02B7  0827               	movf	??_LCDPutStr,w
  2798  02B8  07A9               	addwf	LCDPutStr@i,f
  2799  02B9                     l1410:
  2800                           
  2801                           ;lcd.c: 140:     while (str[i])
  2802  02B9  0829               	movf	LCDPutStr@i,w
  2803  02BA  0728               	addwf	LCDPutStr@str,w
  2804  02BB  00A7               	movwf	??_LCDPutStr
  2805  02BC  0827               	movf	??_LCDPutStr,w
  2806  02BD  0086               	movwf	6
  2807  02BE  0187               	clrf	7
  2808  02BF  0801               	movf	1,w
  2809  02C0  1D03               	btfss	3,2
  2810  02C1  2AC3               	goto	u771
  2811  02C2  2AC4               	goto	u770
  2812  02C3                     u771:
  2813  02C3  2AAA               	goto	l1406
  2814  02C4                     u770:
  2815  02C4                     l191:
  2816  02C4  0008               	return
  2817  02C5                     __end_of_LCDPutStr:
  2818                           
  2819                           	psect	text12
  2820  0266                     __ptext12:	
  2821 ;; *************** function _LCDPutChar *****************
  2822 ;; Defined at:
  2823 ;;		line 103 in file "lcd.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  ch              1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  ch              1    6[BANK0 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2837 ;;      Params:         0       0       0       0       0       0       0       0
  2838 ;;      Locals:         0       1       0       0       0       0       0       0
  2839 ;;      Temps:          0       2       0       0       0       0       0       0
  2840 ;;      Totals:         0       3       0       0       0       0       0       0
  2841 ;;Total ram usage:        3 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 5
  2844 ;; This function calls:
  2845 ;;		_LCDWriteNibble
  2846 ;; This function is called by:
  2847 ;;		_LCDPutStr
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851  0266                     _LCDPutChar:	
  2852                           ;psect for function _LCDPutChar
  2853                           
  2854                           
  2855                           ;incstack = 0
  2856                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  2857                           ;LCDPutChar@ch stored from wreg
  2858  0266  0020               	movlb	0	; select bank0
  2859  0267  00A6               	movwf	LCDPutChar@ch
  2860  0268                     l1252:
  2861                           
  2862                           ;lcd.c: 103: void LCDPutChar(uint8_t ch);lcd.c: 104: {;lcd.c: 105:     _delay((unsigned 
      +                          long)((5)*(1000000/4000.0)));
  2863  0268  30FA               	movlw	250
  2864  0269                     u827:
  2865  0269  3200               	nop2
  2866  026A  0B89               	decfsz	9,f
  2867  026B  2A69               	goto	u827
  2868  026C                     l1254:
  2869                           
  2870                           ;lcd.c: 108:     LCDWriteNibble(ch,1);
  2871  026C  0020               	movlb	0	; select bank0
  2872  026D  01A0               	clrf	LCDWriteNibble@rs
  2873  026E  0AA0               	incf	LCDWriteNibble@rs,f
  2874  026F  0826               	movf	LCDPutChar@ch,w
  2875  0270  3182  2286  3182   	fcall	_LCDWriteNibble
  2876  0273                     l1256:
  2877                           
  2878                           ;lcd.c: 111:     ch = (ch << 4);
  2879  0273  0020               	movlb	0	; select bank0
  2880  0274  0826               	movf	LCDPutChar@ch,w
  2881  0275  00A4               	movwf	??_LCDPutChar
  2882  0276  3003               	movlw	3
  2883  0277                     u545:
  2884  0277  35A4               	lslf	??_LCDPutChar,f
  2885  0278  3EFF               	addlw	-1
  2886  0279  1D03               	skipz
  2887  027A  2A77               	goto	u545
  2888  027B  3524               	lslf	??_LCDPutChar,w
  2889  027C  00A5               	movwf	??_LCDPutChar+1
  2890  027D  0825               	movf	??_LCDPutChar+1,w
  2891  027E  00A6               	movwf	LCDPutChar@ch
  2892  027F                     l1258:
  2893                           
  2894                           ;lcd.c: 114:     LCDWriteNibble(ch,1);
  2895  027F  01A0               	clrf	LCDWriteNibble@rs
  2896  0280  0AA0               	incf	LCDWriteNibble@rs,f
  2897  0281  0826               	movf	LCDPutChar@ch,w
  2898  0282  3182  2286  3182   	fcall	_LCDWriteNibble
  2899  0285                     l182:
  2900  0285  0008               	return
  2901  0286                     __end_of_LCDPutChar:
  2902                           
  2903                           	psect	text13
  2904  01F7                     __ptext13:	
  2905 ;; *************** function _LCDGoto *****************
  2906 ;; Defined at:
  2907 ;;		line 148 in file "lcd.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  pos             1    wreg     unsigned char 
  2910 ;;  ln              1    7[BANK0 ] unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  pos             1   10[BANK0 ] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, pclath, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2922 ;;      Params:         0       1       0       0       0       0       0       0
  2923 ;;      Locals:         0       3       0       0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0
  2925 ;;      Totals:         0       4       0       0       0       0       0       0
  2926 ;;Total ram usage:        4 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 6
  2929 ;; This function calls:
  2930 ;;		_LCDPutCmd
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936  01F7                     _LCDGoto:	
  2937                           ;psect for function _LCDGoto
  2938                           
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  2942                           ;LCDGoto@pos stored from wreg
  2943  01F7  0020               	movlb	0	; select bank0
  2944  01F8  00AA               	movwf	LCDGoto@pos
  2945  01F9                     l1338:
  2946                           
  2947                           ;lcd.c: 148: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 149: {;lcd.c: 151:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  2948  01F9  3002               	movlw	2
  2949  01FA  0227               	subwf	LCDGoto@ln,w
  2950  01FB  1803               	skipnc
  2951  01FC  29FE               	goto	u691
  2952  01FD  29FF               	goto	u690
  2953  01FE                     u691:
  2954  01FE  2A1E               	goto	l197
  2955  01FF                     u690:
  2956  01FF                     l1340:
  2957  01FF  3010               	movlw	16
  2958  0200  022A               	subwf	LCDGoto@pos,w
  2959  0201  1C03               	skipc
  2960  0202  2A04               	goto	u701
  2961  0203  2A05               	goto	u700
  2962  0204                     u701:
  2963  0204  2A06               	goto	l1342
  2964  0205                     u700:
  2965  0205  2A1E               	goto	l197
  2966  0206                     l1342:
  2967                           
  2968                           ;lcd.c: 158:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  2969  0206  0327               	decf	LCDGoto@ln,w
  2970  0207  1903               	btfsc	3,2
  2971  0208  2A0A               	goto	u711
  2972  0209  2A0B               	goto	u710
  2973  020A                     u711:
  2974  020A  2A11               	goto	l1346
  2975  020B                     u710:
  2976  020B                     l1344:
  2977  020B  3080               	movlw	128
  2978  020C  042A               	iorwf	LCDGoto@pos,w
  2979  020D  00A8               	movwf	_LCDGoto$432
  2980  020E  3000               	movlw	0
  2981  020F  00A9               	movwf	_LCDGoto$432+1
  2982  0210  2A16               	goto	l1348
  2983  0211                     l1346:
  2984  0211  30C0               	movlw	192
  2985  0212  042A               	iorwf	LCDGoto@pos,w
  2986  0213  00A8               	movwf	_LCDGoto$432
  2987  0214  3000               	movlw	0
  2988  0215  00A9               	movwf	_LCDGoto$432+1
  2989  0216                     l1348:
  2990  0216  0828               	movf	_LCDGoto$432,w
  2991  0217  3182  2243  3181   	fcall	_LCDPutCmd
  2992  021A                     l1350:
  2993                           
  2994                           ;lcd.c: 161:     _delay((unsigned long)((5)*(1000000/4000.0)));
  2995  021A  30FA               	movlw	250
  2996  021B                     u837:
  2997  021B  3200               	nop2
  2998  021C  0B89               	decfsz	9,f
  2999  021D  2A1B               	goto	u837
  3000  021E                     l197:
  3001  021E  0008               	return
  3002  021F                     __end_of_LCDGoto:
  3003                           
  3004                           	psect	text14
  3005  0243                     __ptext14:	
  3006 ;; *************** function _LCDPutCmd *****************
  3007 ;; Defined at:
  3008 ;;		line 118 in file "lcd.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  ch              1    wreg     unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  ch              1    6[BANK0 ] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3022 ;;      Params:         0       0       0       0       0       0       0       0
  3023 ;;      Locals:         0       1       0       0       0       0       0       0
  3024 ;;      Temps:          0       2       0       0       0       0       0       0
  3025 ;;      Totals:         0       3       0       0       0       0       0       0
  3026 ;;Total ram usage:        3 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 5
  3029 ;; This function calls:
  3030 ;;		_LCDWriteNibble
  3031 ;; This function is called by:
  3032 ;;		_LCD_Initialize
  3033 ;;		_LCDGoto
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037  0243                     _LCDPutCmd:	
  3038                           ;psect for function _LCDPutCmd
  3039                           
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  3043                           ;LCDPutCmd@ch stored from wreg
  3044  0243  0020               	movlb	0	; select bank0
  3045  0244  00A6               	movwf	LCDPutCmd@ch
  3046  0245                     l1242:
  3047                           
  3048                           ;lcd.c: 118: void LCDPutCmd(uint8_t ch);lcd.c: 119: {;lcd.c: 120:     _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  3049  0245  30FA               	movlw	250
  3050  0246                     u847:
  3051  0246  3200               	nop2
  3052  0247  0B89               	decfsz	9,f
  3053  0248  2A46               	goto	u847
  3054  0249                     l1244:
  3055                           
  3056                           ;lcd.c: 123:     LCDWriteNibble(ch,0);
  3057  0249  0020               	movlb	0	; select bank0
  3058  024A  01A0               	clrf	LCDWriteNibble@rs
  3059  024B  0826               	movf	LCDPutCmd@ch,w
  3060  024C  3182  2286  3182   	fcall	_LCDWriteNibble
  3061  024F                     l1246:
  3062                           
  3063                           ;lcd.c: 126:     ch = (ch << 4);
  3064  024F  0020               	movlb	0	; select bank0
  3065  0250  0826               	movf	LCDPutCmd@ch,w
  3066  0251  00A4               	movwf	??_LCDPutCmd
  3067  0252  3003               	movlw	3
  3068  0253                     u535:
  3069  0253  35A4               	lslf	??_LCDPutCmd,f
  3070  0254  3EFF               	addlw	-1
  3071  0255  1D03               	skipz
  3072  0256  2A53               	goto	u535
  3073  0257  3524               	lslf	??_LCDPutCmd,w
  3074  0258  00A5               	movwf	??_LCDPutCmd+1
  3075  0259  0825               	movf	??_LCDPutCmd+1,w
  3076  025A  00A6               	movwf	LCDPutCmd@ch
  3077  025B                     l1248:
  3078                           
  3079                           ;lcd.c: 128:     _delay((unsigned long)((1)*(1000000/4000.0)));
  3080  025B  3053               	movlw	83
  3081  025C                     u857:
  3082  025C  0B89               	decfsz	9,f
  3083  025D  2A5C               	goto	u857
  3084  025E  0000               	nop
  3085  025F                     l1250:
  3086                           
  3087                           ;lcd.c: 131:     LCDWriteNibble(ch,0);
  3088  025F  0020               	movlb	0	; select bank0
  3089  0260  01A0               	clrf	LCDWriteNibble@rs
  3090  0261  0826               	movf	LCDPutCmd@ch,w
  3091  0262  3182  2286  3182   	fcall	_LCDWriteNibble
  3092  0265                     l185:
  3093  0265  0008               	return
  3094  0266                     __end_of_LCDPutCmd:
  3095                           
  3096                           	psect	text15
  3097  0286                     __ptext15:	
  3098 ;; *************** function _LCDWriteNibble *****************
  3099 ;; Defined at:
  3100 ;;		line 76 in file "lcd.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  ch              1    wreg     unsigned char 
  3103 ;;  rs              1    0[BANK0 ] unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  ch              1    3[BANK0 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3115 ;;      Params:         0       1       0       0       0       0       0       0
  3116 ;;      Locals:         0       1       0       0       0       0       0       0
  3117 ;;      Temps:          0       2       0       0       0       0       0       0
  3118 ;;      Totals:         0       4       0       0       0       0       0       0
  3119 ;;Total ram usage:        4 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 4
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_LCDPutChar
  3126 ;;		_LCDPutCmd
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130  0286                     _LCDWriteNibble:	
  3131                           ;psect for function _LCDWriteNibble
  3132                           
  3133                           
  3134                           ;incstack = 0
  3135                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  3136                           ;LCDWriteNibble@ch stored from wreg
  3137  0286  0020               	movlb	0	; select bank0
  3138  0287  00A3               	movwf	LCDWriteNibble@ch
  3139  0288                     l1146:
  3140                           
  3141                           ;lcd.c: 76: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 77: {;lcd.c: 79:     ch = 
      +                          (ch >> 4);
  3142  0288  0823               	movf	LCDWriteNibble@ch,w
  3143  0289  00A1               	movwf	??_LCDWriteNibble
  3144  028A  3004               	movlw	4
  3145  028B                     u425:
  3146  028B  36A1               	lsrf	??_LCDWriteNibble,f
  3147  028C  0B89               	decfsz	9,f
  3148  028D  2A8B               	goto	u425
  3149  028E  0821               	movf	??_LCDWriteNibble,w
  3150  028F  00A2               	movwf	??_LCDWriteNibble+1
  3151  0290  0822               	movf	??_LCDWriteNibble+1,w
  3152  0291  00A3               	movwf	LCDWriteNibble@ch
  3153  0292                     l1148:
  3154                           
  3155                           ;lcd.c: 82:     ch = (ch & 0x0F);
  3156  0292  0823               	movf	LCDWriteNibble@ch,w
  3157  0293  390F               	andlw	15
  3158  0294  00A1               	movwf	??_LCDWriteNibble
  3159  0295  0821               	movf	??_LCDWriteNibble,w
  3160  0296  00A3               	movwf	LCDWriteNibble@ch
  3161  0297                     l1150:
  3162                           
  3163                           ;lcd.c: 85:     PORTC = (PORTC & 0xF0);
  3164  0297  080E               	movf	14,w	;volatile
  3165  0298  39F0               	andlw	240
  3166  0299  008E               	movwf	14	;volatile
  3167                           
  3168                           ;lcd.c: 88:     PORTC = (PORTC | ch);
  3169  029A  080E               	movf	14,w	;volatile
  3170  029B  0423               	iorwf	LCDWriteNibble@ch,w
  3171  029C  008E               	movwf	14	;volatile
  3172  029D                     l1152:
  3173                           
  3174                           ;lcd.c: 91:     PORTCbits.RC4 = rs;
  3175  029D  0C20               	rrf	LCDWriteNibble@rs,w
  3176  029E  1C03               	skipc
  3177  029F  120E               	bcf	14,4	;volatile
  3178  02A0  1803               	skipnc
  3179  02A1  160E               	bsf	14,4	;volatile
  3180  02A2                     l1154:
  3181                           
  3182                           ;lcd.c: 94:     PORTCbits.RC5 = 0;
  3183  02A2  128E               	bcf	14,5	;volatile
  3184  02A3                     l1156:
  3185                           
  3186                           ;lcd.c: 97:     PORTCbits.RC6 = 1;
  3187  02A3  170E               	bsf	14,6	;volatile
  3188  02A4                     l1158:
  3189                           
  3190                           ;lcd.c: 100:     PORTCbits.RC6 = 0;
  3191  02A4  130E               	bcf	14,6	;volatile
  3192  02A5                     l179:
  3193  02A5  0008               	return
  3194  02A6                     __end_of_LCDWriteNibble:
  3195                           
  3196                           	psect	text16
  3197  0369                     __ptext16:	
  3198 ;; *************** function _ADC_StartConversion *****************
  3199 ;; Defined at:
  3200 ;;		line 101 in file "mcc_generated_files/adc.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		None
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3214 ;;      Params:         0       0       0       0       0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0
  3217 ;;      Totals:         0       0       0       0       0       0       0       0
  3218 ;;Total ram usage:        0 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 4
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228  0369                     _ADC_StartConversion:	
  3229                           ;psect for function _ADC_StartConversion
  3230                           
  3231  0369                     l1320:	
  3232                           ;incstack = 0
  3233                           ; Regs used in _ADC_StartConversion: []
  3234                           
  3235                           
  3236                           ;mcc_generated_files/adc.c: 104:     ADCON0bits.GO_nDONE = 1;
  3237  0369  0021               	movlb	1	; select bank1
  3238  036A  149D               	bsf	29,1	;volatile
  3239  036B                     l103:
  3240  036B  0008               	return
  3241  036C                     __end_of_ADC_StartConversion:
  3242                           
  3243                           	psect	text17
  3244  0321                     __ptext17:	
  3245 ;; *************** function _ADC_SelectChannel *****************
  3246 ;; Defined at:
  3247 ;;		line 93 in file "mcc_generated_files/adc.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  channel         1    wreg     enum E3350
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  channel         1    1[BANK0 ] enum E3350
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3261 ;;      Params:         0       0       0       0       0       0       0       0
  3262 ;;      Locals:         0       1       0       0       0       0       0       0
  3263 ;;      Temps:          0       1       0       0       0       0       0       0
  3264 ;;      Totals:         0       2       0       0       0       0       0       0
  3265 ;;Total ram usage:        2 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 4
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275  0321                     _ADC_SelectChannel:	
  3276                           ;psect for function _ADC_SelectChannel
  3277                           
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  3281                           ;ADC_SelectChannel@channel stored from wreg
  3282  0321  0020               	movlb	0	; select bank0
  3283  0322  00A1               	movwf	ADC_SelectChannel@channel
  3284  0323                     l1316:
  3285                           
  3286                           ;mcc_generated_files/adc.c: 93: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 94: {;mcc_generated_files/adc.c: 96:     ADCON0bits.CHS = channel;
  3287  0323  0821               	movf	ADC_SelectChannel@channel,w
  3288  0324  00A0               	movwf	??_ADC_SelectChannel
  3289  0325  0DA0               	rlf	??_ADC_SelectChannel,f
  3290  0326  0DA0               	rlf	??_ADC_SelectChannel,f
  3291  0327  0021               	movlb	1	; select bank1
  3292  0328  081D               	movf	29,w	;volatile
  3293  0329  0020               	movlb	0	; select bank0
  3294  032A  0620               	xorwf	??_ADC_SelectChannel,w
  3295  032B  3983               	andlw	-125
  3296  032C  0620               	xorwf	??_ADC_SelectChannel,w
  3297  032D  0021               	movlb	1	; select bank1
  3298  032E  009D               	movwf	29	;volatile
  3299  032F                     l1318:
  3300                           
  3301                           ;mcc_generated_files/adc.c: 98:     ADCON0bits.ADON = 1;
  3302  032F  141D               	bsf	29,0	;volatile
  3303  0330                     l100:
  3304  0330  0008               	return
  3305  0331                     __end_of_ADC_SelectChannel:
  3306                           
  3307                           	psect	intentry
  3308  0004                     __pintentry:	
  3309 ;; *************** function _INTERRUPT_InterruptManager *****************
  3310 ;; Defined at:
  3311 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3325 ;;      Params:         0       0       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 3
  3332 ;; This function calls:
  3333 ;;		_ADC_ISR
  3334 ;; This function is called by:
  3335 ;;		Interrupt level 1
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339  0004                     _INTERRUPT_InterruptManager:
  3340                           
  3341                           ;incstack = 0
  3342  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3343                           
  3344                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3345  0005  3180               	pagesel	$
  3346  0006                     i1l1412:
  3347                           
  3348                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3349  0006  1F0B               	btfss	11,6	;volatile
  3350  0007  2809               	goto	u78_21
  3351  0008  280A               	goto	u78_20
  3352  0009                     u78_21:
  3353  0009  2817               	goto	i1l70
  3354  000A                     u78_20:
  3355  000A                     i1l1414:
  3356                           
  3357                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  3358  000A  0021               	movlb	1	; select bank1
  3359  000B  1F11               	btfss	17,6	;volatile
  3360  000C  280E               	goto	u79_21
  3361  000D  280F               	goto	u79_20
  3362  000E                     u79_21:
  3363  000E  2817               	goto	i1l70
  3364  000F                     u79_20:
  3365  000F                     i1l1416:
  3366  000F  0020               	movlb	0	; select bank0
  3367  0010  1F11               	btfss	17,6	;volatile
  3368  0011  2813               	goto	u80_21
  3369  0012  2814               	goto	u80_20
  3370  0013                     u80_21:
  3371  0013  2817               	goto	i1l70
  3372  0014                     u80_20:
  3373  0014                     i1l1418:
  3374                           
  3375                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             ADC_ISR();
  3376  0014  3183  2331  3180   	fcall	_ADC_ISR
  3377  0017                     i1l70:
  3378  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3379  0018  0009               	retfie
  3380  0019                     __end_of_INTERRUPT_InterruptManager:
  3381                           
  3382                           	psect	text19
  3383  0331                     __ptext19:	
  3384 ;; *************** function _ADC_ISR *****************
  3385 ;; Defined at:
  3386 ;;		line 148 in file "mcc_generated_files/adc.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0, pclath, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3400 ;;      Params:         0       0       0       0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 2
  3407 ;; This function calls:
  3408 ;;		Absolute function
  3409 ;;		_ADC_DefaultInterruptHandler
  3410 ;;		_My_ADC_ISR
  3411 ;; This function is called by:
  3412 ;;		_INTERRUPT_InterruptManager
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416  0331                     _ADC_ISR:	
  3417                           ;psect for function _ADC_ISR
  3418                           
  3419  0331                     i1l1310:	
  3420                           ;incstack = 0
  3421                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
  3422                           
  3423                           
  3424                           ;mcc_generated_files/adc.c: 151:     PIR1bits.ADIF = 0;
  3425  0331  0020               	movlb	0	; select bank0
  3426  0332  1311               	bcf	17,6	;volatile
  3427  0333                     i1l1312:
  3428                           
  3429                           ;mcc_generated_files/adc.c: 153:  if(ADC_InterruptHandler)
  3430  0333  0849               	movf	_ADC_InterruptHandler,w
  3431  0334  044A               	iorwf	_ADC_InterruptHandler+1,w
  3432  0335  1903               	btfsc	3,2
  3433  0336  2B38               	goto	u68_21
  3434  0337  2B39               	goto	u68_20
  3435  0338                     u68_21:
  3436  0338  2B3E               	goto	i1l122
  3437  0339                     u68_20:
  3438  0339                     i1l1314:
  3439                           
  3440                           ;mcc_generated_files/adc.c: 154:     {;mcc_generated_files/adc.c: 155:         ADC_Inter
      +                          ruptHandler();
  3441  0339  084A               	movf	_ADC_InterruptHandler+1,w
  3442  033A  008A               	movwf	10
  3443  033B  0849               	movf	_ADC_InterruptHandler,w
  3444  033C  000A               	callw
  3445  033D  3183               	pagesel	$
  3446  033E                     i1l122:
  3447  033E  0008               	return
  3448  033F                     __end_of_ADC_ISR:
  3449                           
  3450                           	psect	text20
  3451  036C                     __ptext20:	
  3452 ;; *************** function _ADC_DefaultInterruptHandler *****************
  3453 ;; Defined at:
  3454 ;;		line 163 in file "mcc_generated_files/adc.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		None
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3468 ;;      Params:         0       0       0       0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0
  3471 ;;      Totals:         0       0       0       0       0       0       0       0
  3472 ;;Total ram usage:        0 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_ADC_Initialize
  3478 ;;		_ADC_ISR
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482  036C                     _ADC_DefaultInterruptHandler:	
  3483                           ;psect for function _ADC_DefaultInterruptHandler
  3484                           
  3485  036C                     i1l128:	
  3486                           ;incstack = 0
  3487                           ; Regs used in _ADC_DefaultInterruptHandler: []
  3488                           
  3489  036C  0008               	return
  3490  036D                     __end_of_ADC_DefaultInterruptHandler:
  3491                           
  3492                           	psect	text21
  3493  02C5                     __ptext21:	
  3494 ;; *************** function _My_ADC_ISR *****************
  3495 ;; Defined at:
  3496 ;;		line 75 in file "main.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3510 ;;      Params:         0       0       0       0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0
  3512 ;;      Temps:          3       0       0       0       0       0       0       0
  3513 ;;      Totals:         3       0       0       0       0       0       0       0
  3514 ;;Total ram usage:        3 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 1
  3517 ;; This function calls:
  3518 ;;		_ADC_GetConversion
  3519 ;;		___awdiv
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;;		_ADC_ISR
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526  02C5                     _My_ADC_ISR:	
  3527                           ;psect for function _My_ADC_ISR
  3528                           
  3529  02C5                     i1l1240:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _My_ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
  3532                           
  3533                           
  3534                           ;main.c: 77:         temp = ADC_GetConversion(channel_AN0);
  3535  02C5  3000               	movlw	0
  3536  02C6  3182  22E0  3182   	fcall	_ADC_GetConversion
  3537  02C9  0870               	movf	?_ADC_GetConversion,w
  3538  02CA  00F9               	movwf	??_My_ADC_ISR
  3539  02CB  0879               	movf	??_My_ADC_ISR,w
  3540  02CC  00FC               	movwf	_temp
  3541                           
  3542                           ;main.c: 78:         temp = temp / 2;
  3543  02CD  3002               	movlw	2
  3544  02CE  00F0               	movwf	___awdiv@divisor
  3545  02CF  3000               	movlw	0
  3546  02D0  00F1               	movwf	___awdiv@divisor+1
  3547  02D1  087C               	movf	_temp,w
  3548  02D2  00F9               	movwf	??_My_ADC_ISR
  3549  02D3  01FA               	clrf	??_My_ADC_ISR+1
  3550  02D4  0879               	movf	??_My_ADC_ISR,w
  3551  02D5  00F2               	movwf	___awdiv@dividend
  3552  02D6  087A               	movf	??_My_ADC_ISR+1,w
  3553  02D7  00F3               	movwf	___awdiv@dividend+1
  3554  02D8  3180  20F2  3182   	fcall	___awdiv
  3555  02DB  0870               	movf	?___awdiv,w
  3556  02DC  00FB               	movwf	??_My_ADC_ISR+2
  3557  02DD  087B               	movf	??_My_ADC_ISR+2,w
  3558  02DE  00FC               	movwf	_temp
  3559  02DF                     i1l155:
  3560  02DF  0008               	return
  3561  02E0                     __end_of_My_ADC_ISR:
  3562                           
  3563                           	psect	text22
  3564  00F2                     __ptext22:	
  3565 ;; *************** function ___awdiv *****************
  3566 ;; Defined at:
  3567 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  divisor         2    0[COMMON] int 
  3570 ;;  dividend        2    2[COMMON] int 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  quotient        2    7[COMMON] int 
  3573 ;;  sign            1    6[COMMON] unsigned char 
  3574 ;;  counter         1    5[COMMON] unsigned char 
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  2    0[COMMON] int 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3584 ;;      Params:         4       0       0       0       0       0       0       0
  3585 ;;      Locals:         4       0       0       0       0       0       0       0
  3586 ;;      Temps:          1       0       0       0       0       0       0       0
  3587 ;;      Totals:         9       0       0       0       0       0       0       0
  3588 ;;Total ram usage:        9 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_My_ADC_ISR
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597  00F2                     ___awdiv:	
  3598                           ;psect for function ___awdiv
  3599                           
  3600  00F2                     i1l1160:	
  3601                           ;incstack = 0
  3602                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3603                           
  3604  00F2  01F6               	clrf	___awdiv@sign
  3605  00F3                     i1l1162:
  3606  00F3  1FF1               	btfss	___awdiv@divisor+1,7
  3607  00F4  28F6               	goto	u43_21
  3608  00F5  28F7               	goto	u43_20
  3609  00F6                     u43_21:
  3610  00F6  28FE               	goto	i1l1168
  3611  00F7                     u43_20:
  3612  00F7                     i1l1164:
  3613  00F7  09F0               	comf	___awdiv@divisor,f
  3614  00F8  09F1               	comf	___awdiv@divisor+1,f
  3615  00F9  0AF0               	incf	___awdiv@divisor,f
  3616  00FA  1903               	skipnz
  3617  00FB  0AF1               	incf	___awdiv@divisor+1,f
  3618  00FC                     i1l1166:
  3619  00FC  01F6               	clrf	___awdiv@sign
  3620  00FD  0AF6               	incf	___awdiv@sign,f
  3621  00FE                     i1l1168:
  3622  00FE  1FF3               	btfss	___awdiv@dividend+1,7
  3623  00FF  2901               	goto	u44_21
  3624  0100  2902               	goto	u44_20
  3625  0101                     u44_21:
  3626  0101  290B               	goto	i1l1174
  3627  0102                     u44_20:
  3628  0102                     i1l1170:
  3629  0102  09F2               	comf	___awdiv@dividend,f
  3630  0103  09F3               	comf	___awdiv@dividend+1,f
  3631  0104  0AF2               	incf	___awdiv@dividend,f
  3632  0105  1903               	skipnz
  3633  0106  0AF3               	incf	___awdiv@dividend+1,f
  3634  0107                     i1l1172:
  3635  0107  3001               	movlw	1
  3636  0108  00F4               	movwf	??___awdiv
  3637  0109  0874               	movf	??___awdiv,w
  3638  010A  06F6               	xorwf	___awdiv@sign,f
  3639  010B                     i1l1174:
  3640  010B  01F7               	clrf	___awdiv@quotient
  3641  010C  01F8               	clrf	___awdiv@quotient+1
  3642  010D                     i1l1176:
  3643  010D  0870               	movf	___awdiv@divisor,w
  3644  010E  0471               	iorwf	___awdiv@divisor+1,w
  3645  010F  1903               	btfsc	3,2
  3646  0110  2912               	goto	u45_21
  3647  0111  2913               	goto	u45_20
  3648  0112                     u45_21:
  3649  0112  2942               	goto	i1l1196
  3650  0113                     u45_20:
  3651  0113                     i1l1178:
  3652  0113  01F5               	clrf	___awdiv@counter
  3653  0114  0AF5               	incf	___awdiv@counter,f
  3654  0115  291F               	goto	i1l1184
  3655  0116                     i1l1180:
  3656  0116  3001               	movlw	1
  3657  0117                     u46_25:
  3658  0117  35F0               	lslf	___awdiv@divisor,f
  3659  0118  0DF1               	rlf	___awdiv@divisor+1,f
  3660  0119  0B89               	decfsz	9,f
  3661  011A  2917               	goto	u46_25
  3662  011B                     i1l1182:
  3663  011B  3001               	movlw	1
  3664  011C  00F4               	movwf	??___awdiv
  3665  011D  0874               	movf	??___awdiv,w
  3666  011E  07F5               	addwf	___awdiv@counter,f
  3667  011F                     i1l1184:
  3668  011F  1FF1               	btfss	___awdiv@divisor+1,7
  3669  0120  2922               	goto	u47_21
  3670  0121  2923               	goto	u47_20
  3671  0122                     u47_21:
  3672  0122  2916               	goto	i1l1180
  3673  0123                     u47_20:
  3674  0123                     i1l1186:
  3675  0123  3001               	movlw	1
  3676  0124                     u48_25:
  3677  0124  35F7               	lslf	___awdiv@quotient,f
  3678  0125  0DF8               	rlf	___awdiv@quotient+1,f
  3679  0126  0B89               	decfsz	9,f
  3680  0127  2924               	goto	u48_25
  3681  0128  0871               	movf	___awdiv@divisor+1,w
  3682  0129  0273               	subwf	___awdiv@dividend+1,w
  3683  012A  1D03               	skipz
  3684  012B  292E               	goto	u49_25
  3685  012C  0870               	movf	___awdiv@divisor,w
  3686  012D  0272               	subwf	___awdiv@dividend,w
  3687  012E                     u49_25:
  3688  012E  1C03               	skipc
  3689  012F  2931               	goto	u49_21
  3690  0130  2932               	goto	u49_20
  3691  0131                     u49_21:
  3692  0131  2937               	goto	i1l1192
  3693  0132                     u49_20:
  3694  0132                     i1l1188:
  3695  0132  0870               	movf	___awdiv@divisor,w
  3696  0133  02F2               	subwf	___awdiv@dividend,f
  3697  0134  0871               	movf	___awdiv@divisor+1,w
  3698  0135  3BF3               	subwfb	___awdiv@dividend+1,f
  3699  0136                     i1l1190:
  3700  0136  1477               	bsf	___awdiv@quotient,0
  3701  0137                     i1l1192:
  3702  0137  3001               	movlw	1
  3703  0138                     u50_25:
  3704  0138  36F1               	lsrf	___awdiv@divisor+1,f
  3705  0139  0CF0               	rrf	___awdiv@divisor,f
  3706  013A  0B89               	decfsz	9,f
  3707  013B  2938               	goto	u50_25
  3708  013C                     i1l1194:
  3709  013C  3001               	movlw	1
  3710  013D  02F5               	subwf	___awdiv@counter,f
  3711  013E  1D03               	btfss	3,2
  3712  013F  2941               	goto	u51_21
  3713  0140  2942               	goto	u51_20
  3714  0141                     u51_21:
  3715  0141  2923               	goto	i1l1186
  3716  0142                     u51_20:
  3717  0142                     i1l1196:
  3718  0142  0876               	movf	___awdiv@sign,w
  3719  0143  1903               	btfsc	3,2
  3720  0144  2946               	goto	u52_21
  3721  0145  2947               	goto	u52_20
  3722  0146                     u52_21:
  3723  0146  294C               	goto	i1l1200
  3724  0147                     u52_20:
  3725  0147                     i1l1198:
  3726  0147  09F7               	comf	___awdiv@quotient,f
  3727  0148  09F8               	comf	___awdiv@quotient+1,f
  3728  0149  0AF7               	incf	___awdiv@quotient,f
  3729  014A  1903               	skipnz
  3730  014B  0AF8               	incf	___awdiv@quotient+1,f
  3731  014C                     i1l1200:
  3732  014C  0878               	movf	___awdiv@quotient+1,w
  3733  014D  00F1               	movwf	?___awdiv+1
  3734  014E  0877               	movf	___awdiv@quotient,w
  3735  014F  00F0               	movwf	?___awdiv
  3736  0150                     i1l447:
  3737  0150  0008               	return
  3738  0151                     __end_of___awdiv:
  3739                           
  3740                           	psect	text23
  3741  02E0                     __ptext23:	
  3742 ;; *************** function _ADC_GetConversion *****************
  3743 ;; Defined at:
  3744 ;;		line 120 in file "mcc_generated_files/adc.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  channel         1    wreg     enum E3350
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  channel         1    3[COMMON] enum E3350
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2    0[COMMON] unsigned int 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3758 ;;      Params:         2       0       0       0       0       0       0       0
  3759 ;;      Locals:         1       0       0       0       0       0       0       0
  3760 ;;      Temps:          1       0       0       0       0       0       0       0
  3761 ;;      Totals:         4       0       0       0       0       0       0       0
  3762 ;;Total ram usage:        4 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_My_ADC_ISR
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771  02E0                     _ADC_GetConversion:	
  3772                           ;psect for function _ADC_GetConversion
  3773                           
  3774                           
  3775                           ;incstack = 0
  3776                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3777                           ;ADC_GetConversion@channel stored from wreg
  3778  02E0  00F3               	movwf	ADC_GetConversion@channel
  3779  02E1                     i1l1134:
  3780                           
  3781                           ;mcc_generated_files/adc.c: 120: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 121: {;mcc_generated_files/adc.c: 123:     ADCON0bits.CHS = ch
      +                          annel;
  3782  02E1  0873               	movf	ADC_GetConversion@channel,w
  3783  02E2  00F2               	movwf	??_ADC_GetConversion
  3784  02E3  0DF2               	rlf	??_ADC_GetConversion,f
  3785  02E4  0DF2               	rlf	??_ADC_GetConversion,f
  3786  02E5  0021               	movlb	1	; select bank1
  3787  02E6  081D               	movf	29,w	;volatile
  3788  02E7  0672               	xorwf	??_ADC_GetConversion,w
  3789  02E8  3983               	andlw	-125
  3790  02E9  0672               	xorwf	??_ADC_GetConversion,w
  3791  02EA  009D               	movwf	29	;volatile
  3792  02EB                     i1l1136:
  3793                           
  3794                           ;mcc_generated_files/adc.c: 126:     ADCON0bits.ADON = 1;
  3795  02EB  141D               	bsf	29,0	;volatile
  3796  02EC                     i1l1138:
  3797                           
  3798                           ;mcc_generated_files/adc.c: 129:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  3799  02EC  0000               	nop
  3800  02ED                     i1l1140:
  3801                           
  3802                           ;mcc_generated_files/adc.c: 132:     ADCON0bits.GO_nDONE = 1;
  3803  02ED  0021               	movlb	1	; select bank1
  3804  02EE  149D               	bsf	29,1	;volatile
  3805  02EF                     i1l112:	
  3806                           ;mcc_generated_files/adc.c: 136:     {;mcc_generated_files/adc.c: 137:     }
  3807                           
  3808                           
  3809                           ;mcc_generated_files/adc.c: 135:     while (ADCON0bits.GO_nDONE)
  3810  02EF  189D               	btfsc	29,1	;volatile
  3811  02F0  2AF2               	goto	u41_21
  3812  02F1  2AF3               	goto	u41_20
  3813  02F2                     u41_21:
  3814  02F2  2AEF               	goto	i1l112
  3815  02F3                     u41_20:
  3816  02F3                     i1l1142:
  3817                           
  3818                           ;mcc_generated_files/adc.c: 140:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3819  02F3  081C               	movf	28,w	;volatile
  3820  02F4  00F1               	movwf	?_ADC_GetConversion+1
  3821  02F5  081B               	movf	27,w	;volatile
  3822  02F6  00F0               	movwf	?_ADC_GetConversion
  3823  02F7                     i1l115:
  3824  02F7  0008               	return
  3825  02F8                     __end_of_ADC_GetConversion:
  3826  007E                     btemp	set	126	;btemp
  3827  007E                     int$flags	set	126
  3828  007E                     wtemp0	set	126
  3829                           
  3830                           	psect	idloc
  3831                           
  3832                           ;Config register IDLOC0 @ 0x8000
  3833                           ;	unspecified, using default values
  3834  8000                     	org	32768
  3835  8000  3FFF               	dw	16383
  3836                           
  3837                           ;Config register IDLOC1 @ 0x8001
  3838                           ;	unspecified, using default values
  3839  8001                     	org	32769
  3840  8001  3FFF               	dw	16383
  3841                           
  3842                           ;Config register IDLOC2 @ 0x8002
  3843                           ;	unspecified, using default values
  3844  8002                     	org	32770
  3845  8002  3FFF               	dw	16383
  3846                           
  3847                           ;Config register IDLOC3 @ 0x8003
  3848                           ;	unspecified, using default values
  3849  8003                     	org	32771
  3850  8003  3FFF               	dw	16383
  3851                           
  3852                           	psect	config
  3853                           
  3854                           ;Config register CONFIG1 @ 0x8007
  3855                           ;	Oscillator Selection Bits
  3856                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3857                           ;	Watchdog Timer Enable
  3858                           ;	WDTE = OFF, WDT disabled
  3859                           ;	Power-up Timer Enable
  3860                           ;	PWRTE = OFF, PWRT disabled
  3861                           ;	MCLR Pin Function Select
  3862                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3863                           ;	Flash Program Memory Code Protection
  3864                           ;	CP = OFF, Program memory code protection is disabled
  3865                           ;	Brown-out Reset Enable
  3866                           ;	BOREN = OFF, Brown-out Reset disabled
  3867                           ;	Clock Out Enable
  3868                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3869                           ;	Internal/External Switchover Mode
  3870                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  3871                           ;	Fail-Safe Clock Monitor Enable
  3872                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3873  8007                     	org	32775
  3874  8007  29E4               	dw	10724
  3875                           
  3876                           ;Config register CONFIG2 @ 0x8008
  3877                           ;	Flash Memory Self-Write Protection
  3878                           ;	WRT = OFF, Write protection off
  3879                           ;	Stack Overflow/Underflow Reset Enable
  3880                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3881                           ;	Brown-out Reset Voltage Selection
  3882                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3883                           ;	Low-Power Brown Out Reset
  3884                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3885                           ;	Low-Voltage Programming Enable
  3886                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3887  8008                     	org	32776
  3888  8008  1FFF               	dw	8191

Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         11
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     31      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDPutStr@str	PTR const unsigned char  size(1) Largest target is 10
		 -> buffer(BANK0[10]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> My_ADC_ISR(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> My_ADC_ISR(), Absolute function(), ADC_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ADC_ISR->_My_ADC_ISR
    _My_ADC_ISR->___awdiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ADC_Initialize->_ADC_SetInterruptHandler
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3207
                                             29 BANK0      2     2      0
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
                _ADC_StartConversion
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    19      4    1121
                                             14 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              7 BANK0      1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            3     3      0     584
                                              7 BANK0      3     3      0
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 BANK0      3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              4     3      1     671
                                              7 BANK0      4     3      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 BANK0      3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     474
                            _ADC_ISR
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0     474
                   Absolute function *
        _ADC_DefaultInterruptHandler *
                         _My_ADC_ISR *
 ---------------------------------------------------------------------------------
 (6) _My_ADC_ISR                                           3     3      0     474
                                              9 COMMON     3     3      0
                  _ADC_GetConversion
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _ADC_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SelectChannel
   _ADC_SetInterruptHandler
   _ADC_StartConversion
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _My_ADC_ISR *
       _ADC_GetConversion
       ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      38       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      38      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Mar 28 10:37:00 2022

                         _LCD_Initialize 021F                                       l20 035B  
                                     l23 0365                                       l17 034B  
                            ?_LCDPutChar 0070                                       l52 030E  
                                     l97 0320                             ___awdiv@sign 0076  
                                    l100 0330                                      l103 036B  
                                    l125 0361                                      l182 0285  
                                    l191 02C4                                      l176 0242  
                                    l185 0265                                      l290 00F1  
                                    l179 02A5                                      l197 021E  
                                    l566 018D                                      l576 01C2  
                                    u425 028B                                      u610 0189  
                                    u611 0188                                      u700 0205  
                                    u620 0195                                      u701 0204  
                                    u605 017F                                      u621 0194  
                                    u710 020B                                      u550 015A  
                                    u535 0253                                      u711 020A  
                                    u551 0159                                      u640 01A5  
                                    u720 0038                                      u545 0277  
                                    u641 01A4                                      u721 0037  
                                    u570 016A                                      u650 01AF  
                                    u730 008D                                      u571 0169  
                                    u651 01AE                                      u635 0199  
                                    u731 008C                                      u740 0098  
                                    u565 015E                                      u741 0097  
                                    u590 0179                                      u670 01BE  
                                    u750 00D9                                      u591 0178  
                                    u671 01BD                                      u655 01AB  
                                    u751 00D8                                      u735 0089  
                                    u760 00ED                                      u817 0229  
                                    u585 016B                                      u665 01B4  
                                    u761 00EC                                      u690 01FF  
                                    u770 02C4                                      u691 01FE  
                                    u827 0269                                      u771 02C3  
                                    u595 0175                                      u837 021B  
                                    u847 0246                                      u857 025C  
                        __end_of_ADC_ISR 033F          __end_of_ADC_SetInterruptHandler 0362  
                                    wreg 0009             ?_ADC_DefaultInterruptHandler 0070  
                        __end_of_LCDGoto 021F                                     l1210 0305  
                                   l1132 035C                                     l1220 0356  
                                   l1212 0307                                     l1204 02F8  
                                   l1300 01B3                                     l1150 0297  
                                   l1230 0313                                     l1222 0359  
                                   l1214 0309                                     l1206 02FC  
                                   l1302 01B8                                     l1320 0369  
                                   l1152 029D                                     l1232 0314  
                                   l1216 030A                                     l1208 02FF  
                                   l1224 0362                                     l1304 01BE  
                                   l1154 02A2                                     l1146 0288  
                                   l1250 025F                                     l1242 0245  
                                   l1410 02B9                                     l1330 0232  
                                   l1322 021F                                     l1234 0315  
                                   l1226 030F                                     l1218 030C  
                                   l1316 0323                                     l1156 02A3  
                                   l1148 0292                                     l1244 0249  
                                   l1340 01FF                                     l1252 0268  
                                   l1404 02A8                                     l1332 0236  
                                   l1324 0223                                     l1236 0317  
                                   l1228 0312                                     l1308 033F  
                                   l1260 0151                                     l1420 01C3  
                                   l1318 032F                                     l1158 02A4  
                                   l1246 024F                                     l1350 021A  
                                   l1342 0206                                     l1254 026C  
                                   l1406 02AA                                     l1334 023A  
                                   l1326 0225                                     l1238 0318  
                                   l1270 0166                                     l1262 0154  
                                   l1430 01E0                                     l1422 01C6  
                                   l1248 025B                                     l1344 020B  
                                   l1256 0273                                     l1408 02B4  
                                   l1336 023E                                     l1328 022E  
                                   l1280 0183                                     l1272 016A  
                                   l1264 015A                                     l1360 0044  
                                   l1352 002D                                     l1432 01F0  
                                   l1424 01C7                                     l1346 0211  
                                   l1338 01F9                                     l1258 027F  
                                   l1274 0179                                     l1266 015D  
                                   l1282 0189                                     l1290 0198  
                                   l1370 006E                                     l1362 0046  
                                   l1354 0032                                     l1426 01D7  
                                   l1348 0216                                     l1276 017D  
                                   l1268 0162                                     l1292 019D  
                                   l1372 0072                                     l1356 0038  
                                   l1428 01DA                                     l1278 017E  
                                   l1294 01A1                                     l1286 018E  
                                   l1390 00CC                                     l1382 008E  
                                   l1454 005F                                     l1366 004B  
                                   l1358 003F                                     l1296 01A5  
                                   l1288 0195                                     l1392 00D0  
                                   l1384 0098                                     l1368 0067  
                                   l1298 01AF                                     l1386 009D  
                                   l1378 0074                                     l1394 00D9  
                                   l1388 00C5                                     l1396 00ED  
                                   STR_1 0366                                     _LATA 010C  
                                   _LATB 010D                                     _LATC 010E  
                                   i1l70 0017                                     _WPUA 020C  
                                   _WPUB 020D                                     _main 01C3  
                                   _temp 007C                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                                   start 0019                   __end_of_LCD_Initialize 0243  
                            LCDPutCmd@ch 0026            __end_of_OSCILLATOR_Initialize 035C  
                                  ?_main 0070                          __end_of___awdiv 0151  
                        ___awdiv@divisor 0070                          __end_of___lwdiv 018E  
                                  i1l112 02EF                                    i1l122 033E  
                                  i1l115 02F7                                    i1l128 036C  
                                  i1l155 02DF                          __end_of___lwmod 01C3  
                                  i1l447 0150                          ___awdiv@counter 0075  
                                  u41_20 02F3                                    u41_21 02F2  
                                  u50_25 0138                                    u51_20 0142  
                                  u43_20 00F7                                    u51_21 0141  
                                  u43_21 00F6                                    _PORTC 000E  
                                  u52_20 0147                                    u44_20 0102  
                                  u52_21 0146                                    u44_21 0101  
                                  u45_20 0113                                    u45_21 0112  
                                  u46_25 0117                                    u47_20 0123  
                                  u47_21 0122                                    u80_20 0014  
                                  u80_21 0013                                    u48_25 0124  
                                  u49_20 0132                                    u49_21 0131  
                                  _TRISA 008C                                    _TRISB 008D  
                                  u49_25 012E                                    _TRISC 008E  
                                  u68_20 0339                                    u68_21 0338  
                                  u78_20 000A                                    u78_21 0009  
                                  u79_20 000F                                    u79_21 000E  
                        __end_of_dpowers 0356                           _WDT_Initialize 0362  
                                  pclath 000A                               _My_ADC_ISR 02C5  
                                  status 0003                                    wtemp0 007E  
                        __end_of_sprintf 00F2                          ?_LCD_Initialize 0070  
                        __initialization 001B                             __end_of_main 01F7  
                              ??_ADC_ISR 007C              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 003D                                ??_LCDGoto 0028  
                      __end_of_LCDPutCmd 0266                             LCDPutChar@ch 0026  
                      __end_of_LCDPutStr 02C5                   __end_of_WDT_Initialize 0366  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _ADCON2 009F                                   _ADRESH 009C  
                                 _ADRESL 009B                         ___awdiv@dividend 0072  
                                 _APFCON 011D                                   _ANSELA 018C  
                                 _ANSELB 018D                                   _ANSELC 018E  
                                 _BORCON 0116                                   i1l1200 014C  
                                 i1l1140 02ED                                   i1l1142 02F3  
                                 i1l1134 02E1                                   i1l1310 0331  
                                 i1l1136 02EB                                   i1l1160 00F2  
                                 i1l1240 02C5                                   i1l1312 0333  
                                 i1l1138 02EC                                   i1l1170 0102  
                                 i1l1162 00F3                                   i1l1314 0339  
                                 i1l1180 0116                                   i1l1172 0107  
                                 i1l1164 00F7                                   i1l1412 0006  
                                 i1l1190 0136                                   i1l1182 011B  
                                 i1l1174 010B                                   i1l1166 00FC  
                                 i1l1414 000A                                   i1l1192 0137  
                                 i1l1184 011F                                   i1l1176 010D  
                                 i1l1168 00FE                                   i1l1416 000F  
                                 i1l1194 013C                                   i1l1186 0123  
                                 i1l1178 0113                                   i1l1418 0014  
                                 i1l1188 0132                                   i1l1196 0142  
                                 i1l1198 0147                                   _OSCCON 0099  
                                 _WDTCON 0097                             LCDPutStr@str 0028  
                         _LCDWriteNibble 0286                                ??___awdiv 0074  
                              ??___lwdiv 0024                                ??___lwmod 002C  
                                 _buffer 003F                         ___awdiv@quotient 0077  
                        ?_WDT_Initialize 0070                 ADC_GetConversion@channel 0073  
ADC_SetInterruptHandler@InterruptHandler 0020                                ??_sprintf 0032  
                      _SYSTEM_Initialize 033F                   __end_of_LCDWriteNibble 02A6  
                __end_of__initialization 0027                              ?_My_ADC_ISR 0070  
                     ?_SYSTEM_Initialize 0070                                LCDGoto@ln 0027  
                         __pcstackCOMMON 0070                      ??_SYSTEM_Initialize 0022  
                           ??_LCDPutChar 0024                           _OPTION_REGbits 0095  
              __end_of_SYSTEM_Initialize 034C                               __pbssBANK0 003F  
                        ?_LCDWriteNibble 0020                       __end_of_LCDPutChar 0286  
                             __pmaintext 01C3                               __pintentry 0004  
                                _ADC_ISR 0331                                  _LCDGoto 01F7  
                       ??_LCD_Initialize 0027                     _ADC_InterruptHandler 0049  
                _ADC_SetInterruptHandler 035C                                  ___awdiv 00F2  
                                ___lwdiv 0151                                  ___lwmod 018E  
                                __ptext1 002B                                  __ptext2 018E  
                                __ptext3 0151                                  __ptext4 033F  
                                __ptext5 0362                                  __ptext6 02F8  
                                __ptext7 0356                                  __ptext8 030F  
                                __ptext9 035C                                  _dpowers 034C  
                  _OSCILLATOR_Initialize 0356                 ??_PIN_MANAGER_Initialize 0020  
                              _LCDPutCmd 0243                                  _sprintf 002B  
                              _LCDPutStr 02A6                     end_of_initialization 0027  
                       ??_WDT_Initialize 0020                                _PORTCbits 000E  
    __end_of_ADC_DefaultInterruptHandler 036D              _ADC_DefaultInterruptHandler 036C  
                    _ADC_StartConversion 0369                               ?_LCDPutCmd 0070  
                             ?_LCDPutStr 0070                             ??_My_ADC_ISR 0079  
          ??_ADC_DefaultInterruptHandler 0070                ??_ADC_SetInterruptHandler 0022  
                             LCDGoto@pos 002A                     ?_ADC_StartConversion 0070  
                             LCDPutStr@i 0029                           _ADC_Initialize 030F  
                 ?_OSCILLATOR_Initialize 0070                       __end_of_My_ADC_ISR 02E0  
                    start_initialization 001B                         ??_LCDWriteNibble 0021  
                  ??_ADC_StartConversion 0020                   __end_of_ADC_Initialize 0321  
                               ?_ADC_ISR 0070                                 ?_LCDGoto 0027  
                            __pbssCOMMON 007C                                ___latbits 0002  
                          __pcstackBANK0 0020                              ??_LCDPutCmd 0024  
                            ??_LCDPutStr 0027                              sprintf@flag 0036  
                            sprintf@prec 003A                                __pnvBANK0 0049  
                       ___lwdiv@dividend 0022                   _PIN_MANAGER_Initialize 02F8  
                      _ADC_SelectChannel 0321                                 ?___awdiv 0070  
                               ?___lwdiv 0020                                 ?___lwmod 0028  
                        ?_ADC_Initialize 0070                       ?_ADC_SelectChannel 0070  
                       LCDWriteNibble@ch 0023                         LCDWriteNibble@rs 0020  
           ??_INTERRUPT_InterruptManager 007C                      ??_ADC_SelectChannel 0020  
                       ___lwdiv@quotient 0025                                 ?_sprintf 002E  
                               _PIE1bits 0091                              _LCDGoto$432 0028  
              __end_of_ADC_SelectChannel 0331                                 _PIR1bits 0011  
                             _ADCON0bits 009D                 ADC_SelectChannel@channel 0021  
                      _ADC_GetConversion 02E0                  ??_OSCILLATOR_Initialize 0020  
                     ?_ADC_GetConversion 0070                      ??_ADC_GetConversion 0072  
                             sprintf@val 0038                          ___lwdiv@divisor 0020  
                        ___lwdiv@counter 0027                                 __ptext10 021F  
                               __ptext11 02A6                                 __ptext20 036C  
                               __ptext12 0266                                 __ptext21 02C5  
                               __ptext13 01F7                                 __ptext22 00F2  
                               __ptext14 0243                                 __ptext23 02E0  
                               __ptext15 0286                                 __ptext16 0369  
                               __ptext17 0321                                 __ptext19 0331  
              __end_of_ADC_GetConversion 02F8                                 int$flags 007E  
     __end_of_INTERRUPT_InterruptManager 0019               _INTERRUPT_InterruptManager 0004  
                             _LCDPutChar 0266                               _INTCONbits 000B  
               ?_ADC_SetInterruptHandler 0020                                 intlevel1 0000  
                              sprintf@ap 0037                                sprintf@sp 003B  
            __end_of_ADC_StartConversion 036C                         ___lwmod@dividend 002A  
                ?_PIN_MANAGER_Initialize 0070                         ??_ADC_Initialize 0022  
                          __pstringtext1 034C                            __pstringtext2 0366  
                          __pstringtext3 0000                                 sprintf@c 003C  
                               sprintf@f 002E                          ___lwmod@divisor 0028  
                        ___lwmod@counter 002D           __end_of_PIN_MANAGER_Initialize 030F  
