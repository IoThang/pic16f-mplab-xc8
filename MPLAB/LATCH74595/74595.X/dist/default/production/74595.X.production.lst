

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 21:35:17 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataBANK0
   213  067F                     __pidataBANK0:
   214                           
   215                           ;initializer for _maLed
   216  067F  3440               	retlw	64
   217  0680  3479               	retlw	121
   218  0681  3424               	retlw	36
   219  0682  3430               	retlw	48
   220  0683  3419               	retlw	25
   221  0684  3412               	retlw	18
   222  0685  3402               	retlw	2
   223  0686  3478               	retlw	120
   224  0687  3400               	retlw	0
   225  0688  3410               	retlw	16
   226  0008                     _PORTDbits	set	8
   227  0088                     _TRISD	set	136
   228                           
   229                           	psect	cinit
   230  07EE                     start_initialization:	
   231                           ; #config settings
   232                           
   233  07EE                     __initialization:
   234                           
   235                           ; Initialize objects allocated to BANK0
   236  07EE  1383               	bcf	3,7	;select IRP bank0
   237  07EF  302A               	movlw	low (__pdataBANK0+10)
   238  07F0  00FD               	movwf	btemp+-1
   239  07F1  3006               	movlw	high __pidataBANK0
   240  07F2  00FE               	movwf	btemp
   241  07F3  307F               	movlw	low __pidataBANK0
   242  07F4  00FF               	movwf	btemp+1
   243  07F5  3020               	movlw	low __pdataBANK0
   244  07F6  0084               	movwf	4
   245  07F7  120A  118A  268D  120A  118A  	fcall	init_ram0
   246  07FC                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  07FC                     __end_of__initialization:
   250  07FC  0183               	clrf	3
   251  07FD  120A  118A  2EC2   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	dataBANK0
   254  0020                     __pdataBANK0:
   255  0020                     _maLed:
   256  0020                     	ds	10
   257                           
   258                           	psect	inittext
   259  0689                     init_fetch0:	
   260                           ;	Called with low address in FSR and high address in W
   261                           
   262  0689  087E               	movf	btemp,w
   263  068A  008A               	movwf	10
   264  068B  087F               	movf	btemp+1,w
   265  068C  0082               	movwf	2
   266  068D                     init_ram0:	
   267                           ;Called with:
   268                           ;	high address of idata address in btemp 
   269                           ;	low address of idata address in btemp+1 
   270                           ;	low address of data in FSR
   271                           ;	high address + 1 of data in btemp-1
   272                           
   273  068D  120A  118A  2689  120A  118A  	fcall	init_fetch0
   274  0692  0080               	movwf	0
   275  0693  0A84               	incf	4,f
   276  0694  0804               	movf	4,w
   277  0695  067D               	xorwf	btemp+-1,w
   278  0696  1903               	btfsc	3,2
   279  0697  3400               	retlw	0
   280  0698  0AFF               	incf	btemp+1,f
   281  0699  1903               	btfsc	3,2
   282  069A  0AFE               	incf	btemp,f
   283  069B  2E8D               	goto	init_ram0
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:
   287  0070                     ?_laybit7:
   288  0070                     ??_laybit7:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_xuat_1byte:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_hienthi:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?___awdiv:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?___awmod:	
   304                           ; 2 bytes @ 0x0
   305                           
   306  0070                     laybit7@x:	
   307                           ; 2 bytes @ 0x0
   308                           
   309  0070                     ___awdiv@divisor:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ___awmod@divisor:	
   313                           ; 2 bytes @ 0x0
   314                           
   315                           
   316                           ; 2 bytes @ 0x0
   317  0070                     	ds	1
   318  0071                     ??_xuat_1byte:
   319                           
   320                           ; 1 bytes @ 0x1
   321  0071                     	ds	1
   322  0072                     xuat_1byte@xuatbyte:
   323  0072                     ___awdiv@dividend:	
   324                           ; 1 bytes @ 0x2
   325                           
   326  0072                     ___awmod@dividend:	
   327                           ; 2 bytes @ 0x2
   328                           
   329                           
   330                           ; 2 bytes @ 0x2
   331  0072                     	ds	1
   332  0073                     xuat_1byte@xuat:
   333                           
   334                           ; 1 bytes @ 0x3
   335  0073                     	ds	1
   336  0074                     ??___awdiv:
   337  0074                     ??___awmod:	
   338                           ; 1 bytes @ 0x4
   339                           
   340  0074                     xuat_1byte@b:	
   341                           ; 1 bytes @ 0x4
   342                           
   343                           
   344                           ; 1 bytes @ 0x4
   345  0074                     	ds	1
   346  0075                     xuat_1byte@i:
   347  0075                     ___awdiv@counter:	
   348                           ; 1 bytes @ 0x5
   349                           
   350  0075                     ___awmod@counter:	
   351                           ; 1 bytes @ 0x5
   352                           
   353                           
   354                           ; 1 bytes @ 0x5
   355  0075                     	ds	1
   356  0076                     ___awdiv@sign:
   357  0076                     ___awmod@sign:	
   358                           ; 1 bytes @ 0x6
   359                           
   360                           
   361                           ; 1 bytes @ 0x6
   362  0076                     	ds	1
   363  0077                     ___awdiv@quotient:
   364                           
   365                           ; 2 bytes @ 0x7
   366  0077                     	ds	2
   367  0079                     ??_hienthi:
   368                           
   369                           ; 1 bytes @ 0x9
   370  0079                     	ds	2
   371  007B                     hienthi@n:
   372                           
   373                           ; 1 bytes @ 0xB
   374  007B                     	ds	1
   375  007C                     main@i:
   376                           
   377                           ; 1 bytes @ 0xC
   378  007C                     	ds	1
   379                           
   380                           	psect	cstackBANK0
   381  002A                     __pcstackBANK0:
   382  002A                     ??_main:
   383                           
   384                           ; 1 bytes @ 0x0
   385  002A                     	ds	3
   386                           
   387                           	psect	maintext
   388  06C2                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 56 in file "newmain.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  i               1   12[COMMON] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         1       0       0       0       0
   410 ;;      Temps:          0       3       0       0       0
   411 ;;      Totals:         1       3       0       0       0
   412 ;;Total ram usage:        4 bytes
   413 ;; Hardware stack levels required when called: 3
   414 ;; This function calls:
   415 ;;		_hienthi
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421  06C2                     _main:	
   422                           ;psect for function _main
   423                           
   424  06C2                     l885:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;newmain.c: 57:     TRISD = 0;
   430  06C2  1683               	bsf	3,5	;RP0=1, select bank1
   431  06C3  1303               	bcf	3,6	;RP1=0, select bank1
   432  06C4  0188               	clrf	8	;volatile
   433  06C5                     l26:	
   434                           ;newmain.c: 58:     while(1)
   435                           
   436                           
   437                           ;newmain.c: 59:     {;newmain.c: 60:         for(unsigned char i = 0; i <= 99; i++)
   438  06C5  01FC               	clrf	main@i
   439  06C6                     l891:
   440                           
   441                           ;newmain.c: 61:         {;newmain.c: 62:             hienthi(i);
   442  06C6  087C               	movf	main@i,w
   443  06C7  120A  118A  26EB  120A  118A  	fcall	_hienthi
   444  06CC                     l893:
   445                           
   446                           ;newmain.c: 63:             _delay((unsigned long)((100)*(8000000/4000.0)));
   447  06CC  3002               	movlw	2
   448  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   449  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   450  06CF  00AC               	movwf	??_main+2
   451  06D0  3004               	movlw	4
   452  06D1  00AB               	movwf	??_main+1
   453  06D2  30B9               	movlw	185
   454  06D3  00AA               	movwf	??_main
   455  06D4                     u457:
   456  06D4  0BAA               	decfsz	??_main,f
   457  06D5  2ED4               	goto	u457
   458  06D6  0BAB               	decfsz	??_main+1,f
   459  06D7  2ED4               	goto	u457
   460  06D8  0BAC               	decfsz	??_main+2,f
   461  06D9  2ED4               	goto	u457
   462  06DA  2EDB               	nop2
   463  06DB                     l895:
   464                           
   465                           ;newmain.c: 64:         }
   466  06DB  3001               	movlw	1
   467  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   468  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   469  06DE  00AA               	movwf	??_main
   470  06DF  082A               	movf	??_main,w
   471  06E0  07FC               	addwf	main@i,f
   472  06E1                     l897:
   473  06E1  3064               	movlw	100
   474  06E2  027C               	subwf	main@i,w
   475  06E3  1C03               	skipc
   476  06E4  2EE6               	goto	u441
   477  06E5  2EE7               	goto	u440
   478  06E6                     u441:
   479  06E6  2EC6               	goto	l891
   480  06E7                     u440:
   481  06E7  2EC5               	goto	l26
   482  06E8  120A  118A  2800   	ljmp	start
   483  06EB                     __end_of_main:
   484                           
   485                           	psect	text1
   486  06EB                     __ptext1:	
   487 ;; *************** function _hienthi *****************
   488 ;; Defined at:
   489 ;;		line 49 in file "newmain.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  n               1    wreg     unsigned char 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  n               1   11[COMMON] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         1       0       0       0       0
   505 ;;      Temps:          2       0       0       0       0
   506 ;;      Totals:         3       0       0       0       0
   507 ;;Total ram usage:        3 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 2
   510 ;; This function calls:
   511 ;;		___awdiv
   512 ;;		___awmod
   513 ;;		_xuat_1byte
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519  06EB                     _hienthi:	
   520                           ;psect for function _hienthi
   521                           
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _hienthi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   525                           ;hienthi@n stored from wreg
   526  06EB  00FB               	movwf	hienthi@n
   527  06EC                     l877:
   528                           
   529                           ;newmain.c: 49: void hienthi(unsigned char n);newmain.c: 50: {;newmain.c: 51:     xuat_1
      +                          byte(maLed[n % 10]);
   530  06EC  300A               	movlw	10
   531  06ED  00F0               	movwf	___awmod@divisor
   532  06EE  3000               	movlw	0
   533  06EF  00F1               	movwf	___awmod@divisor+1
   534  06F0  087B               	movf	hienthi@n,w
   535  06F1  00F9               	movwf	??_hienthi
   536  06F2  01FA               	clrf	??_hienthi+1
   537  06F3  0879               	movf	??_hienthi,w
   538  06F4  00F2               	movwf	___awmod@dividend
   539  06F5  087A               	movf	??_hienthi+1,w
   540  06F6  00F3               	movwf	___awmod@dividend+1
   541  06F7  120A  118A  272E  120A  118A  	fcall	___awmod
   542  06FC  0870               	movf	?___awmod,w
   543  06FD  3E20               	addlw	(low (_maLed| 0))& (0+255)
   544  06FE  0084               	movwf	4
   545  06FF  1383               	bcf	3,7	;select IRP bank0
   546  0700  0800               	movf	0,w
   547  0701  120A  118A  269C  120A  118A  	fcall	_xuat_1byte
   548                           
   549                           ;newmain.c: 52:     xuat_1byte(maLed[n / 10]);
   550  0706  300A               	movlw	10
   551  0707  00F0               	movwf	___awdiv@divisor
   552  0708  3000               	movlw	0
   553  0709  00F1               	movwf	___awdiv@divisor+1
   554  070A  087B               	movf	hienthi@n,w
   555  070B  00F9               	movwf	??_hienthi
   556  070C  01FA               	clrf	??_hienthi+1
   557  070D  0879               	movf	??_hienthi,w
   558  070E  00F2               	movwf	___awdiv@dividend
   559  070F  087A               	movf	??_hienthi+1,w
   560  0710  00F3               	movwf	___awdiv@dividend+1
   561  0711  120A  118A  2787  120A  118A  	fcall	___awdiv
   562  0716  0870               	movf	?___awdiv,w
   563  0717  3E20               	addlw	(low (_maLed| 0))& (0+255)
   564  0718  0084               	movwf	4
   565  0719  1383               	bcf	3,7	;select IRP bank0
   566  071A  0800               	movf	0,w
   567  071B  120A  118A  269C  120A  118A  	fcall	_xuat_1byte
   568  0720                     l879:
   569                           
   570                           ;newmain.c: 53:     PORTDbits.RD2 = 0; PORTDbits.RD2 = 1;
   571  0720  1283               	bcf	3,5	;RP0=0, select bank0
   572  0721  1303               	bcf	3,6	;RP1=0, select bank0
   573  0722  1108               	bcf	8,2	;volatile
   574  0723                     l881:
   575  0723  1508               	bsf	8,2	;volatile
   576  0724                     l883:
   577                           
   578                           ;newmain.c: 54:     _delay((unsigned long)((10)*(8000000/4000.0)));
   579  0724  301A               	movlw	26
   580  0725  00FA               	movwf	??_hienthi+1
   581  0726  30F8               	movlw	248
   582  0727  00F9               	movwf	??_hienthi
   583  0728                     u467:
   584  0728  0BF9               	decfsz	??_hienthi,f
   585  0729  2F28               	goto	u467
   586  072A  0BFA               	decfsz	??_hienthi+1,f
   587  072B  2F28               	goto	u467
   588  072C  0000               	nop
   589  072D                     l21:
   590  072D  0008               	return
   591  072E                     __end_of_hienthi:
   592                           
   593                           	psect	text2
   594  069C                     __ptext2:	
   595 ;; *************** function _xuat_1byte *****************
   596 ;; Defined at:
   597 ;;		line 37 in file "newmain.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  xuatbyte        1    wreg     unsigned char 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  xuatbyte        1    2[COMMON] unsigned char 
   602 ;;  i               1    5[COMMON] unsigned char 
   603 ;;  b               1    4[COMMON] unsigned char 
   604 ;;  xuat            1    3[COMMON] unsigned char 
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         4       0       0       0       0
   616 ;;      Temps:          1       0       0       0       0
   617 ;;      Totals:         5       0       0       0       0
   618 ;;Total ram usage:        5 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 1
   621 ;; This function calls:
   622 ;;		_laybit7
   623 ;; This function is called by:
   624 ;;		_hienthi
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628  069C                     _xuat_1byte:	
   629                           ;psect for function _xuat_1byte
   630                           
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _xuat_1byte: [wreg+status,2+status,0+pclath+cstack]
   634                           ;xuat_1byte@xuatbyte stored from wreg
   635  069C  00F2               	movwf	xuat_1byte@xuatbyte
   636  069D                     l773:
   637                           
   638                           ;newmain.c: 37: void xuat_1byte(unsigned char xuatbyte);newmain.c: 38: {;newmain.c: 39: 
      +                              unsigned char b = 0x80, xuat;
   639  069D  3080               	movlw	128
   640  069E  00F1               	movwf	??_xuat_1byte
   641  069F  0871               	movf	??_xuat_1byte,w
   642  06A0  00F4               	movwf	xuat_1byte@b
   643  06A1                     l775:
   644                           
   645                           ;newmain.c: 40:     for(unsigned char i = 0; i < 8; i++)
   646  06A1  01F5               	clrf	xuat_1byte@i
   647  06A2                     l781:
   648                           
   649                           ;newmain.c: 41:     {;newmain.c: 43:         xuat = laybit7(xuatbyte & b);
   650  06A2  0872               	movf	xuat_1byte@xuatbyte,w
   651  06A3  0574               	andwf	xuat_1byte@b,w
   652  06A4  120A  118A  2675  120A  118A  	fcall	_laybit7
   653  06A9  00F1               	movwf	??_xuat_1byte
   654  06AA  0871               	movf	??_xuat_1byte,w
   655  06AB  00F3               	movwf	xuat_1byte@xuat
   656  06AC                     l783:
   657                           
   658                           ;newmain.c: 44:         PORTDbits.RD0 = xuat;
   659  06AC  0C73               	rrf	xuat_1byte@xuat,w
   660  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   661  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   662  06AF  1C03               	skipc
   663  06B0  1008               	bcf	8,0	;volatile
   664  06B1  1803               	skipnc
   665  06B2  1408               	bsf	8,0	;volatile
   666  06B3                     l785:
   667                           
   668                           ;newmain.c: 45:         PORTDbits.RD1 = 0; PORTDbits.RD1 = 1;
   669  06B3  1088               	bcf	8,1	;volatile
   670  06B4                     l787:
   671  06B4  1488               	bsf	8,1	;volatile
   672  06B5                     l789:
   673                           
   674                           ;newmain.c: 46:         b >>= 1;
   675  06B5  1003               	clrc
   676  06B6  0CF4               	rrf	xuat_1byte@b,f
   677  06B7                     l791:
   678                           
   679                           ;newmain.c: 47:     }
   680  06B7  3001               	movlw	1
   681  06B8  00F1               	movwf	??_xuat_1byte
   682  06B9  0871               	movf	??_xuat_1byte,w
   683  06BA  07F5               	addwf	xuat_1byte@i,f
   684  06BB                     l793:
   685  06BB  3008               	movlw	8
   686  06BC  0275               	subwf	xuat_1byte@i,w
   687  06BD  1C03               	skipc
   688  06BE  2EC0               	goto	u241
   689  06BF  2EC1               	goto	u240
   690  06C0                     u241:
   691  06C0  2EA2               	goto	l781
   692  06C1                     u240:
   693  06C1                     l18:
   694  06C1  0008               	return
   695  06C2                     __end_of_xuat_1byte:
   696                           
   697                           	psect	text3
   698  0675                     __ptext3:	
   699 ;; *************** function _laybit7 *****************
   700 ;; Defined at:
   701 ;;		line 30 in file "newmain.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  x               1    wreg     unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  x               1    0[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      unsigned char 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         1       0       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_xuat_1byte
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728  0675                     _laybit7:	
   729                           ;psect for function _laybit7
   730                           
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _laybit7: [wreg+status,2+status,0]
   734                           ;laybit7@x stored from wreg
   735  0675  00F0               	movwf	laybit7@x
   736  0676                     l761:
   737                           
   738                           ;newmain.c: 30: char laybit7(unsigned char x);newmain.c: 31: {;newmain.c: 32:     if(x =
      +                          = 0)
   739  0676  0870               	movf	laybit7@x,w
   740  0677  1D03               	btfss	3,2
   741  0678  2E7A               	goto	u231
   742  0679  2E7B               	goto	u230
   743  067A                     u231:
   744  067A  2E7D               	goto	l769
   745  067B                     u230:
   746  067B                     l763:
   747                           
   748                           ;newmain.c: 33:         return 0;
   749  067B  3000               	movlw	0
   750  067C  2E7E               	goto	l12
   751  067D                     l769:
   752                           
   753                           ;newmain.c: 35:         return 1;
   754  067D  3001               	movlw	1
   755  067E                     l12:
   756  067E  0008               	return
   757  067F                     __end_of_laybit7:
   758                           
   759                           	psect	text4
   760  072E                     __ptext4:	
   761 ;; *************** function ___awmod *****************
   762 ;; Defined at:
   763 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  divisor         2    0[COMMON] int 
   766 ;;  dividend        2    2[COMMON] int 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  sign            1    6[COMMON] unsigned char 
   769 ;;  counter         1    5[COMMON] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2    0[COMMON] int 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         4       0       0       0       0
   780 ;;      Locals:         2       0       0       0       0
   781 ;;      Temps:          1       0       0       0       0
   782 ;;      Totals:         7       0       0       0       0
   783 ;;Total ram usage:        7 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_hienthi
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792  072E                     ___awmod:	
   793                           ;psect for function ___awmod
   794                           
   795  072E                     l839:	
   796                           ;incstack = 0
   797                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   798                           
   799  072E  01F6               	clrf	___awmod@sign
   800  072F                     l841:
   801  072F  1FF3               	btfss	___awmod@dividend+1,7
   802  0730  2F32               	goto	u351
   803  0731  2F33               	goto	u350
   804  0732                     u351:
   805  0732  2F3A               	goto	l847
   806  0733                     u350:
   807  0733                     l843:
   808  0733  09F2               	comf	___awmod@dividend,f
   809  0734  09F3               	comf	___awmod@dividend+1,f
   810  0735  0AF2               	incf	___awmod@dividend,f
   811  0736  1903               	skipnz
   812  0737  0AF3               	incf	___awmod@dividend+1,f
   813  0738                     l845:
   814  0738  01F6               	clrf	___awmod@sign
   815  0739  0AF6               	incf	___awmod@sign,f
   816  073A                     l847:
   817  073A  1FF1               	btfss	___awmod@divisor+1,7
   818  073B  2F3D               	goto	u361
   819  073C  2F3E               	goto	u360
   820  073D                     u361:
   821  073D  2F43               	goto	l851
   822  073E                     u360:
   823  073E                     l849:
   824  073E  09F0               	comf	___awmod@divisor,f
   825  073F  09F1               	comf	___awmod@divisor+1,f
   826  0740  0AF0               	incf	___awmod@divisor,f
   827  0741  1903               	skipnz
   828  0742  0AF1               	incf	___awmod@divisor+1,f
   829  0743                     l851:
   830  0743  0870               	movf	___awmod@divisor,w
   831  0744  0471               	iorwf	___awmod@divisor+1,w
   832  0745  1903               	btfsc	3,2
   833  0746  2F48               	goto	u371
   834  0747  2F49               	goto	u370
   835  0748                     u371:
   836  0748  2F78               	goto	l869
   837  0749                     u370:
   838  0749                     l853:
   839  0749  01F5               	clrf	___awmod@counter
   840  074A  0AF5               	incf	___awmod@counter,f
   841  074B  2F57               	goto	l859
   842  074C                     l855:
   843  074C  3001               	movlw	1
   844  074D                     u385:
   845  074D  1003               	clrc
   846  074E  0DF0               	rlf	___awmod@divisor,f
   847  074F  0DF1               	rlf	___awmod@divisor+1,f
   848  0750  3EFF               	addlw	-1
   849  0751  1D03               	skipz
   850  0752  2F4D               	goto	u385
   851  0753                     l857:
   852  0753  3001               	movlw	1
   853  0754  00F4               	movwf	??___awmod
   854  0755  0874               	movf	??___awmod,w
   855  0756  07F5               	addwf	___awmod@counter,f
   856  0757                     l859:
   857  0757  1FF1               	btfss	___awmod@divisor+1,7
   858  0758  2F5A               	goto	u391
   859  0759  2F5B               	goto	u390
   860  075A                     u391:
   861  075A  2F4C               	goto	l855
   862  075B                     u390:
   863  075B                     l861:
   864  075B  0871               	movf	___awmod@divisor+1,w
   865  075C  0273               	subwf	___awmod@dividend+1,w
   866  075D  1D03               	skipz
   867  075E  2F61               	goto	u405
   868  075F  0870               	movf	___awmod@divisor,w
   869  0760  0272               	subwf	___awmod@dividend,w
   870  0761                     u405:
   871  0761  1C03               	skipc
   872  0762  2F64               	goto	u401
   873  0763  2F65               	goto	u400
   874  0764                     u401:
   875  0764  2F6B               	goto	l865
   876  0765                     u400:
   877  0765                     l863:
   878  0765  0870               	movf	___awmod@divisor,w
   879  0766  02F2               	subwf	___awmod@dividend,f
   880  0767  0871               	movf	___awmod@divisor+1,w
   881  0768  1C03               	skipc
   882  0769  03F3               	decf	___awmod@dividend+1,f
   883  076A  02F3               	subwf	___awmod@dividend+1,f
   884  076B                     l865:
   885  076B  3001               	movlw	1
   886  076C                     u415:
   887  076C  1003               	clrc
   888  076D  0CF1               	rrf	___awmod@divisor+1,f
   889  076E  0CF0               	rrf	___awmod@divisor,f
   890  076F  3EFF               	addlw	-1
   891  0770  1D03               	skipz
   892  0771  2F6C               	goto	u415
   893  0772                     l867:
   894  0772  3001               	movlw	1
   895  0773  02F5               	subwf	___awmod@counter,f
   896  0774  1D03               	btfss	3,2
   897  0775  2F77               	goto	u421
   898  0776  2F78               	goto	u420
   899  0777                     u421:
   900  0777  2F5B               	goto	l861
   901  0778                     u420:
   902  0778                     l869:
   903  0778  0876               	movf	___awmod@sign,w
   904  0779  1903               	btfsc	3,2
   905  077A  2F7C               	goto	u431
   906  077B  2F7D               	goto	u430
   907  077C                     u431:
   908  077C  2F82               	goto	l873
   909  077D                     u430:
   910  077D                     l871:
   911  077D  09F2               	comf	___awmod@dividend,f
   912  077E  09F3               	comf	___awmod@dividend+1,f
   913  077F  0AF2               	incf	___awmod@dividend,f
   914  0780  1903               	skipnz
   915  0781  0AF3               	incf	___awmod@dividend+1,f
   916  0782                     l873:
   917  0782  0873               	movf	___awmod@dividend+1,w
   918  0783  00F1               	movwf	?___awmod+1
   919  0784  0872               	movf	___awmod@dividend,w
   920  0785  00F0               	movwf	?___awmod
   921  0786                     l283:
   922  0786  0008               	return
   923  0787                     __end_of___awmod:
   924                           
   925                           	psect	text5
   926  0787                     __ptext5:	
   927 ;; *************** function ___awdiv *****************
   928 ;; Defined at:
   929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  divisor         2    0[COMMON] int 
   932 ;;  dividend        2    2[COMMON] int 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  quotient        2    7[COMMON] int 
   935 ;;  sign            1    6[COMMON] unsigned char 
   936 ;;  counter         1    5[COMMON] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  2    0[COMMON] int 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         4       0       0       0       0
   947 ;;      Locals:         4       0       0       0       0
   948 ;;      Temps:          1       0       0       0       0
   949 ;;      Totals:         9       0       0       0       0
   950 ;;Total ram usage:        9 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_hienthi
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959  0787                     ___awdiv:	
   960                           ;psect for function ___awdiv
   961                           
   962  0787                     l795:	
   963                           ;incstack = 0
   964                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   965                           
   966  0787  01F6               	clrf	___awdiv@sign
   967  0788                     l797:
   968  0788  1FF1               	btfss	___awdiv@divisor+1,7
   969  0789  2F8B               	goto	u251
   970  078A  2F8C               	goto	u250
   971  078B                     u251:
   972  078B  2F93               	goto	l803
   973  078C                     u250:
   974  078C                     l799:
   975  078C  09F0               	comf	___awdiv@divisor,f
   976  078D  09F1               	comf	___awdiv@divisor+1,f
   977  078E  0AF0               	incf	___awdiv@divisor,f
   978  078F  1903               	skipnz
   979  0790  0AF1               	incf	___awdiv@divisor+1,f
   980  0791                     l801:
   981  0791  01F6               	clrf	___awdiv@sign
   982  0792  0AF6               	incf	___awdiv@sign,f
   983  0793                     l803:
   984  0793  1FF3               	btfss	___awdiv@dividend+1,7
   985  0794  2F96               	goto	u261
   986  0795  2F97               	goto	u260
   987  0796                     u261:
   988  0796  2FA0               	goto	l809
   989  0797                     u260:
   990  0797                     l805:
   991  0797  09F2               	comf	___awdiv@dividend,f
   992  0798  09F3               	comf	___awdiv@dividend+1,f
   993  0799  0AF2               	incf	___awdiv@dividend,f
   994  079A  1903               	skipnz
   995  079B  0AF3               	incf	___awdiv@dividend+1,f
   996  079C                     l807:
   997  079C  3001               	movlw	1
   998  079D  00F4               	movwf	??___awdiv
   999  079E  0874               	movf	??___awdiv,w
  1000  079F  06F6               	xorwf	___awdiv@sign,f
  1001  07A0                     l809:
  1002  07A0  01F7               	clrf	___awdiv@quotient
  1003  07A1  01F8               	clrf	___awdiv@quotient+1
  1004  07A2                     l811:
  1005  07A2  0870               	movf	___awdiv@divisor,w
  1006  07A3  0471               	iorwf	___awdiv@divisor+1,w
  1007  07A4  1903               	btfsc	3,2
  1008  07A5  2FA7               	goto	u271
  1009  07A6  2FA8               	goto	u270
  1010  07A7                     u271:
  1011  07A7  2FDF               	goto	l831
  1012  07A8                     u270:
  1013  07A8                     l813:
  1014  07A8  01F5               	clrf	___awdiv@counter
  1015  07A9  0AF5               	incf	___awdiv@counter,f
  1016  07AA  2FB6               	goto	l819
  1017  07AB                     l815:
  1018  07AB  3001               	movlw	1
  1019  07AC                     u285:
  1020  07AC  1003               	clrc
  1021  07AD  0DF0               	rlf	___awdiv@divisor,f
  1022  07AE  0DF1               	rlf	___awdiv@divisor+1,f
  1023  07AF  3EFF               	addlw	-1
  1024  07B0  1D03               	skipz
  1025  07B1  2FAC               	goto	u285
  1026  07B2                     l817:
  1027  07B2  3001               	movlw	1
  1028  07B3  00F4               	movwf	??___awdiv
  1029  07B4  0874               	movf	??___awdiv,w
  1030  07B5  07F5               	addwf	___awdiv@counter,f
  1031  07B6                     l819:
  1032  07B6  1FF1               	btfss	___awdiv@divisor+1,7
  1033  07B7  2FB9               	goto	u291
  1034  07B8  2FBA               	goto	u290
  1035  07B9                     u291:
  1036  07B9  2FAB               	goto	l815
  1037  07BA                     u290:
  1038  07BA                     l821:
  1039  07BA  3001               	movlw	1
  1040  07BB                     u305:
  1041  07BB  1003               	clrc
  1042  07BC  0DF7               	rlf	___awdiv@quotient,f
  1043  07BD  0DF8               	rlf	___awdiv@quotient+1,f
  1044  07BE  3EFF               	addlw	-1
  1045  07BF  1D03               	skipz
  1046  07C0  2FBB               	goto	u305
  1047  07C1  0871               	movf	___awdiv@divisor+1,w
  1048  07C2  0273               	subwf	___awdiv@dividend+1,w
  1049  07C3  1D03               	skipz
  1050  07C4  2FC7               	goto	u315
  1051  07C5  0870               	movf	___awdiv@divisor,w
  1052  07C6  0272               	subwf	___awdiv@dividend,w
  1053  07C7                     u315:
  1054  07C7  1C03               	skipc
  1055  07C8  2FCA               	goto	u311
  1056  07C9  2FCB               	goto	u310
  1057  07CA                     u311:
  1058  07CA  2FD2               	goto	l827
  1059  07CB                     u310:
  1060  07CB                     l823:
  1061  07CB  0870               	movf	___awdiv@divisor,w
  1062  07CC  02F2               	subwf	___awdiv@dividend,f
  1063  07CD  0871               	movf	___awdiv@divisor+1,w
  1064  07CE  1C03               	skipc
  1065  07CF  03F3               	decf	___awdiv@dividend+1,f
  1066  07D0  02F3               	subwf	___awdiv@dividend+1,f
  1067  07D1                     l825:
  1068  07D1  1477               	bsf	___awdiv@quotient,0
  1069  07D2                     l827:
  1070  07D2  3001               	movlw	1
  1071  07D3                     u325:
  1072  07D3  1003               	clrc
  1073  07D4  0CF1               	rrf	___awdiv@divisor+1,f
  1074  07D5  0CF0               	rrf	___awdiv@divisor,f
  1075  07D6  3EFF               	addlw	-1
  1076  07D7  1D03               	skipz
  1077  07D8  2FD3               	goto	u325
  1078  07D9                     l829:
  1079  07D9  3001               	movlw	1
  1080  07DA  02F5               	subwf	___awdiv@counter,f
  1081  07DB  1D03               	btfss	3,2
  1082  07DC  2FDE               	goto	u331
  1083  07DD  2FDF               	goto	u330
  1084  07DE                     u331:
  1085  07DE  2FBA               	goto	l821
  1086  07DF                     u330:
  1087  07DF                     l831:
  1088  07DF  0876               	movf	___awdiv@sign,w
  1089  07E0  1903               	btfsc	3,2
  1090  07E1  2FE3               	goto	u341
  1091  07E2  2FE4               	goto	u340
  1092  07E3                     u341:
  1093  07E3  2FE9               	goto	l835
  1094  07E4                     u340:
  1095  07E4                     l833:
  1096  07E4  09F7               	comf	___awdiv@quotient,f
  1097  07E5  09F8               	comf	___awdiv@quotient+1,f
  1098  07E6  0AF7               	incf	___awdiv@quotient,f
  1099  07E7  1903               	skipnz
  1100  07E8  0AF8               	incf	___awdiv@quotient+1,f
  1101  07E9                     l835:
  1102  07E9  0878               	movf	___awdiv@quotient+1,w
  1103  07EA  00F1               	movwf	?___awdiv+1
  1104  07EB  0877               	movf	___awdiv@quotient,w
  1105  07EC  00F0               	movwf	?___awdiv
  1106  07ED                     l270:
  1107  07ED  0008               	return
  1108  07EE                     __end_of___awdiv:
  1109  007E                     btemp	set	126	;btemp
  1110  007E                     wtemp0	set	126
  1111                           
  1112                           	psect	idloc
  1113                           
  1114                           ;Config register IDLOC0 @ 0x2000
  1115                           ;	unspecified, using default values
  1116  2000                     	org	8192
  1117  2000  3FFF               	dw	16383
  1118                           
  1119                           ;Config register IDLOC1 @ 0x2001
  1120                           ;	unspecified, using default values
  1121  2001                     	org	8193
  1122  2001  3FFF               	dw	16383
  1123                           
  1124                           ;Config register IDLOC2 @ 0x2002
  1125                           ;	unspecified, using default values
  1126  2002                     	org	8194
  1127  2002  3FFF               	dw	16383
  1128                           
  1129                           ;Config register IDLOC3 @ 0x2003
  1130                           ;	unspecified, using default values
  1131  2003                     	org	8195
  1132  2003  3FFF               	dw	16383
  1133                           
  1134                           	psect	config
  1135                           
  1136                           ;Config register CONFIG1 @ 0x2007
  1137                           ;	Oscillator Selection bits
  1138                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1139                           ;	Watchdog Timer Enable bit
  1140                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1141                           ;	Power-up Timer Enable bit
  1142                           ;	PWRTE = OFF, PWRT disabled
  1143                           ;	RE3/MCLR pin function select bit
  1144                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1145                           ;	Code Protection bit
  1146                           ;	CP = OFF, Program memory code protection is disabled
  1147                           ;	Data Code Protection bit
  1148                           ;	CPD = OFF, Data memory code protection is disabled
  1149                           ;	Brown Out Reset Selection bits
  1150                           ;	BOREN = OFF, BOR disabled
  1151                           ;	Internal External Switchover bit
  1152                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1153                           ;	Fail-Safe Clock Monitor Enabled bit
  1154                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1155                           ;	Low Voltage Programming Enable bit
  1156                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1157                           ;	In-Circuit Debugger Mode bit
  1158                           ;	DEBUG = 0x1, unprogrammed default
  1159  2007                     	org	8199
  1160  2007  30F4               	dw	12532
  1161                           
  1162                           ;Config register CONFIG2 @ 0x2008
  1163                           ;	Brown-out Reset Selection bit
  1164                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1165                           ;	Flash Program Memory Self Write Enable bits
  1166                           ;	WRT = OFF, Write protection off
  1167  2008                     	org	8200
  1168  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      3      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_hienthi
    _hienthi->___awdiv
    _xuat_1byte->_laybit7

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1149
                                             12 COMMON     1     1      0
                                              0 BANK0      3     3      0
                            _hienthi
 ---------------------------------------------------------------------------------
 (1) _hienthi                                              3     3      0    1081
                                              9 COMMON     3     3      0
                            ___awdiv
                            ___awmod
                         _xuat_1byte
 ---------------------------------------------------------------------------------
 (2) _xuat_1byte                                           5     5      0     137
                                              1 COMMON     5     5      0
                            _laybit7
 ---------------------------------------------------------------------------------
 (3) _laybit7                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hienthi
     ___awdiv
     ___awmod
     _xuat_1byte
       _laybit7

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       D       5       16.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 21:35:17 2022

                      pc 0002                       l12 067E                       l21 072D  
                     l18 06C1                       l26 06C5             ___awdiv@sign 0076  
                     fsr 0004                      l270 07ED                      l283 0786  
                    l801 0791                      l811 07A2                      l803 0793  
                    l821 07BA                      l813 07A8                      l805 0797  
                    l823 07CB                      l815 07AB                      l831 07DF  
                    l807 079C                      l833 07E4                      l825 07D1  
                    l817 07B2                      l809 07A0                      l841 072F  
                    l761 0676                      l835 07E9                      l827 07D2  
                    l819 07B6                      l851 0743                      l843 0733  
                    l763 067B                      l829 07D9                      l861 075B  
                    l853 0749                      l845 0738                      l781 06A2  
                    l773 069D                      l871 077D                      l863 0765  
                    l855 074C                      l847 073A                      l839 072E  
                    l791 06B7                      l783 06AC                      l775 06A1  
                    l873 0782                      l865 076B                      l857 0753  
                    l849 073E                      l769 067D                      l793 06BB  
                    l785 06B3                      l881 0723                      l795 0787  
                    l867 0772                      l859 0757                      l787 06B4  
                    l883 0724                      l891 06C6                      l797 0788  
                    l869 0778                      l789 06B5                      l877 06EC  
                    l893 06CC                      l885 06C2                      l799 078C  
                    l879 0720                      l895 06DB                      l897 06E1  
                    u310 07CB                      u230 067B                      u311 07CA  
                    u231 067A                      u400 0765                      u240 06C1  
                    u305 07BB                      u401 0764                      u241 06C0  
                    u330 07DF                      u250 078C                      u331 07DE  
                    u315 07C7                      u251 078B                      u340 07E4  
                    u260 0797                      u420 0778                      u341 07E3  
                    u325 07D3                      u261 0796                      u421 0777  
                    u405 0761                      u270 07A8                      u430 077D  
                    u350 0733                      u271 07A7                      u431 077C  
                    u415 076C                      u351 0732                      u360 073E  
                    u440 06E7                      u361 073D                      u441 06E6  
                    u290 07BA                      u370 0749                      u291 07B9  
                    u371 0748                      u285 07AC                      u390 075B  
                    u391 075A                      u385 074D                      u457 06D4  
                    u467 0728                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076                     _main 06C2                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___awdiv 07EE  
        __end_of___awmod 0787          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _TRISD 0088          __end_of_hienthi 072E                    _maLed 0020  
        __end_of_laybit7 067F                    main@i 007C                    pclath 000A  
     xuat_1byte@xuatbyte 0072                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 06EB                   ??_main 002A  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_hienthi 0079                ??_laybit7 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 067F               __pmaintext 06C2  
                ___awdiv 0787                  ___awmod 072E                  __ptext1 06EB  
                __ptext2 069C                  __ptext3 0675                  __ptext4 072E  
                __ptext5 0787                  _hienthi 06EB                  _laybit7 0675  
       ___awmod@dividend 0072     end_of_initialization 07FC                _PORTDbits 0008  
             _xuat_1byte 069C      start_initialization 07EE               init_fetch0 0689  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 002A  
            ?_xuat_1byte 0070                 ?___awdiv 0070                 ?___awmod 0070  
               ?_hienthi 0070                 ?_laybit7 0070              xuat_1byte@b 0074  
            xuat_1byte@i 0075           xuat_1byte@xuat 0073                 hienthi@n 007B  
               laybit7@x 0070                 init_ram0 068D             ??_xuat_1byte 0071  
     __end_of_xuat_1byte 06C2  
